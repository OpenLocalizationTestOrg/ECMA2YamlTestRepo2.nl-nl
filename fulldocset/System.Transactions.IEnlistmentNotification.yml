### YamlMime:ManagedReference
items:
- uid: System.Transactions.IEnlistmentNotification
  id: IEnlistmentNotification
  children:
  - System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)
  - System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)
  - System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)
  - System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)
  langs:
  - csharp
  name: IEnlistmentNotification
  nameWithType: IEnlistmentNotification
  fullName: System.Transactions.IEnlistmentNotification
  type: Interface
  summary: "Hierin wordt beschreven in een interface die een resourcemanager implementeren te om twee meldingen callbacks van de fase doorvoeren voor de transactiebeheerder bij het aanmelden voor deelname."
  remarks: "Om een resourcemanager om deel te nemen in een transactie, moet het aanmelden bij de transactie door de transactiebeheerder. De <xref:System.Transactions.Transaction>klasse definieert een aantal methoden waarvan de naam met begint `Enlist` die deze functionaliteit bieden.</xref:System.Transactions.Transaction> De verschillende `Enlist` methoden komen overeen met de verschillende soorten aanmelding die een resource maanger kan hebben.       Deze klasse wordt een interface die een resourcemanager implementeren te om te bieden twee fase doorvoeren melding retouraanroepen voor de transactiebeheerder bij het aanmelden voor deelname beschreven. Voor elke resource manager implementatie van de IEnlistmentNotification-interface, moet u aanmelden met behulp van de <xref:System.Transactions.Transaction.EnlistVolatile%2A>methode of de <xref:System.Transactions.Transaction.EnlistDurable%2A>methode van de <xref:System.Transactions.Transaction>klasse, afhankelijk van of de resource vluchtige of duurzame is.</xref:System.Transactions.Transaction> </xref:System.Transactions.Transaction.EnlistDurable%2A> </xref:System.Transactions.Transaction.EnlistVolatile%2A> Zie voor meer informatie over aanmelding en 2PC [Resources opnemen als deelnemers in een transactie](~/add/includes/ajax-current-ext-md.md) en [voert momenteel een transactie in fase en meerdere fase](~/add/includes/ajax-current-ext-md.md) respectievelijk.       De transactiebeheerder waarschuwt het aangemelde object in verschillende fasen van het Protocol twee fase doorvoeren door de volgende methoden.      | Methode | Beschrijving |   |------------|-----------------|   | <xref:System.Transactions.IEnlistmentNotification.Prepare%2A>| Deze methode van een aangemelde object wordt gebruikt als een retouraanroep door de transactiebeheerder tijdens de eerste fase van een transactie wanneer de transactiebeheerder vraagt deelnemers of de transactie kan worden doorgevoerd. |   | <xref:System.Transactions.IEnlistmentNotification.Commit%2A>| Deze methode van een aangemelde object wordt gebruikt als een retouraanroep door de transactiebeheerder tijdens de tweede fase van een transactie als de transactie doorgevoerd is. |   | <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>| Deze methode van een aangemelde object wordt gebruikt als een retouraanroep door de transactiebeheerder tijdens de tweede fase van een transactie als de transactie is afgebroken (die wordt teruggedraaid). |   | <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>| Deze methode van een aangemelde object wordt gebruikt als een retouraanroep door de transactiebeheerder tijdens de tweede fase van een transactie als de transactie onzeker is. |      > [!NOTE] > U rekening moet houden of meldingen kunnen niet worden verzonden naar sequentieel of in een bepaalde volgorde.</xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> </xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A> </xref:System.Transactions.IEnlistmentNotification.Prepare%2A>"
  example:
  - "The following example shows an implementation of this interface, as well as enlisting the object as a participant in a transaction using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method.  \n  \n [!code-cs[Tx_Enlist#1](~/add/codesnippet/csharp/t-system.transactions.ie_1.cs)]\n [!code-vb[Tx_Enlist#1](~/add/codesnippet/visualbasic/t-system.transactions.ie_1.vb)]"
  syntax:
    content: public interface IEnlistmentNotification
  implements: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)
  id: Commit(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: Commit(Enlistment)
  nameWithType: IEnlistmentNotification.Commit(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Commit(Enlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Een melding van een aangemelde object dat een transactie wordt doorgevoerd."
  remarks: "De transactiebeheerder roept deze methode van een aangemelde object tijdens de tweede fase van een vastlegging als via alle deelnemers doorvoeren van de transactie.       Uw werk nodig zijn om de transactie te voltooien en vervolgens informeert de TM die is voltooid door het aanroepen van moet worden uitgevoerd in de resourcemanager de <xref:System.Transactions.Enlistment.Done%2A>methode op de `enlistment` parameter.</xref:System.Transactions.Enlistment.Done%2A>       Als de resourcemanager blijvend heeft aangemeld, maar niet door aan te roepen reageert <xref:System.Transactions.Enlistment.Done%2A>methode, de transactiebeheerder is niet zeker van te zijn dat de resourcemanager de Commit-aanroep heeft ontvangen.</xref:System.Transactions.Enlistment.Done%2A> Als zodanig de transactiebeheerder blijft wachten op reactie en bevat informatie die relevant zijn voor deze transactie.  Als <xref:System.Transactions.Enlistment.Done%2A>wordt nooit aangeroepen, deze stukje informatie is rond voor onbepaalde tijd bewaard in het geheugen of in een resource van het gehele systeem.</xref:System.Transactions.Enlistment.Done%2A> Dit leidt tot resources wordt niet kunnen worden vrijgemaakt. In het geval van een gedistribueerde transactie, kan dit uiteindelijk vult u het logboekbestand voor MSDTC dat het MSDTC-proces wordt afgebroken. In het geval van een transactie worden beheerd door <xref:System.Transactions>, resulteert dit in een geleidelijke en continue verhoging van het geheugengebruik van de resourcemanager-proces.</xref:System.Transactions> Daarom is het essentieel dat u aanroept de <xref:System.Transactions.Enlistment.Done%2A>methode als uw resourcemanager is klaar met uw werk voorbereiden.</xref:System.Transactions.Enlistment.Done%2A>"
  syntax:
    content: public void Commit (System.Transactions.Enlistment enlistment);
    parameters:
    - id: enlistment
      type: System.Transactions.Enlistment
      description: "Een <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> object dat wordt gebruikt voor het verzenden van een reactie op de transactiebeheerder."
  overload: System.Transactions.IEnlistmentNotification.Commit*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)
  id: InDoubt(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: InDoubt(Enlistment)
  nameWithType: IEnlistmentNotification.InDoubt(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.InDoubt(Enlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Waarschuwt aangemelde object dat de status van een transactie onzeker is."
  remarks: "Deze methode is aangeroepen voor vluchtige bronnen wanneer de transactiebeheerder een opslagbewerking enkel fase naar één resource duurzame aangeroepen is en vervolgens verbinding met de duurzame resource verloren voordat het ophalen van het Transactieresultaat is. Worden op dat moment de uitkomst van de transactie kan niet veilig bepaald.       Als InDoubt wordt beschouwd als een definitieve status voor een transactie, moet u niet aanroepen <xref:System.Transactions.IEnlistmentNotification.Commit%2A>of <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>na het aanroepen van InDoubt.</xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A>      > [!NOTE] > Uw implementatie van deze methode voor de resource vluchtige ongeacht wordt begrepen herstel of containment-bewerking op de betroffen gegevens moet worden uitgevoerd.  Moet ook worden aangeroepen de <xref:System.Transactions.Enlistment.Done%2A>methode voor het op de `enlistment` parameter wanneer deze het werk is voltooid.</xref:System.Transactions.Enlistment.Done%2A>       Als de resourcemanager blijvend heeft aangemeld, maar niet door aan te roepen reageert <xref:System.Transactions.Enlistment.Done%2A>methode, de transactiebeheerder is niet zeker van te zijn dat de resourcemanager de aanroep InDoubt heeft ontvangen.</xref:System.Transactions.Enlistment.Done%2A> Als zodanig de transactiebeheerder blijft wachten op reactie en bevat informatie die relevant zijn voor deze transactie.  Als <xref:System.Transactions.Enlistment.Done%2A>wordt nooit aangeroepen, deze stukje informatie is rond voor onbepaalde tijd bewaard in het geheugen of in een resource van het gehele systeem.</xref:System.Transactions.Enlistment.Done%2A> Dit leidt tot resources wordt niet kunnen worden vrijgemaakt. In het geval van een gedistribueerde transactie, kan dit uiteindelijk vult u het logboekbestand voor MSDTC dat het MSDTC-proces wordt afgebroken. In het geval van een transactie worden beheerd door <xref:System.Transactions>, resulteert dit in een geleidelijke en continue verhoging van het geheugengebruik van de resourcemanager-proces.</xref:System.Transactions> Daarom is het essentieel dat u aanroept de <xref:System.Transactions.Enlistment.Done%2A>methode als uw resourcemanager is klaar met uw werk voorbereiden.</xref:System.Transactions.Enlistment.Done%2A>"
  syntax:
    content: public void InDoubt (System.Transactions.Enlistment enlistment);
    parameters:
    - id: enlistment
      type: System.Transactions.Enlistment
      description: "Een <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> object dat wordt gebruikt voor het verzenden van een reactie op de transactiebeheerder."
  overload: System.Transactions.IEnlistmentNotification.InDoubt*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)
  id: Prepare(System.Transactions.PreparingEnlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: Prepare(PreparingEnlistment)
  nameWithType: IEnlistmentNotification.Prepare(PreparingEnlistment)
  fullName: System.Transactions.IEnlistmentNotification.Prepare(PreparingEnlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Waarschuwt aangemelde object dat een transactie wordt voorbereid voor vastlegging."
  remarks: "De transactiebeheerder deze methode van een aangemelde resource manager tijdens de fase 1 van een engagement wanneer wordt gevraagd deelnemers of de transactie kan worden doorgevoerd.       Wanneer u een duurzame resourcemanager implementeert, moet u zich aanmeldt uw record tijdens deze fase voorbereiden. De record moet bevatten alle nodige informatie om u te herstellen. Dit omvat de <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A>eigenschap, die wordt doorgegeven aan de transactiebeheerder in de <xref:System.Transactions.TransactionManager.Reenlist%2A>methode tijdens het herstel.</xref:System.Transactions.TransactionManager.Reenlist%2A> </xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> Zie voor meer informatie over herstel [herstel uitvoeren van](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).       Uw resourcebeheer moet voltooien al het werk die moet worden voltooid voordat de <xref:System.Transactions.PreparingEnlistment.Prepared%2A>methode van de `preparingEnlistment` parameter om aan te geven van de stemmen voor vastlegging.</xref:System.Transactions.PreparingEnlistment.Prepared%2A> U moet ervoor zorgen dat dit wordt bereikt voordat de fase 2 meldingen dergelijke ontvangen zoals doorvoert, terugdraaien of onzeker. Dit komt doordat fase 2-meldingen inline op dezelfde thread die aangeroepen kunnen gebeuren de <xref:System.Transactions.PreparingEnlistment.Prepared%2A>methode in stap 1.</xref:System.Transactions.PreparingEnlistment.Prepared%2A> Als zodanig niet Doe werk na de <xref:System.Transactions.PreparingEnlistment.Prepared%2A>aanroep (bijvoorbeeld geven vergrendelingen) die u verwacht te zijn voltooid voordat u kunt de fase 2-meldingen ontvangen.</xref:System.Transactions.PreparingEnlistment.Prepared%2A>       U kunt ook de methode van aanroepen de `preparingEnlistment` parameter om aan te geven van een stem voor ongedaan maken.       Als u wilt dat het object alleen bekijken en reageren op de voortgang van de transactie zonder die deel uitmaken van deze uw implementatie van deze methode moet aanroepen de <xref:System.Transactions.Enlistment.Done%2A>methode van de `preparingEnlistment` parameter wanneer deze het werk is voltooid.</xref:System.Transactions.Enlistment.Done%2A> Door dit te doen, zou uw resourcemanager geen fase 2 meldingen ontvangen."
  syntax:
    content: public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);
    parameters:
    - id: preparingEnlistment
      type: System.Transactions.PreparingEnlistment
      description: "Een <xref href=&quot;System.Transactions.PreparingEnlistment&quot;> </xref> object dat wordt gebruikt voor het verzenden van een reactie op de transactiebeheerder."
  overload: System.Transactions.IEnlistmentNotification.Prepare*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)
  id: Rollback(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: Rollback(Enlistment)
  nameWithType: IEnlistmentNotification.Rollback(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Rollback(Enlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Een melding van een aangemelde object dat een transactie wordt teruggedraaid (afgebroken)."
  remarks: "De transactiebeheerder roept deze methode van een aangemelde object als de transactie is teruggedraaid (afgebroken) vanwege het onvermogen van een of meer Transactiedeelnemers doorvoeren van de transactie.       Uw werk nodig zijn om de transactie te voltooien en vervolgens informeert de TM die is voltooid door het aanroepen van moet worden uitgevoerd in de resourcemanager de <xref:System.Transactions.Enlistment.Done%2A>methode op de `enlistment` parameter.</xref:System.Transactions.Enlistment.Done%2A>       Als de resourcemanager blijvend heeft aangemeld, maar niet door aan te roepen reageert <xref:System.Transactions.Enlistment.Done%2A>methode, de transactiebeheerder is niet zeker van te zijn dat de resourcemanager de Rollback-aanroep heeft ontvangen.</xref:System.Transactions.Enlistment.Done%2A> Als zodanig de transactiebeheerder blijft wachten op reactie en bevat informatie die relevant zijn voor deze transactie.  Als <xref:System.Transactions.Enlistment.Done%2A>wordt nooit aangeroepen, deze stukje informatie is rond voor onbepaalde tijd bewaard in het geheugen of in een resource van het gehele systeem.</xref:System.Transactions.Enlistment.Done%2A> Dit leidt tot resources wordt niet kunnen worden vrijgemaakt. In het geval van een gedistribueerde transactie, kan dit uiteindelijk vult u het logboekbestand voor MSDTC dat het MSDTC-proces wordt afgebroken. In het geval van een transactie worden beheerd door <xref:System.Transactions>, resulteert dit in een geleidelijke en continue verhoging van het geheugengebruik van de resourcemanager-proces.</xref:System.Transactions> Daarom is het essentieel dat u aanroept de <xref:System.Transactions.Enlistment.Done%2A>methode als uw resourcemanager is klaar met uw werk voorbereiden.</xref:System.Transactions.Enlistment.Done%2A>"
  syntax:
    content: public void Rollback (System.Transactions.Enlistment enlistment);
    parameters:
    - id: enlistment
      type: System.Transactions.Enlistment
      description: "Een <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> object dat wordt gebruikt voor het verzenden van een reactie op de transactiebeheerder."
  overload: System.Transactions.IEnlistmentNotification.Rollback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Commit(Enlistment)
  nameWithType: IEnlistmentNotification.Commit(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Commit(Enlistment)
- uid: System.Transactions.Enlistment
  parent: System.Transactions
  isExternal: false
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
- uid: System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: InDoubt(Enlistment)
  nameWithType: IEnlistmentNotification.InDoubt(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.InDoubt(Enlistment)
- uid: System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Prepare(PreparingEnlistment)
  nameWithType: IEnlistmentNotification.Prepare(PreparingEnlistment)
  fullName: System.Transactions.IEnlistmentNotification.Prepare(PreparingEnlistment)
- uid: System.Transactions.PreparingEnlistment
  parent: System.Transactions
  isExternal: false
  name: PreparingEnlistment
  nameWithType: PreparingEnlistment
  fullName: System.Transactions.PreparingEnlistment
- uid: System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Rollback(Enlistment)
  nameWithType: IEnlistmentNotification.Rollback(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Rollback(Enlistment)
- uid: System.Transactions.IEnlistmentNotification.Commit*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Commit
  nameWithType: IEnlistmentNotification.Commit
- uid: System.Transactions.IEnlistmentNotification.InDoubt*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: InDoubt
  nameWithType: IEnlistmentNotification.InDoubt
- uid: System.Transactions.IEnlistmentNotification.Prepare*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Prepare
  nameWithType: IEnlistmentNotification.Prepare
- uid: System.Transactions.IEnlistmentNotification.Rollback*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Rollback
  nameWithType: IEnlistmentNotification.Rollback
