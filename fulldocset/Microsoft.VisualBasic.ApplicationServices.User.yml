### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ApplicationServices.User
  id: User
  children:
  - Microsoft.VisualBasic.ApplicationServices.User.#ctor
  - Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  - Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  - Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  - Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  - Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  - Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  - Microsoft.VisualBasic.ApplicationServices.User.Name
  langs:
  - csharp
  name: User
  nameWithType: User
  fullName: Microsoft.VisualBasic.ApplicationServices.User
  type: Class
  summary: "Biedt toegang tot de informatie over de huidige gebruiker."
  remarks: "De eigenschappen en methoden die worden weergegeven door de `My.User` object bieden toegang tot de informatie over de huidige gebruiker. De betekenis van &quot;current user&quot; verschilt enigszins tussen Windows en webtoepassingen. De huidige gebruiker is in een Windows-toepassing, de gebruiker die de toepassing uitvoert. De huidige gebruiker is in een webtoepassing, de gebruiker die toegang heeft tot de toepassing.       De `My.User` eigenschap biedt ook toegang tot de <xref:System.Security.Principal.IPrincipal>voor de huidige gebruiker.</xref:System.Security.Principal.IPrincipal> Principal-object vertegenwoordigt de beveiligingscontext van de gebruiker, met inbegrip van de identiteit van die gebruiker en de rollen waartoe de gebruiker behoort.       Voor Windows-toepassingen, biedt deze eigenschap dezelfde functionaliteit als de <xref:System.Threading.Thread.CurrentPrincipal%2A>eigenschap.</xref:System.Threading.Thread.CurrentPrincipal%2A> Voor webtoepassingen, deze eigenschap bevat dezelfde functionaliteit als de <xref:System.Web.HttpContext.User%2A>eigenschap van het object dat wordt geretourneerd door de <xref:System.Web.HttpContext.Current%2A>eigenschap.</xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext.User%2A>      > [!NOTE] > Voor Windows-toepassingen, alleen de projecten die zijn gebaseerd op de **Windows-toepassing** initialiseren van de sjabloon de `My.User` object standaard. In alle andere Windows projecttypen, moet u initialiseren de `My.User` object door het aanroepen van de <xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A>methode expliciet of door het toewijzen van een waarde voor <xref:System.Threading.Thread.CurrentPrincipal%2A>.</xref:System.Threading.Thread.CurrentPrincipal%2A> </xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A>      > [!NOTE] > De `My.User` object kan niet meer informatie over de huidige Windows-gebruiker wanneer uitgevoerd onder Windows 95 en Windows 98 omdat deze besturingssystemen het concept van een aangemelde gebruiker niet ondersteunen rapporteren. U moet implementeren aangepaste verificatie gebruiken de `My.User` object in deze besturingssystemen."
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public class User
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: User()
  nameWithType: User.User()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.User()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;Microsoft.VisualBasic.ApplicationServices.User&quot;> </xref> klasse."
  remarks: "De eigenschappen en methoden die worden weergegeven door de `My.User` object bieden toegang tot informatie over de huidige gebruiker."
  syntax:
    content: public User ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.User.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  id: CurrentPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Opgehaald of ingesteld van de huidige principal (voor op rollen gebaseerde beveiliging)."
  remarks: "U kunt instellen de `My.User.CurrentPrincipal` eigenschap op een object dat u implementeert de <xref:System.Security.Principal.IPrincipal>interface voor aangepaste verificatie inschakelen.</xref:System.Security.Principal.IPrincipal>       In de meeste projecttypen, wordt met deze eigenschap opgehaald en ingesteld van huidige principal van de thread. In een ASP.NET-toepassing, wordt met deze eigenschap opgehaald en ingesteld van de beveiligingsgegevens voor de gebruikers-id van de huidige HTTP-aanvraag.       Dit is een geavanceerde lid; wordt niet weergegeven in IntelliSense tenzij u klikt op de **alle** tabblad.      ## Beschikbaarheid door het projecttype |||   |-|-|   | Projecttype | Beschikbare |   | Windows-toepassing | **Yes**|   | Klasse van de bibliotheek | **Yes**|   | Consoletoepassing | **Yes**|   | Windows beheren bibliotheek | **Yes**|   | Web-bibliotheek | **Yes**|   | Windows-Service | **Yes**|   | Website | **Yes**|"
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public System.Security.Principal.IPrincipal CurrentPrincipal { get; set; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "Een <xref:System.Security.Principal.IPrincipal>-waarde voor de beveiligingscontext.</xref:System.Security.Principal.IPrincipal>"
  overload: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De aanroeper is niet gemachtigd de vereist voor het instellen van de principal."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  id: InitializeWithWindowsUser
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: InitializeWithWindowsUser()
  nameWithType: User.InitializeWithWindowsUser()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Hiermee stelt u de huidige principal van de thread voor de Windows-gebruiker die de toepassing wordt gestart."
  remarks: "U kunt de `My.User.InitializeWithWindowsUser` methode voor het huidige principal van de thread ingesteld op de Windows-gebruiker die de toepassing is gestart. Het Model van de Visual Basic-toepassing in een Windows-toepassing voor het aanroepen van deze methode bij het opstarten standaard. In andere projecttypen, moet u de huidige principal van de thread instellen door het aanroepen van deze methode expliciet of door het toewijzen van een waarde voor <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>       In Windows-projecten, de `My.User` object is gebaseerd op de huidige principal van de thread; daarom de gegevens op deze methode kunt wijzigen `My.User` retourneert. In een ASP.NET-toepassing, de `My.User` object is gebaseerd op de identiteit van de gebruiker van de huidige HTTP-aanvraag en wordt niet beÃ¯nvloed door deze methode.      > [!NOTE] > Het exacte gedrag van de `My.User` object hangt af van het type toepassing en het besturingssysteem waarop de toepassing wordt uitgevoerd. Zie voor meer informatie de <xref:Microsoft.VisualBasic.ApplicationServices.User>overzicht van de klasse.</xref:Microsoft.VisualBasic.ApplicationServices.User>       Dit is een geavanceerde lid; wordt niet weergegeven in IntelliSense tenzij u klikt op de **alle** tabblad.      ## Beschikbaarheid door het projecttype |||   |-|-|   | Projecttype | Beschikbare |   | Windows-toepassing | **Yes**|   | Klasse van de bibliotheek | **Yes**|   | Consoletoepassing | **Yes**|   | Windows beheren bibliotheek | **Yes**|   | Web-bibliotheek | **Yes**|   | Windows-Service | **Yes**|   | Website | **Yes**|"
  syntax:
    content: public void InitializeWithWindowsUser ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  id: InternalPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Opgehaald of ingesteld van de principal-object dat de huidige gebruiker voorstelt."
  remarks: "In de <xref:Microsoft.VisualBasic.ApplicationServices.User>object, verpakt deze eigenschap de <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>eigenschap.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:Microsoft.VisualBasic.ApplicationServices.User> Deze methode in een afgeleide klasse om te bieden verschillend gedrag overschrijven. Bijvoorbeeld, de <xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=fullName>eigenschap overschrijft deze eigenschap.</xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual System.Security.Principal.IPrincipal InternalPrincipal { get; set; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "Een <xref:System.Security.Principal.IPrincipal>-object als de huidige gebruiker.</xref:System.Security.Principal.IPrincipal>"
  overload: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  id: IsAuthenticated
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Haalt een waarde die aangeeft of de gebruiker is geverifieerd."
  remarks: "De `My.User.IsAuthenticated` eigenschap kunt u uw code om te bepalen of de huidige gebruiker is geverifieerd.      > [!NOTE] > Het exacte gedrag van `My.User` object hangt af van het type van de toepassing en het besturingssysteem waarop de toepassing wordt uitgevoerd. Zie voor meer informatie de <xref:Microsoft.VisualBasic.ApplicationServices.User>overzicht van de klasse.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Beschikbaarheid door het projecttype |||   |-|-|   | Projecttype | Beschikbare |   | Windows-toepassing | **Yes**|   | Klasse van de bibliotheek | **Yes**|   | Consoletoepassing | **Yes**|   | Windows beheren bibliotheek | **Yes**|   | Web-bibliotheek | **Yes**|   | Windows-Service | **Yes**|   | Website | **Yes**|"
  example:
  - "This example verifies that the user has been authenticated before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#2](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#2)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Als de gebruiker is geverifieerd; anders <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  id: IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsInRole(BuiltInRole)
  nameWithType: User.IsInRole(BuiltInRole)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(BuiltInRole)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Hiermee wordt bepaald of de huidige gebruiker tot de opgegeven rol behoort."
  remarks: "De `My.User.IsInRole` methode kunt u uw code om te bepalen of de huidige gebruiker lid is van de opgegeven rol.       De overbelasting van de `My.User.IsInRole` methode die een tekenreeks biedt eenvoudige toegang tot de <xref:System.Security.Principal.IPrincipal.IsInRole%2A>methode van de huidige principal.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>       De overbelasting van de `My.User.IsInRole` methode die een `BuiltInRole` opsomming werkt anders, afhankelijk van de huidige principal. Als het een Windows-UPN (<xref:System.Security.Principal.WindowsPrincipal>), converteert deze functie `role` naar de overeenkomstige <xref:System.Security.Principal.WindowsBuiltInRole>opsomming en retourneert het resultaat van het aanroepen van <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> </xref:System.Security.Principal.WindowsBuiltInRole> </xref:System.Security.Principal.WindowsPrincipal> Als de huidige principal een willekeurige andere principal is, deze functie geeft de naam van de opsommingswaarde in `role` naar de principal <xref:System.Security.Principal.IPrincipal.IsInRole%2A>methode.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>      > [!NOTE] > Het exacte gedrag van de `My.User` object hangt af van het type van de toepassing en het besturingssysteem waarop de toepassing wordt uitgevoerd. Zie voor meer informatie de <xref:Microsoft.VisualBasic.ApplicationServices.User>overzicht van de klasse.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Beschikbaarheid door het projecttype |||   |-|-|   | Projecttype | Beschikbare |   | Windows-toepassing | **Yes**|   | Klasse van de bibliotheek | **Yes**|   | Consoletoepassing | **Yes**|   | Windows beheren bibliotheek | **Yes**|   | Web-bibliotheek | **Yes**|   | Windows-Service | **Yes**|   | Website | **Yes**|"
  example:
  - "This example checks if the user is an administrator before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#1](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#1)]"
  syntax:
    content: public bool IsInRole (Microsoft.VisualBasic.ApplicationServices.BuiltInRole role);
    parameters:
    - id: role
      type: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
      description: "De ingebouwde Windows-rol waarvoor Controleer het lidmaatschap."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Als de huidige gebruiker lid is van de opgegeven rol; anders <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsInRole(String)
  nameWithType: User.IsInRole(String)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Hiermee wordt bepaald of de huidige gebruiker tot de opgegeven rol behoort."
  remarks: "De `My.User.IsInRole` methode kunt u uw code om te bepalen of de huidige gebruiker lid is van de opgegeven rol.       De overbelasting van de `My.User.IsInRole` methode die een tekenreeks biedt eenvoudige toegang tot de <xref:System.Security.Principal.IPrincipal.IsInRole%2A>methode van de huidige principal.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>       De overbelasting van de `My.User.IsInRole` methode die een `BuiltInRole` opsomming werkt anders, afhankelijk van de huidige principal. Als het een Windows-UPN (<xref:System.Security.Principal.WindowsPrincipal>), converteert deze functie `role` naar de overeenkomstige <xref:System.Security.Principal.WindowsBuiltInRole>opsomming en retourneert het resultaat van het aanroepen van <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> </xref:System.Security.Principal.WindowsBuiltInRole> </xref:System.Security.Principal.WindowsPrincipal> Als de huidige principal een willekeurige andere principal is, deze functie geeft de naam van de opsommingswaarde in `role` naar de principal <xref:System.Security.Principal.IPrincipal.IsInRole%2A>methode.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>      > [!NOTE] > Het exacte gedrag van de `My.User` object hangt af van het type van de toepassing en het besturingssysteem waarop de toepassing wordt uitgevoerd. Zie voor meer informatie de <xref:Microsoft.VisualBasic.ApplicationServices.User>overzicht van de klasse.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Beschikbaarheid door het projecttype |||   |-|-|   | Projecttype | Beschikbare |   | Windows-toepassing | **Yes**|   | Klasse van de bibliotheek | **Yes**|   | Consoletoepassing | **Yes**|   | Windows beheren bibliotheek | **Yes**|   | Web-bibliotheek | **Yes**|   | Windows-Service | **Yes**|   | Website | **Yes**|"
  example:
  - "This example checks if the user is an administrator before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#1](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#1)]"
  syntax:
    content: public bool IsInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "De naam van de rol waarvoor Controleer het lidmaatschap."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Als de huidige gebruiker lid is van de opgegeven rol; anders <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name
  id: Name
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: Name
  nameWithType: User.Name
  fullName: Microsoft.VisualBasic.ApplicationServices.User.Name
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Hiermee haalt u de naam van de huidige gebruiker."
  remarks: "You can use the `My.User` object to get information about the current user.  \n  \n The principal that authenticates the user also controls the format of the user name. By default, an application uses Windows authentication, and the user name has the format DOMAIN\\USERNAME. A custom implementation of the principal does not necessarily use the same format.  \n  \n> [!NOTE]\n>  The `My.User.Name` property returns an empty string when run under Windows 95 and Windows 98 because those operating systems do not recognize user names.  \n  \n> [!NOTE]\n>  The exact behavior of the `My.User` object depends on the type of the application and on the operating system on which the application runs. For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.  \n  \n## Availability by Project Type  \n  \n|||  \n|-|-|  \n|Project type|Available|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|**Yes**|  \n|Windows Service|**Yes**|  \n|Web Site|**Yes**|"
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. De naam van de huidige gebruiker."
  overload: Microsoft.VisualBasic.ApplicationServices.User.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: User()
  nameWithType: User.User()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.User()
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InitializeWithWindowsUser()
  nameWithType: User.InitializeWithWindowsUser()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser()
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole(BuiltInRole)
  nameWithType: User.IsInRole(BuiltInRole)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(BuiltInRole)
- uid: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: BuiltInRole
  nameWithType: BuiltInRole
  fullName: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole(String)
  nameWithType: User.IsInRole(String)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: Name
  nameWithType: User.Name
  fullName: Microsoft.VisualBasic.ApplicationServices.User.Name
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: User
  nameWithType: User.User
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InitializeWithWindowsUser
  nameWithType: User.InitializeWithWindowsUser
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole
  nameWithType: User.IsInRole
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: Name
  nameWithType: User.Name
