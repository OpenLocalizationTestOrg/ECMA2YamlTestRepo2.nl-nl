### YamlMime:ManagedReference
items:
- uid: System.Web.Services.WebService
  id: WebService
  children:
  - System.Web.Services.WebService.#ctor
  - System.Web.Services.WebService.Application
  - System.Web.Services.WebService.Context
  - System.Web.Services.WebService.Server
  - System.Web.Services.WebService.Session
  - System.Web.Services.WebService.SoapVersion
  - System.Web.Services.WebService.User
  langs:
  - csharp
  name: WebService
  nameWithType: WebService
  fullName: System.Web.Services.WebService
  type: Class
  summary: "Hiermee definieert u de optionele basisklasse voor XML-webservices die rechtstreekse toegang tot algemene ASP.NET-objecten, zoals toepassings- en status biedt."
  remarks: "Als u geen toegang tot de algemene ASP.NET-objecten nodig hebt, kunt u nog steeds een XML-webservice maken zonder die zijn afgeleid van de WebService. Aanvullende ASP.NET-objecten kunnen worden geopend via <xref:System.Web.Services.WebService.Context%2A>.</xref:System.Web.Services.WebService.Context%2A>       De methoden van XML-webservice die de <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A>eigenschap van een <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>of <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>ingesteld op `true`, geen toegang tot hun <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> </xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> </xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> Als zodanig toegang hebben tot de eigenschappen van de WebService-klasse, vanuit binnen die XML Web service-methode terug `null`.       Als u gebruikmaakt van .NET Framework versie 1.0 van het XML-methoden van de webservice die ofwel hebben de <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>of <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>kenmerk toegepast met de <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A>eigenschap van is ingesteld op `true`, geen toegang tot hun <xref:System.Web.HttpContext>met behulp van de statische <xref:System.Web.HttpContext.Current%2A>eigenschap.</xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> </xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> Voor toegang tot de <xref:System.Web.HttpContext>, afgeleid van de implementatie van de methode voor de XML-webservice van de WebService en toegang klasse de <xref:System.Web.Services.WebService.Context%2A>eigenschap.</xref:System.Web.Services.WebService.Context%2A> </xref:System.Web.HttpContext>"
  example:
  - "The example below creates an XML Web service, deriving from WebService, in order to use the <xref:System.Web.Services.WebService.Context%2A> property to obtain the time of the request on the server.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: 'public class WebService : System.ComponentModel.MarshalByValueComponent'
  inheritance:
  - System.Object
  - System.ComponentModel.MarshalByValueComponent
  implements: []
  inheritedMembers:
  - System.ComponentModel.MarshalByValueComponent.Container
  - System.ComponentModel.MarshalByValueComponent.DesignMode
  - System.ComponentModel.MarshalByValueComponent.Dispose
  - System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)
  - System.ComponentModel.MarshalByValueComponent.Disposed
  - System.ComponentModel.MarshalByValueComponent.Events
  - System.ComponentModel.MarshalByValueComponent.GetService(System.Type)
  - System.ComponentModel.MarshalByValueComponent.Site
  - System.ComponentModel.MarshalByValueComponent.ToString
  platform:
  - net462
- uid: System.Web.Services.WebService.#ctor
  id: '#ctor'
  parent: System.Web.Services.WebService
  langs:
  - csharp
  name: WebService()
  nameWithType: WebService.WebService()
  fullName: System.Web.Services.WebService.WebService()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.Services.WebService&quot;> </xref> klasse."
  remarks: ''
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public WebService ();
    parameters: []
  overload: System.Web.Services.WebService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.WebService.Application
  id: Application
  parent: System.Web.Services.WebService
  langs:
  - csharp
  name: Application
  nameWithType: WebService.Application
  fullName: System.Web.Services.WebService.Application
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services
  summary: "Hiermee wordt het toepassingsobject voor de huidige HTTP-aanvraag."
  remarks: "XML-webservices kunnen toepassingsstatus en sessiestatus gebruiken. De status van toepassing is die wordt onderhouden tussen alle sessies openen van een XML-webservice, ongeacht of de sessiestatus is uitgeschakeld voor een methode (met behulp van de <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A>eigenschap van de <xref:System.Web.Services.WebMethodAttribute>).</xref:System.Web.Services.WebMethodAttribute> </xref:System.Web.Services.WebMethodAttribute.EnableSession%2A>"
  example:
  - "The example below demonstrates a hit counter, incrementing the count every time a browser calls the XML Web service method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Web.HttpApplicationState Application { get; }
    return:
      type: System.Web.HttpApplicationState
      description: "Een <xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> object."
  overload: System.Web.Services.WebService.Application*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.WebService.Context
  id: Context
  parent: System.Web.Services.WebService
  langs:
  - csharp
  name: Context
  nameWithType: WebService.Context
  fullName: System.Web.Services.WebService.Context
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services
  summary: "De ASP.NET opgehaald <xref href=&quot;System.Web.HttpContext&quot;> </xref> voor de huidige aanvraag die alle HTTP-specifieke context gebruikt door de HTTP-server om te verwerken webaanvragen ingekapseld."
  remarks: "Methoden van XML-webservice die ofwel hebben de <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>of <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>kenmerk toegepast met de <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A>eigenschap van is ingesteld op `true`, geen toegang tot hun <xref:System.Web.HttpContext>met behulp van de statische <xref:System.Web.HttpContext.Current%2A>eigenschap.</xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> </xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> Voor toegang tot de <xref:System.Web.HttpContext>, afgeleid van de implementatie van de methode voor de XML-webservice van klasse <xref:System.Web.Services.WebService>en toegang tot de eigenschap Context.</xref:System.Web.Services.WebService> </xref:System.Web.HttpContext>"
  example:
  - "The Example below uses the Context property to obtain the time of the request on the server.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Web.HttpContext Context { get; }
    return:
      type: System.Web.HttpContext
      description: "De ASP.NET <xref href=&quot;System.Web.HttpContext&quot;> </xref> voor de huidige aanvraag."
  overload: System.Web.Services.WebService.Context*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "<code>Context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Services.WebService.Server
  id: Server
  parent: System.Web.Services.WebService
  langs:
  - csharp
  name: Server
  nameWithType: WebService.Server
  fullName: System.Web.Services.WebService.Server
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services
  summary: "Haalt de <xref href=&quot;System.Web.HttpServerUtility&quot;> </xref> voor de huidige aanvraag."
  remarks: "De <xref:System.Web.HttpServerUtility>klasse biedt verschillende methoden die kunnen worden gebruikt bij het verwerken van webaanvragen, met inbegrip van <xref:System.Web.HttpServerUtility.CreateObject%2A>(voor het instantiÃ«ren van COM-objecten).</xref:System.Web.HttpServerUtility.CreateObject%2A> </xref:System.Web.HttpServerUtility>"
  example:
  - "The example below returns the computer name of the Web server using the Server property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Web.HttpServerUtility Server { get; }
    return:
      type: System.Web.HttpServerUtility
      description: "Een <xref href=&quot;System.Web.HttpServerUtility&quot;> </xref> object."
  overload: System.Web.Services.WebService.Server*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.WebService.Session
  id: Session
  parent: System.Web.Services.WebService
  langs:
  - csharp
  name: Session
  nameWithType: WebService.Session
  fullName: System.Web.Services.WebService.Session
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services
  summary: "Haalt de <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref> exemplaar voor de huidige aanvraag."
  remarks: ''
  example:
  - "The example below uses session state to determine how many times a particular session accesses the XML Web service method `SessionHitCounter`. In this example, the <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> property of the <xref:System.Web.Services.WebMethodAttribute> is set to `true` in order to gain access to session state.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Web.SessionState.HttpSessionState Session { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "Een <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref> voor ASP.NET-sessieobject staat voor de huidige sessie."
  overload: System.Web.Services.WebService.Session*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.WebService.SoapVersion
  id: SoapVersion
  parent: System.Web.Services.WebService
  langs:
  - csharp
  name: SoapVersion
  nameWithType: WebService.SoapVersion
  fullName: System.Web.Services.WebService.SoapVersion
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services
  summary: "Hiermee haalt u de versie van het SOAP-protocol gebruikt voor het maken van de SOAP-aanvraag met de XML-webservice."
  remarks: "Als het SOAP-protocol niet is gebruikt om te communiceren met de XML-webservice, zoals HTTP GET- of HTTP-POST, is de waarde van de eigenschap SoapVersion <xref:System.Web.Services.Protocols.SoapProtocolVersion>.</xref:System.Web.Services.Protocols.SoapProtocolVersion>       Voor XML-webservices die niet zijn afgeleid van de <xref:System.Web.Services.WebService>klasse, de versie van het SOAP-protocol gebruikt voor het maken van de SOAP-aanvraag met de service worden ook zijn toegankelijk via de vermelding &quot;WebServiceSoapVersion&quot; van het XML-webservice de <xref:System.Web.HttpContext.Items%2A?displayProperty=fullName>eigenschap.</xref:System.Web.HttpContext.Items%2A?displayProperty=fullName> </xref:System.Web.Services.WebService> Deze vermelding is van het type <xref:System.Web.Services.Protocols.SoapProtocolVersion>.</xref:System.Web.Services.Protocols.SoapProtocolVersion>"
  syntax:
    content: public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }
    return:
      type: System.Web.Services.Protocols.SoapProtocolVersion
      description: "Een van de <xref href=&quot;System.Web.Services.Protocols.SoapProtocolVersion&quot;> </xref> waarden. De standaardwaarde is <xref href=&quot;System.Web.Services.Protocols.SoapProtocolVersion&quot;> </xref>."
  overload: System.Web.Services.WebService.SoapVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.WebService.User
  id: User
  parent: System.Web.Services.WebService
  langs:
  - csharp
  name: User
  nameWithType: WebService.User
  fullName: System.Web.Services.WebService.User
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services
  summary: "De ASP.NET-server opgehaald <xref:System.Web.HttpContext.User*>object.</xref:System.Web.HttpContext.User*> Kan worden gebruikt om te verifiÃ«ren of een gebruiker is gemachtigd voor het uitvoeren van de aanvraag."
  remarks: "Both Internet Information Services (IIS) and the .NET Framework need to be configured for authentication in order for the User property to be meaningful. Authentication is the process of accepting credentials from a user and validating those credentials against some authority. If the credentials are valid, you have an authenticated identity. Authentication in the .NET Framework is configured by placing entries in the web.config file.  \n  \n The following example demonstrates the entries you place in the web.config file to enable Windows authentication.  \n  \n```  \n<security>  \n <authentication mode=\"Windows\"> <!-- Mode Options are Windows, Cookie, Passport and None or Empty String -->  \n </authentication>  \n </security>  \n```  \n  \n For more information on setting up security for an XML Web service see [&#91;\\<topic://cpconSecuringASPNETWebServices>&#93;](http://msdn.microsoft.com/en-us/354b2ab1-2782-4542-b32a-dc560178b90c)."
  example:
  - "The example below looks up the authenticated user name and returns that name.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Security.Principal.IPrincipal User { get; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "Een <xref:System.Security.Principal.IPrincipal>die vertegenwoordigt de ASP.NET-server <xref:System.Web.HttpContext.User*>object.</xref:System.Web.HttpContext.User*> </xref:System.Security.Principal.IPrincipal>"
  overload: System.Web.Services.WebService.User*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: System.ComponentModel.MarshalByValueComponent
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Web.Services.WebService.#ctor
  parent: System.Web.Services.WebService
  isExternal: false
  name: WebService()
  nameWithType: WebService.WebService()
  fullName: System.Web.Services.WebService.WebService()
- uid: System.Web.Services.WebService.Application
  parent: System.Web.Services.WebService
  isExternal: false
  name: Application
  nameWithType: WebService.Application
  fullName: System.Web.Services.WebService.Application
- uid: System.Web.HttpApplicationState
  parent: System.Web
  isExternal: false
  name: HttpApplicationState
  nameWithType: HttpApplicationState
  fullName: System.Web.HttpApplicationState
- uid: System.Web.Services.WebService.Context
  parent: System.Web.Services.WebService
  isExternal: false
  name: Context
  nameWithType: WebService.Context
  fullName: System.Web.Services.WebService.Context
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.Services.WebService.Server
  parent: System.Web.Services.WebService
  isExternal: false
  name: Server
  nameWithType: WebService.Server
  fullName: System.Web.Services.WebService.Server
- uid: System.Web.HttpServerUtility
  parent: System.Web
  isExternal: false
  name: HttpServerUtility
  nameWithType: HttpServerUtility
  fullName: System.Web.HttpServerUtility
- uid: System.Web.Services.WebService.Session
  parent: System.Web.Services.WebService
  isExternal: false
  name: Session
  nameWithType: WebService.Session
  fullName: System.Web.Services.WebService.Session
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.Services.WebService.SoapVersion
  parent: System.Web.Services.WebService
  isExternal: false
  name: SoapVersion
  nameWithType: WebService.SoapVersion
  fullName: System.Web.Services.WebService.SoapVersion
- uid: System.Web.Services.Protocols.SoapProtocolVersion
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapProtocolVersion
  nameWithType: SoapProtocolVersion
  fullName: System.Web.Services.Protocols.SoapProtocolVersion
- uid: System.Web.Services.WebService.User
  parent: System.Web.Services.WebService
  isExternal: false
  name: User
  nameWithType: WebService.User
  fullName: System.Web.Services.WebService.User
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.Services.WebService.#ctor*
  parent: System.Web.Services.WebService
  isExternal: false
  name: WebService
  nameWithType: WebService.WebService
- uid: System.Web.Services.WebService.Application*
  parent: System.Web.Services.WebService
  isExternal: false
  name: Application
  nameWithType: WebService.Application
- uid: System.Web.Services.WebService.Context*
  parent: System.Web.Services.WebService
  isExternal: false
  name: Context
  nameWithType: WebService.Context
- uid: System.Web.Services.WebService.Server*
  parent: System.Web.Services.WebService
  isExternal: false
  name: Server
  nameWithType: WebService.Server
- uid: System.Web.Services.WebService.Session*
  parent: System.Web.Services.WebService
  isExternal: false
  name: Session
  nameWithType: WebService.Session
- uid: System.Web.Services.WebService.SoapVersion*
  parent: System.Web.Services.WebService
  isExternal: false
  name: SoapVersion
  nameWithType: WebService.SoapVersion
- uid: System.Web.Services.WebService.User*
  parent: System.Web.Services.WebService
  isExternal: false
  name: User
  nameWithType: WebService.User
