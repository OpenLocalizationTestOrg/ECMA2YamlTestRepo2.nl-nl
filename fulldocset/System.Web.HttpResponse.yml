### YamlMime:ManagedReference
items:
- uid: System.Web.HttpResponse
  id: HttpResponse
  children:
  - System.Web.HttpResponse.#ctor(System.IO.TextWriter)
  - System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])
  - System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)
  - System.Web.HttpResponse.AddCacheItemDependencies(System.String[])
  - System.Web.HttpResponse.AddCacheItemDependency(System.String)
  - System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)
  - System.Web.HttpResponse.AddFileDependencies(System.String[])
  - System.Web.HttpResponse.AddFileDependency(System.String)
  - System.Web.HttpResponse.AddHeader(System.String,System.String)
  - System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})
  - System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)
  - System.Web.HttpResponse.AppendHeader(System.String,System.String)
  - System.Web.HttpResponse.AppendToLog(System.String)
  - System.Web.HttpResponse.ApplyAppPathModifier(System.String)
  - System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)
  - System.Web.HttpResponse.BinaryWrite(System.Byte[])
  - System.Web.HttpResponse.Buffer
  - System.Web.HttpResponse.BufferOutput
  - System.Web.HttpResponse.Cache
  - System.Web.HttpResponse.CacheControl
  - System.Web.HttpResponse.Charset
  - System.Web.HttpResponse.Clear
  - System.Web.HttpResponse.ClearContent
  - System.Web.HttpResponse.ClearHeaders
  - System.Web.HttpResponse.ClientDisconnectedToken
  - System.Web.HttpResponse.Close
  - System.Web.HttpResponse.ContentEncoding
  - System.Web.HttpResponse.ContentType
  - System.Web.HttpResponse.Cookies
  - System.Web.HttpResponse.DisableKernelCache
  - System.Web.HttpResponse.DisableUserCache
  - System.Web.HttpResponse.End
  - System.Web.HttpResponse.EndFlush(System.IAsyncResult)
  - System.Web.HttpResponse.Expires
  - System.Web.HttpResponse.ExpiresAbsolute
  - System.Web.HttpResponse.Filter
  - System.Web.HttpResponse.Flush
  - System.Web.HttpResponse.FlushAsync
  - System.Web.HttpResponse.HeaderEncoding
  - System.Web.HttpResponse.Headers
  - System.Web.HttpResponse.HeadersWritten
  - System.Web.HttpResponse.IsClientConnected
  - System.Web.HttpResponse.IsRequestBeingRedirected
  - System.Web.HttpResponse.Output
  - System.Web.HttpResponse.OutputStream
  - System.Web.HttpResponse.Pics(System.String)
  - System.Web.HttpResponse.PushPromise(System.String)
  - System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.HttpResponse.Redirect(System.String)
  - System.Web.HttpResponse.Redirect(System.String,System.Boolean)
  - System.Web.HttpResponse.RedirectLocation
  - System.Web.HttpResponse.RedirectPermanent(System.String)
  - System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)
  - System.Web.HttpResponse.RedirectToRoute(System.Object)
  - System.Web.HttpResponse.RedirectToRoute(System.String)
  - System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
  - System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)
  - System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.String)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.HttpResponse.RemoveOutputCacheItem(System.String)
  - System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)
  - System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)
  - System.Web.HttpResponse.Status
  - System.Web.HttpResponse.StatusCode
  - System.Web.HttpResponse.StatusDescription
  - System.Web.HttpResponse.SubStatusCode
  - System.Web.HttpResponse.SupportsAsyncFlush
  - System.Web.HttpResponse.SuppressContent
  - System.Web.HttpResponse.SuppressDefaultCacheControlHeader
  - System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
  - System.Web.HttpResponse.TransmitFile(System.String)
  - System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)
  - System.Web.HttpResponse.TrySkipIisCustomErrors
  - System.Web.HttpResponse.Write(System.Char)
  - System.Web.HttpResponse.Write(System.Object)
  - System.Web.HttpResponse.Write(System.String)
  - System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)
  - System.Web.HttpResponse.WriteFile(System.String)
  - System.Web.HttpResponse.WriteFile(System.String,System.Boolean)
  - System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)
  - System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)
  - System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)
  langs:
  - csharp
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: System.Web.HttpResponse
  type: Class
  summary: "HTTP-antwoord gegevens uit een ASP.NET-bewerking ingekapseld."
  remarks: "De methoden en eigenschappen van de klasse HttpResponse beschikbaar worden gesteld via de <xref:System.Web.HttpApplication.Response%2A>eigenschap van de <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, en <xref:System.Web.UI.UserControl>klassen.</xref:System.Web.UI.UserControl> </xref:System.Web.UI.Page> </xref:System.Web.HttpContext> </xref:System.Web.HttpApplication> </xref:System.Web.HttpApplication.Response%2A>       De volgende methoden van de klasse HttpResponse worden alleen ondersteund in na de back-scenario&quot;s en niet in asynchrone post back-scenario&quot;s:- <xref:System.Web.HttpResponse.BinaryWrite%2A>- <xref:System.Web.HttpResponse.Clear%2A>- <xref:System.Web.HttpResponse.ClearContent%2A>- <xref:System.Web.HttpResponse.ClearHeaders%2A>- <xref:System.Web.HttpResponse.Close%2A>- <xref:System.Web.HttpResponse.End%2A>- <xref:System.Web.HttpResponse.Flush%2A>- <xref:System.Web.HttpResponse.TransmitFile%2A>- <xref:System.Web.HttpResponse.Write%2A>- <xref:System.Web.HttpResponse.WriteFile%2A>- <xref:System.Web.HttpResponse.WriteSubstitution%2A>gedeeltelijke pagina updates zijn ingeschakeld wanneer u <xref:System.Web.UI.UpdatePanel>besturingselementen voor het bijwerken van de geselecteerde regio&quot;s van een pagina in plaats van de hele pagina bijwerken met een bericht weer.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.HttpResponse.WriteSubstitution%2A> </xref:System.Web.HttpResponse.WriteFile%2A> </xref:System.Web.HttpResponse.Write%2A> </xref:System.Web.HttpResponse.TransmitFile%2A> </xref:System.Web.HttpResponse.Flush%2A> </xref:System.Web.HttpResponse.End%2A> </xref:System.Web.HttpResponse.Close%2A> </xref:System.Web.HttpResponse.ClearHeaders%2A> </xref:System.Web.HttpResponse.ClearContent%2A> </xref:System.Web.HttpResponse.Clear%2A> </xref:System.Web.HttpResponse.BinaryWrite%2A> Zie voor meer informatie [UpdatePanel Beheeroverzicht](~/add/includes/ajax-current-ext-md.md) en [gedeeltelijke pagina Rendering overzicht](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example draws three overlapping rectangles when the page is requested. The code begins by setting the <xref:System.Web.HttpResponse.ContentType%2A> property to image/jpeg, so that the entire page will be rendered as a JPEG image. The code then calls the <xref:System.Web.HttpResponse.Clear%2A> method to ensure that no extraneous content is sent with this response. Next, the code sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the page is completely processed before it is sent to the requesting client. Two objects used to draw the rectangles are then created: a <xref:System.Drawing.Bitmap> and a <xref:System.Drawing.Graphics> object. The variables created in the page are used as coordinates to draw the rectangles and a string that appears inside the largest rectangle.  \n  \n When the three rectangles and the string that appears inside them are drawn, the <xref:System.Drawing.Bitmap> is saved to the <xref:System.IO.Stream> object that is associated with the <xref:System.Web.HttpResponse.OutputStream%2A> property and its format is set to JPEG. The code calls the <xref:System.Drawing.Image.Dispose%2A> and <xref:System.Drawing.Graphics.Dispose%2A> methods to release the resources used by the two drawing objects. Lastly, the code calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the buffered response to the requesting client.  \n  \n> [!NOTE]\n>  In code, the HttpResponse object is referred to by the keyword `Response`. For example, `Response.Clear()` refers to the <xref:System.Web.HttpResponse.Clear%2A?displayProperty=fullName> method. The <xref:System.Web.UI.Page> class has a property that is named <xref:System.Web.UI.Page.Response%2A> that exposes the current instance of HttpResponse.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/csharp/t-system.web.httpresponse_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/visualbasic/t-system.web.httpresponse_1.aspx)]"
  syntax:
    content: public sealed class HttpResponse
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpResponse.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: HttpResponse(TextWriter)
  nameWithType: HttpResponse.HttpResponse(TextWriter)
  fullName: System.Web.HttpResponse.HttpResponse(TextWriter)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.HttpResponse&quot;> </xref> klasse."
  remarks: "Dit lid ondersteunt de .NET Framework-infrastructuur en is niet bedoeld voor rechtstreeks gebruik vanuit uw code.       De methoden en eigenschappen van de <xref:System.Web.HttpResponse>klasse worden weergegeven via het ingebouwde <xref:System.Web.HttpContext.Response%2A>-object in ASP.NET.</xref:System.Web.HttpContext.Response%2A> </xref:System.Web.HttpResponse>"
  syntax:
    content: public HttpResponse (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "Een <xref:System.IO.TextWriter>object waarmee aangepaste HTTP-uitvoer.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpResponse.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])
  id: AddCacheDependency(System.Web.Caching.CacheDependency[])
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddCacheDependency(CacheDependency[])
  nameWithType: HttpResponse.AddCacheDependency(CacheDependency[])
  fullName: System.Web.HttpResponse.AddCacheDependency(CacheDependency[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een set-cacheafhankelijkheden koppelt aan het antwoord te vergemakkelijken ongeldig te maken van het antwoord als deze is opgeslagen in de uitvoercache en wijzigt u de opgegeven afhankelijkheden."
  remarks: "De methode AddCacheDependency kunt afhankelijkheden tussen de in cache opgeslagen antwoorden worden gemaakt en een <xref:System.Web.Caching.CacheDependency>object.</xref:System.Web.Caching.CacheDependency>"
  example:
  - "The following example demonstrates how to create a cache dependency by using the AddCacheDependency method and a <xref:System.Web.Caching.CacheDependency> object.  \n  \n [!code-vb[HttpResponse.AddCacheDependency#1](~/add/codesnippet/visualbasic/a9e8dbb8-b5f3-41b1-b083-_1.aspx)]\n [!code-cs[HttpResponse.AddCacheDependency#1](~/add/codesnippet/csharp/a9e8dbb8-b5f3-41b1-b083-_1.aspx)]"
  syntax:
    content: public void AddCacheDependency (System.Web.Caching.CacheDependency[] dependencies);
    parameters:
    - id: dependencies
      type: System.Web.Caching.CacheDependency[]
      description: "Een bestand, cache-sleutel, of <xref href=&quot;System.Web.Caching.CacheDependency&quot;> </xref> om toe te voegen aan de lijst met toepassingsafhankelijkheden."
  overload: System.Web.HttpResponse.AddCacheDependency*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>dependencies</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Deze methode is te laat aangeroepen in de pipeline cache verwerkt nadat het antwoord al is gemaakt."
  platform:
  - net462
- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)
  id: AddCacheItemDependencies(System.Collections.ArrayList)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddCacheItemDependencies(ArrayList)
  nameWithType: HttpResponse.AddCacheItemDependencies(ArrayList)
  fullName: System.Web.HttpResponse.AddCacheItemDependencies(ArrayList)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Maakt de geldigheid van een in cache opgeslagen reactie afhankelijk van andere items in de cache."
  remarks: "Wanneer de items waarnaar wordt verwezen in de `cacheKeys` parameter verwijderd uit de cache, worden de in cache opgeslagen reactie van het huidige item is niet geldig."
  example:
  - "The following example demonstrates how to use an ASP.NET page that is output cached. The code for the page creates an <xref:System.Collections.ArrayList> object of keys that are associated with items that are stored in the <xref:System.Web.Caching.Cache> object. Next, the code passes the <xref:System.Collections.ArrayList> as the parameter in a call to the AddCacheItemDependencies method. This makes the output cached response not valid, if any of the files specified in the <xref:System.Collections.ArrayList> change.  \n  \n [!code-cs[System.Web.HttpResponse_Samples2#5](~/add/codesnippet/csharp/m-system.web.httprespons_6_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples2#5](~/add/codesnippet/visualbasic/m-system.web.httprespons_6_1.aspx)]"
  syntax:
    content: public void AddCacheItemDependencies (System.Collections.ArrayList cacheKeys);
    parameters:
    - id: cacheKeys
      type: System.Collections.ArrayList
      description: "De <xref href=&quot;System.Collections.ArrayList&quot;> </xref> die bevat de sleutels van de items die de huidige cacheantwoord is afhankelijk van is."
  overload: System.Web.HttpResponse.AddCacheItemDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.String[])
  id: AddCacheItemDependencies(System.String[])
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddCacheItemDependencies(String[])
  nameWithType: HttpResponse.AddCacheItemDependencies(String[])
  fullName: System.Web.HttpResponse.AddCacheItemDependencies(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Maakt de geldigheid van een item in de cache afhankelijk van een ander item in de cache."
  remarks: "Wanneer een van de `cacheKey`s zijn verwijderd uit de cache, het antwoord in de cache van het huidige item is ongeldig."
  syntax:
    content: public void AddCacheItemDependencies (string[] cacheKeys);
    parameters:
    - id: cacheKeys
      type: System.String[]
      description: "Een matrix van item sleutels die het cacheantwoord is afhankelijk van is."
  overload: System.Web.HttpResponse.AddCacheItemDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddCacheItemDependency(System.String)
  id: AddCacheItemDependency(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddCacheItemDependency(String)
  nameWithType: HttpResponse.AddCacheItemDependency(String)
  fullName: System.Web.HttpResponse.AddCacheItemDependency(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Maakt de geldigheid van een in cache opgeslagen reactie afhankelijk van een ander item in de cache."
  remarks: "Wanneer het item dat overeenkomt met de `cacheKey` parameter is verwijderd uit de cache, het antwoord in de cache van het huidige item is ongeldig."
  example:
  - "The following example is an ASP.NET user control that is output cached. The code for the control calls the AddCacheItemDependency method with the key of an item stored in the <xref:System.Web.Caching.Cache> object passed as its parameter. If the item does not exist in the cache, the control's response that was stored in the output cache is invalidated. This means that on the subsequent request, a new version of the control's response will be added to the output cache.  \n  \n Next, the code checks whether an item associated with a `bookData` key is stored in the `Cache` object, and displays one of two lines of text dependent upon the result. Then, the code sets the <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> property of a <xref:System.Web.UI.WebControls.DataGrid> control, which is named `dgBooks`, with a call to a custom `DataHelper` class' shared `GetBookData` method, and populates the <xref:System.Web.UI.WebControls.DataGrid> with the <xref:System.Web.UI.Control.DataBind%2A> method.  \n  \n [!code-cs[System.Web.HttpResponse_Samples2#3](~/add/codesnippet/csharp/m-system.web.httprespons_13_1.ascx)]\n [!code-vb[System.Web.HttpResponse_Samples2#3](~/add/codesnippet/visualbasic/m-system.web.httprespons_13_1.ascx)]"
  syntax:
    content: public void AddCacheItemDependency (string cacheKey);
    parameters:
    - id: cacheKey
      type: System.String
      description: "De sleutel van het item dat het cacheantwoord is afhankelijk van is."
  overload: System.Web.HttpResponse.AddCacheItemDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)
  id: AddFileDependencies(System.Collections.ArrayList)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddFileDependencies(ArrayList)
  nameWithType: HttpResponse.AddFileDependencies(ArrayList)
  fullName: System.Web.HttpResponse.AddFileDependencies(ArrayList)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Voegt een groep van bestandsnamen aan de verzameling van bestandsnamen waarvan de huidige reactie afhankelijk is."
  remarks: ''
  example:
  - "The following example is an ASP.NET page that is output cached. The code for the page creates an <xref:System.Collections.ArrayList> of file paths, and then passes the <xref:System.Collections.ArrayList> as the parameter in a call to the AddFileDependencies method. This makes the output cached response invalid if any of the files specified in the <xref:System.Collections.ArrayList> changes.  \n  \n [!code-vb[System.Web.HttpResponse_Samples2#6](~/add/codesnippet/visualbasic/m-system.web.httprespons_10_1.aspx)]\n [!code-cs[System.Web.HttpResponse_Samples2#6](~/add/codesnippet/csharp/m-system.web.httprespons_10_1.aspx)]"
  syntax:
    content: public void AddFileDependencies (System.Collections.ArrayList filenames);
    parameters:
    - id: filenames
      type: System.Collections.ArrayList
      description: "De verzameling bestanden moeten worden toegevoegd."
  overload: System.Web.HttpResponse.AddFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddFileDependencies(System.String[])
  id: AddFileDependencies(System.String[])
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddFileDependencies(String[])
  nameWithType: HttpResponse.AddFileDependencies(String[])
  fullName: System.Web.HttpResponse.AddFileDependencies(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee voegt u een matrix van bestandsnamen toe aan de verzameling van bestandsnamen waarvan de huidige reactie afhankelijk is."
  remarks: ''
  example:
  - "The following example adds an array of file names to the AddFileDependencies file dependency list. If the files changes, the cached response is invalidated.  \n  \n [!code-cs[Response.AddFileDependency#1](~/add/codesnippet/csharp/m-system.web.httprespons_0_1.aspx)]\n [!code-vb[Response.AddFileDependency#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_0_1.aspx)]"
  syntax:
    content: public void AddFileDependencies (string[] filenames);
    parameters:
    - id: filenames
      type: System.String[]
      description: "Een matrix van bestanden moeten worden toegevoegd."
  overload: System.Web.HttpResponse.AddFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddFileDependency(System.String)
  id: AddFileDependency(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddFileDependency(String)
  nameWithType: HttpResponse.AddFileDependency(String)
  fullName: System.Web.HttpResponse.AddFileDependency(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een enkele bestandsnaam toegevoegd aan de verzameling van bestandsnamen waarvan de huidige reactie afhankelijk is."
  remarks: 'Wanneer u de methode AddFileDependency om toe te voegen van de afhankelijkheid van een bestand gebruikt, moet u ook opgeven via programmacode of declaratief de uitvoercache. Bijvoorbeeld, om op te geven van de uitvoercache declaratief, gebruikt u de instructie. Zie voor meer informatie [hoe: Cache-pagina-uitvoer met afhankelijkheden](~/add/includes/ajax-current-ext-md.md).'
  example:
  - "The following example shows how to add a single file name to the AddFileDependency file dependency list. If the file changes, the cached response is invalidated.  \n  \n [!code-vb[Classic HttpResponse.AddFileDependency Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_11_1.vb)]\n [!code-cs[Classic HttpResponse.AddFileDependency Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_11_1.cs)]"
  syntax:
    content: public void AddFileDependency (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "De naam van het bestand om toe te voegen."
  overload: System.Web.HttpResponse.AddFileDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddHeader(System.String,System.String)
  id: AddHeader(System.String,System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddHeader(String,String)
  nameWithType: HttpResponse.AddHeader(String,String)
  fullName: System.Web.HttpResponse.AddHeader(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Voegt een HTTP-header naar de uitvoerstroom. AddHeader is beschikbaar voor compatibiliteit met eerdere versies van ASP."
  remarks: "AddHeader is hetzelfde als <xref:System.Web.HttpResponse.AppendHeader%2A>en is alleen beschikbaar voor compatibiliteit met eerdere versies van ASP.</xref:System.Web.HttpResponse.AppendHeader%2A> Met ASP.NET, gebruikt u <xref:System.Web.HttpResponse.AppendHeader%2A>.</xref:System.Web.HttpResponse.AppendHeader%2A>"
  syntax:
    content: public void AddHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de HTTP-header toevoegen `value` aan."
    - id: value
      type: System.String
      description: "De tekenreeks om toe te voegen aan de koptekst."
  overload: System.Web.HttpResponse.AddHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})
  id: AddOnSendingHeaders(System.Action{System.Web.HttpContext})
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddOnSendingHeaders(Action<HttpContext>)
  nameWithType: HttpResponse.AddOnSendingHeaders(Action<HttpContext>)
  fullName: System.Web.HttpResponse.AddOnSendingHeaders(Action<HttpContext>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "[Ondersteund in de .NET Framework 4.5.2 en latere versies]       Registreert een retouraanroep dat door de ASP.NET-runtime direct vóór de antwoord-headers zijn verzonden voor deze aanvraag wordt aangeroepen."
  remarks: "> [!IMPORTANT]> De AddOnSendingHeaders-methode is niet geactiveerd als het antwoord is door de systeemeigen module eerst leegmaken.       De pseudo gebeurtenis OnSendingHeaders verschilt van de gebeurtenis van de pijplijn IHttpModule niveau dat het een abonnement per aanvraag in plaats van een abonnement voor de per toepassing. De bedoeling is dat de callback de statuscode van antwoord wijzigen kan of een antwoord cookie of de header kan worden ingesteld. Andere informatie over het gebruik opmerkingen en aanvullende opmerkingen:-deze methode werkt alleen wanneer IIS wordt uitgevoerd in de geïntegreerde pipeline-pipeline-modus en alleen als antwoordheaders nog voor de huidige aanvraag nog niet zijn verzonden.      -De ASP.NET-runtime biedt geen garantie dat iets in de thread die de retouraanroep wordt aangeroepen op. Bijvoorbeeld, kan de callback synchroon worden aangeroepen in een achtergrondthread als leeggemaakt achtergrond wordt uitgevoerd. <xref:System.Web.HttpContext.Current%2A>kan niet worden gegarandeerd moet beschikbaar zijn in een dergelijke thread.</xref:System.Web.HttpContext.Current%2A>      -De callback moet een methode die de entiteit antwoordtekst bewerkt of die resulteert in een flush niet aanroepen. Bijvoorbeeld, niet de callback moet aanroepen <xref:System.Web.HttpResponse.Redirect%2A>, zoals die methode kan de entiteit antwoordtekst manipuleren.</xref:System.Web.HttpResponse.Redirect%2A>      -De callback moet alleen korte-uitgevoerd synchrone code bevatten. Bij het aanroepen van een asynchrone bewerking of wacht op die bewerking kan leiden tot een impasse.      -De callback moet niet Veroorzaak een exception; gedrag is anders niet gedefinieerd."
  syntax:
    content: public System.Web.ISubscriptionToken AddOnSendingHeaders (Action<System.Web.HttpContext> callback);
    parameters:
    - id: callback
      type: System.Action{System.Web.HttpContext}
      description: "De callback-methode."
    return:
      type: System.Web.ISubscriptionToken
      description: "Een <xref href=&quot;System.Web.ISubscriptionToken&quot;> </xref> -object met het abonnement op de pseudo OnSendingHeaders-gebeurtenis."
  overload: System.Web.HttpResponse.AddOnSendingHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)
  id: AppendCookie(System.Web.HttpCookie)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AppendCookie(HttpCookie)
  nameWithType: HttpResponse.AppendCookie(HttpCookie)
  fullName: System.Web.HttpResponse.AppendCookie(HttpCookie)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Voegt een HTTP-cookie toe aan de verzameling intrinsieke cookie."
  remarks: ''
  example:
  - "The following example creates a new cookie named `LastVisit`, sets the value of the cookie to the current date and time, and appends the cookie to the current cookie collection. All cookies in the cookie collection are sent to the client in the `Set-Cookie` header with the HTTP output stream.  \n  \n [!code-cs[Classic HttpResponse.AppendCookie Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_22_1.cs)]\n [!code-vb[Classic HttpResponse.AppendCookie Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_22_1.vb)]"
  syntax:
    content: public void AppendCookie (System.Web.HttpCookie cookie);
    parameters:
    - id: cookie
      type: System.Web.HttpCookie
      description: "De <xref href=&quot;System.Web.HttpCookie&quot;> </xref> toevoegen aan de uitvoerstroom."
  overload: System.Web.HttpResponse.AppendCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Een cookie is toegevoegd nadat de HTTP-headers zijn verzonden."
  platform:
  - net462
- uid: System.Web.HttpResponse.AppendHeader(System.String,System.String)
  id: AppendHeader(System.String,System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AppendHeader(String,String)
  nameWithType: HttpResponse.AppendHeader(String,String)
  fullName: System.Web.HttpResponse.AppendHeader(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Voegt een HTTP-header naar de uitvoerstroom."
  remarks: "Als u de methode AppendHeader gebruiken voor het verzenden van cache-specifieke headers en tegelijkertijd het cache-objectmodel gebruiken (<xref:System.Web.HttpResponse.Cache%2A>) in te stellen het cachebeleid, HTTP-antwoordheaders die betrekking op opslaan in cache hebben (`Cache-Control`, `Expires`, `Last-Modified`, `Pragma`, en `Vary`) mogelijk worden verwijderd wanneer het cache-objectmodel wordt gebruikt.</xref:System.Web.HttpResponse.Cache%2A> Dit gedrag kunt ASP.NET voor het onderhouden van de meest beperkende instellingen. Neem bijvoorbeeld een pagina met gebruikersbesturingselementen. Als deze besturingselementen conflicterende sets beleidsregels van de cache hebt, kunt u het meest beperkende cachebeleid wordt gebruikt. Als een gebruikersbesturingselement wordt ingesteld voor de header &quot;`Cache-Control: Public`&quot;en een ander gebruikersbesturingselement Hiermee stelt u de meest beperkende header&quot;`Cache-Control: Private`&quot;via aanroepen naar <xref:System.Web.HttpCachePolicy.SetCacheability%2A>, wordt de &quot;`Cache-Control: Private`&quot; header wordt verzonden met het antwoord.</xref:System.Web.HttpCachePolicy.SetCacheability%2A>       Zie voor een lijst van standaard HTTP/1.1-headers, punt 14, &quot;Header velddefinities&quot;, in de [Hypertext Transfer Protocol--HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) specificatie op de website van de World Wide Web Consortium (W3C)."
  example:
  - "The following example calls the AppendHeader method to add a custom header to the <xref:System.Web.HttpResponse> object sent to the requesting client.  \n  \n [!code-cs[System.Web.HttpResponse.AppendHeader_Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_19_1.aspx)]\n [!code-vb[System.Web.HttpResponse.AppendHeader_Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_19_1.aspx)]"
  syntax:
    content: public void AppendHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de HTTP-header toevoegen aan de uitvoerstroom."
    - id: value
      type: System.String
      description: "De tekenreeks die moet worden toegevoegd aan de koptekst."
  overload: System.Web.HttpResponse.AppendHeader*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "De kop is toegevoegd nadat de HTTP-headers zijn verzonden."
  platform:
  - net462
- uid: System.Web.HttpResponse.AppendToLog(System.String)
  id: AppendToLog(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AppendToLog(String)
  nameWithType: HttpResponse.AppendToLog(String)
  fullName: System.Web.HttpResponse.AppendToLog(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Voegt de aangepaste logboekgegevens naar het logboekbestand van Internet Information Services (IIS)."
  remarks: "Als u wilt toestaan voor de opgegeven tekenreeks moeten worden vastgelegd in het logboekbestand, eerst moet u inschakelen de **URI-Query** optie van de **uitgebreide logboekregistratie-eigenschappen van** in het dialoogvenster voor de site die u wilt registreren voor in IIS.       Voor het aanpassen van uitgebreide logboekregistratie in IIS 6.0, als volgt te werk: 1.  Vouw het knooppunt van de lokale computer in de IIS-beheer, vouw de map Web- of FTP-Sites met de rechtermuisknop op de webserver of FTP-site en klik vervolgens op **eigenschappen**.      2.  Klik op de **Web- of FTP-Site** tabblad en selecteer vervolgens de **logboekregistratie inschakelen** selectievakje (indien deze nog niet is geselecteerd).      3.  In de **Actieve logboekbestandsindeling** Klik **uitgebreide W3C-indeling van logboekbestand**.      4.  Klik op **eigenschappen**.      5.  Klik op de **Geavanceerd** tabblad, selecteert u de eigenschappen die u wilt melden, en klik vervolgens op **OK**."
  example:
  - "The following example shows how to append a string to the log.  \n  \n [!code-vb[Classic HttpResponse.AppendToLog Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_15_1.vb)]\n [!code-cs[Classic HttpResponse.AppendToLog Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_15_1.cs)]"
  syntax:
    content: public void AppendToLog (string param);
    parameters:
    - id: param
      type: System.String
      description: "De tekst toevoegen aan het logboekbestand."
  overload: System.Web.HttpResponse.AppendToLog*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ApplyAppPathModifier(System.String)
  id: ApplyAppPathModifier(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ApplyAppPathModifier(String)
  nameWithType: HttpResponse.ApplyAppPathModifier(String)
  fullName: System.Web.HttpResponse.ApplyAppPathModifier(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Voegt een sessie-ID toe aan het virtuele pad als van de sessie gebruikmaakt <> </> *> status van de sessie en retourneert het gecombineerde pad. Als <> </> *> sessiestatus wordt niet gebruikt, ApplyAppPathModifier retourneert de oorspronkelijke virtuele pad."
  remarks: "ApplyAppPathModifier wordt alleen gebruikt met sessies zonder cookies absolute HREFs bouwen."
  example:
  - "The following example declares a string variable named `urlConverted`, and sets it to the result of an ApplyAppPathModifier method call. The code then passes the variable's value to a <xref:System.Web.UI.WebControls.HyperLink> control's <xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A> property.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#5](~/add/codesnippet/csharp/m-system.web.httprespons_4_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#5](~/add/codesnippet/visualbasic/m-system.web.httprespons_4_1.aspx)]"
  syntax:
    content: public string ApplyAppPathModifier (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Het virtuele pad naar een resource."
    return:
      type: System.String
      description: "De <code> virtualPath </code> aan de sessie-ID moet worden ingevoegd."
  overload: System.Web.HttpResponse.ApplyAppPathModifier*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)
  id: BeginFlush(System.AsyncCallback,System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: BeginFlush(AsyncCallback,Object)
  nameWithType: HttpResponse.BeginFlush(AsyncCallback,Object)
  fullName: System.Web.HttpResponse.BeginFlush(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Het momenteel gebufferde antwoord op de client verzendt."
  remarks: "Als de onderliggende <xref:System.Web.HttpWorkerRequest>object ondersteunt asynchrone bewerkingen voor het leegmaken en deze methode wordt aangeroepen vanuit een asynchrone module gebeurtenis of vanuit een asynchrone handler, de leegmaken bewerking asynchroon wordt uitgevoerd.</xref:System.Web.HttpWorkerRequest> Anders wordt de leegmaken bewerking synchroon uitgevoerd. Asynchrone opschoonbewerking wordt ondersteund voor IIS 6.0 en hoger."
  syntax:
    content: public IAsyncResult BeginFlush (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "De callback-object."
    - id: state
      type: System.Object
      description: "De reactiestatus van de."
    return:
      type: System.IAsyncResult
      description: "Het asynchrone resultaatobject."
  overload: System.Web.HttpResponse.BeginFlush*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Het antwoord is al voltooid."
  platform:
  - net462
- uid: System.Web.HttpResponse.BinaryWrite(System.Byte[])
  id: BinaryWrite(System.Byte[])
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: BinaryWrite(Byte[])
  nameWithType: HttpResponse.BinaryWrite(Byte[])
  fullName: System.Web.HttpResponse.BinaryWrite(Byte[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een tekenreeks van binaire schrijft naar de uitvoerstroom HTTP."
  remarks: ''
  example:
  - "The following example reads a text file into a buffer and writes the buffer to the HTTP output stream.  \n  \n [!code-cs[Classic HttpResponse.BinaryWrite Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_21_1.cs)]\n [!code-vb[Classic HttpResponse.BinaryWrite Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_21_1.vb)]"
  syntax:
    content: public void BinaryWrite (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Het aantal bytes naar de uitvoerstroom schrijven."
  overload: System.Web.HttpResponse.BinaryWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Buffer
  id: Buffer
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Buffer
  nameWithType: HttpResponse.Buffer
  fullName: System.Web.HttpResponse.Buffer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of verwerking naar de uitvoer van de buffer en dit te verzenden nadat het volledige antwoord is voltooid."
  remarks: "De Buffer-eigenschap is afgeschaft in voor de <xref:System.Web.HttpResponse.BufferOutput%2A>eigenschap en is alleen beschikbaar voor compatibiliteit met eerdere versies van ASP.</xref:System.Web.HttpResponse.BufferOutput%2A> Met ASP.NET, gebruikt u <xref:System.Web.HttpResponse.BufferOutput%2A>.</xref:System.Web.HttpResponse.BufferOutput%2A>"
  syntax:
    content: public bool Buffer { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de uitvoer naar de client in de buffer wordt geschreven; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.BufferOutput
  id: BufferOutput
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: BufferOutput
  nameWithType: HttpResponse.BufferOutput
  fullName: System.Web.HttpResponse.BufferOutput
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of verwerking naar de uitvoer van de buffer en dit te verzenden nadat de volledige pagina is voltooid."
  remarks: ''
  example:
  - "The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the BufferOutput property to true so that the entire page will be processed before any content is sent to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/csharp/p-system.web.httprespons_3_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/visualbasic/p-system.web.httprespons_3_1.aspx)]"
  syntax:
    content: public bool BufferOutput { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de uitvoer naar de client in de buffer wordt geschreven; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.BufferOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Cache
  id: Cache
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Cache
  nameWithType: HttpResponse.Cache
  fullName: System.Web.HttpResponse.Cache
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Het cachebeleid opgehaald (zoals een vervaldatum tijd, privacy-instellingen, en de componenten variëren) van een webpagina."
  remarks: ''
  example:
  - "The following example writes properties of the current cache policy to the HTTP output stream.  \n  \n [!code-vb[Classic HttpResponse.Cache Example#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_4_1.vb)]\n [!code-cs[Classic HttpResponse.Cache Example#1](~/add/codesnippet/csharp/p-system.web.httprespons_4_1.cs)]"
  syntax:
    content: public System.Web.HttpCachePolicy Cache { get; }
    return:
      type: System.Web.HttpCachePolicy
      description: "Een <xref href=&quot;System.Web.HttpCachePolicy&quot;> </xref> -object dat informatie over het cachebeleid van het huidige antwoord bevat."
  overload: System.Web.HttpResponse.Cache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.CacheControl
  id: CacheControl
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: CacheControl
  nameWithType: HttpResponse.CacheControl
  fullName: System.Web.HttpResponse.CacheControl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld de <xref uid=&quot;langword_csharp_Cache-Control&quot; name=&quot;Cache-Control&quot; href=&quot;&quot;> </xref> HTTP-header die met overeenkomt de <xref href=&quot;System.Web.HttpCacheability&quot;> </xref> opsommingswaarden."
  remarks: "De waarden voor `Private`, `Public`, en `No-Cache` tekenreeksen zijn en moet tussen aanhalingstekens (&quot;&quot;). Als de eigenschap CacheControl is ingesteld op een waarde die niet overeenkomt met een van de <xref:System.Web.HttpCacheability>opsommingswaarden, wordt er een <xref:System.ArgumentException>gegenereerd.</xref:System.ArgumentException> </xref:System.Web.HttpCacheability> Als de eigenschap CacheControl niet is ingesteld, wordt de cachefunctie van het antwoord ingesteld op <xref:System.Web.HttpCacheability>.</xref:System.Web.HttpCacheability>       De `CacheControl`, <xref:System.Web.HttpResponse.Expires%2A>, en <xref:System.Web.HttpResponse.ExpiresAbsolute%2A>Eigenschappen zijn afgeschaft.</xref:System.Web.HttpResponse.ExpiresAbsolute%2A> </xref:System.Web.HttpResponse.Expires%2A> In plaats daarvan de methoden van de <xref:System.Web.HttpCachePolicy>klasse zijn beschikbaar via de <xref:System.Web.HttpResponse.Cache%2A>intrinsiek object om te bepalen van de Internet Information Services (IIS) uitvoer-cache en client-caches.</xref:System.Web.HttpResponse.Cache%2A> </xref:System.Web.HttpCachePolicy>"
  syntax:
    content: public string CacheControl { get; set; }
    return:
      type: System.String
      description: "Een tekenreeksrepresentatie van de <xref href=&quot;System.Web.HttpCacheability&quot;> </xref> opsommingswaarde."
  overload: System.Web.HttpResponse.CacheControl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De waarde die is ingesteld tekenreeks komt niet overeen met een van de <xref href=&quot;System.Web.HttpCacheability&quot;> </xref> opsommingswaarden."
  platform:
  - net462
- uid: System.Web.HttpResponse.Charset
  id: Charset
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Charset
  nameWithType: HttpResponse.Charset
  fullName: System.Web.HttpResponse.Charset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld van de HTTP-tekenset van de uitvoerstroom."
  remarks: "De `Charset` eigenschap kan worden ingesteld op `null` onderdrukken van het HTTP `Content-Type` header."
  example:
  - "The following example checks whether the character set of the output stream is Central European (ISO).  \n  \n [!code-vb[System.Web.HttpResponse.Charset#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_7_1.aspx)]\n [!code-cs[System.Web.HttpResponse.Charset#1](~/add/codesnippet/csharp/p-system.web.httprespons_7_1.aspx)]"
  syntax:
    content: public string Charset { get; set; }
    return:
      type: System.String
      description: "De HTTP-tekenset van de uitvoerstroom."
  overload: System.Web.HttpResponse.Charset*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "De <xref uid=&quot;langword_csharp_Charset&quot; name=&quot;Charset&quot; href=&quot;&quot;> </xref> eigenschap is ingesteld nadat headers zijn verzonden."
  platform:
  - net462
- uid: System.Web.HttpResponse.Clear
  id: Clear
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpResponse.Clear()
  fullName: System.Web.HttpResponse.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee wist u alle inhoud van de uitvoer van de buffer-stroom."
  remarks: "De methode Clear wist u headerinformatie niet."
  example:
  - "The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the Clear method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the complete page will be processed before any content is sent to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/csharp/m-system.web.httprespons_2_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/visualbasic/m-system.web.httprespons_2_1.aspx)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.HttpResponse.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ClearContent
  id: ClearContent
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ClearContent()
  nameWithType: HttpResponse.ClearContent()
  fullName: System.Web.HttpResponse.ClearContent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee wist u alle inhoud van de uitvoer van de buffer-stroom."
  remarks: "De methode ClearContent header-informatie niet gewist."
  example:
  - "The following example clears all content from the buffer stream.  \n  \n [!code-cs[Classic HttpResponse.ClearContent Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_17_1.cs)]\n [!code-vb[Classic HttpResponse.ClearContent Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_17_1.vb)]"
  syntax:
    content: public void ClearContent ();
    parameters: []
  overload: System.Web.HttpResponse.ClearContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ClearHeaders
  id: ClearHeaders
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ClearHeaders()
  nameWithType: HttpResponse.ClearHeaders()
  fullName: System.Web.HttpResponse.ClearHeaders()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee wist u alle koppen uit de stroom van de buffer."
  remarks: ''
  example:
  - "The following example calls the ClearHeaders method to ensure that no headers are sent with the current response. This technique can be especially important if the ASP.NET response is generating an image, such as a JPEG file. In this example the <xref:System.Web.HttpResponse.ContentType%2A> property is set to image/jpeg.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#2](~/add/codesnippet/csharp/m-system.web.httprespons_14_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#2](~/add/codesnippet/visualbasic/m-system.web.httprespons_14_1.aspx)]"
  syntax:
    content: public void ClearHeaders ();
    parameters: []
  overload: System.Web.HttpResponse.ClearHeaders*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Headers gewist nadat de HTTP-headers zijn verzonden."
  platform:
  - net462
- uid: System.Web.HttpResponse.ClientDisconnectedToken
  id: ClientDisconnectedToken
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ClientDisconnectedToken
  nameWithType: HttpResponse.ClientDisconnectedToken
  fullName: System.Web.HttpResponse.ClientDisconnectedToken
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Haalt een <xref:System.Threading.CancellationToken>object waar de client de verbinding verbreekt.</xref:System.Threading.CancellationToken>"
  remarks: "Deze API is een thread-safe. Er zijn echter enkele beperkingen op hoe de annulering token moet worden gebruikt. Onjuist gebruik kan leiden tot racetoestanden, impassen of ander onverwacht gedrag. Houd rekening met de volgende richtlijnen:-Zorg ervoor dat u in deze API buiten de grenzen van een enkele aanvraag niet aanroepen omdat ASP.NET Recovery van het token annulering aan het einde van de aanvraag. Er is geen garantie dat het token ooit in een status geannuleerd verandert voordat deze wordt verwijderd. Als de aanvraag wordt voltooid zonder dat de client die de verbinding verbroken, wordt bijvoorbeeld het token verwijderd zonder dat eerst is geannuleerd.      -Moet u niet wachten op de <xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=fullName>, omdat dit het doel van een asynchrone melding defeats en leiden impassen tot kan.</xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=fullName>      -Niet aangeroepen door de <xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName>overloads die de callback op de oorspronkelijke aanroepen <xref:System.Threading.SynchronizationContext>object.</xref:System.Threading.SynchronizationContext> </xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName>      -Gebruik niet de <xref:System.Web.HttpContext>object of andere niet-thread-safe ASP.NET intrinsieke objecten binnen de callback die is opgegeven voor de <xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName>methode.</xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName> </xref:System.Web.HttpContext> De callback kan worden uitgevoerd als andere ASP.NET of toepassingscode.      -De callback-methoden worden korte uitgevoerd, en niet-blokkerende behouden.      -Controleer moeite om te voorkomen dat uitzonderingen van binnen de callback-methoden.       Deze eigenschap is alleen van toepassing op Internet Information Service (IIS) 7.5 in de geïntegreerde modus. Als u deze zonder de juiste IIS versie of pipeline-modus aanroepen, een <xref:System.PlatformNotSupportedException>gegenereerd.</xref:System.PlatformNotSupportedException> Om te bepalen van de IIS-versie, gebruikt u <xref:System.Web.HttpRuntime.IISVersion%2A>.</xref:System.Web.HttpRuntime.IISVersion%2A> Om te bepalen van de pipeline-modus, gebruikt u <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>"
  syntax:
    content: public System.Threading.CancellationToken ClientDisconnectedToken { get; }
    return:
      type: System.Threading.CancellationToken
      description: "Het token voor annulering."
  overload: System.Web.HttpResponse.ClientDisconnectedToken*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Close
  id: Close
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Close()
  nameWithType: HttpResponse.Close()
  fullName: System.Web.HttpResponse.Close()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee sluit u de socketverbinding met een client."
  remarks: "Deze methode wordt de verbinding naar de client op een abrupte manier beëindigd en is niet bedoeld voor normale verwerking van HTTP-aanvraag. De methode verzendt een pakket opnieuw instellen naar de client, hetgeen kan leiden tot antwoordgegevens voor de buffer wordt opgeslagen op de server, de client of ergens tussen worden verwijderd.       Echter, doorgaans moet u aanroepen <xref:System.Web.HttpApplication.CompleteRequest%2A>in plaats daarvan als u verdergaan wilt met het <xref:System.Web.HttpApplication.EndRequest>gebeurtenis en een reactie op de client verzenden.</xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.HttpApplication.CompleteRequest%2A>"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Web.HttpResponse.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ContentEncoding
  id: ContentEncoding
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ContentEncoding
  nameWithType: HttpResponse.ContentEncoding
  fullName: System.Web.HttpResponse.ContentEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld van de HTTP-tekenset van de uitvoerstroom."
  remarks: "Standaard `ContentEncoding` kunnen worden opgegeven in een ASP.NET-configuratiebestand in de [globalisatie Element (ASP.NET-instellingenschema)](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) sectie. Als ContentEncoding is opgegeven door de client, worden de standaardinstellingen van de configuratie overschreven."
  example:
  - "The following example writes a human-readable description of the character set encoding to the output stream.  \n  \n [!code-cs[Classic HttpResponse.ContentEncoding Example#1](~/add/codesnippet/csharp/p-system.web.httprespons_0_1.cs)]\n [!code-vb[Classic HttpResponse.ContentEncoding Example#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_0_1.vb)]"
  syntax:
    content: public System.Text.Encoding ContentEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "Een <xref:System.Text.Encoding>object dat informatie over de tekenset van het huidige antwoord bevat.</xref:System.Text.Encoding>"
  overload: System.Web.HttpResponse.ContentEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Poging op te stellen ContentEncoding <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.ContentType
  id: ContentType
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ContentType
  nameWithType: HttpResponse.ContentType
  fullName: System.Web.HttpResponse.ContentType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld van de HTTP-MIME-type van de uitvoerstroom."
  remarks: ''
  example:
  - "The following example sets the ContentType property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the complete page will be processed before any content is sent to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/csharp/p-system.web.httprespons_2_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/visualbasic/p-system.web.httprespons_2_1.aspx)]"
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "De HTTP-MIME-type van de uitvoerstroom. De standaardwaarde is &quot;<xref uid=&quot;langword_csharp_text/html&quot; name=&quot;text/html&quot; href=&quot;&quot;></xref>&quot;."
  overload: System.Web.HttpResponse.ContentType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "De eigenschap ContentType is ingesteld op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.Cookies
  id: Cookies
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpResponse.Cookies
  fullName: System.Web.HttpResponse.Cookies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u de verzameling van de cookie antwoord."
  remarks: "ASP.NET bevat twee intrinsieke cookie verzamelingen. De collectie toegankelijk via de <xref:System.Web.HttpRequest.Cookies%2A>verzameling <xref:System.Web.HttpRequest>bevat cookies die zijn verzonden door de client naar de server in de `Cookie` header.</xref:System.Web.HttpRequest> </xref:System.Web.HttpRequest.Cookies%2A> De collectie toegankelijk via de collectie Cookies van <xref:System.Web.HttpResponse>bevat nieuwe cookies op de server gemaakt en verzonden naar de client in de `Set-Cookie` header.</xref:System.Web.HttpResponse>       Nadat u een cookie toevoegen met behulp van de collectie Cookies, de cookie is onmiddellijk beschikbaar in de <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=fullName>verzameling, zelfs als het antwoord is niet verzonden naar de client.</xref:System.Web.HttpRequest.Cookies%2A?displayProperty=fullName>"
  example:
  - "The following example creates a new cookie named `LastVisit`, sets the value of the cookie to the current date and time, and adds the cookie to the current cookie collection. All cookies in the cookie collection are sent to the client in the `Set-Cookie` header with the HTTP output stream.  \n  \n [!code-cs[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/csharp/p-system.web.httprespons_12_1.cs)]\n [!code-vb[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_12_1.vb)]"
  syntax:
    content: public System.Web.HttpCookieCollection Cookies { get; }
    return:
      type: System.Web.HttpCookieCollection
      description: "De verzameling van het cookie antwoord."
  overload: System.Web.HttpResponse.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.DisableKernelCache
  id: DisableKernelCache
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: DisableKernelCache()
  nameWithType: HttpResponse.DisableKernelCache()
  fullName: System.Web.HttpResponse.DisableKernelCache()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee schakelt u kernelcache voor het huidige antwoord."
  remarks: "Als de kernelcache wordt niet ondersteund, is deze methode heeft geen effect."
  syntax:
    content: public void DisableKernelCache ();
    parameters: []
  overload: System.Web.HttpResponse.DisableKernelCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.DisableUserCache
  id: DisableUserCache
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: DisableUserCache()
  nameWithType: HttpResponse.DisableUserCache()
  fullName: System.Web.HttpResponse.DisableUserCache()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee schakelt u IIS gebruikersmoduscache voor dit antwoord."
  remarks: "Als IIS gebruikersmoduscache niet wordt ondersteund, wordt deze methode retourneert zonder dat u geen actie uitvoert."
  syntax:
    content: public void DisableUserCache ();
    parameters: []
  overload: System.Web.HttpResponse.DisableUserCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.End
  id: End
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: End()
  nameWithType: HttpResponse.End()
  fullName: System.Web.HttpResponse.End()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Alle momenteel gebufferde uitvoer naar de client verzendt, stopt u de uitvoering van de pagina en verhoogt de <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref> gebeurtenis."
  remarks: "Deze methode is alleen beschikbaar voor compatibiliteit met ASP — dat wil zeggen, voor compatibiliteit met Web-programmering op basis van een COM-technologie die voorafgegaan ASP.NET. Als u verdergaan wilt met het <xref:System.Web.HttpApplication.EndRequest>gebeurtenis en een reactie op de client verzenden, is het meestal de voorkeur aan te roepen <xref:System.Web.HttpApplication.CompleteRequest%2A>in plaats daarvan.</xref:System.Web.HttpApplication.CompleteRequest%2A> </xref:System.Web.HttpApplication.EndRequest>       Na te bootsen het gedrag van de `End` methode in ASP deze methode probeert om te genereren voor een <xref:System.Threading.ThreadAbortException>uitzondering.</xref:System.Threading.ThreadAbortException> Als dit lukt, worden de aanroepende thread afgebroken, dat is nadelig voor de prestaties van uw site. In dat geval worden er geen code na de aanroep van de End-methode wordt uitgevoerd.       Als de End-methode niet kunt verhogen een <xref:System.Threading.ThreadAbortException>, dit in plaats daarvan de antwoordbytes leegmaakacties naar de client.</xref:System.Threading.ThreadAbortException> Dit gebeurt synchroon, wat ook schadelijk zijn voor de prestaties van uw site kan zijn.       In beide gevallen (al dan niet een <xref:System.Threading.ThreadAbortException>is een uitzondering is gegenereerd), de pijplijn antwoord gaat u verder gaan naar de <xref:System.Web.HttpApplication.EndRequest>gebeurtenis.</xref:System.Web.HttpApplication.EndRequest> </xref:System.Threading.ThreadAbortException>       De <xref:System.Web.HttpApplication.CompleteRequest%2A>methode niet een uitzondering worden gegenereerd en code na het aanroepen van de <xref:System.Web.HttpApplication.CompleteRequest%2A>methode kan worden uitgevoerd.</xref:System.Web.HttpApplication.CompleteRequest%2A> </xref:System.Web.HttpApplication.CompleteRequest%2A> Als het uw bedoeling is om te voorkomen dat de volgende code wordt uitgevoerd, en als de prestaties van het End acceptabel is, kunt u einde aanroepen in plaats van <xref:System.Web.HttpApplication.CompleteRequest%2A>.</xref:System.Web.HttpApplication.CompleteRequest%2A>"
  syntax:
    content: public void End ();
    parameters: []
  overload: System.Web.HttpResponse.End*
  exceptions:
  - type: System.Threading.ThreadAbortException
    commentId: T:System.Threading.ThreadAbortException
    description: "Het aanroepen van End heeft de huidige aanvraag beëindigd."
  platform:
  - net462
- uid: System.Web.HttpResponse.EndFlush(System.IAsyncResult)
  id: EndFlush(System.IAsyncResult)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: EndFlush(IAsyncResult)
  nameWithType: HttpResponse.EndFlush(IAsyncResult)
  fullName: System.Web.HttpResponse.EndFlush(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een asynchrone bewerking leegmaken voltooit."
  syntax:
    content: public void EndFlush (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Het asynchrone resultaatobject."
  overload: System.Web.HttpResponse.EndFlush*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Asynchrone opschoonbewerking wordt niet ondersteund en de <code> asyncResult </code> parameter <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Asynchrone opschoonbewerking wordt niet ondersteund en de <code> asyncResult </code> parameter kan niet worden geconverteerd naar een `FlushAsyncResult` object."
  platform:
  - net462
- uid: System.Web.HttpResponse.Expires
  id: Expires
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Expires
  nameWithType: HttpResponse.Expires
  fullName: System.Web.HttpResponse.Expires
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld van het aantal minuten waarna een pagina in de cache op een browser verloopt. Als de gebruiker naar dezelfde pagina terugkeert voordat het verloopt, wordt de versie van de cache weergegeven. Verloopt wordt aangeboden voor compatibiliteit met eerdere versies van ASP."
  remarks: "De `Expires`, <xref:System.Web.HttpResponse.ExpiresAbsolute%2A>en <xref:System.Web.HttpResponse.CacheControl%2A>eigenschappen hebben is vervangen door de methoden van de <xref:System.Web.HttpCachePolicy>klasse beschikbaar is via de <xref:System.Web.HttpResponse.Cache%2A>intrinsiek object om te bepalen van de Internet Information Services (IIS) uitvoer cache en client-caches.</xref:System.Web.HttpResponse.Cache%2A> </xref:System.Web.HttpCachePolicy> </xref:System.Web.HttpResponse.CacheControl%2A> </xref:System.Web.HttpResponse.ExpiresAbsolute%2A>"
  syntax:
    content: public int Expires { get; set; }
    return:
      type: System.Int32
      description: "Het aantal minuten voordat de pagina is verlopen."
  overload: System.Web.HttpResponse.Expires*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ExpiresAbsolute
  id: ExpiresAbsolute
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ExpiresAbsolute
  nameWithType: HttpResponse.ExpiresAbsolute
  fullName: System.Web.HttpResponse.ExpiresAbsolute
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld van de absolute datum en tijd waarop gegevens in cache verwijderen uit de cache. ExpiresAbsolute is beschikbaar voor compatibiliteit met eerdere versies van ASP."
  remarks: "De `ExpiresAbsolute`, <xref:System.Web.HttpResponse.Expires%2A>, en <xref:System.Web.HttpResponse.CacheControl%2A>eigenschappen hebben is vervangen door de methoden van de <xref:System.Web.HttpCachePolicy>klasse beschikbaar is via de <xref:System.Web.HttpResponse.Cache%2A>intrinsiek object om te bepalen van de Internet Information Services (IIS) uitvoer cache en client-caches.</xref:System.Web.HttpResponse.Cache%2A> </xref:System.Web.HttpCachePolicy> </xref:System.Web.HttpResponse.CacheControl%2A> </xref:System.Web.HttpResponse.Expires%2A>"
  syntax:
    content: public DateTime ExpiresAbsolute { get; set; }
    return:
      type: System.DateTime
      description: "De datum en tijd waarop de pagina is verlopen."
  overload: System.Web.HttpResponse.ExpiresAbsolute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Filter
  id: Filter
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Filter
  nameWithType: HttpResponse.Filter
  fullName: System.Web.HttpResponse.Filter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld die een filter wrapping object is gebruikt voor het wijzigen van de HTTP-entiteitshoofdtekst voor verzending."
  remarks: "Bij het maken van een `Stream` object en stel de eigenschap Filter op de `Stream` alle HTTP-object uitvoer verzonden door <xref:System.Web.HttpResponse.Write%2A>het filter passeert.</xref:System.Web.HttpResponse.Write%2A>"
  example:
  - "The following example is an ASP.NET page that sets the Filter property to a new instance of the `UpperCaseFilter` class, a custom <xref:System.IO.Stream> class that converts all text that passes through it to uppercase. The information about the request is saved to a text file, and then the Filter property is set. After the response filter is in place, the code calls the <xref:System.Web.HttpRequest.MapPath%2A> method to get the absolute path to a text file named `TestFile.txt` that serves as the source for the content of the response. The code then creates a new <xref:System.IO.StreamReader> object to read the text file from beginning to end, and then calls the <xref:System.Web.HttpResponse.Write%2A> method to display the content of the file on the page.  \n  \n [!code-vb[System.Web.HttpRequest_Samples2#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_8_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Samples2#1](~/add/codesnippet/csharp/p-system.web.httprespons_8_1.aspx)]"
  syntax:
    content: public System.IO.Stream Filter { get; set; }
    return:
      type: System.IO.Stream
      description: "De <xref:System.IO.Stream>-object dat als de uitvoerfilter fungeert.</xref:System.IO.Stream>"
  overload: System.Web.HttpResponse.Filter*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Filteren is met de entiteit niet toegestaan."
  platform:
  - net462
- uid: System.Web.HttpResponse.Flush
  id: Flush
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Flush()
  nameWithType: HttpResponse.Flush()
  fullName: System.Web.HttpResponse.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Alle momenteel gebufferde uitvoer verzendt naar de client."
  remarks: "Hiermee worden alle momenteel uitvoer moet worden verzonden naar de client gebufferd. De methode Flush kan meerdere keren worden aangeroepen tijdens de verwerking van aanvragen."
  example:
  - "The following example calls the <xref:System.Drawing.Graphics.Save%2A> method to save a <xref:System.Drawing.Bitmap> object to the <xref:System.Web.HttpResponse.OutputStream%2A> property and converts the image to the JPEG format. The code then calls the `Dispose` method on the <xref:System.Drawing.Bitmap> object and a <xref:System.Drawing.Graphics> object, releasing the resources that they were using. It then calls the Flush method to send the content of the response to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/csharp/m-system.web.httprespons_24_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_24_1.aspx)]"
  syntax:
    content: public void Flush ();
    parameters: []
  overload: System.Web.HttpResponse.Flush*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "De cache moet worden leeggemaakt nadat het antwoord is verzonden."
  platform:
  - net462
- uid: System.Web.HttpResponse.FlushAsync
  id: FlushAsync
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: FlushAsync()
  nameWithType: HttpResponse.FlushAsync()
  fullName: System.Web.HttpResponse.FlushAsync()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Asynchroon verzendt alle momenteel gebufferde uitvoer naar de client."
  syntax:
    content: public System.Threading.Tasks.Task FlushAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: "Een <xref:System.Threading.Tasks.Task>die staat voor de asynchrone bewerking.</xref:System.Threading.Tasks.Task>"
  overload: System.Web.HttpResponse.FlushAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.HeaderEncoding
  id: HeaderEncoding
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: HeaderEncoding
  nameWithType: HttpResponse.HeaderEncoding
  fullName: System.Web.HttpResponse.HeaderEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld een <xref:System.Text.Encoding>-object met de codering voor de huidige koptekst uitvoer stream.</xref:System.Text.Encoding>"
  remarks: "De eigenschap HeaderEncoding biedt u de mogelijkheid uit te schakelen of wijzig de <xref:System.Text.Encoding>object op een antwoordheader met behulp van de <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF7Encoding>, of <xref:System.Text.UTF8Encoding>object.</xref:System.Text.UTF8Encoding> </xref:System.Text.UTF7Encoding> </xref:System.Text.UnicodeEncoding> </xref:System.Text.ASCIIEncoding> </xref:System.Text.Encoding> De waarde van de standaardcodering is de <xref:System.Text.UTF8Encoding>klasse.</xref:System.Text.UTF8Encoding>       Door het wijzigen van het type van de eigenschap HeaderEncoding, kunt u mogelijk het risico van bepaalde aanvallen verhogen of ertoe leiden dat gevoelige gegevens worden verzonden via de antwoordheader. Header-injectieaanvallen kunnen gedeeltelijk worden voorkomen door de eigenschap HeaderEncoding van een reactie op de standaardinstelling. Een aanval tegen een kwetsbare toepassing kan echo terug gegevens toevertrouwd als onderdeel van een antwoordheader. Als de HeaderEncoding is uitgeschakeld vanwege een vereiste voor de lijnen voortzetting in een koptekst of als een kop is samengesteld op basis van het resultaat van niet-vertrouwde gegevens, worden de headergegevens gevalideerd voordat wordt verzonden naar de responsstream."
  syntax:
    content: public System.Text.Encoding HeaderEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "Een <xref:System.Text.Encoding>bevat informatie over de tekenset voor de huidige header.</xref:System.Text.Encoding>"
  overload: System.Web.HttpResponse.HeaderEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De waarde van de codering is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The encoding value is <xref:System.Text.Encoding.Unicode*>.  \n  \n \\- or -  \n  \n The headers have already been sent."
  platform:
  - net462
- uid: System.Web.HttpResponse.Headers
  id: Headers
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Headers
  nameWithType: HttpResponse.Headers
  fullName: System.Web.HttpResponse.Headers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u de verzameling van antwoordheaders."
  remarks: "De eigenschap Headers wordt alleen ondersteund met de [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] geïntegreerde pipeline-modus en ten minste .NET Framework 3.0. Als u probeert te krijgen tot de eigenschap Headers en een van deze twee voorwaarden niet wordt voldaan, een <xref:System.PlatformNotSupportedException>gegenereerd.</xref:System.PlatformNotSupportedException>"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Headers { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "Een <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> van antwoordheaders."
  overload: System.Web.HttpResponse.Headers*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "De bewerking vereist dat de geïntegreerde pipeline-modus in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] en ten minste .NET Framework versie 3.0."
  platform:
  - net462
- uid: System.Web.HttpResponse.HeadersWritten
  id: HeadersWritten
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: HeadersWritten
  nameWithType: HttpResponse.HeadersWritten
  fullName: System.Web.HttpResponse.HeadersWritten
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "[Ondersteund in de .NET Framework 4.5.2 en latere versies]       Haalt een waarde die aangeeft of de antwoordheaders is geschreven."
  syntax:
    content: public bool HeadersWritten { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de antwoordheaders is geschreven; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.HeadersWritten*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.IsClientConnected
  id: IsClientConnected
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: IsClientConnected
  nameWithType: HttpResponse.IsClientConnected
  fullName: System.Web.HttpResponse.IsClientConnected
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Haalt een waarde die aangeeft of de client nog steeds is verbonden met de server."
  remarks: "De eigenschap IsClientConnected retourneert `false` als de volgende voorwaarden waar zijn:-de verbinding met de client is beëindigd. Dit kan gebeuren als de <xref:System.Web.HttpResponse.Close%2A>methode is aangeroepen, of als de client de uitvoering van de webpagina is gestopt of naar een andere pagina wordt gebladerd.</xref:System.Web.HttpResponse.Close%2A>      -De <xref:System.Web.HttpWorkerRequest>-object dat de aanvraag is in behandeling is `null` of de <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName>methode retourneert `false`.</xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName> </xref:System.Web.HttpWorkerRequest> Als u een aangepaste <xref:System.Web.HttpWorkerRequest>object verwerkt de aanvraag vervolgens wordt de <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName>methode kan worden ingesteld op basis van aangepaste criteria.</xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName> </xref:System.Web.HttpWorkerRequest> De aanvraag aangepaste worker forceert mogelijk een time-out na een bepaalde periode."
  example:
  - "The following example uses the IsClientConnected property to check whether the client that is requesting the page remains connected to the server. If IsClientConnected is true, the code calls the <xref:System.Web.HttpResponse.Redirect%2A> method, and the client will view another page. If IsClientConnected is false, then the code calls the <xref:System.Web.HttpResponse.End%2A> method and all page processing is terminated.  \n  \n [!code-cs[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/csharp/p-system.web.httprespons_1_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_1_1.aspx)]"
  syntax:
    content: public bool IsClientConnected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de client is verbonden; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.IsClientConnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.IsRequestBeingRedirected
  id: IsRequestBeingRedirected
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: IsRequestBeingRedirected
  nameWithType: HttpResponse.IsRequestBeingRedirected
  fullName: System.Web.HttpResponse.IsRequestBeingRedirected
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee wordt een Booleaanse waarde die aangeeft of de client wordt overgedragen naar een nieuwe locatie opgehaald."
  remarks: "Gebruik de eigenschap IsRequestBeingRedirected met de <xref:System.Web.HttpResponse.RedirectLocation%2A>eigenschap te testen en te bepalen of de absolute URI die wordt verzonden naar de client in de HTTP- `Location` header is anders dan de huidige URI en wat de nieuwe beoogde URI die wordt overgedragen naar zal zijn.</xref:System.Web.HttpResponse.RedirectLocation%2A>"
  syntax:
    content: public bool IsRequestBeingRedirected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarde van de antwoordheader van de locatie anders dan de huidige locatie is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.IsRequestBeingRedirected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Output
  id: Output
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Output
  nameWithType: HttpResponse.Output
  fullName: System.Web.HttpResponse.Output
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Schakelt de uitvoer van tekst naar de uitgaande HTTP-antwoord-stroom."
  remarks: ''
  example:
  - "The following example is an ASP.NET page that contains a <xref:System.Web.UI.WebControls.TextBox> control that has its <xref:System.Web.UI.WebControls.TextBox.TextMode%2A> property set to <xref:System.Web.UI.WebControls.TextBoxMode>. The page's code takes the text that a user enters in the <xref:System.Web.UI.WebControls.TextBox.TextMode%2A>, uses the <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method to HTML encode it, and the Output property to display the encoded string to the page.  \n  \n [!code-vb[System.Web.HttpResponse.Output_Sample#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_5_1.aspx)]\n [!code-cs[System.Web.HttpResponse.Output_Sample#1](~/add/codesnippet/csharp/p-system.web.httprespons_5_1.aspx)]"
  syntax:
    content: public System.IO.TextWriter Output { get; set; }
    return:
      type: System.IO.TextWriter
      description: "Een <xref:System.IO.TextWriter>object waarmee aangepaste uitvoer naar de client.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpResponse.Output*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.OutputStream
  id: OutputStream
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: OutputStream
  nameWithType: HttpResponse.OutputStream
  fullName: System.Web.HttpResponse.OutputStream
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Kan binaire uitvoer naar de uitgaande HTTP-hoofdinhoud."
  remarks: "Starting with the .NET Framework version 2.0, when you use the [Stream.Write(Byte\\[\\], Int32, Int32)](assetId:///M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)?qualifyHint=True&autoUpgrade=False) method of the IO stream returned by the OutputStream property, the following exceptions might be thrown:  \n  \n-   <xref:System.ArgumentOutOfRangeException>, if the `offset` or `count` parameter is negative or if the `buffer` parameter's length minus the `offset` parameter is less than or equal to zero.  \n  \n-   <xref:System.ArgumentNullException>, if the `buffer` parameter is `null`."
  example:
  - "The following example calls the <xref:System.Drawing.Image.Save%2A> method to save a <xref:System.Drawing.Bitmap> object to the OutputStream property, and converts the image to the JPEG format. The code then calls the Dispose method on the <xref:System.Drawing.Bitmap> object and a <xref:System.Drawing.Graphics> object, releasing the resources that they were using. Finally, the code calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the content of the response to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/csharp/p-system.web.httprespons_13_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_13_1.aspx)]"
  syntax:
    content: public System.IO.Stream OutputStream { get; }
    return:
      type: System.IO.Stream
      description: "Een i/o <xref:System.IO.Stream>die vertegenwoordigt de onbewerkte inhoud van de uitgaande HTTP-hoofdinhoud.</xref:System.IO.Stream>"
  overload: System.Web.HttpResponse.OutputStream*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>OutputStream</code>is niet beschikbaar."
  platform:
  - net462
- uid: System.Web.HttpResponse.Pics(System.String)
  id: Pics(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Pics(String)
  nameWithType: HttpResponse.Pics(String)
  fullName: System.Web.HttpResponse.Pics(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Voegt een HTTP <xref uid=&quot;langword_csharp_PICS-Label&quot; name=&quot;PICS-Label&quot; href=&quot;&quot;> </xref> header naar de uitvoerstroom."
  remarks: "Platform voor Internet inhoud selectie (foto) is een standaard World Wide Web Consortium (W3C) voor het labelen van inhoud. FOTO is in wezen een taal voor het maken van een systeem.       De waarde van een mag een foto-label; ASP.NET biedt het label niet valideren. De maximale lengte van de tekenreeks is 255 tekens. Zie voor meer informatie over foto standaarden en syntaxis van de [World Wide Web Consortium](http://go.microsoft.com/fwlink/?LinkID=37125) website."
  example:
  - "The following example is an ASP.NET page that displays an image. The page code calls the Pics method to set the HTTP `PICS-Label` header for the response. The string that is passed as the parameter to the Pics method represents a rating label generated from the Internet Content Rating Association (ICRA) Web site.  \n  \n [!code-cs[System.Web.HttpResponse_Sample4#2](~/add/codesnippet/csharp/m-system.web.httprespons_8_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample4#2](~/add/codesnippet/visualbasic/m-system.web.httprespons_8_1.aspx)]"
  syntax:
    content: public void Pics (string value);
    parameters:
    - id: value
      type: System.String
      description: "De tekenreeks toevoegen aan de <xref uid=&quot;langword_csharp_PICS-Label&quot; name=&quot;PICS-Label&quot; href=&quot;&quot;> </xref> header."
  overload: System.Web.HttpResponse.Pics*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.PushPromise(System.String)
  id: PushPromise(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: PushPromise(String)
  nameWithType: HttpResponse.PushPromise(String)
  fullName: System.Web.HttpResponse.PushPromise(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: 'Deze API is om toepassingen verzenden push te HTTP 2.0-clients belooft te ondersteunen. U vindt meer informatie met betrekking tot te Http2 server pushen op [HTTP/2-specificatie sectie 8.2: Server Push](http://http2.github.io/http2-spec/#PushResources).'
  remarks: "PushPromise is niet-deterministische en toepassingen mag geen logica die afhankelijk zijn van deze. Het enige doel is profiteren van de prestaties in sommige gevallen. Er zijn veel voorwaarden (protocol en de implementatie) die voor het negeren van de push-aanvragen volledig kunnen veroorzaken. De verwachting is gebaseerd op fire en vergeet."
  syntax:
    content: public void PushPromise (string path);
    parameters:
    - id: path
      type: System.String
      description: "De URL van de pushaanvraag. Het virtuele pad van de relatieve bron die de server wil push naar de client moet worden."
  overload: System.Web.HttpResponse.PushPromise*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)
  id: PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: PushPromise(String,String,NameValueCollection)
  nameWithType: HttpResponse.PushPromise(String,String,NameValueCollection)
  fullName: System.Web.HttpResponse.PushPromise(String,String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: 'Deze API is om toepassingen verzenden push te HTTP 2.0-clients belooft te ondersteunen. U vindt meer informatie met betrekking tot te Http2 server pushen op [HTTP/2-specificatie sectie 8.2: Server Push](http://http2.github.io/http2-spec/#PushResources).'
  remarks: "PushPromise is niet-deterministische en toepassingen mag geen logica die afhankelijk zijn van deze. Het enige doel is profiteren van de prestaties in sommige gevallen. Er zijn veel voorwaarden (protocol en de implementatie) die voor het negeren van de push-aanvragen volledig kunnen veroorzaken. De verwachting is gebaseerd op fire en vergeet."
  syntax:
    content: public void PushPromise (string path, string method, System.Collections.Specialized.NameValueCollection headers);
    parameters:
    - id: path
      type: System.String
      description: "De URL van de pushaanvraag. Het virtuele pad van de relatieve bron die de server wil push naar de client moet worden."
    - id: method
      type: System.String
      description: "HTTP-aanvraagmethode dat wordt gebruikt door de pushaanvraag."
    - id: headers
      type: System.Collections.Specialized.NameValueCollection
      description: "HTTP-aanvraagheader dat wordt gebruikt door de pushaanvraag."
  overload: System.Web.HttpResponse.PushPromise*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Redirect(System.String)
  id: Redirect(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Redirect(String)
  nameWithType: HttpResponse.Redirect(String)
  fullName: System.Web.HttpResponse.Redirect(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een aanvraag omleidt naar een nieuwe URL en geeft de nieuwe URL."
  remarks: "Aanroepen van omleiding is gelijk aan aanroepen <xref:System.Web.HttpResponse.Redirect%2A>met de tweede parameter die is ingesteld op `true`.</xref:System.Web.HttpResponse.Redirect%2A>       Omleiden aanroepen <xref:System.Web.HttpResponse.End%2A>welke er wordt een <xref:System.Threading.ThreadAbortException>uitzondering na voltooiing.</xref:System.Threading.ThreadAbortException> </xref:System.Web.HttpResponse.End%2A> Deze uitzondering heeft een nadelige invloed op prestaties van webtoepassingen. Daarom raden we aan dat in plaats van deze overbelasting u de <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=fullName>overbelasting en doorgeven `false` voor de `endResponse` parameter en klik vervolgens aanroep de <xref:System.Web.HttpApplication.CompleteRequest%2A>methode.</xref:System.Web.HttpApplication.CompleteRequest%2A> </xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=fullName> Zie voor meer informatie de <xref:System.Web.HttpResponse.End%2A>methode.</xref:System.Web.HttpResponse.End%2A>      > [!NOTE] > Voor mobiele-pagina&quot;s alleen als uw toepassing afhankelijk van sessies zonder cookies is of aanvragen kan ontvangen van mobiele apparaten waarvoor sessies zonder cookies, met behulp van een tilde (~) in een pad kan resulteren in een nieuwe sessie maken en sessie mogelijk gegevensverlies. Zoals een eigenschap instellen op een mobiele-besturingselement aan een pad &quot; ~ / pad &quot;, los van het pad via <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>&quot; ~ / pad &quot; alvorens toe te wijzen aan de eigenschap.</xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>       ASP.NET voert de omleiding uit een 302 HTTP-statuscode geretourneerd. Een andere manier om een besturingselement naar een andere pagina wordt de <xref:System.Web.HttpServerUtility.Transfer%2A>methode.</xref:System.Web.HttpServerUtility.Transfer%2A> De <xref:System.Web.HttpServerUtility.Transfer%2A>methode is het meestal efficiënter omdat dit niet leidt een retouren naar de client tot.</xref:System.Web.HttpServerUtility.Transfer%2A> Zie voor meer informatie [hoe: gebruikers omleiden naar een andere pagina](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example forces an unconditional redirection to another Web site.  \n  \n [!code-cs[Classic HttpResponse.Redirect Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_9_1.cs)]\n [!code-vb[Classic HttpResponse.Redirect Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_9_1.vb)]"
  syntax:
    content: public void Redirect (string url);
    parameters:
    - id: url
      type: System.String
      description: "De doellocatie."
  overload: System.Web.HttpResponse.Redirect*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Een omleiding wordt uitgevoerd nadat de HTTP-headers zijn verzonden."
  platform:
  - net462
- uid: System.Web.HttpResponse.Redirect(System.String,System.Boolean)
  id: Redirect(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Redirect(String,Boolean)
  nameWithType: HttpResponse.Redirect(String,Boolean)
  fullName: System.Web.HttpResponse.Redirect(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een client doorstuurt naar een nieuwe URL. Hiermee geeft u de nieuwe URL en of de uitvoering van de huidige pagina moet worden beëindigd."
  remarks: "Een absolute URL (bijvoorbeeld http://www.contoso.com/default.aspx) of een relatieve URL (bijvoorbeeld Default.aspx) kan worden opgegeven voor de doellocatie, maar sommige browsers kunnen een relatieve URL afwijzen.       Wanneer u deze methode gebruikt in een pagina-handler worden beëindigd of dat een aanvraag voor de ene pagina en start een nieuwe aanvraag voor een andere pagina `endResponse` naar `false` en roept u vervolgens de <xref:System.Web.HttpApplication.CompleteRequest%2A>methode.</xref:System.Web.HttpApplication.CompleteRequest%2A> Als u opgeeft `true` voor de `endResponse` parameter, deze methode roept de <xref:System.Web.HttpResponse.End%2A>methode voor de oorspronkelijke aanvraag, genereert een <xref:System.Threading.ThreadAbortException>uitzondering wanneer deze is voltooid.</xref:System.Threading.ThreadAbortException> </xref:System.Web.HttpResponse.End%2A> Deze uitzondering heeft een nadelige invloed op de prestaties van webtoepassingen, dat is waarom doorgeven `false` voor de `endResponse` parameter wordt aanbevolen. Zie voor meer informatie de <xref:System.Web.HttpResponse.End%2A>methode.</xref:System.Web.HttpResponse.End%2A>      > [!NOTE] > Voor mobiele pagina&quot;s, als uw toepassing afhankelijk van sessies zonder cookies is of aanvragen kan ontvangen van mobiele apparaten waarvoor sessies zonder cookies, met behulp van een tilde (~) in een pad kan geen nieuwe sessie maken en sessie mogelijk gegevensverlies. Zoals een eigenschap instellen op een mobiele-besturingselement aan een pad &quot; ~ / pad &quot;, los van het pad via <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>&quot; ~ / pad &quot; alvorens toe te wijzen aan de eigenschap.</xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>       ASP.NET voert de omleiding uit een 302 HTTP-statuscode geretourneerd. Een andere manier om een besturingselement naar een andere pagina wordt de <xref:System.Web.HttpServerUtility.Transfer%2A>methode.</xref:System.Web.HttpServerUtility.Transfer%2A> De <xref:System.Web.HttpServerUtility.Transfer%2A>methode is het meestal efficiënter omdat dit niet leidt een retouren naar de client tot.</xref:System.Web.HttpServerUtility.Transfer%2A> Zie voor meer informatie [hoe: gebruikers omleiden naar een andere pagina](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example uses the <xref:System.Web.HttpResponse.IsClientConnected%2A> property to check whether the client that is requesting the page remains connected to the server. If <xref:System.Web.HttpResponse.IsClientConnected%2A> is true, the code calls the Redirect method, and the client will view another page. If <xref:System.Web.HttpResponse.IsClientConnected%2A> is false, then the code calls the <xref:System.Web.HttpResponse.End%2A> method and all page processing is terminated.  \n  \n [!code-cs[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/csharp/m-system.web.httprespons_16_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_16_1.aspx)]"
  syntax:
    content: public void Redirect (string url, bool endResponse);
    parameters:
    - id: url
      type: System.String
      description: "De locatie van het doel."
    - id: endResponse
      type: System.Boolean
      description: "Hiermee wordt aangegeven of de uitvoering van de huidige pagina moet worden beëindigd."
  overload: System.Web.HttpResponse.Redirect*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>url</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>url</code>bevat een teken."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Een omleiding wordt uitgevoerd nadat de HTTP-headers zijn verzonden."
  - type: System.ApplicationException
    commentId: T:System.ApplicationException
    description: "De pagina-aanvragen is het resultaat van een retouraanroep."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectLocation
  id: RedirectLocation
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectLocation
  nameWithType: HttpResponse.RedirectLocation
  fullName: System.Web.HttpResponse.RedirectLocation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "De waarde van de HTTP opgehaald of ingesteld <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref> header."
  remarks: ''
  example:
  - "The following example shows how to use this property to specify the redirect URL when you code a permanent redirect by using the HTTP 301 response code.  \n  \n```c#  \nResponse.StatusCode = 301;  \nResponse.Status = \"301 Moved Permanently\";  \nResponse.RedirectLocation = \"http://www.newurl.com \";  \nResponse.End();  \n```"
  syntax:
    content: public string RedirectLocation { get; set; }
    return:
      type: System.String
      description: "De absolute URI die wordt verzonden naar de client in de HTTP- <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref> header."
  overload: System.Web.HttpResponse.RedirectLocation*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "De HTTP-headers zijn al geschreven."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectPermanent(System.String)
  id: RedirectPermanent(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectPermanent(String)
  nameWithType: HttpResponse.RedirectPermanent(String)
  fullName: System.Web.HttpResponse.RedirectPermanent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Voert een permanente omleiding van de aangevraagde URL naar de opgegeven URL."
  remarks: "De overbelasting van de methode RedirectPermanent bevat van een HTTP-statuscode 301 in het antwoord en de URL voor de omleiding van de aanvraag bevat. Een HTTP-statuscode 301 is een standaard code in een HTTP-antwoord. Hiermee wordt aangegeven dat een permanente omleiding bestaat, en de van omleidingslocatie biedt.       Het aanroepen van de overbelasting van de methode RedirectPermanent beëindigt het antwoord."
  syntax:
    content: public void RedirectPermanent (string url);
    parameters:
    - id: url
      type: System.String
      description: "De locatie voor het omleiden van de aanvraag."
  overload: System.Web.HttpResponse.RedirectPermanent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>url</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>url</code>bevat een teken (` `)."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)
  id: RedirectPermanent(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectPermanent(String,Boolean)
  nameWithType: HttpResponse.RedirectPermanent(String,Boolean)
  fullName: System.Web.HttpResponse.RedirectPermanent(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Voert een permanente omleiding van de aangevraagde URL naar de opgegeven URL en biedt de mogelijkheid om het antwoord voltooid."
  remarks: "De overbelasting van de methode RedirectPermanent bevat van een HTTP-statuscode 301 in het antwoord en de URL voor de omleiding van de aanvraag bevat. Deze methode-overload biedt ook de mogelijkheid om op te geven of te beëindigen of het antwoord voltooid nadat de omleiding is uitgevoerd. Een HTTP-statuscode 301 is een standaard code in een HTTP-antwoord. Hiermee wordt aangegeven dat een permanente omleiding bestaat, en de van omleidingslocatie biedt."
  syntax:
    content: public void RedirectPermanent (string url, bool endResponse);
    parameters:
    - id: url
      type: System.String
      description: "De locatie voor het omleiden van de aanvraag."
    - id: endResponse
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>het antwoord; is beëindigd anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.RedirectPermanent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>url</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>url</code>bevat een teken (` `)."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.Object)
  id: RedirectToRoute(System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(Object)
  nameWithType: HttpResponse.RedirectToRoute(Object)
  fullName: System.Web.HttpResponse.RedirectToRoute(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een aanvraag omleidt naar een nieuwe URL met behulp van de route parameterwaarden."
  remarks: "Deze methode is bedoeld voor het gemak coderen. Dit is gelijk aan het aanroepen van de <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>methode met de tweede parameter die is ingesteld op `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Deze methode zet het object dat wordt doorgegeven in `routeValues` naar een <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName>object met behulp van de <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>constructor.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> De <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>methode vervolgens de URL wordt aangeroepen.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET voert de omleiding uit een 302 HTTP-statuscode geretourneerd."
  example:
  - "The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoute(  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoute(  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public void RedirectToRoute (object routeValues);
    parameters:
    - id: routeValues
      type: System.Object
      description: "De route parameterwaarden."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is geen route komt overeen met de opgegeven Routeparameters."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Omleiding is geprobeerd nadat de HTTP-headers zijn verzonden."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.String)
  id: RedirectToRoute(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(String)
  nameWithType: HttpResponse.RedirectToRoute(String)
  fullName: System.Web.HttpResponse.RedirectToRoute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een aanvraag omleidt naar een nieuwe URL in met een routenaam."
  remarks: "Deze methode is bedoeld voor het gemak coderen. Dit is gelijk aan het aanroepen van de <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>methode met de tweede parameter die is ingesteld op `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Deze methode zet de routenaam van de die wordt doorgegeven in `routeName` naar een URL met behulp van de <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>methode.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET voert de omleiding uit een 302 HTTP-statuscode geretourneerd."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Products`.  \n  \n```vb#  \nResponse.RedirectToRoute(\"Products\")  \n```  \n  \n```c#  \nResponse.RedirectToRoute(\"Products\");  \n```"
  syntax:
    content: public void RedirectToRoute (string routeName);
    parameters:
    - id: routeName
      type: System.String
      description: "De naam van de route."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is geen route komt overeen met de opgegeven Routeparameters."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Omleiding is geprobeerd nadat de HTTP-headers zijn verzonden."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
  id: RedirectToRoute(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoute(RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoute(RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een aanvraag omleidt naar een nieuwe URL met behulp van de route parameterwaarden."
  remarks: "Deze methode is bedoeld voor het gemak coderen. Dit is gelijk aan het aanroepen van de <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>methode met de tweede parameter die is ingesteld op `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Deze methode roept de <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>methode om te bepalen van de URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET voert de omleiding uit een 302 HTTP-statuscode geretourneerd."
  example:
  - "The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoute(  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoute(  \n  (new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public void RedirectToRoute (System.Web.Routing.RouteValueDictionary routeValues);
    parameters:
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "De route parameterwaarden."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is geen route komt overeen met de opgegeven Routeparameters."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Omleiding is geprobeerd nadat de HTTP-headers zijn verzonden."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)
  id: RedirectToRoute(System.String,System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(String,Object)
  nameWithType: HttpResponse.RedirectToRoute(String,Object)
  fullName: System.Web.HttpResponse.RedirectToRoute(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een aanvraag omleidt naar een nieuwe URL met behulp van de parameterwaarden route en de routenaam van een."
  remarks: "Deze methode is bedoeld voor het gemak coderen. Dit is gelijk aan het aanroepen van de <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>methode met de tweede parameter die is ingesteld op `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Deze methode zet het object dat wordt doorgegeven in `routeValues` naar een <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName>object met behulp van de <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>constructor.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> De <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>methode vervolgens de URL wordt aangeroepen.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET voert de omleiding uit een 302 HTTP-statuscode geretourneerd."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoute(\"Product\",  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoute(\"Product\",  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public void RedirectToRoute (string routeName, object routeValues);
    parameters:
    - id: routeName
      type: System.String
      description: "De naam van de route."
    - id: routeValues
      type: System.Object
      description: "De route parameterwaarden."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is geen route komt overeen met de opgegeven Routeparameters."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Omleiding is geprobeerd nadat de HTTP-headers zijn verzonden."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
  id: RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(String,RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoute(String,RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoute(String,RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een aanvraag omleidt naar een nieuwe URL met behulp van de parameterwaarden route en de routenaam van een."
  remarks: "Deze methode is bedoeld voor het gemak coderen. Dit is gelijk aan het aanroepen van de <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>methode met de tweede parameter die is ingesteld op `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       De <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>methode wordt aangeroepen om te bepalen van de URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET voert de omleiding uit een 302 HTTP-statuscode geretourneerd."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoute(\"Product\",  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoute(\"Product\",  \n  (new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public void RedirectToRoute (string routeName, System.Web.Routing.RouteValueDictionary routeValues);
    parameters:
    - id: routeName
      type: System.String
      description: "De naam van de route."
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "De route parameterwaarden."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is geen route komt overeen met de opgegeven Routeparameters."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Omleiding is geprobeerd nadat de HTTP-headers zijn verzonden."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)
  id: RedirectToRoutePermanent(System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(Object)
  nameWithType: HttpResponse.RedirectToRoutePermanent(Object)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Voert een permanente omleiding van een aangevraagde URL naar een nieuwe URL met behulp van de route parameterwaarden."
  remarks: "Deze methode is bedoeld voor het gemak coderen. Dit is gelijk aan het aanroepen van de <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>methode met de tweede parameter die is ingesteld op `false`.</xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>       Deze methode zet het object dat wordt doorgegeven in `routeValues` naar een <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName>object met behulp van de <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>constructor.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> De <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>methode vervolgens de URL wordt aangeroepen.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET voert de omleiding door een HTTP-statuscode 301 terug te keren."
  example:
  - "The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (object routeValues);
    parameters:
    - id: routeValues
      type: System.Object
      description: "De route parameterwaarden."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is geen route komt overeen met de opgegeven Routeparameters."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Omleiding is geprobeerd nadat de HTTP-headers zijn verzonden."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String)
  id: RedirectToRoutePermanent(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(String)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Voert een permanente omleiding van een aangevraagde URL naar een nieuwe URL in met een routenaam."
  remarks: "Deze methode is bedoeld voor het gemak coderen. Dit is gelijk aan het aanroepen van de <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>methode met de tweede parameter die is ingesteld op `false`.</xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>       Deze methode zet de routenaam van de die wordt doorgegeven in `routeName` naar een URL met behulp van de <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>methode.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET voert de omleiding door een HTTP-statuscode 301 terug te keren."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Products`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(\"Products\")  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(\"Products\");  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (string routeName);
    parameters:
    - id: routeName
      type: System.String
      description: "De naam van de route."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is geen route komt overeen met de opgegeven Routeparameters."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Omleiding is geprobeerd nadat de HTTP-headers zijn verzonden."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
  id: RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Voert een permanente omleiding van een aangevraagde URL naar een nieuwe URL met behulp van de route parameterwaarden."
  remarks: "Deze methode is bedoeld voor het gemak coderen. Dit is gelijk aan het aanroepen van de <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>methode met de tweede parameter die is ingesteld op `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Deze methode roept de <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>methode om te bepalen van de URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET voert de omleiding door een HTTP-statuscode 301 terug te keren."
  example:
  - "The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (System.Web.Routing.RouteValueDictionary routeValues);
    parameters:
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "De route parameterwaarden."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is geen route komt overeen met de opgegeven Routeparameters."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Omleiding is geprobeerd nadat de HTTP-headers zijn verzonden."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)
  id: RedirectToRoutePermanent(System.String,System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(String,Object)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String,Object)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Voert een permanente omleiding van een aangevraagde URL naar een nieuwe URL met behulp van de parameterwaarden route en de naam van de route die overeenkomen met de nieuwe URL."
  remarks: "Deze methode is bedoeld voor het gemak coderen. Dit is gelijk aan het aanroepen van de <xref:System.Web.HttpResponse.RedirectPermanent%2A>methode met de tweede parameter die is ingesteld op `false`.</xref:System.Web.HttpResponse.RedirectPermanent%2A>       Deze methode zet het object dat wordt doorgegeven in `routeValues` naar een <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName>object met behulp van de <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>constructor.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> De <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>methode vervolgens de URL wordt aangeroepen.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET voert de omleiding door een HTTP-statuscode 301 terug te keren."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(\"Product\",  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(\"Product\",  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (string routeName, object routeValues);
    parameters:
    - id: routeName
      type: System.String
      description: "De naam van de route."
    - id: routeValues
      type: System.Object
      description: "De route parameterwaarden."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is geen route komt overeen met de opgegeven Routeparameters."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Omleiding is geprobeerd nadat de HTTP-headers zijn verzonden."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
  id: RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(String,RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Voert een permanente omleiding van een aangevraagde URL naar een nieuwe URL met behulp van de parameterwaarden route en de routenaam van een."
  remarks: "Deze methode is bedoeld voor het gemak coderen. Dit is gelijk aan het aanroepen van de <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>methode met de tweede parameter die is ingesteld op `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Deze methode roept de <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>methode om te bepalen van de URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET voert de omleiding door een HTTP-statuscode 301 terug te keren."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(\"Product\",  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(\"Product\",  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (string routeName, System.Web.Routing.RouteValueDictionary routeValues);
    parameters:
    - id: routeName
      type: System.String
      description: "De naam van de route."
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "De route parameterwaarden."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is geen route komt overeen met de opgegeven Routeparameters."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Omleiding is geprobeerd nadat de HTTP-headers zijn verzonden."
  platform:
  - net462
- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String)
  id: RemoveOutputCacheItem(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RemoveOutputCacheItem(String)
  nameWithType: HttpResponse.RemoveOutputCacheItem(String)
  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee verwijdert u alle in de cache-items die gekoppeld aan de uitvoer-cache standaardprovider zijn u uit de cache. Deze methode is statisch."
  remarks: "Roep deze methode om uitvoer-cache-items die gekoppeld aan de uitvoer-cache standaardprovider zijn te verwijderen. Roep de <xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A>methode uitvoer-cache-items die zijn gekoppeld aan de aangepaste uitvoercache providers die zijn opgegeven in het configuratiebestand van de website verwijderen.</xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A>"
  syntax:
    content: public static void RemoveOutputCacheItem (string path);
    parameters:
    - id: path
      type: System.String
      description: "De virtuele absoluut pad naar de items die zijn verwijderd uit de cache."
  overload: System.Web.HttpResponse.RemoveOutputCacheItem*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>is niet een absoluut virtueel pad."
  platform:
  - net462
- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)
  id: RemoveOutputCacheItem(System.String,System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RemoveOutputCacheItem(String,String)
  nameWithType: HttpResponse.RemoveOutputCacheItem(String,String)
  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Maakt gebruik van de opgegeven provider in de uitvoercache alle uitvoer-cache-items die gekoppeld aan het opgegeven pad zijn verwijderen."
  remarks: "Roep deze methode om uitvoer-cache-items die zijn gekoppeld aan de aangepaste uitvoercache providers die zijn opgegeven in het configuratiebestand van de website te verwijderen. Aanroepen voor het verwijderen van de uitvoer-cache-items die gekoppeld aan de uitvoer-cache standaardprovider zijn de <xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29>methode-overload.</xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29>"
  syntax:
    content: public static void RemoveOutputCacheItem (string path, string providerName);
    parameters:
    - id: path
      type: System.String
      description: "Het virtuele absolute pad van de items die zijn verwijderd uit de cache."
    - id: providerName
      type: System.String
      description: "De provider die wordt gebruikt voor het verwijderen van de uitvoercache artefacten die gekoppeld aan het opgegeven pad zijn."
  overload: System.Web.HttpResponse.RemoveOutputCacheItem*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>is een ongeldig pad."
  platform:
  - net462
- uid: System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)
  id: SetCookie(System.Web.HttpCookie)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SetCookie(HttpCookie)
  nameWithType: HttpResponse.SetCookie(HttpCookie)
  fullName: System.Web.HttpResponse.SetCookie(HttpCookie)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een bestaande cookie in de verzameling cookie-updates."
  remarks: ''
  example:
  - "The following example updates the value of an existing cookie.  \n  \n [!code-cs[Classic HttpResponse.SetCookie Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_23_1.cs)]\n [!code-vb[Classic HttpResponse.SetCookie Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_23_1.vb)]"
  syntax:
    content: public void SetCookie (System.Web.HttpCookie cookie);
    parameters:
    - id: cookie
      type: System.Web.HttpCookie
      description: "De cookie in de verzameling worden bijgewerkt."
  overload: System.Web.HttpResponse.SetCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Poging tot instellen van de cookie nadat de HTTP-headers zijn verzonden."
  platform:
  - net462
- uid: System.Web.HttpResponse.Status
  id: Status
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Status
  nameWithType: HttpResponse.Status
  fullName: System.Web.HttpResponse.Status
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Stelt de <xref uid=&quot;langword_csharp_Status&quot; name=&quot;Status&quot; href=&quot;&quot;> </xref> regel die wordt geretourneerd naar de client."
  remarks: "De status is afgeschaft voor <xref:System.Web.HttpResponse.StatusDescription%2A>en is alleen beschikbaar voor compatibiliteit met eerdere versies van ASP.</xref:System.Web.HttpResponse.StatusDescription%2A> Gebruik van ASP.NET, <xref:System.Web.HttpResponse.StatusDescription%2A>in plaats daarvan.</xref:System.Web.HttpResponse.StatusDescription%2A>"
  syntax:
    content: public string Status { get; set; }
    return:
      type: System.String
      description: "De statuscode instelling zorgt ervoor dat een tekenreeks met een beschrijving van de status van de HTTP-uitvoer moet worden geretourneerd naar de client. De standaardwaarde is 200 (OK)."
  overload: System.Web.HttpResponse.Status*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Status wordt ingesteld op een ongeldige statuscode."
  platform:
  - net462
- uid: System.Web.HttpResponse.StatusCode
  id: StatusCode
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: StatusCode
  nameWithType: HttpResponse.StatusCode
  fullName: System.Web.HttpResponse.StatusCode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld van de HTTP-statuscode van de uitvoer geretourneerd naar de client."
  remarks: ''
  example:
  - "The following example checks the status code of the output stream. If the status code is not equal to 200, additional code is executed.  \n  \n [!code-vb[System.Web.HttpResponse.StatusCode#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_11_1.aspx)]\n [!code-cs[System.Web.HttpResponse.StatusCode#1](~/add/codesnippet/csharp/p-system.web.httprespons_11_1.aspx)]"
  syntax:
    content: public int StatusCode { get; set; }
    return:
      type: System.Int32
      description: "Een geheel getal dat de status van de HTTP-uitvoer geretourneerd naar de client. De standaardwaarde is 200 (OK). Zie voor een overzicht van geldige statuscodes [HTTP-statuscodes](http://go.microsoft.com/fwlink/?LinkId=73157)."
  overload: System.Web.HttpResponse.StatusCode*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "StatusCode is ingesteld nadat de HTTP-headers zijn verzonden."
  platform:
  - net462
- uid: System.Web.HttpResponse.StatusDescription
  id: StatusDescription
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: StatusDescription
  nameWithType: HttpResponse.StatusDescription
  fullName: System.Web.HttpResponse.StatusDescription
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld van de HTTP-statustekenreeks van de uitvoer geretourneerd naar de client."
  remarks: ''
  example:
  - "The following example checks the status string of the output stream. If the status is not equal to \"OK\", additional code is executed.  \n  \n [!code-vb[System.Web.HttpResponse.StatusDescription#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_10_1.aspx)]\n [!code-cs[System.Web.HttpResponse.StatusDescription#1](~/add/codesnippet/csharp/p-system.web.httprespons_10_1.aspx)]"
  syntax:
    content: public string StatusDescription { get; set; }
    return:
      type: System.String
      description: "Een tekenreeks die de status van de HTTP-uitvoer geretourneerd naar de client wordt beschreven. De standaardwaarde is &quot;OK&quot;. Zie voor een overzicht van geldige statuscodes [HTTP-statuscodes](http://go.microsoft.com/fwlink/?LinkId=73157)."
  overload: System.Web.HttpResponse.StatusDescription*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>StatusDescription</code>Nadat de HTTP-headers zijn verzonden ingesteld."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De geselecteerde waarde heeft langer is dan 512."
  platform:
  - net462
- uid: System.Web.HttpResponse.SubStatusCode
  id: SubStatusCode
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SubStatusCode
  nameWithType: HttpResponse.SubStatusCode
  fullName: System.Web.HttpResponse.SubStatusCode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld van een waarde die in aanmerking komen de statuscode van het antwoord."
  remarks: "De eigenschap SubStatusCode wordt alleen ondersteund met de geïntegreerde pipeline-modus in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] en ten minste .NET Framework versie 3.0. Als u de SubStatusCode-eigenschap instelt, de status is aangemeld [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] als tracering is mislukt-aanvragen is geconfigureerd. Hiermee wordt aangegeven of de tracering wordt geconfigureerd, ongeacht de code wordt nooit verzonden als onderdeel van het laatste antwoord op de aanvraag. Zie voor meer informatie [probleemoplossing kan aanvragen met behulp van tracering van mislukte aanvragen in IIS 7.0](http://www.iis.net/default.aspx?tabid=2&subtabid=25&i=969&p=1)."
  example:
  - "The following example sets the SubStatusCode property in an event handler for the <xref:System.Web.HttpApplication> instance of the <xref:System.Web.HttpApplication.PostAuthenticateRequest> event. Put the code file in the App_Code folder of your Web application and configure the Web.config file to register the module. For more information, see [Walkthrough: Creating and Registering a Custom HTTP Module](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.HttpResponse.SubStatusCode#1](~/add/codesnippet/csharp/p-system.web.httprespons_9_1.cs)]\n [!code-vb[System.Web.HttpResponse.SubStatusCode#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_9_1.vb)]"
  syntax:
    content: public int SubStatusCode { get; set; }
    return:
      type: System.Int32
      description: "Een geheel getal dat staat voor de [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] sub-statuscode."
  overload: System.Web.HttpResponse.SubStatusCode*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "De bewerking vereist dat de geïntegreerde pipeline-modus in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] en ten minste .NET Framework versie 3.0."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Nadat alle HTTP-headers zijn verzonden, wordt de statuscode ingesteld."
  platform:
  - net462
- uid: System.Web.HttpResponse.SupportsAsyncFlush
  id: SupportsAsyncFlush
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SupportsAsyncFlush
  nameWithType: HttpResponse.SupportsAsyncFlush
  fullName: System.Web.HttpResponse.SupportsAsyncFlush
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Haalt een waarde die aangeeft of de verbinding asynchrone leegmaken bewerkingen ondersteunt."
  remarks: "Deze eigenschap retourneert de waarde van de <xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=fullName>eigenschap.</xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=fullName>"
  syntax:
    content: public bool SupportsAsyncFlush { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de verbinding biedt ondersteuning voor asynchrone bewerkingen voor het leegmaken; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.SupportsAsyncFlush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.SuppressContent
  id: SuppressContent
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SuppressContent
  nameWithType: HttpResponse.SuppressContent
  fullName: System.Web.HttpResponse.SuppressContent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of HTTP-inhoud wordt verzonden naar de client."
  remarks: ''
  example:
  - "The following example checks whether the <xref:System.Web.HttpRequest.IsSecureConnection%2A> property is set to false. If it is, the SuppressContent property is set to true to stop the response from being sent.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#3](~/add/codesnippet/csharp/p-system.web.httprespons_6_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#3](~/add/codesnippet/visualbasic/p-system.web.httprespons_6_1.aspx)]"
  syntax:
    content: public bool SuppressContent { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>onderdrukken van uitvoer. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.SuppressContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.SuppressDefaultCacheControlHeader
  id: SuppressDefaultCacheControlHeader
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SuppressDefaultCacheControlHeader
  nameWithType: HttpResponse.SuppressDefaultCacheControlHeader
  fullName: System.Web.HttpResponse.SuppressDefaultCacheControlHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "[Ondersteund in de .NET Framework 4.5.2 en latere versies]       Een waarde die aangeeft of de standaardwaarde onderdrukken opgehaald of ingesteld `Cache Control: private` -header voor de huidige HTTP-antwoord."
  remarks: "Standaard ASP.NET stuurt een `Cache-Control: private` antwoordheader tenzij er een expliciete cachebeleid is opgegeven voor dit antwoord. Deze eigenschap kunt het onderdrukken van deze antwoordheader standaard op basis van per aanvraag. De header kan nog steeds worden onderdrukt voor de gehele toepassing door in te stellen <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A>in [httpRuntime Element (ASP.NET-instellingenschema)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) of [outputCache Element voor opslaan in cache (ASP.NET-instellingenschema)](http://msdn.microsoft.com/en-us/47cd2b47-316f-4dfd-bbf8-539be3066fee).</xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A>       Wees voorzichtig bij het onderdrukken van de standaard `Cache-Control: private` header als proxy&quot;s en de andere kunnen behandelen antwoorden zonder deze header als caching geschikte standaard. Deze behandeling kan leiden tot onbedoelde opslaan in cache van gevoelige informatie. Zie [RFC 2616, Sec. 13.4](http://tools.ietf.org/html/rfc2616) voor meer informatie."
  syntax:
    content: public bool SuppressDefaultCacheControlHeader { get; set; }
    return:
      type: System.Boolean
      description: '<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>de standaardwaarde onderdrukken `Cache Control: private` -header voor de huidige HTTP-antwoord; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.'
  overload: System.Web.HttpResponse.SuppressDefaultCacheControlHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
  id: SuppressFormsAuthenticationRedirect
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SuppressFormsAuthenticationRedirect
  nameWithType: HttpResponse.SuppressFormsAuthenticationRedirect
  fullName: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of formulieren verificatie omleiding naar de aanmeldingspagina worden onderdrukt."
  remarks: "Standaard zet formulierverificatie 401 HTTP-statuscodes om 302 om te leiden naar de aanmeldingspagina. Dit is niet geschikt voor bepaalde klassen van fouten, zoals wanneer de verificatie slaagt maar autorisatie is mislukt of wanneer de huidige aanvraag een AJAX- of web service-aanvraag is. Deze eigenschap biedt een manier voor het onderdrukken van het gedrag van de omleidings- en de oorspronkelijke statuscode verzenden naar de client."
  syntax:
    content: public bool SuppressFormsAuthenticationRedirect { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de omleiding van formulieren verificatie moet worden onderdrukt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.TransmitFile(System.String)
  id: TransmitFile(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: TransmitFile(String)
  nameWithType: HttpResponse.TransmitFile(String)
  fullName: System.Web.HttpResponse.TransmitFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Het opgegeven bestand schrijft rechtstreeks naar een uitvoerstroom HTTP-antwoord zonder deze buffer in het geheugen."
  syntax:
    content: public void TransmitFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "De naam van het bestand om te schrijven naar de HTTP-uitvoer."
  overload: System.Web.HttpResponse.TransmitFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <code> filename </code> parameter<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)
  id: TransmitFile(System.String,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: TransmitFile(String,Int64,Int64)
  nameWithType: HttpResponse.TransmitFile(String,Int64,Int64)
  fullName: System.Web.HttpResponse.TransmitFile(String,Int64,Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Het opgegeven deel van een bestand schrijft rechtstreeks naar de uitvoerstroom van een HTTP-antwoord zonder deze buffer in het geheugen."
  remarks: "Als u 0 als opgeeft de `offset` parameter en -1 als de `length` parameter, het hele bestand wordt verzonden."
  syntax:
    content: public void TransmitFile (string filename, long offset, long length);
    parameters:
    - id: filename
      type: System.String
      description: "De naam van het bestand om te schrijven naar de HTTP-uitvoer."
    - id: offset
      type: System.Int64
      description: "De positie in het bestand om te beginnen schrijven naar de HTTP-uitvoer."
    - id: length
      type: System.Int64
      description: "Het aantal bytes dat moet worden verzonden."
  overload: System.Web.HttpResponse.TransmitFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>offset</code> parameter is less than zero.  \n  \n \\- or -  \n  \n The <code>length</code> parameter is less than -1.  \n  \n \\- or -  \n  \n The <code>length</code> parameter specifies a number of bytes that is greater than the number of bytes the file contains minus the offset."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "The out-of-process worker request is not supported.  \n  \n \\- or -  \n  \n The response is not using an <xref href=\"System.Web.HttpWriter\"></xref> object."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>offset</code> parameter is less than zero or greater than the file size.  \n  \n \\- or -  \n  \n The <code>length</code> parameter is less than -1 or greater than the value of the <code>offset</code> parameter plus the file size."
  platform:
  - net462
- uid: System.Web.HttpResponse.TrySkipIisCustomErrors
  id: TrySkipIisCustomErrors
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: TrySkipIisCustomErrors
  nameWithType: HttpResponse.TrySkipIisCustomErrors
  fullName: System.Web.HttpResponse.TrySkipIisCustomErrors
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] aangepaste fouten zijn uitgeschakeld."
  remarks: "De eigenschap TrySkipIisCustomErrors wordt alleen gebruikt als uw toepassing wordt gehost in IIS 7.0. Wanneer de standaardwaarde voor TrySkipIisCustomErrors-eigenschap waarop wordt uitgevoerd in de klassieke modus in IIS 7.0 is `true`. Als in de geïntegreerde modus wordt uitgevoerd, is de standaardwaarde van de TrySkipIisCustomErrors-eigenschap `false`."
  syntax:
    content: public bool TrySkipIisCustomErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>aangepaste fouten van IIS; uitschakelen anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.TrySkipIisCustomErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Write(System.Char)
  id: Write(System.Char)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Write(Char)
  nameWithType: HttpResponse.Write(Char)
  fullName: System.Web.HttpResponse.Write(Char)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een teken schrijft naar de uitvoerstroom van een HTTP-antwoord."
  remarks: ''
  example:
  - "The following example creates a series of constants that are written to an ASP.NET page using the Write method. The code calls this version of the Write method to write individual character constants to the page.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/csharp/m-system.web.httprespons_7_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/visualbasic/m-system.web.httprespons_7_1.aspx)]"
  syntax:
    content: public void Write (char ch);
    parameters:
    - id: ch
      type: System.Char
      description: "Het teken om te schrijven naar het HTTP-uitvoer stroom."
  overload: System.Web.HttpResponse.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Write(System.Object)
  id: Write(System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Write(Object)
  nameWithType: HttpResponse.Write(Object)
  fullName: System.Web.HttpResponse.Write(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Schrijft een <xref:System.Object>naar de stroom van een HTTP-antwoord.</xref:System.Object>"
  syntax:
    content: public void Write (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "De <xref:System.Object>om te schrijven naar de uitvoerstroom HTTP.</xref:System.Object>"
  overload: System.Web.HttpResponse.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Write(System.String)
  id: Write(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Write(String)
  nameWithType: HttpResponse.Write(String)
  fullName: System.Web.HttpResponse.Write(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Schrijft een tekenreeks naar de uitvoerstroom van een HTTP-antwoord."
  remarks: "Dynamisch gegenereerd HTML-pagina&quot;s kunnen beveiligingsrisico veroorzaken als invoer ontvangen van de webserver en webclients is niet gevalideerd wanneer het is ontvangen van een client of wanneer deze worden verzonden naar een client. Schadelijke scripts die is ingesloten in de invoer verzonden naar een website en later teruggeschreven uit naar een client kan worden weergegeven zijn die afkomstig zijn van een vertrouwde bron. Dit beveiligingsrisico wordt aangeduid als een cross-site scripting-aanval. U moet altijd gegevens die zijn ontvangen van een client wanneer deze wordt van uw site worden verzonden naar clientbrowsers valideren.       Bovendien wanneer u schrijft uit als HTML alle gegevens die als invoer is ontvangen, u moet deze coderen met een techniek zoals <xref:System.Web.HttpServerUtility.HtmlEncode%2A>of <xref:System.Web.HttpServerUtility.UrlEncode%2A>om te voorkomen dat schadelijke scripts uitvoeren.</xref:System.Web.HttpServerUtility.UrlEncode%2A> </xref:System.Web.HttpServerUtility.HtmlEncode%2A> Deze techniek is handig voor gegevens die niet is gevalideerd wanneer deze is ontvangen.       Wanneer u coderen of filteren van gegevens, moet u een tekenset voor uw webpagina&quot;s, zodat uw filter kunt identificeren en te verwijderen van eventuele byte-reeksen die niet horen bij instellen (zoals niet-alfanumerieke reeksen) en die mogelijk schadelijke scripts zijn ingesloten in ze kunnen hebben.       Zie voor meer informatie over cross-site scripting aanvallen artikel Q252985, &quot;Hoe om te voorkomen dat Cross-Site Scripting beveiligingsproblemen&quot; op de [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?LinkID=37115) website."
  example:
  - "The following example echoes the client's name back to the client's browser. The <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method strips any malicious script and invalid characters that may have been submitted in the `UserName` input field.  \n  \n [!code-vb[System.Web.HttpResponse.Write#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_1_1.vb)]\n [!code-cs[System.Web.HttpResponse.Write#1](~/add/codesnippet/csharp/m-system.web.httprespons_1_1.cs)]"
  syntax:
    content: public void Write (string s);
    parameters:
    - id: s
      type: System.String
      description: "De tekenreeks om te schrijven naar het HTTP-uitvoer stroom."
  overload: System.Web.HttpResponse.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Write(Char[],Int32,Int32)
  nameWithType: HttpResponse.Write(Char[],Int32,Int32)
  fullName: System.Web.HttpResponse.Write(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een matrix met tekens schrijft naar de uitvoerstroom van een HTTP-antwoord."
  remarks: ''
  example:
  - "The following example creates a series of constants that are written to an ASP.NET page using the Write method. The code calls this version of the Write method to write individual character constants to the page.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/csharp/m-system.web.httprespons_20_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/visualbasic/m-system.web.httprespons_20_1.aspx)]"
  syntax:
    content: public void Write (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "De tekenmatrix om te schrijven."
    - id: index
      type: System.Int32
      description: "De positie in de tekenmatrix waarbij schrijven wordt gestart."
    - id: count
      type: System.Int32
      description: "Het aantal tekens te schrijven, beginnen bij `index`."
  overload: System.Web.HttpResponse.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteFile(System.String)
  id: WriteFile(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteFile(String)
  nameWithType: HttpResponse.WriteFile(String)
  fullName: System.Web.HttpResponse.WriteFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "De inhoud van het opgegeven bestand schrijft rechtstreeks naar de uitvoerstroom van een HTTP-antwoord als een bestand blokkeren."
  remarks: 'Als deze methode wordt gebruikt met grote bestanden, is het mogelijk dat Veroorzaak een exception aanroepen van de methode. De grootte van het bestand dat kan worden gebruikt met deze methode is afhankelijk van de hardwareconfiguratie van de webserver. Zie voor meer informatie artikel 812406, &quot;PRB: Response.WriteFile niet kan een groot bestand downloaden&quot; op de [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) website.'
  example:
  - "The following example writes all the contents of a text file named `Login.txt` (which might contain literal HTML text and input controls) directly to the output stream.  \n  \n [!code-vb[Classic HttpResponse.WriteFile Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_18_1.vb)]\n [!code-cs[Classic HttpResponse.WriteFile Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_18_1.cs)]"
  syntax:
    content: public void WriteFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "De naam van het bestand om te schrijven naar de HTTP-uitvoer."
  overload: System.Web.HttpResponse.WriteFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>filename</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteFile(System.String,System.Boolean)
  id: WriteFile(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteFile(String,Boolean)
  nameWithType: HttpResponse.WriteFile(String,Boolean)
  fullName: System.Web.HttpResponse.WriteFile(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "De inhoud van het opgegeven bestand schrijft rechtstreeks naar de uitvoerstroom van een HTTP-antwoord als een geheugenblok."
  remarks: 'Als deze methode wordt gebruikt met grote bestanden, is het mogelijk dat Veroorzaak een exception aanroepen van de methode. De grootte van het bestand dat kan worden gebruikt met deze methode is afhankelijk van de hardwareconfiguratie van de webserver. Zie voor meer informatie artikel 812406, &quot;PRB: Response.WriteFile niet kan een groot bestand downloaden&quot; op de [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) website.'
  example:
  - "The following example writes a file to memory.  \n  \n [!code-cs[Classic HttpResponse.WriteFile1 Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_3_1.cs)]\n [!code-vb[Classic HttpResponse.WriteFile1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_3_1.vb)]"
  syntax:
    content: public void WriteFile (string filename, bool readIntoMemory);
    parameters:
    - id: filename
      type: System.String
      description: "De naam van het bestand te schrijven in een geheugenblok."
    - id: readIntoMemory
      type: System.Boolean
      description: "Hiermee wordt aangegeven of het bestand worden geschreven in een geheugenblok."
  overload: System.Web.HttpResponse.WriteFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>filename</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)
  id: WriteFile(System.IntPtr,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteFile(IntPtr,Int64,Int64)
  nameWithType: HttpResponse.WriteFile(IntPtr,Int64,Int64)
  fullName: System.Web.HttpResponse.WriteFile(IntPtr,Int64,Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Het opgegeven bestand schrijft rechtstreeks naar de uitvoerstroom van een HTTP-antwoord."
  remarks: 'Als deze methode wordt gebruikt met grote bestanden, is het mogelijk dat Veroorzaak een exception aanroepen van de methode. De grootte van het bestand dat kan worden gebruikt met deze methode is afhankelijk van de hardwareconfiguratie van de webserver. Zie voor meer informatie artikel 812406, &quot;PRB: Response.WriteFile niet kan een groot bestand downloaden&quot; op de [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) website.'
  example:
  - "The following example writes all the contents of a text file named `Login.txt` (which might contain literal HTML text and input controls) directly to the output stream.  \n  \n [!code-vb[Classic HttpResponse.WriteFile3 Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_12_1.vb)]\n [!code-cs[Classic HttpResponse.WriteFile3 Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_12_1.cs)]"
  syntax:
    content: public void WriteFile (IntPtr fileHandle, long offset, long size);
    parameters:
    - id: fileHandle
      type: System.IntPtr
      description: "De bestandsingang van het bestand te schrijven naar de uitvoerstroom HTTP."
    - id: offset
      type: System.Int64
      description: "De positie van de bytes in het bestand waar schrijven begint."
    - id: size
      type: System.Int64
      description: "Het aantal bytes naar de uitvoerstroom schrijven."
  overload: System.Web.HttpResponse.WriteFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileHandler</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>offset</code> is less than 0.  \n  \n \\- or -  \n  \n <code>size</code> is greater than the file size minus <code>offset</code>."
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)
  id: WriteFile(System.String,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteFile(String,Int64,Int64)
  nameWithType: HttpResponse.WriteFile(String,Int64,Int64)
  fullName: System.Web.HttpResponse.WriteFile(String,Int64,Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Het opgegeven bestand schrijft rechtstreeks naar de uitvoerstroom van een HTTP-antwoord."
  remarks: 'Als deze methode wordt gebruikt met grote bestanden, is het mogelijk dat Veroorzaak een exception aanroepen van de methode. De grootte van het bestand dat kan worden gebruikt met deze methode is afhankelijk van de hardwareconfiguratie van de webserver. Zie voor meer informatie artikel 812406, &quot;PRB: Response.WriteFile niet kan een groot bestand downloaden&quot; op de [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) website.'
  example:
  - "The following example writes all the contents of a text file named `Login.txt` (which might contain literal text and HTML input controls) directly to the output stream.  \n  \n [!code-cs[Classic HttpResponse.WriteFile2 Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_5_1.cs)]\n [!code-vb[Classic HttpResponse.WriteFile2 Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_5_1.vb)]"
  syntax:
    content: public void WriteFile (string filename, long offset, long size);
    parameters:
    - id: filename
      type: System.String
      description: "De naam van het bestand om te schrijven naar het HTTP-uitvoer stroom."
    - id: offset
      type: System.Int64
      description: "De positie van de bytes in het bestand waar schrijven begint."
    - id: size
      type: System.Int64
      description: "Het aantal bytes naar de uitvoerstroom schrijven."
  overload: System.Web.HttpResponse.WriteFile*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>offset</code> is less than 0.  \n  \n \\- or -  \n  \n <code>size</code> is greater than the file size minus <code>offset</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>filename</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)
  id: WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteSubstitution(HttpResponseSubstitutionCallback)
  nameWithType: HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)
  fullName: System.Web.HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Invoegen van antwoord vervanging blokken in het antwoord, waardoor dynamisch genereren van de opgegeven antwoord regio&quot;s voor uitvoer in de cache opgeslagen reacties kunt."
  remarks: "U kunt de methode WriteSubstitution voor vervanging na cache gebruiken in uw&quot;s in de uitvoer in cache is opgeslagen. Door het doorgeven van een <xref:System.Web.HttpContext>object aan een callback-methode met een voorgeschreven <xref:System.Web.HttpResponseSubstitutionCallback>handtekening, kunt u vervangen uitvoer in de cache opgeslagen inhoud bij elke opgegeven positie in de paginacache.</xref:System.Web.HttpResponseSubstitutionCallback> </xref:System.Web.HttpContext> Voor het initiëren van de vervangende, roept u de methode WriteSubstitution, doorgeeft de callback-methode, die moet thread-veilig zijn en mag een van de volgende:-een statische methode op de pagina of de gebruiker containerbesturingselement.      -Een statisch of de methode op het object met een andere willekeurige instantie.       Op de eerste aanvraag naar de pagina de WriteSubstitution roept de <xref:System.Web.HttpResponseSubstitutionCallback>gemachtigde om de uitvoer te produceren.</xref:System.Web.HttpResponseSubstitutionCallback> Een buffer vervanging wordt vervolgens toegevoegd aan de reactie die behoudt de gemachtigde aan te roepen voor toekomstige aanvragen. Ten slotte vermindert het client-side cachefunctie van openbaar server alleen-lezen, toekomstige aanvragen naar de pagina opnieuw starten van de gemachtigde door niet opslaan in cache op de client gezorgd.      > [!NOTE] > Vervanging na cache wordt niet ondersteund voor in de cache opgeslagen gebruikersbesturingselementen waarin uitvoercaching is toegepast op het niveau voor het beheer van gebruiker. Dit staat ook bekend als het fragment opslaan in cache. Zie voor meer informatie [Caching gedeelten van een ASP.NET-pagina](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void WriteSubstitution (System.Web.HttpResponseSubstitutionCallback callback);
    parameters:
    - id: callback
      type: System.Web.HttpResponseSubstitutionCallback
      description: "De methode, gebruikersbesturingselement of object om te vervangen."
  overload: System.Web.HttpResponse.WriteSubstitution*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Het doel van de <code> callback </code> parameter is van het type <xref href=&quot;System.Web.UI.Control&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Threading.ThreadAbortException
  parent: System.Threading
  isExternal: false
  name: ThreadAbortException
  nameWithType: ThreadAbortException
  fullName: System.Threading.ThreadAbortException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ApplicationException
  parent: System
  isExternal: false
  name: ApplicationException
  nameWithType: ApplicationException
  fullName: System.ApplicationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpResponse.#ctor(System.IO.TextWriter)
  parent: System.Web.HttpResponse
  isExternal: false
  name: HttpResponse(TextWriter)
  nameWithType: HttpResponse.HttpResponse(TextWriter)
  fullName: System.Web.HttpResponse.HttpResponse(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheDependency(CacheDependency[])
  nameWithType: HttpResponse.AddCacheDependency(CacheDependency[])
  fullName: System.Web.HttpResponse.AddCacheDependency(CacheDependency[])
- uid: System.Web.Caching.CacheDependency[]
  parent: System.Web.Caching
  isExternal: false
  name: CacheDependency
  nameWithType: CacheDependency
  fullName: System.Web.Caching.CacheDependency[]
  spec.csharp:
  - uid: System.Web.Caching.CacheDependency
    name: CacheDependency
    nameWithType: CacheDependency
    fullName: CacheDependency[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependencies(ArrayList)
  nameWithType: HttpResponse.AddCacheItemDependencies(ArrayList)
  fullName: System.Web.HttpResponse.AddCacheItemDependencies(ArrayList)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.String[])
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependencies(String[])
  nameWithType: HttpResponse.AddCacheItemDependencies(String[])
  fullName: System.Web.HttpResponse.AddCacheItemDependencies(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpResponse.AddCacheItemDependency(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependency(String)
  nameWithType: HttpResponse.AddCacheItemDependency(String)
  fullName: System.Web.HttpResponse.AddCacheItemDependency(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependencies(ArrayList)
  nameWithType: HttpResponse.AddFileDependencies(ArrayList)
  fullName: System.Web.HttpResponse.AddFileDependencies(ArrayList)
- uid: System.Web.HttpResponse.AddFileDependencies(System.String[])
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependencies(String[])
  nameWithType: HttpResponse.AddFileDependencies(String[])
  fullName: System.Web.HttpResponse.AddFileDependencies(String[])
- uid: System.Web.HttpResponse.AddFileDependency(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependency(String)
  nameWithType: HttpResponse.AddFileDependency(String)
  fullName: System.Web.HttpResponse.AddFileDependency(String)
- uid: System.Web.HttpResponse.AddHeader(System.String,System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddHeader(String,String)
  nameWithType: HttpResponse.AddHeader(String,String)
  fullName: System.Web.HttpResponse.AddHeader(String,String)
- uid: System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddOnSendingHeaders(Action<HttpContext>)
  nameWithType: HttpResponse.AddOnSendingHeaders(Action<HttpContext>)
  fullName: System.Web.HttpResponse.AddOnSendingHeaders(Action<HttpContext>)
- uid: System.Web.ISubscriptionToken
  parent: System.Web
  isExternal: false
  name: ISubscriptionToken
  nameWithType: ISubscriptionToken
  fullName: System.Web.ISubscriptionToken
- uid: System.Action{System.Web.HttpContext}
  parent: System
  isExternal: true
  name: Action<HttpContext>
  nameWithType: Action<HttpContext>
  fullName: System.Action<System.Web.HttpContext>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Web.HttpContext>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendCookie(HttpCookie)
  nameWithType: HttpResponse.AppendCookie(HttpCookie)
  fullName: System.Web.HttpResponse.AppendCookie(HttpCookie)
- uid: System.Web.HttpCookie
  parent: System.Web
  isExternal: false
  name: HttpCookie
  nameWithType: HttpCookie
  fullName: System.Web.HttpCookie
- uid: System.Web.HttpResponse.AppendHeader(System.String,System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendHeader(String,String)
  nameWithType: HttpResponse.AppendHeader(String,String)
  fullName: System.Web.HttpResponse.AppendHeader(String,String)
- uid: System.Web.HttpResponse.AppendToLog(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendToLog(String)
  nameWithType: HttpResponse.AppendToLog(String)
  fullName: System.Web.HttpResponse.AppendToLog(String)
- uid: System.Web.HttpResponse.ApplyAppPathModifier(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: ApplyAppPathModifier(String)
  nameWithType: HttpResponse.ApplyAppPathModifier(String)
  fullName: System.Web.HttpResponse.ApplyAppPathModifier(String)
- uid: System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: BeginFlush(AsyncCallback,Object)
  nameWithType: HttpResponse.BeginFlush(AsyncCallback,Object)
  fullName: System.Web.HttpResponse.BeginFlush(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.HttpResponse.BinaryWrite(System.Byte[])
  parent: System.Web.HttpResponse
  isExternal: false
  name: BinaryWrite(Byte[])
  nameWithType: HttpResponse.BinaryWrite(Byte[])
  fullName: System.Web.HttpResponse.BinaryWrite(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpResponse.Buffer
  parent: System.Web.HttpResponse
  isExternal: false
  name: Buffer
  nameWithType: HttpResponse.Buffer
  fullName: System.Web.HttpResponse.Buffer
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpResponse.BufferOutput
  parent: System.Web.HttpResponse
  isExternal: false
  name: BufferOutput
  nameWithType: HttpResponse.BufferOutput
  fullName: System.Web.HttpResponse.BufferOutput
- uid: System.Web.HttpResponse.Cache
  parent: System.Web.HttpResponse
  isExternal: false
  name: Cache
  nameWithType: HttpResponse.Cache
  fullName: System.Web.HttpResponse.Cache
- uid: System.Web.HttpCachePolicy
  parent: System.Web
  isExternal: false
  name: HttpCachePolicy
  nameWithType: HttpCachePolicy
  fullName: System.Web.HttpCachePolicy
- uid: System.Web.HttpResponse.CacheControl
  parent: System.Web.HttpResponse
  isExternal: false
  name: CacheControl
  nameWithType: HttpResponse.CacheControl
  fullName: System.Web.HttpResponse.CacheControl
- uid: System.Web.HttpResponse.Charset
  parent: System.Web.HttpResponse
  isExternal: false
  name: Charset
  nameWithType: HttpResponse.Charset
  fullName: System.Web.HttpResponse.Charset
- uid: System.Web.HttpResponse.Clear
  parent: System.Web.HttpResponse
  isExternal: false
  name: Clear()
  nameWithType: HttpResponse.Clear()
  fullName: System.Web.HttpResponse.Clear()
- uid: System.Web.HttpResponse.ClearContent
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClearContent()
  nameWithType: HttpResponse.ClearContent()
  fullName: System.Web.HttpResponse.ClearContent()
- uid: System.Web.HttpResponse.ClearHeaders
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClearHeaders()
  nameWithType: HttpResponse.ClearHeaders()
  fullName: System.Web.HttpResponse.ClearHeaders()
- uid: System.Web.HttpResponse.ClientDisconnectedToken
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClientDisconnectedToken
  nameWithType: HttpResponse.ClientDisconnectedToken
  fullName: System.Web.HttpResponse.ClientDisconnectedToken
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Web.HttpResponse.Close
  parent: System.Web.HttpResponse
  isExternal: false
  name: Close()
  nameWithType: HttpResponse.Close()
  fullName: System.Web.HttpResponse.Close()
- uid: System.Web.HttpResponse.ContentEncoding
  parent: System.Web.HttpResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpResponse.ContentEncoding
  fullName: System.Web.HttpResponse.ContentEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Web.HttpResponse.ContentType
  parent: System.Web.HttpResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpResponse.ContentType
  fullName: System.Web.HttpResponse.ContentType
- uid: System.Web.HttpResponse.Cookies
  parent: System.Web.HttpResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpResponse.Cookies
  fullName: System.Web.HttpResponse.Cookies
- uid: System.Web.HttpCookieCollection
  parent: System.Web
  isExternal: false
  name: HttpCookieCollection
  nameWithType: HttpCookieCollection
  fullName: System.Web.HttpCookieCollection
- uid: System.Web.HttpResponse.DisableKernelCache
  parent: System.Web.HttpResponse
  isExternal: false
  name: DisableKernelCache()
  nameWithType: HttpResponse.DisableKernelCache()
  fullName: System.Web.HttpResponse.DisableKernelCache()
- uid: System.Web.HttpResponse.DisableUserCache
  parent: System.Web.HttpResponse
  isExternal: false
  name: DisableUserCache()
  nameWithType: HttpResponse.DisableUserCache()
  fullName: System.Web.HttpResponse.DisableUserCache()
- uid: System.Web.HttpResponse.End
  parent: System.Web.HttpResponse
  isExternal: false
  name: End()
  nameWithType: HttpResponse.End()
  fullName: System.Web.HttpResponse.End()
- uid: System.Web.HttpResponse.EndFlush(System.IAsyncResult)
  parent: System.Web.HttpResponse
  isExternal: false
  name: EndFlush(IAsyncResult)
  nameWithType: HttpResponse.EndFlush(IAsyncResult)
  fullName: System.Web.HttpResponse.EndFlush(IAsyncResult)
- uid: System.Web.HttpResponse.Expires
  parent: System.Web.HttpResponse
  isExternal: false
  name: Expires
  nameWithType: HttpResponse.Expires
  fullName: System.Web.HttpResponse.Expires
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpResponse.ExpiresAbsolute
  parent: System.Web.HttpResponse
  isExternal: false
  name: ExpiresAbsolute
  nameWithType: HttpResponse.ExpiresAbsolute
  fullName: System.Web.HttpResponse.ExpiresAbsolute
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.HttpResponse.Filter
  parent: System.Web.HttpResponse
  isExternal: false
  name: Filter
  nameWithType: HttpResponse.Filter
  fullName: System.Web.HttpResponse.Filter
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.HttpResponse.Flush
  parent: System.Web.HttpResponse
  isExternal: false
  name: Flush()
  nameWithType: HttpResponse.Flush()
  fullName: System.Web.HttpResponse.Flush()
- uid: System.Web.HttpResponse.FlushAsync
  parent: System.Web.HttpResponse
  isExternal: false
  name: FlushAsync()
  nameWithType: HttpResponse.FlushAsync()
  fullName: System.Web.HttpResponse.FlushAsync()
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Web.HttpResponse.HeaderEncoding
  parent: System.Web.HttpResponse
  isExternal: false
  name: HeaderEncoding
  nameWithType: HttpResponse.HeaderEncoding
  fullName: System.Web.HttpResponse.HeaderEncoding
- uid: System.Web.HttpResponse.Headers
  parent: System.Web.HttpResponse
  isExternal: false
  name: Headers
  nameWithType: HttpResponse.Headers
  fullName: System.Web.HttpResponse.Headers
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.HttpResponse.HeadersWritten
  parent: System.Web.HttpResponse
  isExternal: false
  name: HeadersWritten
  nameWithType: HttpResponse.HeadersWritten
  fullName: System.Web.HttpResponse.HeadersWritten
- uid: System.Web.HttpResponse.IsClientConnected
  parent: System.Web.HttpResponse
  isExternal: false
  name: IsClientConnected
  nameWithType: HttpResponse.IsClientConnected
  fullName: System.Web.HttpResponse.IsClientConnected
- uid: System.Web.HttpResponse.IsRequestBeingRedirected
  parent: System.Web.HttpResponse
  isExternal: false
  name: IsRequestBeingRedirected
  nameWithType: HttpResponse.IsRequestBeingRedirected
  fullName: System.Web.HttpResponse.IsRequestBeingRedirected
- uid: System.Web.HttpResponse.Output
  parent: System.Web.HttpResponse
  isExternal: false
  name: Output
  nameWithType: HttpResponse.Output
  fullName: System.Web.HttpResponse.Output
- uid: System.Web.HttpResponse.OutputStream
  parent: System.Web.HttpResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpResponse.OutputStream
  fullName: System.Web.HttpResponse.OutputStream
- uid: System.Web.HttpResponse.Pics(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Pics(String)
  nameWithType: HttpResponse.Pics(String)
  fullName: System.Web.HttpResponse.Pics(String)
- uid: System.Web.HttpResponse.PushPromise(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: PushPromise(String)
  nameWithType: HttpResponse.PushPromise(String)
  fullName: System.Web.HttpResponse.PushPromise(String)
- uid: System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.HttpResponse
  isExternal: false
  name: PushPromise(String,String,NameValueCollection)
  nameWithType: HttpResponse.PushPromise(String,String,NameValueCollection)
  fullName: System.Web.HttpResponse.PushPromise(String,String,NameValueCollection)
- uid: System.Web.HttpResponse.Redirect(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Redirect(String)
  nameWithType: HttpResponse.Redirect(String)
  fullName: System.Web.HttpResponse.Redirect(String)
- uid: System.Web.HttpResponse.Redirect(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Redirect(String,Boolean)
  nameWithType: HttpResponse.Redirect(String,Boolean)
  fullName: System.Web.HttpResponse.Redirect(String,Boolean)
- uid: System.Web.HttpResponse.RedirectLocation
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpResponse.RedirectLocation
  fullName: System.Web.HttpResponse.RedirectLocation
- uid: System.Web.HttpResponse.RedirectPermanent(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectPermanent(String)
  nameWithType: HttpResponse.RedirectPermanent(String)
  fullName: System.Web.HttpResponse.RedirectPermanent(String)
- uid: System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectPermanent(String,Boolean)
  nameWithType: HttpResponse.RedirectPermanent(String,Boolean)
  fullName: System.Web.HttpResponse.RedirectPermanent(String,Boolean)
- uid: System.Web.HttpResponse.RedirectToRoute(System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(Object)
  nameWithType: HttpResponse.RedirectToRoute(Object)
  fullName: System.Web.HttpResponse.RedirectToRoute(Object)
- uid: System.Web.HttpResponse.RedirectToRoute(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(String)
  nameWithType: HttpResponse.RedirectToRoute(String)
  fullName: System.Web.HttpResponse.RedirectToRoute(String)
- uid: System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoute(RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoute(RouteValueDictionary)
- uid: System.Web.Routing.RouteValueDictionary
  parent: System.Web.Routing
  isExternal: true
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: System.Web.Routing.RouteValueDictionary
- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(String,Object)
  nameWithType: HttpResponse.RedirectToRoute(String,Object)
  fullName: System.Web.HttpResponse.RedirectToRoute(String,Object)
- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(String,RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoute(String,RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoute(String,RouteValueDictionary)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(Object)
  nameWithType: HttpResponse.RedirectToRoutePermanent(Object)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(Object)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(String)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(String,Object)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String,Object)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,Object)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(String,RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)
- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RemoveOutputCacheItem(String)
  nameWithType: HttpResponse.RemoveOutputCacheItem(String)
  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String)
- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RemoveOutputCacheItem(String,String)
  nameWithType: HttpResponse.RemoveOutputCacheItem(String,String)
  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String,String)
- uid: System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)
  parent: System.Web.HttpResponse
  isExternal: false
  name: SetCookie(HttpCookie)
  nameWithType: HttpResponse.SetCookie(HttpCookie)
  fullName: System.Web.HttpResponse.SetCookie(HttpCookie)
- uid: System.Web.HttpResponse.Status
  parent: System.Web.HttpResponse
  isExternal: false
  name: Status
  nameWithType: HttpResponse.Status
  fullName: System.Web.HttpResponse.Status
- uid: System.Web.HttpResponse.StatusCode
  parent: System.Web.HttpResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpResponse.StatusCode
  fullName: System.Web.HttpResponse.StatusCode
- uid: System.Web.HttpResponse.StatusDescription
  parent: System.Web.HttpResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpResponse.StatusDescription
  fullName: System.Web.HttpResponse.StatusDescription
- uid: System.Web.HttpResponse.SubStatusCode
  parent: System.Web.HttpResponse
  isExternal: false
  name: SubStatusCode
  nameWithType: HttpResponse.SubStatusCode
  fullName: System.Web.HttpResponse.SubStatusCode
- uid: System.Web.HttpResponse.SupportsAsyncFlush
  parent: System.Web.HttpResponse
  isExternal: false
  name: SupportsAsyncFlush
  nameWithType: HttpResponse.SupportsAsyncFlush
  fullName: System.Web.HttpResponse.SupportsAsyncFlush
- uid: System.Web.HttpResponse.SuppressContent
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressContent
  nameWithType: HttpResponse.SuppressContent
  fullName: System.Web.HttpResponse.SuppressContent
- uid: System.Web.HttpResponse.SuppressDefaultCacheControlHeader
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressDefaultCacheControlHeader
  nameWithType: HttpResponse.SuppressDefaultCacheControlHeader
  fullName: System.Web.HttpResponse.SuppressDefaultCacheControlHeader
- uid: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressFormsAuthenticationRedirect
  nameWithType: HttpResponse.SuppressFormsAuthenticationRedirect
  fullName: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
- uid: System.Web.HttpResponse.TransmitFile(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: TransmitFile(String)
  nameWithType: HttpResponse.TransmitFile(String)
  fullName: System.Web.HttpResponse.TransmitFile(String)
- uid: System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  isExternal: false
  name: TransmitFile(String,Int64,Int64)
  nameWithType: HttpResponse.TransmitFile(String,Int64,Int64)
  fullName: System.Web.HttpResponse.TransmitFile(String,Int64,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Web.HttpResponse.TrySkipIisCustomErrors
  parent: System.Web.HttpResponse
  isExternal: false
  name: TrySkipIisCustomErrors
  nameWithType: HttpResponse.TrySkipIisCustomErrors
  fullName: System.Web.HttpResponse.TrySkipIisCustomErrors
- uid: System.Web.HttpResponse.Write(System.Char)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write(Char)
  nameWithType: HttpResponse.Write(Char)
  fullName: System.Web.HttpResponse.Write(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.HttpResponse.Write(System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write(Object)
  nameWithType: HttpResponse.Write(Object)
  fullName: System.Web.HttpResponse.Write(Object)
- uid: System.Web.HttpResponse.Write(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write(String)
  nameWithType: HttpResponse.Write(String)
  fullName: System.Web.HttpResponse.Write(String)
- uid: System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write(Char[],Int32,Int32)
  nameWithType: HttpResponse.Write(Char[],Int32,Int32)
  fullName: System.Web.HttpResponse.Write(Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpResponse.WriteFile(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile(String)
  nameWithType: HttpResponse.WriteFile(String)
  fullName: System.Web.HttpResponse.WriteFile(String)
- uid: System.Web.HttpResponse.WriteFile(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile(String,Boolean)
  nameWithType: HttpResponse.WriteFile(String,Boolean)
  fullName: System.Web.HttpResponse.WriteFile(String,Boolean)
- uid: System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile(IntPtr,Int64,Int64)
  nameWithType: HttpResponse.WriteFile(IntPtr,Int64,Int64)
  fullName: System.Web.HttpResponse.WriteFile(IntPtr,Int64,Int64)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile(String,Int64,Int64)
  nameWithType: HttpResponse.WriteFile(String,Int64,Int64)
  fullName: System.Web.HttpResponse.WriteFile(String,Int64,Int64)
- uid: System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteSubstitution(HttpResponseSubstitutionCallback)
  nameWithType: HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)
  fullName: System.Web.HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)
- uid: System.Web.HttpResponseSubstitutionCallback
  parent: System.Web
  isExternal: false
  name: HttpResponseSubstitutionCallback
  nameWithType: HttpResponseSubstitutionCallback
  fullName: System.Web.HttpResponseSubstitutionCallback
- uid: System.Web.HttpResponse.#ctor*
  parent: System.Web.HttpResponse
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse.HttpResponse
- uid: System.Web.HttpResponse.AddCacheDependency*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheDependency
  nameWithType: HttpResponse.AddCacheDependency
- uid: System.Web.HttpResponse.AddCacheItemDependencies*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependencies
  nameWithType: HttpResponse.AddCacheItemDependencies
- uid: System.Web.HttpResponse.AddCacheItemDependency*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependency
  nameWithType: HttpResponse.AddCacheItemDependency
- uid: System.Web.HttpResponse.AddFileDependencies*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependencies
  nameWithType: HttpResponse.AddFileDependencies
- uid: System.Web.HttpResponse.AddFileDependency*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependency
  nameWithType: HttpResponse.AddFileDependency
- uid: System.Web.HttpResponse.AddHeader*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddHeader
  nameWithType: HttpResponse.AddHeader
- uid: System.Web.HttpResponse.AddOnSendingHeaders*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddOnSendingHeaders
  nameWithType: HttpResponse.AddOnSendingHeaders
- uid: System.Web.HttpResponse.AppendCookie*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendCookie
  nameWithType: HttpResponse.AppendCookie
- uid: System.Web.HttpResponse.AppendHeader*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendHeader
  nameWithType: HttpResponse.AppendHeader
- uid: System.Web.HttpResponse.AppendToLog*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendToLog
  nameWithType: HttpResponse.AppendToLog
- uid: System.Web.HttpResponse.ApplyAppPathModifier*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ApplyAppPathModifier
  nameWithType: HttpResponse.ApplyAppPathModifier
- uid: System.Web.HttpResponse.BeginFlush*
  parent: System.Web.HttpResponse
  isExternal: false
  name: BeginFlush
  nameWithType: HttpResponse.BeginFlush
- uid: System.Web.HttpResponse.BinaryWrite*
  parent: System.Web.HttpResponse
  isExternal: false
  name: BinaryWrite
  nameWithType: HttpResponse.BinaryWrite
- uid: System.Web.HttpResponse.Buffer*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Buffer
  nameWithType: HttpResponse.Buffer
- uid: System.Web.HttpResponse.BufferOutput*
  parent: System.Web.HttpResponse
  isExternal: false
  name: BufferOutput
  nameWithType: HttpResponse.BufferOutput
- uid: System.Web.HttpResponse.Cache*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Cache
  nameWithType: HttpResponse.Cache
- uid: System.Web.HttpResponse.CacheControl*
  parent: System.Web.HttpResponse
  isExternal: false
  name: CacheControl
  nameWithType: HttpResponse.CacheControl
- uid: System.Web.HttpResponse.Charset*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Charset
  nameWithType: HttpResponse.Charset
- uid: System.Web.HttpResponse.Clear*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Clear
  nameWithType: HttpResponse.Clear
- uid: System.Web.HttpResponse.ClearContent*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClearContent
  nameWithType: HttpResponse.ClearContent
- uid: System.Web.HttpResponse.ClearHeaders*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClearHeaders
  nameWithType: HttpResponse.ClearHeaders
- uid: System.Web.HttpResponse.ClientDisconnectedToken*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClientDisconnectedToken
  nameWithType: HttpResponse.ClientDisconnectedToken
- uid: System.Web.HttpResponse.Close*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Close
  nameWithType: HttpResponse.Close
- uid: System.Web.HttpResponse.ContentEncoding*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpResponse.ContentEncoding
- uid: System.Web.HttpResponse.ContentType*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpResponse.ContentType
- uid: System.Web.HttpResponse.Cookies*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpResponse.Cookies
- uid: System.Web.HttpResponse.DisableKernelCache*
  parent: System.Web.HttpResponse
  isExternal: false
  name: DisableKernelCache
  nameWithType: HttpResponse.DisableKernelCache
- uid: System.Web.HttpResponse.DisableUserCache*
  parent: System.Web.HttpResponse
  isExternal: false
  name: DisableUserCache
  nameWithType: HttpResponse.DisableUserCache
- uid: System.Web.HttpResponse.End*
  parent: System.Web.HttpResponse
  isExternal: false
  name: End
  nameWithType: HttpResponse.End
- uid: System.Web.HttpResponse.EndFlush*
  parent: System.Web.HttpResponse
  isExternal: false
  name: EndFlush
  nameWithType: HttpResponse.EndFlush
- uid: System.Web.HttpResponse.Expires*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Expires
  nameWithType: HttpResponse.Expires
- uid: System.Web.HttpResponse.ExpiresAbsolute*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ExpiresAbsolute
  nameWithType: HttpResponse.ExpiresAbsolute
- uid: System.Web.HttpResponse.Filter*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Filter
  nameWithType: HttpResponse.Filter
- uid: System.Web.HttpResponse.Flush*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Flush
  nameWithType: HttpResponse.Flush
- uid: System.Web.HttpResponse.FlushAsync*
  parent: System.Web.HttpResponse
  isExternal: false
  name: FlushAsync
  nameWithType: HttpResponse.FlushAsync
- uid: System.Web.HttpResponse.HeaderEncoding*
  parent: System.Web.HttpResponse
  isExternal: false
  name: HeaderEncoding
  nameWithType: HttpResponse.HeaderEncoding
- uid: System.Web.HttpResponse.Headers*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Headers
  nameWithType: HttpResponse.Headers
- uid: System.Web.HttpResponse.HeadersWritten*
  parent: System.Web.HttpResponse
  isExternal: false
  name: HeadersWritten
  nameWithType: HttpResponse.HeadersWritten
- uid: System.Web.HttpResponse.IsClientConnected*
  parent: System.Web.HttpResponse
  isExternal: false
  name: IsClientConnected
  nameWithType: HttpResponse.IsClientConnected
- uid: System.Web.HttpResponse.IsRequestBeingRedirected*
  parent: System.Web.HttpResponse
  isExternal: false
  name: IsRequestBeingRedirected
  nameWithType: HttpResponse.IsRequestBeingRedirected
- uid: System.Web.HttpResponse.Output*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Output
  nameWithType: HttpResponse.Output
- uid: System.Web.HttpResponse.OutputStream*
  parent: System.Web.HttpResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpResponse.OutputStream
- uid: System.Web.HttpResponse.Pics*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Pics
  nameWithType: HttpResponse.Pics
- uid: System.Web.HttpResponse.PushPromise*
  parent: System.Web.HttpResponse
  isExternal: false
  name: PushPromise
  nameWithType: HttpResponse.PushPromise
- uid: System.Web.HttpResponse.Redirect*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Redirect
  nameWithType: HttpResponse.Redirect
- uid: System.Web.HttpResponse.RedirectLocation*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpResponse.RedirectLocation
- uid: System.Web.HttpResponse.RedirectPermanent*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectPermanent
  nameWithType: HttpResponse.RedirectPermanent
- uid: System.Web.HttpResponse.RedirectToRoute*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute
  nameWithType: HttpResponse.RedirectToRoute
- uid: System.Web.HttpResponse.RedirectToRoutePermanent*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent
  nameWithType: HttpResponse.RedirectToRoutePermanent
- uid: System.Web.HttpResponse.RemoveOutputCacheItem*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RemoveOutputCacheItem
  nameWithType: HttpResponse.RemoveOutputCacheItem
- uid: System.Web.HttpResponse.SetCookie*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SetCookie
  nameWithType: HttpResponse.SetCookie
- uid: System.Web.HttpResponse.Status*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Status
  nameWithType: HttpResponse.Status
- uid: System.Web.HttpResponse.StatusCode*
  parent: System.Web.HttpResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpResponse.StatusCode
- uid: System.Web.HttpResponse.StatusDescription*
  parent: System.Web.HttpResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpResponse.StatusDescription
- uid: System.Web.HttpResponse.SubStatusCode*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SubStatusCode
  nameWithType: HttpResponse.SubStatusCode
- uid: System.Web.HttpResponse.SupportsAsyncFlush*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SupportsAsyncFlush
  nameWithType: HttpResponse.SupportsAsyncFlush
- uid: System.Web.HttpResponse.SuppressContent*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressContent
  nameWithType: HttpResponse.SuppressContent
- uid: System.Web.HttpResponse.SuppressDefaultCacheControlHeader*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressDefaultCacheControlHeader
  nameWithType: HttpResponse.SuppressDefaultCacheControlHeader
- uid: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressFormsAuthenticationRedirect
  nameWithType: HttpResponse.SuppressFormsAuthenticationRedirect
- uid: System.Web.HttpResponse.TransmitFile*
  parent: System.Web.HttpResponse
  isExternal: false
  name: TransmitFile
  nameWithType: HttpResponse.TransmitFile
- uid: System.Web.HttpResponse.TrySkipIisCustomErrors*
  parent: System.Web.HttpResponse
  isExternal: false
  name: TrySkipIisCustomErrors
  nameWithType: HttpResponse.TrySkipIisCustomErrors
- uid: System.Web.HttpResponse.Write*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write
  nameWithType: HttpResponse.Write
- uid: System.Web.HttpResponse.WriteFile*
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile
  nameWithType: HttpResponse.WriteFile
- uid: System.Web.HttpResponse.WriteSubstitution*
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteSubstitution
  nameWithType: HttpResponse.WriteSubstitution
