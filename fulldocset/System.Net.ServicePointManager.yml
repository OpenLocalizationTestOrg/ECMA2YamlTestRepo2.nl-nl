### YamlMime:ManagedReference
items:
- uid: System.Net.ServicePointManager
  id: ServicePointManager
  children:
  - System.Net.ServicePointManager.CertificatePolicy
  - System.Net.ServicePointManager.CheckCertificateRevocationList
  - System.Net.ServicePointManager.DefaultConnectionLimit
  - System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit
  - System.Net.ServicePointManager.DefaultPersistentConnectionLimit
  - System.Net.ServicePointManager.DnsRefreshTimeout
  - System.Net.ServicePointManager.EnableDnsRoundRobin
  - System.Net.ServicePointManager.EncryptionPolicy
  - System.Net.ServicePointManager.Expect100Continue
  - System.Net.ServicePointManager.FindServicePoint(System.Uri)
  - System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)
  - System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)
  - System.Net.ServicePointManager.MaxServicePointIdleTime
  - System.Net.ServicePointManager.MaxServicePoints
  - System.Net.ServicePointManager.ReusePort
  - System.Net.ServicePointManager.SecurityProtocol
  - System.Net.ServicePointManager.ServerCertificateValidationCallback
  - System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  - System.Net.ServicePointManager.UseNagleAlgorithm
  langs:
  - csharp
  name: ServicePointManager
  nameWithType: ServicePointManager
  fullName: System.Net.ServicePointManager
  type: Class
  summary: "De verzameling van beheert <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objecten."
  remarks: "ServicePointManager is een statische klasse gebruikt voor het maken, onderhouden en verwijderen van instanties van de <xref:System.Net.ServicePoint>klasse.</xref:System.Net.ServicePoint>       Wanneer een toepassing een verbinding met een Internet-bron Uniform Resource Identifier (URI) via het object ServicePointManager aanvraagt, de ServicePointManager retourneert een <xref:System.Net.ServicePoint>-object dat verbindingsgegevens voor de host en geïdentificeerd door de URI-schema bevat.</xref:System.Net.ServicePoint> Als er een bestaande <xref:System.Net.ServicePoint>object voor dat host en het schema, de ServicePointManager-object als resultaat de bestaande geeft <xref:System.Net.ServicePoint>object; anders het object ServicePointManager maakt u een nieuwe <xref:System.Net.ServicePoint>object.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint>       De .NET Framework 4.6 bevat een nieuwe beveiligingsfunctie waarmee onbeveiligde versleuteling en hash-algoritmen voor verbindingen wordt geblokkeerd. Toepassingen met behulp van TLS/SSL via API&quot;s zoals HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, enz. en die gericht is op .NET Framework 4.6 ophalen van het gedrag veiligere standaard.       Ontwikkelaars willen dit gedrag afmelden om interoperabiliteit met hun bestaande SSL3 services of TLS met RC4 services peil te houden. [In dit artikel](https://support.microsoft.com/kb/3069494) wordt uitgelegd hoe u uw code te wijzigen zodat het nieuwe gedrag is uitgeschakeld."
  example:
  - "The following code example creates a <xref:System.Net.ServicePoint> object for connections to the URI www.contoso.com.  \n  \n [!code-cs[Classic ServicePoint Example#1](~/add/codesnippet/csharp/t-system.net.servicepoin_1.cs)]\n [!code-cpp[Classic ServicePoint Example#1](~/add/codesnippet/cpp/t-system.net.servicepoin_1.cpp)]\n [!code-vb[Classic ServicePoint Example#1](~/add/codesnippet/visualbasic/t-system.net.servicepoin_1.vb)]"
  syntax:
    content: public class ServicePointManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.CertificatePolicy
  id: CertificatePolicy
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: CertificatePolicy
  nameWithType: ServicePointManager.CertificatePolicy
  fullName: System.Net.ServicePointManager.CertificatePolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld van het beleid voor servercertificaten."
  remarks: "Wanneer de eigenschap CertificatePolicy is ingesteld op een <xref:System.Net.ICertificatePolicy>interfaceobject, de <xref:System.Net.ServicePointManager>object het certificaatbeleid gedefinieerd in dat exemplaar in plaats van het standaardbeleid voor het certificaat wordt gebruikt.</xref:System.Net.ServicePointManager> </xref:System.Net.ICertificatePolicy>       Het standaardbeleid voor certificaat kan er geldige certificaten en geldige certificaten die verlopen."
  example:
  - "The following code example shows how to catch a certificate policy exception for a custom certificate policy. It assumes that the certificate policy object has been defined, that the Uniform Resource Identifier (URI) for the Web resource is contained in the variable `myUri`, and that there is a method named `ProcessResponse` that performs the work of the application.  \n  \n [!code-cpp[Classic ServicePointManager.CertificatePolicy Example#1](~/add/codesnippet/cpp/p-system.net.servicepoin_14_1.cpp)]\n [!code-cs[Classic ServicePointManager.CertificatePolicy Example#1](~/add/codesnippet/csharp/p-system.net.servicepoin_14_1.cs)]\n [!code-vb[Classic ServicePointManager.CertificatePolicy Example#1](~/add/codesnippet/visualbasic/p-system.net.servicepoin_14_1.vb)]"
  syntax:
    content: public static System.Net.ICertificatePolicy CertificatePolicy { get; set; }
    return:
      type: System.Net.ICertificatePolicy
      description: "Een object dat u implementeert de <xref href=&quot;System.Net.ICertificatePolicy&quot;> </xref> interface."
  overload: System.Net.ServicePointManager.CertificatePolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.CheckCertificateRevocationList
  id: CheckCertificateRevocationList
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: CheckCertificateRevocationList
  nameWithType: ServicePointManager.CheckCertificateRevocationList
  fullName: System.Net.ServicePointManager.CheckCertificateRevocationList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld een <xref:System.Boolean>waarde die aangeeft of het certificaat wordt vergeleken met de certificaatintrekkingslijst van de autoriteit.</xref:System.Boolean>"
  remarks: "Wanneer de CheckCertificateRevocationList is `true`, het certificaat wordt vergeleken met de certificaatintrekkingslijst autoriteit, als onderdeel van het validatieproces van het certificaat. De standaardwaarde is `false`."
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/add/codesnippet/cpp/p-system.net.servicepoin_13_1.cpp)]\n [!code-vb[System.Net.ServicePoint#10](~/add/codesnippet/visualbasic/p-system.net.servicepoin_13_1.vb)]\n [!code-cs[System.Net.ServicePoint#10](~/add/codesnippet/csharp/p-system.net.servicepoin_13_1.cs)]"
  syntax:
    content: public static bool CheckCertificateRevocationList { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de certificaatintrekkingslijst is ingeschakeld. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePointManager.CheckCertificateRevocationList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.DefaultConnectionLimit
  id: DefaultConnectionLimit
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: DefaultConnectionLimit
  nameWithType: ServicePointManager.DefaultConnectionLimit
  fullName: System.Net.ServicePointManager.DefaultConnectionLimit
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld van het maximum aantal gelijktijdige verbindingen toegestaan door een <xref href=&quot;System.Net.ServicePoint&quot;> </xref> object."
  remarks: "De eigenschap DefaultConnectionLimit stelt u de standaard maximum aantal gelijktijdige verbindingen die de <xref:System.Net.ServicePointManager>object wordt toegewezen aan de <xref:System.Net.ServicePoint.ConnectionLimit%2A>bij het maken van de eigenschap <xref:System.Net.ServicePoint>objecten.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.ConnectionLimit%2A> </xref:System.Net.ServicePointManager>       Wijzigen van de eigenschap DefaultConnectionLimit heeft geen invloed op bestaande <xref:System.Net.ServicePoint>objecten; dit van invloed op alleen <xref:System.Net.ServicePoint>objecten die zijn geïnitialiseerd na de wijziging.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint> Als de waarde van deze eigenschap is niet ingesteld rechtstreeks of via configuratie, standaardwaarde de op de constante <xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit>.</xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit>      > [!NOTE] > Wijzigingen aan de eigenschap DefaultConnectionLimit van invloed op zowel HTTP 1.0 en HTTP 1.1-verbindingen. Het is niet kunt u de verbindingslimiet voor protocollen HTTP 1.0 en HTTP 1.1 afzonderlijk te wijzigen. Wanneer gebruikt in de server-omgeving (ASP.NET) DefaultConnectionLimit hoger aantal verbindingen, de standaardwaarde is 10."
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/add/codesnippet/cpp/p-system.net.servicepoin_8_1.cpp)]\n [!code-vb[System.Net.ServicePoint#10](~/add/codesnippet/visualbasic/p-system.net.servicepoin_8_1.vb)]\n [!code-cs[System.Net.ServicePoint#10](~/add/codesnippet/csharp/p-system.net.servicepoin_8_1.cs)]"
  syntax:
    content: public static int DefaultConnectionLimit { get; set; }
    return:
      type: System.Int32
      description: "Het maximum aantal gelijktijdige verbindingen toegestaan door een <xref href=&quot;System.Net.ServicePoint&quot;> </xref> object. De standaardwaarde is 2. Wanneer een app wordt uitgevoerd als een ASP.NET-host, is het niet mogelijk is de waarde van deze eigenschap wijzigen via het configuratiebestand als de eigenschap autoConfig is ingesteld op <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. U kunt echter wijzigen de waarde programmatisch als de eigenschap autoConfig <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Uw voorkeurswaarde slechts één keer wordt ingesteld wanneer het AppDomain wordt geladen."
  overload: System.Net.ServicePointManager.DefaultConnectionLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "DefaultConnectionLimit is kleiner dan of gelijk zijn aan 0."
  platform:
  - net462
- uid: System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit
  id: DefaultNonPersistentConnectionLimit
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: DefaultNonPersistentConnectionLimit
  nameWithType: ServicePointManager.DefaultNonPersistentConnectionLimit
  fullName: System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit
  type: Field
  assemblies:
  - System
  namespace: System.Net
  summary: "Het aantal niet-permanente verbindingen (4) zijn toegestaan op een <xref href=&quot;System.Net.ServicePoint&quot;> </xref> object verbonden met een HTTP/1.0-server of hoger. Dit veld constant is, maar wordt niet meer gebruikt in .NET Framework 2.0."
  syntax:
    content: public const int DefaultNonPersistentConnectionLimit = 4;
    return:
      type: System.Int32
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.DefaultPersistentConnectionLimit
  id: DefaultPersistentConnectionLimit
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: DefaultPersistentConnectionLimit
  nameWithType: ServicePointManager.DefaultPersistentConnectionLimit
  fullName: System.Net.ServicePointManager.DefaultPersistentConnectionLimit
  type: Field
  assemblies:
  - System
  namespace: System.Net
  summary: "Het aantal permanente verbindingen zijn toegestaan op (2) een <xref href=&quot;System.Net.ServicePoint&quot;> </xref> object verbonden met een HTTP/1.1-server of hoger. Dit veld constant is en wordt gebruikt voor het initialiseren van de <> </> *> eigenschap als de waarde van de <> </> *> eigenschap is niet ingesteld rechtstreeks of via configuratie."
  remarks: ''
  example:
  - "The following code example sets the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property using this field.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/add/codesnippet/cpp/f-system.net.servicepoin_1.cpp)]\n [!code-vb[System.Net.ServicePoint#10](~/add/codesnippet/visualbasic/f-system.net.servicepoin_1.vb)]\n [!code-cs[System.Net.ServicePoint#10](~/add/codesnippet/csharp/f-system.net.servicepoin_1.cs)]"
  syntax:
    content: public const int DefaultPersistentConnectionLimit = 2;
    return:
      type: System.Int32
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.DnsRefreshTimeout
  id: DnsRefreshTimeout
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: DnsRefreshTimeout
  nameWithType: ServicePointManager.DnsRefreshTimeout
  fullName: System.Net.ServicePointManager.DnsRefreshTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld van een waarde die hoe lang een Service DNS (Domain Name aangeeft) is resolutie als geldig beschouwd."
  remarks: ''
  example:
  - "The following code example sets this property.  \n  \n [!code-vb[System.Net.ServicePointWhidbey#1](~/add/codesnippet/visualbasic/p-system.net.servicepoin_21_1.vb)]\n [!code-cpp[System.Net.ServicePointWhidbey#1](~/add/codesnippet/cpp/p-system.net.servicepoin_21_1.cpp)]\n [!code-cs[System.Net.ServicePointWhidbey#1](~/add/codesnippet/csharp/p-system.net.servicepoin_21_1.cs)]"
  syntax:
    content: public static int DnsRefreshTimeout { get; set; }
    return:
      type: System.Int32
      description: "De time-outwaarde in milliseconden. Een waarde van-1 geeft een oneindige time-outperiode. De standaardwaarde is 120.000 milliseconden (twee minuten)."
  overload: System.Net.ServicePointManager.DnsRefreshTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.EnableDnsRoundRobin
  id: EnableDnsRoundRobin
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: EnableDnsRoundRobin
  nameWithType: ServicePointManager.EnableDnsRoundRobin
  fullName: System.Net.ServicePointManager.EnableDnsRoundRobin
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of een resolutie van de Service DNS (Domain Name) tussen de van toepassing IP (Internet Protocol)-adressen draait."
  remarks: "Wanneer meer dan één IP-adres gekoppeld aan een hostnaam is, retourneert een DNS-omzetting normaal gesproken alleen het eerste IP-adres. Als u deze eigenschap instelt op `true`, en vervolgens de volgende DNS-oplossingen worden alle beschikbare IP-adressen voor een bepaalde host doorlopen. Deze optie is handig wanneer een service gebruikt DNS als een mechanisme tussen servers of serverclusters voor taakverdeling."
  example:
  - "The following code example sets this property.  \n  \n [!code-vb[System.Net.ServicePointWhidbey#1](~/add/codesnippet/visualbasic/p-system.net.servicepoin_17_1.vb)]\n [!code-cpp[System.Net.ServicePointWhidbey#1](~/add/codesnippet/cpp/p-system.net.servicepoin_17_1.cpp)]\n [!code-cs[System.Net.ServicePointWhidbey#1](~/add/codesnippet/csharp/p-system.net.servicepoin_17_1.cs)]"
  syntax:
    content: public static bool EnableDnsRoundRobin { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Als een DNS-omzetting altijd de eerste IP-adres voor een bepaalde host retourneert; anders <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePointManager.EnableDnsRoundRobin*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.EncryptionPolicy
  id: EncryptionPolicy
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: EncryptionPolicy
  nameWithType: ServicePointManager.EncryptionPolicy
  fullName: System.Net.ServicePointManager.EncryptionPolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Haalt de <xref href=&quot;System.Net.Security.EncryptionPolicy&quot;> </xref> voor deze <xref href=&quot;System.Net.ServicePointManager&quot;> </xref> exemplaar."
  remarks: "Als een waarde niet is opgegeven in het configuratiebestand, standaard de eigenschap EncryptionPolicy <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> Dit geldt voor een SSL/TLS-sessie op dit <xref:System.Net.ServicePointManager>exemplaar.</xref:System.Net.ServicePointManager>       Het gebruik van de Null-codering is vereist wanneer het versleutelingsbeleid voor is ingesteld op <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  syntax:
    content: public static System.Net.Security.EncryptionPolicy EncryptionPolicy { get; }
    return:
      type: System.Net.Security.EncryptionPolicy
      description: "Het coderingsbeleid moet worden gebruikt voor dit <xref href=&quot;System.Net.ServicePointManager&quot;> </xref> exemplaar."
  overload: System.Net.ServicePointManager.EncryptionPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.Expect100Continue
  id: Expect100Continue
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: Expect100Continue
  nameWithType: ServicePointManager.Expect100Continue
  fullName: System.Net.ServicePointManager.Expect100Continue
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld een <xref:System.Boolean>waarde die bepaalt of 100-gaan gedrag wordt gebruikt.</xref:System.Boolean>"
  remarks: "Als deze eigenschap is ingesteld op `true`, 100-gaan gedrag wordt gebruikt. Client-aanvragen die gebruikmaken van de `PUT` en `POST` methoden wordt een Expect-koptekst kunt toevoegen aan de aanvraag als de eigenschap Expect100Continue `true` en <xref:System.Net.HttpWebRequest.ContentLength%2A>eigenschap groter is dan nul of de <xref:System.Net.HttpWebRequest.SendChunked%2A>eigenschap is ingesteld op true.</xref:System.Net.HttpWebRequest.SendChunked%2A> </xref:System.Net.HttpWebRequest.ContentLength%2A> De client wordt verwacht te ontvangen van een 100-reactie van de server om aan te geven dat de client moet worden gebruikt voor het verzenden van de gegevens worden gepost gaan. Dit mechanisme kan clients te vermijden dat u grote hoeveelheden gegevens via het netwerk wanneer de server, op basis van de aanvraagheaders wil afwijzen van de aanvraag.       Stel de eigenschap Expect100Continue is `false`. Wanneer de aanvraag wordt verzonden naar de server, worden de gegevens bevat. Als u na het lezen van de aanvraagheaders is de server verificatie vereist en moet een 401-respons verzenden, moet de client opnieuw verzenden van gegevens met de juiste verificatieheaders.       Als deze eigenschap is `true`, de aanvraagheaders zijn verzonden naar de server. Als de server heeft niet de aanvraag geweigerd, wordt een 100 verzonden-gaan antwoord-signalering dat de gegevens kan worden verzonden. Als de server is verificatie zoals in het voorgaande voorbeeld vereist, verzendt de 401-respons en de client heeft de gegevens niet onnodig verzonden.       Als u de waarde van deze eigenschap heeft geen invloed op bestaande <xref:System.Net.ServicePoint>objecten.</xref:System.Net.ServicePoint> Alleen nieuwe <xref:System.Net.ServicePoint>objecten die zijn gemaakt na de wijziging worden beïnvloed.</xref:System.Net.ServicePoint>       De 100-gaan gedrag wordt niet gebruikt voor aanvragen van HTTP 1.0, zelfs als deze eigenschap is ingesteld op `true`.       De verwachte 100-gedrag volledig is beschreven in IETF RFC 2616 sectie 10.1.1 gaan."
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/add/codesnippet/cpp/p-system.net.servicepoin_12_1.cpp)]\n [!code-vb[System.Net.ServicePoint#10](~/add/codesnippet/visualbasic/p-system.net.servicepoin_12_1.vb)]\n [!code-cs[System.Net.ServicePoint#10](~/add/codesnippet/csharp/p-system.net.servicepoin_12_1.cs)]"
  syntax:
    content: public static bool Expect100Continue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>inschakelen van 100-gedrag worden voortgezet. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePointManager.Expect100Continue*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri)
  id: FindServicePoint(System.Uri)
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: FindServicePoint(Uri)
  nameWithType: ServicePointManager.FindServicePoint(Uri)
  fullName: System.Net.ServicePointManager.FindServicePoint(Uri)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Zoeken naar een bestaande <xref href=&quot;System.Net.ServicePoint&quot;> </xref> object of maakt u een nieuwe <xref href=&quot;System.Net.ServicePoint&quot;> </xref> object voor het beheren van communicatie met de opgegeven <xref:System.Uri>object.</xref:System.Uri>"
  remarks: "De methode FindServicePoint retourneert de <xref:System.Net.ServicePoint>object dat is gekoppeld met de opgegeven naam van de Internet-host.</xref:System.Net.ServicePoint> Als er geen <xref:System.Net.ServicePoint>object bestaat voor die host de <xref:System.Net.ServicePointManager>object wordt gemaakt.</xref:System.Net.ServicePointManager> </xref:System.Net.ServicePoint>"
  syntax:
    content: public static System.Net.ServicePoint FindServicePoint (Uri address);
    parameters:
    - id: address
      type: System.Uri
      description: "De <xref:System.Uri>object van het contact opnemen met de Internet-bron.</xref:System.Uri>"
    return:
      type: System.Net.ServicePoint
      description: "De <xref href=&quot;System.Net.ServicePoint&quot;> </xref> object waarmee de communicatie voor de aanvraag wordt beheerd."
  overload: System.Net.ServicePointManager.FindServicePoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het maximum aantal <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objecten die zijn gedefinieerd <xref:System.Net.ServicePointManager.MaxServicePoints*>is bereikt.</xref:System.Net.ServicePointManager.MaxServicePoints*>"
  platform:
  - net462
- uid: System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)
  id: FindServicePoint(System.String,System.Net.IWebProxy)
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: FindServicePoint(String,IWebProxy)
  nameWithType: ServicePointManager.FindServicePoint(String,IWebProxy)
  fullName: System.Net.ServicePointManager.FindServicePoint(String,IWebProxy)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Zoeken naar een bestaande <xref href=&quot;System.Net.ServicePoint&quot;> </xref> object of maakt u een nieuwe <xref href=&quot;System.Net.ServicePoint&quot;> </xref> object voor het beheren van communicatie met de opgegeven Uniform Resource Identifier (URI)."
  remarks: "De <xref:System.Net.ServicePointManager.FindServicePoint%2A>methode retourneert de <xref:System.Net.ServicePoint>object dat is gekoppeld met de opgegeven naam van de Internet-host.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.FindServicePoint%2A> Als er geen <xref:System.Net.ServicePoint>object bestaat voor die host de <xref:System.Net.ServicePointManager>object wordt gemaakt.</xref:System.Net.ServicePointManager> </xref:System.Net.ServicePoint>"
  example:
  - "The following code example demonstrates calling this method to access a <xref:System.Net.ServicePoint> object.  \n  \n [!code-cpp[System.Net.ServicePoint#7](~/add/codesnippet/cpp/2fec5056-1106-4a0b-b9b3-_1.cpp)]\n [!code-vb[System.Net.ServicePoint#7](~/add/codesnippet/visualbasic/2fec5056-1106-4a0b-b9b3-_1.vb)]\n [!code-cs[System.Net.ServicePoint#7](~/add/codesnippet/csharp/2fec5056-1106-4a0b-b9b3-_1.cs)]"
  syntax:
    content: public static System.Net.ServicePoint FindServicePoint (string uriString, System.Net.IWebProxy proxy);
    parameters:
    - id: uriString
      type: System.String
      description: "De URI van de Internet-resource worden opgenomen."
    - id: proxy
      type: System.Net.IWebProxy
      description: "De proxygegevens voor deze aanvraag."
    return:
      type: System.Net.ServicePoint
      description: "De <xref href=&quot;System.Net.ServicePoint&quot;> </xref> object waarmee de communicatie voor de aanvraag wordt beheerd."
  overload: System.Net.ServicePointManager.FindServicePoint*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "De URI die is opgegeven in <code> uriString </code> is ongeldig."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het maximum aantal <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objecten die zijn gedefinieerd <xref:System.Net.ServicePointManager.MaxServicePoints*>is bereikt.</xref:System.Net.ServicePointManager.MaxServicePoints*>"
  platform:
  - net462
- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)
  id: FindServicePoint(System.Uri,System.Net.IWebProxy)
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: FindServicePoint(Uri,IWebProxy)
  nameWithType: ServicePointManager.FindServicePoint(Uri,IWebProxy)
  fullName: System.Net.ServicePointManager.FindServicePoint(Uri,IWebProxy)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Zoeken naar een bestaande <xref href=&quot;System.Net.ServicePoint&quot;> </xref> object of maakt u een nieuwe <xref href=&quot;System.Net.ServicePoint&quot;> </xref> object voor het beheren van communicatie met de opgegeven <xref:System.Uri>object.</xref:System.Uri>"
  remarks: "De <xref:System.Net.ServicePointManager.FindServicePoint%2A>methode retourneert de <xref:System.Net.ServicePoint>object dat is gekoppeld met de opgegeven naam van de Internet-host.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.FindServicePoint%2A> Als er geen <xref:System.Net.ServicePoint>object bestaat voor die host de <xref:System.Net.ServicePointManager>object wordt gemaakt.</xref:System.Net.ServicePointManager> </xref:System.Net.ServicePoint>"
  syntax:
    content: public static System.Net.ServicePoint FindServicePoint (Uri address, System.Net.IWebProxy proxy);
    parameters:
    - id: address
      type: System.Uri
      description: "Een <xref:System.Uri>-object dat het adres van de Internet-bron contact opnemen met bevat.</xref:System.Uri>"
    - id: proxy
      type: System.Net.IWebProxy
      description: "De proxygegevens voor deze aanvraag."
    return:
      type: System.Net.ServicePoint
      description: "De <xref href=&quot;System.Net.ServicePoint&quot;> </xref> object waarmee de communicatie voor de aanvraag wordt beheerd."
  overload: System.Net.ServicePointManager.FindServicePoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het maximum aantal <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objecten die zijn gedefinieerd <xref:System.Net.ServicePointManager.MaxServicePoints*>is bereikt.</xref:System.Net.ServicePointManager.MaxServicePoints*>"
  platform:
  - net462
- uid: System.Net.ServicePointManager.MaxServicePointIdleTime
  id: MaxServicePointIdleTime
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: MaxServicePointIdleTime
  nameWithType: ServicePointManager.MaxServicePointIdleTime
  fullName: System.Net.ServicePointManager.MaxServicePointIdleTime
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld van de maximale niet-actieve tijd van een <xref href=&quot;System.Net.ServicePoint&quot;> </xref> object."
  remarks: "De eigenschap MaxServicePointIdleTime stelt de maximale tijdsduur die de <xref:System.Net.ServicePointManager>object wordt toegewezen aan de <xref:System.Net.ServicePoint.MaxIdleTime%2A>bij het maken van de eigenschap <xref:System.Net.ServicePoint>objecten.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.MaxIdleTime%2A> </xref:System.Net.ServicePointManager> Deze waarde wijzigt alleen <xref:System.Net.ServicePoint>objecten die zijn geïnitialiseerd nadat de waarde wordt gewijzigd.</xref:System.Net.ServicePoint>       Na een <xref:System.Net.ServicePoint>object voor de tijd die is opgegeven niet actief is geweest <xref:System.Net.ServicePoint.MaxIdleTime%2A>, is het in aanmerking komen voor garbagecollection.</xref:System.Net.ServicePoint.MaxIdleTime%2A> </xref:System.Net.ServicePoint> Een <xref:System.Net.ServicePoint>-object is niet-actieve als de lijst met verbindingen die zijn gekoppeld aan de <xref:System.Net.ServicePoint>object is leeg.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint>"
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#8](~/add/codesnippet/cpp/p-system.net.servicepoin_5_1.cpp)]\n [!code-vb[System.Net.ServicePoint#8](~/add/codesnippet/visualbasic/p-system.net.servicepoin_5_1.vb)]\n [!code-cs[System.Net.ServicePoint#8](~/add/codesnippet/csharp/p-system.net.servicepoin_5_1.cs)]"
  syntax:
    content: public static int MaxServicePointIdleTime { get; set; }
    return:
      type: System.Int32
      description: "De maximale niet-actieve tijd in milliseconden, van een <xref href=&quot;System.Net.ServicePoint&quot;> </xref> object. De standaardwaarde is 100.000 milliseconden (100 seconden)."
  overload: System.Net.ServicePointManager.MaxServicePointIdleTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "MaxServicePointIdleTime is minder dan &lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt; of groter dan &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.ServicePointManager.MaxServicePoints
  id: MaxServicePoints
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: MaxServicePoints
  nameWithType: ServicePointManager.MaxServicePoints
  fullName: System.Net.ServicePointManager.MaxServicePoints
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld van het maximum aantal <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objecten om op elk gewenst moment te houden."
  remarks: "Wanneer u de eigenschap MaxServicePoints lager dan het aantal verminderen <xref:System.Net.ServicePoint>objecten die zich momenteel in bestaan, de <xref:System.Net.ServicePointManager>verwijdert de <xref:System.Net.ServicePoint>-objecten met de langste niet-actieve tijd.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager> </xref:System.Net.ServicePoint> Als het aantal <xref:System.Net.ServicePoint>-objecten met actieve verbindingen is groter dan de waarde van MaxServicePoints, de <xref:System.Net.ServicePointManager>object verwijdert de <xref:System.Net.ServicePoint>objecten als ze inactief.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager> </xref:System.Net.ServicePoint>"
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#8](~/add/codesnippet/cpp/p-system.net.servicepoin_10_1.cpp)]\n [!code-vb[System.Net.ServicePoint#8](~/add/codesnippet/visualbasic/p-system.net.servicepoin_10_1.vb)]\n [!code-cs[System.Net.ServicePoint#8](~/add/codesnippet/csharp/p-system.net.servicepoin_10_1.cs)]"
  syntax:
    content: public static int MaxServicePoints { get; set; }
    return:
      type: System.Int32
      description: "Het maximum aantal <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objecten te onderhouden. De standaardwaarde is 0, wat betekent dat er geen limiet voor het aantal <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objecten."
  overload: System.Net.ServicePointManager.MaxServicePoints*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "MaxServicePoints is kleiner dan 0 of groter zijn dan &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.ServicePointManager.ReusePort
  id: ReusePort
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: ReusePort
  nameWithType: ServicePointManager.ReusePort
  fullName: System.Net.ServicePointManager.ReusePort
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "De eigenschapswaarde van deze instelt op <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> zorgt ervoor dat alle uitgaande TCP-verbindingen van HttpWebRequest de optie systeemeigen socket SO_REUSE_UNICASTPORT gebruiken op de socket. Dit zorgt ervoor dat de onderliggende uitgaande poorten die worden gedeeld. Dit is nuttig voor scenario&quot;s waarbij een groot aantal uitgaande verbindingen zijn gemaakt in een korte periode en de app risico&quot;s bijna poorten."
  remarks: "De standaardwaarde is `false`."
  syntax:
    content: public static bool ReusePort { get; set; }
    return:
      type: System.Boolean
      description: "Retourneert <xref:System.Boolean>.</xref:System.Boolean>"
  overload: System.Net.ServicePointManager.ReusePort*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.SecurityProtocol
  id: SecurityProtocol
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: SecurityProtocol
  nameWithType: ServicePointManager.SecurityProtocol
  fullName: System.Net.ServicePointManager.SecurityProtocol
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld van het beveiligingsprotocol dat wordt gebruikt door de <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objecten die worden beheerd door de <xref href=&quot;System.Net.ServicePointManager&quot;> </xref> object."
  remarks: "Deze eigenschap selecteert de versie van het protocol Secure Sockets Layer (SSL) of Transport Layer Security (TLS) moet worden gebruikt voor nieuwe verbindingen die gebruikmaken van het schema van Secure Hypertext Transfer Protocol (HTTPS). bestaande verbindingen worden niet gewijzigd.       Houd er rekening mee dat er geen standaardwaarde om voor deze eigenschap wordt vermeld. De beveiliging van uw computersystemen verandert voortdurend en protocollen standaard en beveiligingsniveaus zijn gewijzigd na verloop van tijd om te voorkomen dat bekende zwakke punten. Standaardwaarden, hangt af van de configuratie van afzonderlijke machine en op welke software is geïnstalleerd en waarop patches zijn toegepast.       Uw code moet nooit impliciet afhankelijk zijn van een bepaalde beveiligingsniveau te gebruiken of op de veronderstelling dat het opgegeven beveiligingsniveau is ingesteld, wordt standaard gebruikt. Als uw app, is afhankelijk van het gebruik van een bepaalde beveiligingsniveau, moet u expliciet dat niveau op te geven en vervolgens controleren om er zeker van te zijn dat het daadwerkelijk in gebruik is op het tot stand gebrachte verbinding is. Bovendien uw code moet worden ontworpen met betrekking tot de wijzigingen die protocollen die worden ondersteund robuuste, zo vaak wijzigingen met weinig voorafgaande kennisgeving om opkomende bedreigingen te verhelpen.       De .NET Framework 4.6 bevat een nieuwe beveiligingsfunctie waarmee onbeveiligde versleuteling en hash-algoritmen voor verbindingen wordt geblokkeerd. Toepassingen met behulp van TLS/SSL via API&quot;s zoals HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, enz. en die gericht is op .NET Framework 4.6 ophalen van het gedrag veiligere standaard.       Ontwikkelaars willen dit gedrag afmelden om interoperabiliteit met hun bestaande SSL3 services of TLS met RC4 services peil te houden. [In dit artikel](https://support.microsoft.com/kb/3069494) wordt uitgelegd hoe u uw code te wijzigen zodat het nieuwe gedrag is uitgeschakeld."
  syntax:
    content: public static System.Net.SecurityProtocolType SecurityProtocol { get; set; }
    return:
      type: System.Net.SecurityProtocolType
      description: "Een van de waarden die zijn gedefinieerd in de <xref href=&quot;System.Net.SecurityProtocolType&quot;> </xref> opsomming."
  overload: System.Net.ServicePointManager.SecurityProtocol*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De waarde die is opgegeven in te stellen van de eigenschap is geen geldig(e) <xref href=&quot;System.Net.SecurityProtocolType&quot;> </xref> opsommingswaarde."
  platform:
  - net462
- uid: System.Net.ServicePointManager.ServerCertificateValidationCallback
  id: ServerCertificateValidationCallback
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: ServerCertificateValidationCallback
  nameWithType: ServicePointManager.ServerCertificateValidationCallback
  fullName: System.Net.ServicePointManager.ServerCertificateValidationCallback
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld van de callback een servercertificaat valideren."
  remarks: "Een toepassing kan de eigenschap ServerCertificateValidationCallback ingesteld op een methode die u wilt gebruiken voor aangepaste validatie door de client van het servercertificaat. Bij het uitvoeren van aangepaste validatie de `sender` parameter doorgegeven aan de <xref:System.Net.Security.RemoteCertificateValidationCallback>kan een hostnaam van de tekenreeks of een object dat is afgeleid van <xref:System.Net.WebRequest>(<xref:System.Net.HttpWebRequest>, bijvoorbeeld), afhankelijk van de <xref:System.Net.ServicePointManager.CertificatePolicy%2A>eigenschap.</xref:System.Net.ServicePointManager.CertificatePolicy%2A> </xref:System.Net.HttpWebRequest> </xref:System.Net.WebRequest> </xref:System.Net.Security.RemoteCertificateValidationCallback>       Als aangepaste validatie niet gebruikt wordt, wordt de certificaatnaam vergeleken met de naam van de host gebruikt voor het maken van de aanvraag. Bijvoorbeeld, als <xref:System.Net.WebRequest.Create%28System.String%29>is doorgegeven als een parameter van &quot;https://www.contoso.com/default.hmtl&quot;, wordt het standaardgedrag is voor de client controleert het certificaat op basis van www.contoso.com.</xref:System.Net.WebRequest.Create%28System.String%29>"
  syntax:
    content: public static System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback { get; set; }
    return:
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "A <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;></xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePointManager.ServerCertificateValidationCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  id: SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: SetTcpKeepAlive(Boolean,Int32,Int32)
  nameWithType: ServicePointManager.SetTcpKeepAlive(Boolean,Int32,Int32)
  fullName: System.Net.ServicePointManager.SetTcpKeepAlive(Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Schakelt de keepalive-optie op een TCP-verbinding of uit."
  remarks: "Een toepassing kan aanvragen dat een TCP/IP-provider het gebruik van keepalive-pakketten op een TCP-verbinding inschakelen. De standaardwaarde is dat het gebruik van keepalive-pakketten op een TCP-verbinding is uitgeschakeld.       De standaardinstellingen wanneer een TCP-socket is geïnitialiseerd stelt de keepalive-time-outwaarde van 2 uur en het keepalive-interval op 1 seconde. De `keepAliveTime` parameter geeft u de time-out in milliseconden, zonder activiteit totdat de eerste keepalive-pakket wordt verzonden. De `keepAliveInterval` parameter geeft u het interval in milliseconden tussen wanneer opeenvolgende keepalive-pakketten worden verzonden als er geen bevestiging is ontvangen. Het nummer van keepalive-tests kan niet worden gewijzigd en is ingesteld op 10.       Als een TCP-verbinding wordt verbroken als gevolg van keepalives, een <xref:System.Net.Sockets.SocketError>van <xref:System.Net.Sockets.SocketError>wordt geretourneerd naar eventuele aanroepen uitgevoerd op de socket en mislukken alle volgende aanroepen met een <xref:System.Net.Sockets.SocketError>van de <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public static void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);
    parameters:
    - id: enabled
      type: System.Boolean
      description: "Indien ingesteld op true, klikt u vervolgens de TCP-keepalive-optie op een TCP-verbinding worden ingeschakeld met behulp van de opgegeven `keepAliveTime` en `keepAliveInterval` waarden.       Indien ingesteld op false, wordt de TCP-keepalive-optie uitgeschakeld en de resterende parameters worden genegeerd.       De standaardwaarde is ingesteld op false."
    - id: keepAliveTime
      type: System.Int32
      description: "Hiermee geeft u de time-out in milliseconden, zonder activiteit totdat de eerste keepalive-pakket wordt verzonden.       De waarde moet groter dan 0 zijn.  Als een waarde lager dan of gelijk zijn aan nul wordt doorgegeven een <xref:System.ArgumentOutOfRangeException>gegenereerd.</xref:System.ArgumentOutOfRangeException>"
    - id: keepAliveInterval
      type: System.Int32
      description: "Hiermee geeft u het interval, in milliseconden tussen wanneer opeenvolgende keepalive-pakketten worden verzonden als er geen bevestiging is ontvangen.       De waarde moet groter dan 0 zijn.  Als een waarde lager dan of gelijk zijn aan nul wordt doorgegeven een <xref:System.ArgumentOutOfRangeException>gegenereerd.</xref:System.ArgumentOutOfRangeException>"
  overload: System.Net.ServicePointManager.SetTcpKeepAlive*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De opgegeven waarde voor <code> keepAliveTime </code> of <code> keepAliveInterval </code> parameter is kleiner dan of gelijk zijn aan 0."
  platform:
  - net462
- uid: System.Net.ServicePointManager.UseNagleAlgorithm
  id: UseNagleAlgorithm
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: UseNagleAlgorithm
  nameWithType: ServicePointManager.UseNagleAlgorithm
  fullName: System.Net.ServicePointManager.UseNagleAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Bepaalt of de Nagle-algoritme wordt gebruikt door de servicepunten worden beheerd door dit <xref href=&quot;System.Net.ServicePointManager&quot;> </xref> object."
  remarks: "De Nagle-algoritme wordt gebruikt om netwerkverkeer te verminderen door het bufferen van kleine pakketten van gegevens en ze verzenden van gegevens als een enkel pakket. Dit proces wordt ook wel &quot;nagling&quot;; het is veel worden gebruikt omdat deze het aantal verzonden pakketten vermindert en verlaagt de overhead per pakket.       Als u de waarde van deze eigenschap heeft geen invloed op bestaande <xref:System.Net.ServicePoint>objecten.</xref:System.Net.ServicePoint> Alleen nieuwe service die zijn gemaakt na de wijziging worden beïnvloed.       Het algoritme Nagle is volledig in IETF RFC 896 beschreven."
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/add/codesnippet/cpp/p-system.net.servicepoin_20_1.cpp)]\n [!code-vb[System.Net.ServicePoint#10](~/add/codesnippet/visualbasic/p-system.net.servicepoin_20_1.vb)]\n [!code-cs[System.Net.ServicePoint#10](~/add/codesnippet/csharp/p-system.net.servicepoin_20_1.cs)]"
  syntax:
    content: public static bool UseNagleAlgorithm { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Gebruik het algoritme Nagle; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePointManager.UseNagleAlgorithm*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.ServicePointManager.CertificatePolicy
  parent: System.Net.ServicePointManager
  isExternal: false
  name: CertificatePolicy
  nameWithType: ServicePointManager.CertificatePolicy
  fullName: System.Net.ServicePointManager.CertificatePolicy
- uid: System.Net.ICertificatePolicy
  parent: System.Net
  isExternal: false
  name: ICertificatePolicy
  nameWithType: ICertificatePolicy
  fullName: System.Net.ICertificatePolicy
- uid: System.Net.ServicePointManager.CheckCertificateRevocationList
  parent: System.Net.ServicePointManager
  isExternal: false
  name: CheckCertificateRevocationList
  nameWithType: ServicePointManager.CheckCertificateRevocationList
  fullName: System.Net.ServicePointManager.CheckCertificateRevocationList
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.ServicePointManager.DefaultConnectionLimit
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DefaultConnectionLimit
  nameWithType: ServicePointManager.DefaultConnectionLimit
  fullName: System.Net.ServicePointManager.DefaultConnectionLimit
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DefaultNonPersistentConnectionLimit
  nameWithType: ServicePointManager.DefaultNonPersistentConnectionLimit
  fullName: System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit
- uid: System.Net.ServicePointManager.DefaultPersistentConnectionLimit
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DefaultPersistentConnectionLimit
  nameWithType: ServicePointManager.DefaultPersistentConnectionLimit
  fullName: System.Net.ServicePointManager.DefaultPersistentConnectionLimit
- uid: System.Net.ServicePointManager.DnsRefreshTimeout
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DnsRefreshTimeout
  nameWithType: ServicePointManager.DnsRefreshTimeout
  fullName: System.Net.ServicePointManager.DnsRefreshTimeout
- uid: System.Net.ServicePointManager.EnableDnsRoundRobin
  parent: System.Net.ServicePointManager
  isExternal: false
  name: EnableDnsRoundRobin
  nameWithType: ServicePointManager.EnableDnsRoundRobin
  fullName: System.Net.ServicePointManager.EnableDnsRoundRobin
- uid: System.Net.ServicePointManager.EncryptionPolicy
  parent: System.Net.ServicePointManager
  isExternal: false
  name: EncryptionPolicy
  nameWithType: ServicePointManager.EncryptionPolicy
  fullName: System.Net.ServicePointManager.EncryptionPolicy
- uid: System.Net.Security.EncryptionPolicy
  parent: System.Net.Security
  isExternal: false
  name: EncryptionPolicy
  nameWithType: EncryptionPolicy
  fullName: System.Net.Security.EncryptionPolicy
- uid: System.Net.ServicePointManager.Expect100Continue
  parent: System.Net.ServicePointManager
  isExternal: false
  name: Expect100Continue
  nameWithType: ServicePointManager.Expect100Continue
  fullName: System.Net.ServicePointManager.Expect100Continue
- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri)
  parent: System.Net.ServicePointManager
  isExternal: false
  name: FindServicePoint(Uri)
  nameWithType: ServicePointManager.FindServicePoint(Uri)
  fullName: System.Net.ServicePointManager.FindServicePoint(Uri)
- uid: System.Net.ServicePoint
  parent: System.Net
  isExternal: false
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)
  parent: System.Net.ServicePointManager
  isExternal: false
  name: FindServicePoint(String,IWebProxy)
  nameWithType: ServicePointManager.FindServicePoint(String,IWebProxy)
  fullName: System.Net.ServicePointManager.FindServicePoint(String,IWebProxy)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)
  parent: System.Net.ServicePointManager
  isExternal: false
  name: FindServicePoint(Uri,IWebProxy)
  nameWithType: ServicePointManager.FindServicePoint(Uri,IWebProxy)
  fullName: System.Net.ServicePointManager.FindServicePoint(Uri,IWebProxy)
- uid: System.Net.ServicePointManager.MaxServicePointIdleTime
  parent: System.Net.ServicePointManager
  isExternal: false
  name: MaxServicePointIdleTime
  nameWithType: ServicePointManager.MaxServicePointIdleTime
  fullName: System.Net.ServicePointManager.MaxServicePointIdleTime
- uid: System.Net.ServicePointManager.MaxServicePoints
  parent: System.Net.ServicePointManager
  isExternal: false
  name: MaxServicePoints
  nameWithType: ServicePointManager.MaxServicePoints
  fullName: System.Net.ServicePointManager.MaxServicePoints
- uid: System.Net.ServicePointManager.ReusePort
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ReusePort
  nameWithType: ServicePointManager.ReusePort
  fullName: System.Net.ServicePointManager.ReusePort
- uid: System.Net.ServicePointManager.SecurityProtocol
  parent: System.Net.ServicePointManager
  isExternal: false
  name: SecurityProtocol
  nameWithType: ServicePointManager.SecurityProtocol
  fullName: System.Net.ServicePointManager.SecurityProtocol
- uid: System.Net.SecurityProtocolType
  parent: System.Net
  isExternal: false
  name: SecurityProtocolType
  nameWithType: SecurityProtocolType
  fullName: System.Net.SecurityProtocolType
- uid: System.Net.ServicePointManager.ServerCertificateValidationCallback
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ServerCertificateValidationCallback
  nameWithType: ServicePointManager.ServerCertificateValidationCallback
  fullName: System.Net.ServicePointManager.ServerCertificateValidationCallback
- uid: System.Net.Security.RemoteCertificateValidationCallback
  parent: System.Net.Security
  isExternal: false
  name: RemoteCertificateValidationCallback
  nameWithType: RemoteCertificateValidationCallback
  fullName: System.Net.Security.RemoteCertificateValidationCallback
- uid: System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  parent: System.Net.ServicePointManager
  isExternal: false
  name: SetTcpKeepAlive(Boolean,Int32,Int32)
  nameWithType: ServicePointManager.SetTcpKeepAlive(Boolean,Int32,Int32)
  fullName: System.Net.ServicePointManager.SetTcpKeepAlive(Boolean,Int32,Int32)
- uid: System.Net.ServicePointManager.UseNagleAlgorithm
  parent: System.Net.ServicePointManager
  isExternal: false
  name: UseNagleAlgorithm
  nameWithType: ServicePointManager.UseNagleAlgorithm
  fullName: System.Net.ServicePointManager.UseNagleAlgorithm
- uid: System.Net.ServicePointManager.CertificatePolicy*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: CertificatePolicy
  nameWithType: ServicePointManager.CertificatePolicy
- uid: System.Net.ServicePointManager.CheckCertificateRevocationList*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: CheckCertificateRevocationList
  nameWithType: ServicePointManager.CheckCertificateRevocationList
- uid: System.Net.ServicePointManager.DefaultConnectionLimit*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DefaultConnectionLimit
  nameWithType: ServicePointManager.DefaultConnectionLimit
- uid: System.Net.ServicePointManager.DnsRefreshTimeout*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DnsRefreshTimeout
  nameWithType: ServicePointManager.DnsRefreshTimeout
- uid: System.Net.ServicePointManager.EnableDnsRoundRobin*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: EnableDnsRoundRobin
  nameWithType: ServicePointManager.EnableDnsRoundRobin
- uid: System.Net.ServicePointManager.EncryptionPolicy*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: EncryptionPolicy
  nameWithType: ServicePointManager.EncryptionPolicy
- uid: System.Net.ServicePointManager.Expect100Continue*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: Expect100Continue
  nameWithType: ServicePointManager.Expect100Continue
- uid: System.Net.ServicePointManager.FindServicePoint*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: FindServicePoint
  nameWithType: ServicePointManager.FindServicePoint
- uid: System.Net.ServicePointManager.MaxServicePointIdleTime*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: MaxServicePointIdleTime
  nameWithType: ServicePointManager.MaxServicePointIdleTime
- uid: System.Net.ServicePointManager.MaxServicePoints*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: MaxServicePoints
  nameWithType: ServicePointManager.MaxServicePoints
- uid: System.Net.ServicePointManager.ReusePort*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ReusePort
  nameWithType: ServicePointManager.ReusePort
- uid: System.Net.ServicePointManager.SecurityProtocol*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: SecurityProtocol
  nameWithType: ServicePointManager.SecurityProtocol
- uid: System.Net.ServicePointManager.ServerCertificateValidationCallback*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ServerCertificateValidationCallback
  nameWithType: ServicePointManager.ServerCertificateValidationCallback
- uid: System.Net.ServicePointManager.SetTcpKeepAlive*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: SetTcpKeepAlive
  nameWithType: ServicePointManager.SetTcpKeepAlive
- uid: System.Net.ServicePointManager.UseNagleAlgorithm*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: UseNagleAlgorithm
  nameWithType: ServicePointManager.UseNagleAlgorithm
