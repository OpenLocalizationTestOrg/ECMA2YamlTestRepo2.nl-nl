### YamlMime:ManagedReference
items:
- uid: System.Data.IDataRecord
  id: IDataRecord
  children:
  - System.Data.IDataRecord.FieldCount
  - System.Data.IDataRecord.GetBoolean(System.Int32)
  - System.Data.IDataRecord.GetByte(System.Int32)
  - System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.IDataRecord.GetChar(System.Int32)
  - System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.IDataRecord.GetData(System.Int32)
  - System.Data.IDataRecord.GetDataTypeName(System.Int32)
  - System.Data.IDataRecord.GetDateTime(System.Int32)
  - System.Data.IDataRecord.GetDecimal(System.Int32)
  - System.Data.IDataRecord.GetDouble(System.Int32)
  - System.Data.IDataRecord.GetFieldType(System.Int32)
  - System.Data.IDataRecord.GetFloat(System.Int32)
  - System.Data.IDataRecord.GetGuid(System.Int32)
  - System.Data.IDataRecord.GetInt16(System.Int32)
  - System.Data.IDataRecord.GetInt32(System.Int32)
  - System.Data.IDataRecord.GetInt64(System.Int32)
  - System.Data.IDataRecord.GetName(System.Int32)
  - System.Data.IDataRecord.GetOrdinal(System.String)
  - System.Data.IDataRecord.GetString(System.Int32)
  - System.Data.IDataRecord.GetValue(System.Int32)
  - System.Data.IDataRecord.GetValues(System.Object[])
  - System.Data.IDataRecord.IsDBNull(System.Int32)
  - System.Data.IDataRecord.Item(System.Int32)
  - System.Data.IDataRecord.Item(System.String)
  langs:
  - csharp
  name: IDataRecord
  nameWithType: IDataRecord
  fullName: System.Data.IDataRecord
  type: Interface
  summary: "Biedt toegang tot de kolomwaarden in elke rij voor een <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref>, en wordt geïmplementeerd door .NET Framework dataproviders die toegang hebben tot relationele databases."
  remarks: "De <xref:System.Data.IDataReader>en IDataRecord interfaces inschakelen een Traceringstabellen klasse voor het implementeren van een `DataReader` klasse</xref:System.Data.IDataReader> Dit biedt een manier voor het lezen van een of meer alleen stromen van resultatensets. Voor meer informatie over `DataReader` klassen, Zie [bij het ophalen van gegevens met behulp van een DataReader](~/add/includes/ajax-current-ext-md.md).       Een toepassing, maak een instantie van de interface IDataRecord niet rechtstreeks, maar maakt een exemplaar van een klasse die eigenschappen overneemt van IDataRecord. Normaal gesproken u dit doen door het verkrijgen van een `DataReader` via de `ExecuteReader` methode van de `Command` object.       Klassen die IDataRecord overnemen moeten alle overgenomen leden te implementeren en doorgaans extra leden om toe te voegen providerspecifieke definiëren.       Providers uitvoering van een `DataReader` zijn vereist om gegevens in de common language runtime (CLR) typen weer te geven. Type afgedwongen is voor bepaalde typen die niet zijn opgenomen in de CLR gedefinieerd. Deze waarden kunnen worden benaderd als alternatieve typen die in overeenstemming zijn met CLR-typen. De volgende tabel bevat een voorbeeld: voorgestelde toewijzingen van OLE DB-gegevenstypen naar CLR-typen met alternatieve typen tussen haakjes.      | OLE DB-type | CLR-type |   |-----------------|--------------|   | DBTYPE_BOOL | Int16 |   | DBTYPE_BSTR | tekenreeks |   | DBTYPE_BYTES | byte [] |   | DBTYPE_CY | Decimale |   | DBTYPE_DATE | Datum/tijd |   | DBTYPE_DBDATE | Datum/tijd |   | DBTYPE_DBTIME | Datum/tijd |   | DBTYPE_DBTIMESTAMP | Datum/tijd |   | DBTYPE_DECIMAL | Decimale |   | DBTYPE_EMPTY | null |   | DBTYPE_ERROR | Exception |   | DBTYPE_FILETIME | Datum/tijd |   | DBTYPE_GUID | GUID |   | DBTYPE_HCHAPTER | niet-ondersteund |   | DBTYPE_I1 | SByte |   | DBTYPE_I2 | Int16 |   | DBTYPE_I4 | Int32 |   | DBTYPE_I8 | Int64 |   | DBTYPE_IDISPATCH | object |   | DBTYPE_IUNKNOWN | object |   | DBTYPE_NULL | DBNull.Value|   | DBTYPE_NUMERIC | Decimale |   | DBTYPE_PROPVARIANT | object |   | DBTYPE_R4 | Één |   | DBTYPE_R8 | Dubbele |   | Typen DBTYPE_STR | tekenreeks |   | DBTYPE_UDT | niet-ondersteund |   | DBTYPE_UI1 | byte (Int16) |   | DBTYPE_UI2 | UInt16 (Int32) |   | DBTYPE_UI4 | UInt32 (Int64) |   | DBTYPE_UI8 | UInt64 (decimaal) |   | DBTYPE_VARIANT | object |   | DBTYPE_VARNUMERIC | niet-ondersteund |   | DBTYPE_WSTR | tekenreeks |"
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, and then the <xref:System.Data.SqlClient.SqlConnection>.  \n  \n [!code-cs[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/csharp/t-system.data.idatarecord_1.cs)]\n [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/visualbasic/t-system.data.idatarecord_1.vb)]"
  syntax:
    content: public interface IDataRecord
  implements: []
  platform:
  - net462
- uid: System.Data.IDataRecord.FieldCount
  id: FieldCount
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: FieldCount
  nameWithType: IDataRecord.FieldCount
  fullName: System.Data.IDataRecord.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt het aantal kolommen in de huidige rij."
  remarks: "Na het uitvoeren van een query die geen rijen worden geretourneerd (bijvoorbeeld met behulp van de <xref:System.Data.IDbCommand.ExecuteNonQuery%2A>methode), FieldCount retourneert-1.</xref:System.Data.IDbCommand.ExecuteNonQuery%2A>"
  syntax:
    content: public int FieldCount { get; }
    return:
      type: System.Int32
      description: "Wanneer niet gepositioneerd in een geldige recordset 0; anders wordt het aantal kolommen in de huidige record. De standaardwaarde is -1."
  overload: System.Data.IDataRecord.FieldCount*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataRecord.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: IDataRecord.GetBoolean(Int32)
  fullName: System.Data.IDataRecord.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt de waarde van de opgegeven kolom als een Booleaanse waarde."
  remarks: "Er is geen conversies worden uitgevoerd. De opgehaalde gegevens moet daarom al in een Booleaanse waarde; anders wordt een uitzondering gegenereerd."
  syntax:
    content: public bool GetBoolean (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord."
    return:
      type: System.Boolean
      description: "De waarde van de kolom."
  overload: System.Data.IDataRecord.GetBoolean*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: IDataRecord.GetByte(Int32)
  fullName: System.Data.IDataRecord.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt de waarde van 8-bits geheel getal zonder teken van de opgegeven kolom."
  syntax:
    content: public byte GetByte (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord."
    return:
      type: System.Byte
      description: "De waarde van 8-bits geheel getal zonder teken van de opgegeven kolom."
  overload: System.Data.IDataRecord.GetByte*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: IDataRecord.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.IDataRecord.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Een stroom bytes leest vanaf de verschuiving van de opgegeven kolom in de buffer als een matrix, te beginnen bij de opgegeven bufferoffset."
  remarks: "GetBytes retourneert het aantal beschikbare bytes in het veld. Dit is vaak de exacte lengte van het veld. Echter het getal dat wordt geretourneerd, kan kleiner zijn dan de waarde true lengte van het veld als `GetBytes` al is gebruikt voor het verkrijgen van bytes van het veld.       Als u een buffer die is doorgegeven `null`, GetBytes retourneert de lengte van de rij in bytes.       Er is geen conversies worden uitgevoerd; de opgehaalde gegevens moet daarom al een byte-matrix."
  syntax:
    content: public long GetBytes (int i, long fieldOffset, byte[] buffer, int bufferoffset, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord."
    - id: fieldOffset
      type: System.Int64
      description: "De index binnen het veld van waaruit de leesbewerking gestart."
    - id: buffer
      type: System.Byte[]
      description: "De buffer waarin de stroom van bytes lezen."
    - id: bufferoffset
      type: System.Int32
      description: "De index voor `buffer` de leesbewerking gestart."
    - id: length
      type: System.Int32
      description: "Het aantal bytes te lezen."
    return:
      type: System.Int64
      description: "Het werkelijke aantal gelezen bytes."
  overload: System.Data.IDataRecord.GetBytes*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: IDataRecord.GetChar(Int32)
  fullName: System.Data.IDataRecord.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt de tekenwaarde van de opgegeven kolom."
  syntax:
    content: public char GetChar (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord."
    return:
      type: System.Char
      description: "De tekenwaarde van de opgegeven kolom."
  overload: System.Data.IDataRecord.GetChar*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: IDataRecord.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.IDataRecord.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Leest de stroom met tekens uit de verschuiving van de opgegeven kolom in de buffer als een matrix, te beginnen bij de opgegeven bufferoffset."
  remarks: "GetChars retourneert het aantal beschikbare tekens in het veld. Dit is vaak de exacte lengte van het veld. Echter, het getal als resultaat kan kleiner zijn dan de exacte lengte van het veld als `GetChars` al is gebruikt voor het verkrijgen van tekens van het veld.       Als u een buffer die is doorgegeven `null`, `GetChars` retourneert de lengte van het veld in tekens.       Er is geen conversies worden uitgevoerd; de opgehaalde gegevens moet daarom al een tekenmatrix."
  syntax:
    content: public long GetChars (int i, long fieldoffset, char[] buffer, int bufferoffset, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord."
    - id: fieldoffset
      type: System.Int64
      description: "De index binnen de rij van waaruit de leesbewerking gestart."
    - id: buffer
      type: System.Char[]
      description: "De buffer waarin de stroom van bytes lezen."
    - id: bufferoffset
      type: System.Int32
      description: "De index voor `buffer` de leesbewerking gestart."
    - id: length
      type: System.Int32
      description: "Het aantal bytes te lezen."
    return:
      type: System.Int64
      description: "Het werkelijke aantal tekens is gelezen."
  overload: System.Data.IDataRecord.GetChars*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetData(System.Int32)
  id: GetData(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetData(Int32)
  nameWithType: IDataRecord.GetData(Int32)
  fullName: System.Data.IDataRecord.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Retourneert een <xref href=&quot;System.Data.IDataReader&quot;> </xref> voor de opgegeven kolom met rangtelwoord."
  syntax:
    content: public System.Data.IDataReader GetData (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "De index van het veld vinden."
    return:
      type: System.Data.IDataReader
      description: "De <xref href=&quot;System.Data.IDataReader&quot;> </xref> voor de opgegeven kolom met rangtelwoord."
  overload: System.Data.IDataRecord.GetData*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: IDataRecord.GetDataTypeName(Int32)
  fullName: System.Data.IDataRecord.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt u de gegevens van het type voor het opgegeven veld."
  remarks: "De gegevens van het type kan afwijken van de informatie die wordt geretourneerd door `GetFieldType`, vooral wanneer de onderliggende gegevenstypen niet toegewezen één voor één voor de runtime-typen die door de taal ondersteund. (bijvoorbeeld `DataTypeName` mogelijk &quot;integer&quot; zijn, maar `Type.Name` mogelijk &quot;Int32&quot;.)"
  syntax:
    content: public string GetDataTypeName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "De index van het veld vinden."
    return:
      type: System.String
      description: "Het gegevenstype informatie voor het opgegeven veld."
  overload: System.Data.IDataRecord.GetDataTypeName*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: IDataRecord.GetDateTime(Int32)
  fullName: System.Data.IDataRecord.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt de waarde voor datum en tijd waarop gegevens van het opgegeven veld."
  syntax:
    content: public DateTime GetDateTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "De index van het veld vinden."
    return:
      type: System.DateTime
      description: "De datum en tijd gegevenswaarde van het opgegeven veld."
  overload: System.Data.IDataRecord.GetDateTime*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: IDataRecord.GetDecimal(Int32)
  fullName: System.Data.IDataRecord.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "De numerieke waarde van de vaste positie van het opgegeven veld opgehaald."
  syntax:
    content: public decimal GetDecimal (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "De index van het veld vinden."
    return:
      type: System.Decimal
      description: "De vaste positie numerieke waarde van het opgegeven veld."
  overload: System.Data.IDataRecord.GetDecimal*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: IDataRecord.GetDouble(Int32)
  fullName: System.Data.IDataRecord.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt u de dubbele precisie getal met drijvende komma van het opgegeven veld."
  syntax:
    content: public double GetDouble (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "De index van het veld vinden."
    return:
      type: System.Double
      description: "De dubbele precisie Drijvendekommagetal van het opgegeven veld."
  overload: System.Data.IDataRecord.GetDouble*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: IDataRecord.GetFieldType(Int32)
  fullName: System.Data.IDataRecord.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt u de <xref:System.Type>informatie die overeenkomt met het type <xref:System.Object>dat wordt geretourneerd vanuit <xref:System.Data.IDataRecord.GetValue*>.</xref:System.Data.IDataRecord.GetValue*> </xref:System.Object> </xref:System.Type>"
  remarks: "Deze informatie kan worden gebruikt voor betere prestaties door de accessor sterk getypeerde aan te roepen aan te geven. (bijvoorbeeld `GetInt32` is ongeveer tien keer sneller dan wanneer u `GetValue`.)"
  syntax:
    content: public Type GetFieldType (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "De index van het veld vinden."
    return:
      type: System.Type
      description: "De <xref:System.Type>informatie overeenkomt met het type <xref:System.Object>dat wordt geretourneerd vanuit <xref:System.Data.IDataRecord.GetValue*>.</xref:System.Data.IDataRecord.GetValue*> </xref:System.Object> </xref:System.Type>"
  overload: System.Data.IDataRecord.GetFieldType*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: IDataRecord.GetFloat(Int32)
  fullName: System.Data.IDataRecord.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "De enkele precisie getal met drijvende komma van het opgegeven veld opgehaald."
  syntax:
    content: public float GetFloat (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "De index van het veld vinden."
    return:
      type: System.Single
      description: "De enkele precisie Drijvendekommagetal van het opgegeven veld."
  overload: System.Data.IDataRecord.GetFloat*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: IDataRecord.GetGuid(Int32)
  fullName: System.Data.IDataRecord.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Retourneert de GUID-waarde van het opgegeven veld."
  syntax:
    content: public Guid GetGuid (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "De index van het veld vinden."
    return:
      type: System.Guid
      description: "De GUID-waarde van het opgegeven veld."
  overload: System.Data.IDataRecord.GetGuid*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: IDataRecord.GetInt16(Int32)
  fullName: System.Data.IDataRecord.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt de waarde van 16-bits geheel getal met teken van het opgegeven veld."
  syntax:
    content: public short GetInt16 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "De index van het veld vinden."
    return:
      type: System.Int16
      description: "De 16-bits ondertekende integer-waarde van het opgegeven veld."
  overload: System.Data.IDataRecord.GetInt16*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: IDataRecord.GetInt32(Int32)
  fullName: System.Data.IDataRecord.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt u de 32-bits ondertekende integer-waarde van het opgegeven veld."
  syntax:
    content: public int GetInt32 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "De index van het veld vinden."
    return:
      type: System.Int32
      description: "De 32-bits ondertekende integer-waarde van het opgegeven veld."
  overload: System.Data.IDataRecord.GetInt32*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: IDataRecord.GetInt64(Int32)
  fullName: System.Data.IDataRecord.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt u de 64-bits ondertekende integer-waarde van het opgegeven veld."
  syntax:
    content: public long GetInt64 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "De index van het veld vinden."
    return:
      type: System.Int64
      description: "De 64-bits ondertekende integer-waarde van het opgegeven veld."
  overload: System.Data.IDataRecord.GetInt64*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: IDataRecord.GetName(Int32)
  fullName: System.Data.IDataRecord.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt u de naam voor het veld vinden."
  syntax:
    content: public string GetName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "De index van het veld vinden."
    return:
      type: System.String
      description: "De naam van het veld of een lege tekenreeks (&quot;&quot;), als er geen waarde retourneren."
  overload: System.Data.IDataRecord.GetName*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: IDataRecord.GetOrdinal(String)
  fullName: System.Data.IDataRecord.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "De index van het benoemde veld retourneren."
  remarks: "`GetOrdinal`voert eerst een hoofdlettergevoelige zoekactie. Als dit mislukt, wordt een tweede hoofdlettergevoelige zoekactie gemaakt. `GetOrdinal`kana breedte is hoofdlettergevoelig. Als de index van het veld met de naam niet wordt gevonden, een `IndexOutOfRangeException` gegenereerd.       Omdat lookups op basis van een rangtelwoord efficiënter dan benoemde zoekacties zijn, is het aan te roepen inefficiënte `GetOrdinal` binnen een For-lus. Tijd besparen door het aanroepen van `GetOrdinal` één keer en het toewijzen van de resultaten naar een geheel getal variabele voor gebruik binnen de lus."
  example:
  - "The following example demonstrates how to use the inherited <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> method.  \n  \n [!code-vb[Classic WebData OdbcDataReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.idatarecor_1.vb)]\n [!code-cs[Classic WebData OdbcDataReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.idatarecor_1.cs)]"
  syntax:
    content: public int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "De naam van het veld vinden."
    return:
      type: System.Int32
      description: "De index van het benoemde veld."
  overload: System.Data.IDataRecord.GetOrdinal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataRecord.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: IDataRecord.GetString(Int32)
  fullName: System.Data.IDataRecord.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt de tekenreekswaarde van het opgegeven veld."
  syntax:
    content: public string GetString (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "De index van het veld vinden."
    return:
      type: System.String
      description: "De string-waarde van het opgegeven veld."
  overload: System.Data.IDataRecord.GetString*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: IDataRecord.GetValue(Int32)
  fullName: System.Data.IDataRecord.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Retourneert de waarde van het opgegeven veld."
  syntax:
    content: public object GetValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "De index van het veld vinden."
    return:
      type: System.Object
      description: "De <xref:System.Object>waarin de veldwaarde na retour.</xref:System.Object>"
  overload: System.Data.IDataRecord.GetValue*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: IDataRecord.GetValues(Object[])
  fullName: System.Data.IDataRecord.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt een matrix met objecten met de kolomwaarden van de huidige record gevuld."
  remarks: "Voor de meeste toepassingen bevat de methode GetValues een efficiënte manier voor het ophalen van alle kolommen, in plaats van elke kolom afzonderlijk ophalen.       U kunt doorgeven een <xref:System.Object>matrix met minder dan het aantal kolommen die zijn opgenomen in de resulterende rijlengte.</xref:System.Object> De hoeveelheid gegevens de <xref:System.Object>matrix bevat wordt gekopieerd naar de matrix.</xref:System.Object> U kunt ook doorgeven een <xref:System.Object>matrix waarvan is langer dan het aantal kolommen die zijn opgenomen in de resulterende rijlengte.</xref:System.Object>"
  syntax:
    content: public int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Een matrix van <xref:System.Object>de kenmerkvelden in kopiëren.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Het aantal exemplaren van <xref:System.Object>in de matrix.</xref:System.Object>"
  overload: System.Data.IDataRecord.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataRecord.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: IDataRecord.IsDBNull(Int32)
  fullName: System.Data.IDataRecord.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Of het opgegeven veld is ingesteld op null."
  remarks: "Deze methode aanroepen om te zien of er null kolomwaarden voordat u de getypeerde get-methoden (bijvoorbeeld <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>, enzovoort) om te voorkomen dat een fout.</xref:System.Data.SqlClient.SqlDataReader.GetChar%2A> </xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>"
  syntax:
    content: public bool IsDBNull (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "De index van het veld vinden."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het opgegeven veld is ingesteld op null; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IDataRecord.IsDBNull*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: IDataRecord.Item(Int32)
  fullName: System.Data.IDataRecord.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt u de kolom die zich bevindt op de opgegeven index."
  syntax:
    content: public object this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: "De op nul gebaseerde index van de kolom ophalen."
    return:
      type: System.Object
      description: "De kolom die zich bevindt op de opgegeven index als een <xref:System.Object>.</xref:System.Object>"
  overload: System.Data.IDataRecord.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.Item(System.String)
  id: Item(System.String)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: Item(String)
  nameWithType: IDataRecord.Item(String)
  fullName: System.Data.IDataRecord.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt u de kolom met de opgegeven naam."
  remarks: "Een hoofdlettergevoelige zoekactie wordt eerst uitgevoerd. Als dit mislukt, wordt een tweede hoofdlettergevoelige zoekactie gemaakt.       Deze methode is hoofdlettergevoelig kana breedte."
  syntax:
    content: public object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "De naam van de kolom te vinden."
    return:
      type: System.Object
      description: "De kolom met de opgegeven naam als een <xref:System.Object>.</xref:System.Object>"
  overload: System.Data.IDataRecord.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Er is geen kolom met de opgegeven naam is gevonden."
  platform:
  - net462
references:
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.IDataRecord.FieldCount
  parent: System.Data.IDataRecord
  isExternal: false
  name: FieldCount
  nameWithType: IDataRecord.FieldCount
  fullName: System.Data.IDataRecord.FieldCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IDataRecord.GetBoolean(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: IDataRecord.GetBoolean(Int32)
  fullName: System.Data.IDataRecord.GetBoolean(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.IDataRecord.GetByte(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetByte(Int32)
  nameWithType: IDataRecord.GetByte(Int32)
  fullName: System.Data.IDataRecord.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: IDataRecord.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.IDataRecord.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.IDataRecord.GetChar(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetChar(Int32)
  nameWithType: IDataRecord.GetChar(Int32)
  fullName: System.Data.IDataRecord.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: IDataRecord.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.IDataRecord.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.IDataRecord.GetData(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetData(Int32)
  nameWithType: IDataRecord.GetData(Int32)
  fullName: System.Data.IDataRecord.GetData(Int32)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: IDataRecord.GetDataTypeName(Int32)
  fullName: System.Data.IDataRecord.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.IDataRecord.GetDateTime(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: IDataRecord.GetDateTime(Int32)
  fullName: System.Data.IDataRecord.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.IDataRecord.GetDecimal(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: IDataRecord.GetDecimal(Int32)
  fullName: System.Data.IDataRecord.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.IDataRecord.GetDouble(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: IDataRecord.GetDouble(Int32)
  fullName: System.Data.IDataRecord.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.IDataRecord.GetFieldType(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: IDataRecord.GetFieldType(Int32)
  fullName: System.Data.IDataRecord.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.IDataRecord.GetFloat(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: IDataRecord.GetFloat(Int32)
  fullName: System.Data.IDataRecord.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.IDataRecord.GetGuid(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: IDataRecord.GetGuid(Int32)
  fullName: System.Data.IDataRecord.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.IDataRecord.GetInt16(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: IDataRecord.GetInt16(Int32)
  fullName: System.Data.IDataRecord.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.IDataRecord.GetInt32(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: IDataRecord.GetInt32(Int32)
  fullName: System.Data.IDataRecord.GetInt32(Int32)
- uid: System.Data.IDataRecord.GetInt64(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: IDataRecord.GetInt64(Int32)
  fullName: System.Data.IDataRecord.GetInt64(Int32)
- uid: System.Data.IDataRecord.GetName(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetName(Int32)
  nameWithType: IDataRecord.GetName(Int32)
  fullName: System.Data.IDataRecord.GetName(Int32)
- uid: System.Data.IDataRecord.GetOrdinal(System.String)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: IDataRecord.GetOrdinal(String)
  fullName: System.Data.IDataRecord.GetOrdinal(String)
- uid: System.Data.IDataRecord.GetString(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetString(Int32)
  nameWithType: IDataRecord.GetString(Int32)
  fullName: System.Data.IDataRecord.GetString(Int32)
- uid: System.Data.IDataRecord.GetValue(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetValue(Int32)
  nameWithType: IDataRecord.GetValue(Int32)
  fullName: System.Data.IDataRecord.GetValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.IDataRecord.GetValues(System.Object[])
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetValues(Object[])
  nameWithType: IDataRecord.GetValues(Object[])
  fullName: System.Data.IDataRecord.GetValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.IDataRecord.IsDBNull(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: IDataRecord.IsDBNull(Int32)
  fullName: System.Data.IDataRecord.IsDBNull(Int32)
- uid: System.Data.IDataRecord.Item(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: Item(Int32)
  nameWithType: IDataRecord.Item(Int32)
  fullName: System.Data.IDataRecord.Item(Int32)
- uid: System.Data.IDataRecord.Item(System.String)
  parent: System.Data.IDataRecord
  isExternal: false
  name: Item(String)
  nameWithType: IDataRecord.Item(String)
  fullName: System.Data.IDataRecord.Item(String)
- uid: System.Data.IDataRecord.FieldCount*
  parent: System.Data.IDataRecord
  isExternal: false
  name: FieldCount
  nameWithType: IDataRecord.FieldCount
- uid: System.Data.IDataRecord.GetBoolean*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetBoolean
  nameWithType: IDataRecord.GetBoolean
- uid: System.Data.IDataRecord.GetByte*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetByte
  nameWithType: IDataRecord.GetByte
- uid: System.Data.IDataRecord.GetBytes*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetBytes
  nameWithType: IDataRecord.GetBytes
- uid: System.Data.IDataRecord.GetChar*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetChar
  nameWithType: IDataRecord.GetChar
- uid: System.Data.IDataRecord.GetChars*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetChars
  nameWithType: IDataRecord.GetChars
- uid: System.Data.IDataRecord.GetData*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetData
  nameWithType: IDataRecord.GetData
- uid: System.Data.IDataRecord.GetDataTypeName*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDataTypeName
  nameWithType: IDataRecord.GetDataTypeName
- uid: System.Data.IDataRecord.GetDateTime*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDateTime
  nameWithType: IDataRecord.GetDateTime
- uid: System.Data.IDataRecord.GetDecimal*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDecimal
  nameWithType: IDataRecord.GetDecimal
- uid: System.Data.IDataRecord.GetDouble*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDouble
  nameWithType: IDataRecord.GetDouble
- uid: System.Data.IDataRecord.GetFieldType*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetFieldType
  nameWithType: IDataRecord.GetFieldType
- uid: System.Data.IDataRecord.GetFloat*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetFloat
  nameWithType: IDataRecord.GetFloat
- uid: System.Data.IDataRecord.GetGuid*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetGuid
  nameWithType: IDataRecord.GetGuid
- uid: System.Data.IDataRecord.GetInt16*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt16
  nameWithType: IDataRecord.GetInt16
- uid: System.Data.IDataRecord.GetInt32*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt32
  nameWithType: IDataRecord.GetInt32
- uid: System.Data.IDataRecord.GetInt64*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt64
  nameWithType: IDataRecord.GetInt64
- uid: System.Data.IDataRecord.GetName*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetName
  nameWithType: IDataRecord.GetName
- uid: System.Data.IDataRecord.GetOrdinal*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetOrdinal
  nameWithType: IDataRecord.GetOrdinal
- uid: System.Data.IDataRecord.GetString*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetString
  nameWithType: IDataRecord.GetString
- uid: System.Data.IDataRecord.GetValue*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetValue
  nameWithType: IDataRecord.GetValue
- uid: System.Data.IDataRecord.GetValues*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetValues
  nameWithType: IDataRecord.GetValues
- uid: System.Data.IDataRecord.IsDBNull*
  parent: System.Data.IDataRecord
  isExternal: false
  name: IsDBNull
  nameWithType: IDataRecord.IsDBNull
- uid: System.Data.IDataRecord.Item*
  parent: System.Data.IDataRecord
  isExternal: false
  name: Item
  nameWithType: IDataRecord.Item
