### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.XamlReader
  id: XamlReader
  children:
  - System.Windows.Markup.XamlReader.#ctor
  - System.Windows.Markup.XamlReader.CancelAsync
  - System.Windows.Markup.XamlReader.GetWpfSchemaContext
  - System.Windows.Markup.XamlReader.Load(System.IO.Stream)
  - System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader)
  - System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)
  - System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)
  - System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)
  - System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)
  - System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)
  - System.Windows.Markup.XamlReader.LoadCompleted
  - System.Windows.Markup.XamlReader.Parse(System.String)
  - System.Windows.Markup.XamlReader.Parse(System.String,System.Windows.Markup.ParserContext)
  langs:
  - csharp
  name: XamlReader
  nameWithType: XamlReader
  fullName: System.Windows.Markup.XamlReader
  type: Class
  summary: "XAML-invoer leest en maakt een objectgrafiek met behulp van de WPF standaard XAML-lezer en een bijbehorende XAML-object-schrijver."
  remarks: "De synchrone <xref:System.Windows.Markup.XamlReader.Load%2A>methoden zijn statisch, maar de asynchrone <xref:System.Windows.Markup.XamlReader.LoadAsync%2A>methoden zijn niet statisch en vereisen een exemplaar van het XamlReader-klasse moet worden gebruikt.</xref:System.Windows.Markup.XamlReader.LoadAsync%2A> </xref:System.Windows.Markup.XamlReader.Load%2A>       De uitvoer van de `Load` methoden is een enkel object, waarmee het hoofdobject van een structuur van de gemaakte object of een objectgrafiek. Objectgrafieken die zijn gemaakt door XamlReader zijn meestal toegevoegd aan de bestaande objectboomstructuur van een toepassing WPF tijdens runtime. Anders de nieuwe objectgrafiek wordt beschouwd als verbroken ten behoeve van de WPF-toepassingsmodel. Dit betekent dat niet meer worden weergegeven en kan niet geopend met behulp van een structuur technieken met het object als op de WPF-toepassing hoofdobject structuur toegepast worden (bijvoorbeeld de API&quot;s <xref:System.Windows.FrameworkElement.FindName%2A>, <xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>).</xref:System.Windows.Media.VisualTreeHelper> </xref:System.Windows.LogicalTreeHelper> </xref:System.Windows.FrameworkElement.FindName%2A> Zie voor meer informatie over concepten van object-structuur [structuren in WPF](~/add/includes/ajax-current-ext-md.md).       XamlReader ondersteunt de volgende primaire scenario&quot;s:- **klonen/object factory**: zonder aanvullende mechanismen een verwijzingstype in het algemeen kan niet worden opgenomen in meer dan één positie in een boomstructuur WPF-object. (Voorbeelden van aanvullende mechanismen die bieden ondersteuning voor het delen of opnieuw te gebruiken in de WPF-objecten die zijn gebaseerd op <xref:System.Windows.Freezable>, of ondersteuning voor veel deelbaar objecten, zoals <xref:System.Windows.Media.Brush>die waarnaar wordt verwezen als een item uit een <xref:System.Windows.ResourceDictionary>.)</xref:System.Windows.ResourceDictionary> </xref:System.Windows.Media.Brush> </xref:System.Windows.Freezable> Een manier voor het klonen van een object dat zich al in de objectboomstructuur van het is voor het serialiseren van het object met behulp van <xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=fullName>.</xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=fullName> U Volg de geserialiseerde tekenreeks als invoer voor een aanroep van <xref:System.Windows.Markup.XamlReader.Load%2A>, met een stream of <xref:System.Xml.XmlReader>als intermediaire.</xref:System.Xml.XmlReader> </xref:System.Windows.Markup.XamlReader.Load%2A>      - **Objecten maken op basis van just in time informatie**: Er zijn vaak andere manieren om late binding of de gebruiker opgegeven invoer, de status van bestaande objecten wijzigen. U kunt bijvoorbeeld gebruik van dezelfde waarde meer dan één eigenschap in te stellen of gegevensbinding gebruiken. Maar als u een scenario waarbij zelfs het soort object maken alleen kan worden bepaald tijdens runtime of gebruikersinteractie hebt, maak vervolgens dergelijk object opbouw van een tekenreeks op voor <xref:System.Windows.Markup.XamlReader.Load%2A>invoer is het vaak nuttig.</xref:System.Windows.Markup.XamlReader.Load%2A>      - **Met behulp van bestaande resource technieken**: de <xref:System.IO.Stream>type voor het overbrengen van gegevens of objecten buiten de toepassingsgrenzen van de of voor soortgelijke situaties regelmatig in andere frameworks of technologieën wordt gebruikt.</xref:System.IO.Stream> U kunt de <xref:System.IO.Stream>technieken opslaan of XAML-indeling gegevens ophalen die u gaat gebruiken voor het maken van een object als onderdeel van uw toepassing.</xref:System.IO.Stream>      - **Vaste documenten:** uw toepassing lokaal of gedownloade XPS-documenten voor opname in een WPF objectstructuur en gebruikersinterface laadt.      > [!NOTE] > Deze documentatie soms beschrijft een objectgrafiek in plaats van een objectboomstructuur. Een strikte bovenliggende / onderliggende relatie bestaat altijd niet in de runtime-objectrelaties van een runtime-WPF-toepassing, zodat een objectgrafiek een ruimere toepasselijke terminologie. Echter, omdat de WPF bevat ook twee andere structuur conceptvorming API&quot;s (<xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>) de structuur metafoor nog steeds van toepassing is voldoende op meestal echte in WPF.</xref:System.Windows.Media.VisualTreeHelper> </xref:System.Windows.LogicalTreeHelper> Vanuit het perspectief van de taal XAML echter is de objectgrafiek vaak de beste manier om na te denken over hoe objecten worden gemaakt buiten XAML, omdat de XAML-taal zelf noodzakelijkerwijs geen geeft methoden van de helper-klasse die de relaties in een boomstructuur opnieuw meenemen.      ## Is een markup language dat rechtstreeks vertegenwoordigt instantiëring en uitvoering van code Access Security Losse XAML en XamlReader XAML. Daarom elementen die zijn gemaakt in XAML hebben dezelfde mogelijkheid om te communiceren met systeemresources (netwerktoegang, i/o file system, bijvoorbeeld) als het equivalent gegenereerde code doet.       [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]ondersteunt de [!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)] beveiligingskader [!INCLUDE[TLA#tla_cas](~/add/includes/tlasharptla-cas-md.md)]. Dit betekent dat [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] inhoud die wordt uitgevoerd in de internetzone machtigingen van de uitvoering is verminderd. &quot;Losse XAML&quot; (pagina&quot;s van niet-gecompileerde XAML geïnterpreteerd tijdens het laden van een XAML-viewer) en [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] meestal worden uitgevoerd in deze zone internet en het gebruik van de dezelfde machtigingen zijn ingesteld.  XAML-is geladen in een volledig vertrouwde toepassing heeft echter dezelfde toegang tot de resources als de hosttoepassing. Zie voor meer informatie [WPF gedeeltelijk vertrouwen beveiliging](~/add/includes/ajax-current-ext-md.md).       De implicaties van deze instructies voor XamlReader is dat het ontwerp van uw toepassing moet aanbrengen vertrouwensrelatie nemen van beslissingen over de XAML die u wilt laden. Als u de XAML die wordt niet vertrouwd laadt, kunt u uw eigen techniek sandbox voor hoe u de resulterende objectgrafiek laden.       XamlReader kan ook worden aangeroepen door gedeeltelijk vertrouwde code. In dit geval wordt beveiligingszone Internet toegepast op basis van codetoegangsrechten. Als er iets in de geladen XAML ongeldige onder beveiligingszone Internet, een XAML parse uitzondering. Onder XBAP en andere gevallen die gedeeltelijk vertrouwen op het niveau van het platform zijn, waarbij XamlReader deel van de uitvoering uitmaakt, krijgt u hetzelfde uitzondering gedrag als met gedeeltelijk vertrouwen expliciete aanroepen.      ## WPF XAML, XAML lezers/schrijvers en XAML taal Versioning [!INCLUDE[xaml2009](~/add/includes/xaml2009-md.md)] bevat functies voor talen zoals en. U kunt handtekeningen van `Load` of `Parse` laden van XAML die gebruikmaakt van deze functies. Deze taalfuncties worden echter niet ondersteund voor de XAML die moet worden gecompileerd (zoals XAML voor de **pagina** actie in een WPF-toepassing of de XAML waarmee de taak voor het compileren van aantekeningen in de build-acties omvat bouwen).       WPF-typen en de WPF-technologie in het algemeen concepten die afhankelijk van de toegang tot interne werking van WPF zijn te ondersteunen. Bijvoorbeeld, hoe WPF-dependency properties implementeert is afhankelijk van interne technieken voor het opzoeken van efficiënte type lid. Toegang tot deze inhoud is ingeschakeld door de XAML lezen en schrijven van API&quot;s die zijn opgegeven in <xref:System.Windows.Markup.XamlWriter>en XamlReader van de <xref:System.Windows.Markup>naamruimte en PresentationFramework assembly.</xref:System.Windows.Markup> </xref:System.Windows.Markup.XamlWriter> Echter, de XAML lager niveau en XAML schrijfprogramma uit de assembly System.Xaml (klassen op basis van <xref:System.Xaml.XamlReader?displayProperty=fullName>, <xref:System.Xaml.XamlWriter?displayProperty=fullName>) geen toegang tot het inwendige WPF.</xref:System.Xaml.XamlWriter?displayProperty=fullName> </xref:System.Xaml.XamlReader?displayProperty=fullName> Er is geen afhankelijkheid van System.Xaml naar een assembly WPF-specifieke. Zonder toegang tot het inwendige WPF, System.Xaml en schrijfprogramma kunnen niet correct worden geladen of sla alle WPF typen of typen gebaseerd op WPF-typen. In het bijzonder de System.Xaml en schrijfprogramma wordt niet begrepen concepten zoals de WPF-afhankelijkheidseigenschap back-ups eigenschappenarchief noch de details van hoe WPF stijlen, bronwoordenboeken en sjablonen gebruikt. Daarom hebt u de mogelijkheid om ervoor te: - als u bij het laden van WPF-typen en/of u XAML in BAML-formulier op elke manier gebruikt de PresentationFramework XAML en XAML schrijfprogramma gebruiken.      -Als u zijn niet vertrouwen op eventuele WPF-typen of de BAML-vorm van XAML, of niet gebruikt een andere specifieke technologie XAML lezer XAML writer implementatie om redenen die specifiek voor die framework zijn, gebruikt de System.Xaml XAML en schrijfprogramma XAML.      ## Een back-up System.Xaml-implementatie in .NET 4 XamlReader is aanroepbare API-gebied voor de WPF framework niveau XAML-parser. De XAML runtime geladen en geparseerd voor WPF-toepassingen die zijn gericht worden ook uitgevoerd door de dezelfde onderliggende XAML-parser [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)] en [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)].       Als u ontwikkelt voor [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], de externe API is hetzelfde, maar de onderdelen van de implementatie zijn gebouwd op de [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] algemene XAML-implementatie in de assembly System.Xaml, wat zorgt voor betere veel van de technische en rapportage aspecten van het parseren van XAML. Targeting [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] noodzakelijkerwijs houdt waaronder System.Xaml als een verwijzing en details van de implementatie, zoals de uitzonderingen die zijn gerapporteerd kunnen afkomstig zijn van System.Xaml typen zijn gedefinieerd.      <a name=&quot;xamlTextUsage_XamlReader&quot;></a>## XAML tekst gebruik"
  example:
  - "The following example converts a <xref:System.Windows.Controls.Button> into a string using the <xref:System.Windows.Markup.XamlWriter> class.  The string is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the XamlReader class.  \n  \n [!code-cs[xamlreaderwritersnippets#XamlReaderLoadXmlReader](~/add/codesnippet/csharp/XamlReaderWriterSnippets/Window1.xaml.cs#xamlreaderloadxmlreader)]\n [!code-vb[xamlreaderwritersnippets#XamlReaderLoadXmlReader](~/add/codesnippet/visualbasic/xamlreaderwritersnippets/window1.xaml.vb#xamlreaderloadxmlreader)]"
  syntax:
    content: public class XamlReader
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: XamlReader()
  nameWithType: XamlReader.XamlReader()
  fullName: System.Windows.Markup.XamlReader.XamlReader()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Markup.XamlReader&quot;> </xref> klasse."
  syntax:
    content: public XamlReader ();
    parameters: []
  overload: System.Windows.Markup.XamlReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.CancelAsync
  id: CancelAsync
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: CancelAsync()
  nameWithType: XamlReader.CancelAsync()
  fullName: System.Windows.Markup.XamlReader.CancelAsync()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Annuleert de huidige bewerking voor het asynchroon laden als er een bewerking asynchroon laden in behandeling."
  remarks: "CancelAsync is een asynchrone bewerking. Daarom optreden enkele laden voordat de bewerking is afgebroken."
  syntax:
    content: public void CancelAsync ();
    parameters: []
  overload: System.Windows.Markup.XamlReader.CancelAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.GetWpfSchemaContext
  id: GetWpfSchemaContext
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: GetWpfSchemaContext()
  nameWithType: XamlReader.GetWpfSchemaContext()
  fullName: System.Windows.Markup.XamlReader.GetWpfSchemaContext()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Retourneert een <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> -object met de WPF-schema-instellingen voor een <xref href=&quot;System.Windows.Markup.XamlReader&quot;> </xref>."
  syntax:
    content: public static System.Xaml.XamlSchemaContext GetWpfSchemaContext ();
    parameters: []
    return:
      type: System.Xaml.XamlSchemaContext
      description: "Een <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> -object met de WPF-schema-instellingen voor een <xref href=&quot;System.Windows.Markup.XamlReader&quot;> </xref>."
  overload: System.Windows.Markup.XamlReader.GetWpfSchemaContext*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.Load(System.IO.Stream)
  id: Load(System.IO.Stream)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: Load(Stream)
  nameWithType: XamlReader.Load(Stream)
  fullName: System.Windows.Markup.XamlReader.Load(Stream)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Leest de XAML-invoer in de opgegeven <xref:System.IO.Stream>en retourneert een <xref:System.Object>is de hoofdmap van de bijbehorende objectstructuur.</xref:System.Object> </xref:System.IO.Stream>"
  remarks: ''
  example:
  - "The following example saves a <xref:System.Windows.Controls.Button> into a <xref:System.IO.MemoryStream> using the <xref:System.Windows.Markup.XamlWriter> class. The stream is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.  \n  \n [!code-cs[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/add/codesnippet/csharp/XamlReaderWriterSnippets/Window1.xaml.cs#xamlreaderloadxmlreader)]\n [!code-vb[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/add/codesnippet/visualbasic/xamlreaderwritersnippets/window1.xaml.vb#xamlreaderloadxmlreader)]"
  syntax:
    content: public static object Load (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "De XAML laden in stroom vorm."
    return:
      type: System.Object
      description: "Het object in de hoofdmap van de structuur van het gemaakte object."
  overload: System.Windows.Markup.XamlReader.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader)
  id: Load(System.Xaml.XamlReader)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: Load(XamlReader)
  nameWithType: XamlReader.Load(XamlReader)
  fullName: System.Windows.Markup.XamlReader.Load(XamlReader)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Leest de XAML-invoer via een opgegeven <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> en retourneert een object dat is de hoofdmap van de objectboomstructuur van het bijbehorende."
  remarks: "De invoer <xref:System.Xaml.XamlReader>kan worden <xref:System.Windows.Baml2006.Baml2006Reader>.</xref:System.Windows.Baml2006.Baml2006Reader> </xref:System.Xaml.XamlReader> Dit is hoe u BAML kunt laden tijdens runtime, of voor lokalisatie hulpprogramma doeleinden."
  syntax:
    content: public static object Load (System.Xaml.XamlReader reader);
    parameters:
    - id: reader
      type: System.Xaml.XamlReader
      description: "A <xref href=&quot;System.Xaml.XamlReader&quot;></xref> object. Dit moet worden geïnitialiseerd met invoer XAML."
    return:
      type: System.Object
      description: "Het object dat is de hoofdmap van de structuur van het gemaakte object."
  overload: System.Windows.Markup.XamlReader.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: Load(XmlReader)
  nameWithType: XamlReader.Load(XmlReader)
  fullName: System.Windows.Markup.XamlReader.Load(XmlReader)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Leest de XAML-invoer in de opgegeven <xref:System.Xml.XmlReader>en retourneert een object dat is de hoofdmap van de bijbehorende objectstructuur.</xref:System.Xml.XmlReader>"
  remarks: ''
  example:
  - "The following example converts a <xref:System.Windows.Controls.Button> into a string using the <xref:System.Windows.Markup.XamlWriter> class.  The string is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.  \n  \n [!code-cs[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/add/codesnippet/csharp/XamlReaderWriterSnippets/Window1.xaml.cs#xamlreaderloadxmlreader)]\n [!code-vb[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/add/codesnippet/visualbasic/xamlreaderwritersnippets/window1.xaml.vb#xamlreaderloadxmlreader)]"
  syntax:
    content: public static object Load (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "De <xref:System.Xml.XmlReader>die de invoer laden in XML-vorm XAML al is geladen.</xref:System.Xml.XmlReader>"
    return:
      type: System.Object
      description: "Het object dat is de hoofdmap van de structuur van het gemaakte object."
  overload: System.Windows.Markup.XamlReader.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)
  id: Load(System.IO.Stream,System.Windows.Markup.ParserContext)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: Load(Stream,ParserContext)
  nameWithType: XamlReader.Load(Stream,ParserContext)
  fullName: System.Windows.Markup.XamlReader.Load(Stream,ParserContext)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Leest de XAML-invoer in de opgegeven <xref:System.IO.Stream>en retourneert een object dat is de hoofdmap van de bijbehorende objectstructuur.</xref:System.IO.Stream>"
  syntax:
    content: public static object Load (System.IO.Stream stream, System.Windows.Markup.ParserContext parserContext);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "De stroom waarin de invoer voor het laden van XAML."
    - id: parserContext
      type: System.Windows.Markup.ParserContext
      description: "Contextinformatie die wordt gebruikt door de parser."
    return:
      type: System.Object
      description: "Het object dat is de hoofdmap van de structuur van het gemaakte object."
  overload: System.Windows.Markup.XamlReader.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>parserContext</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)
  id: LoadAsync(System.IO.Stream)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: LoadAsync(Stream)
  nameWithType: XamlReader.LoadAsync(Stream)
  fullName: System.Windows.Markup.XamlReader.LoadAsync(Stream)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Leest de XAML-invoer in de opgegeven <xref:System.IO.Stream>en retourneert de hoofdmap van de bijbehorende objectstructuur.</xref:System.IO.Stream>"
  remarks: "Een object dat is alleen het hoofdobject wordt in eerste instantie geretourneerd door een asynchrone bewerking voor het laden van XAML. Asynchroon, blijft het XAML vervolgens parseren en alle onderliggende objecten onder de hoofdmap zijn ingevuld. Dit is in tegenstelling tot de gebruikelijke WPF XAML gedrag en de interactie met WPF-concepten van de levensduur van het object te verwerken. In de interactie met de gebruikelijke (niet-async), worden alle eigenschappen van een object met inbegrip van alle onderliggende verzamelingen gevuld voordat het retourneren van een element en rapportage deze zo geladen. Dit gedrag is gelijk aan een beneden methodologie voor het maken van de boomstructuur waar het hoofdobject het laatste object weer beschikbaar is.       U doorgaans het geretourneerde object naar een locatie in object-structuur van uw toepassing WPF zou toewijzen, in de wetenschap dat inhoud mogelijk nog steeds worden ingevuld en lay-out incrementele updates mogelijk als de volledige inhoud als onderdeel van de gebruikersinterface wordt weergegeven. Daarom is het typische te isoleren of te virtualiseren asynchroon geladen objecten van XAML en toepassingsspecifieke logica of toepassingsstatus gebruiken om u te waarschuwen als <xref:System.Windows.Markup.XamlReader.LoadCompleted>wordt verwerkt.</xref:System.Windows.Markup.XamlReader.LoadCompleted>       Opdat LoadAsync asynchroon laden van XAML invoer het hoofdelement in de XAML invoer moet het kenmerk en waarde bevatten `x:SynchronousMode=&quot;Async&quot;`. De waarde behandeld als hoofdlettergevoelig. Als de basis van XAML-invoer geen bevat `x:SynchronousMode=&quot;Async&quot;`geen uitzondering en de aanroep wordt verwerkt als een synchrone belasting (Zie <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29>).</xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29>       Slechts één asynchrone laadbewerking per exemplaar van de <xref:System.Windows.Markup.XamlReader>klasse kan worden uitgevoerd op een tijdstip.</xref:System.Windows.Markup.XamlReader>  Als meer dan een asynchrone bewerking is geprobeerd op hetzelfde exemplaar van de <xref:System.Windows.Markup.XamlReader>klasse een <xref:System.InvalidOperationException>gegenereerd.</xref:System.InvalidOperationException> </xref:System.Windows.Markup.XamlReader>"
  syntax:
    content: public object LoadAsync (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "De stroom met de invoer voor het laden van XAML."
    return:
      type: System.Object
      description: "Het object dat is de hoofdmap van de structuur van het gemaakte object."
  overload: System.Windows.Markup.XamlReader.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meerdere load-bewerkingen in behandeling zijn als dezelfde <xref href=&quot;System.Windows.Markup.XamlReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)
  id: LoadAsync(System.Xml.XmlReader)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: LoadAsync(XmlReader)
  nameWithType: XamlReader.LoadAsync(XmlReader)
  fullName: System.Windows.Markup.XamlReader.LoadAsync(XmlReader)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Leest de XAML-invoer in de opgegeven <xref:System.Xml.XmlReader>en retourneert de hoofdmap van de bijbehorende objectstructuur.</xref:System.Xml.XmlReader>"
  remarks: "Een object dat is alleen het hoofdobject wordt in eerste instantie geretourneerd door een asynchrone bewerking voor het laden van XAML. Asynchroon, blijft het XAML vervolgens parseren en alle onderliggende objecten onder de hoofdmap zijn ingevuld. Dit is in tegenstelling tot de gebruikelijke WPF XAML gedrag en de interactie met WPF-concepten van de levensduur van het object te verwerken. In de interactie met de gebruikelijke (niet-async), worden alle eigenschappen van een object met inbegrip van alle onderliggende verzamelingen gevuld voordat het retourneren van een element en rapportage deze zo geladen. Dit gedrag is gelijk aan een beneden methodologie voor het maken van de boomstructuur waar het hoofdobject het laatste object weer beschikbaar is.       U doorgaans zou toewijzen aan het geretourneerde object LoadAsync naar een locatie in object-structuur van uw toepassing, in de wetenschap dat inhoud mogelijk nog steeds worden ingevuld en indeling voor incrementele updates mogelijk als de volledige inhoud als onderdeel van de gebruikersinterface wordt weergegeven. Daarom is het typische te isoleren of te virtualiseren asynchroon geladen objecten van XAML en toepassingsspecifieke logica of toepassingsstatus gebruiken om u te waarschuwen als <xref:System.Windows.Markup.XamlReader.LoadCompleted>wordt verwerkt.</xref:System.Windows.Markup.XamlReader.LoadCompleted>       Opdat LoadAsync laden van XAML invoer asynchroon, het hoofdelement in de XAML-opmaak moet het kenmerk en een waarde bevatten `x:SynchronousMode=&quot;Async&quot;`. De waarde behandeld als hoofdlettergevoelig. Als de hoofdmap van de opmaak XAML geen bevat `x:SynchronousMode=&quot;Async&quot;`geen uitzondering en de aanroep in plaats daarvan wordt verwerkt als een synchrone belasting (Zie <xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29>).</xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29>       Slechts één asynchrone laadbewerking per exemplaar van de <xref:System.Windows.Markup.XamlReader>klasse kan worden uitgevoerd op een tijdstip.</xref:System.Windows.Markup.XamlReader>  Als meer dan een asynchrone bewerking is geprobeerd op hetzelfde exemplaar van de <xref:System.Windows.Markup.XamlReader>klasse een <xref:System.InvalidOperationException>gegenereerd.</xref:System.InvalidOperationException> </xref:System.Windows.Markup.XamlReader>"
  syntax:
    content: public object LoadAsync (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Een bestaande <xref:System.Xml.XmlReader>die is al geladen leestijd de XAML-invoer.</xref:System.Xml.XmlReader>"
    return:
      type: System.Object
      description: "De hoofdmap van de structuur van het gemaakte object."
  overload: System.Windows.Markup.XamlReader.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meerdere load-bewerkingen worden uitgevoerd als dezelfde <xref href=&quot;System.Windows.Markup.XamlReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)
  id: LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: LoadAsync(Stream,ParserContext)
  nameWithType: XamlReader.LoadAsync(Stream,ParserContext)
  fullName: System.Windows.Markup.XamlReader.LoadAsync(Stream,ParserContext)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Leest de XAML-invoer in de opgegeven <xref:System.IO.Stream>en retourneert de hoofdmap van de bijbehorende objectstructuur.</xref:System.IO.Stream>"
  remarks: "Een object dat is alleen het hoofdobject wordt in eerste instantie geretourneerd door een asynchrone bewerking voor het laden van XAML. Asynchroon, blijft het XAML vervolgens parseren en alle onderliggende objecten onder de hoofdmap zijn ingevuld. Dit is in tegenstelling tot de gebruikelijke WPF XAML gedrag en de interactie met WPF-concepten van de levensduur van het object te verwerken. In de interactie met de gebruikelijke (niet-async), worden alle eigenschappen van een object met inbegrip van alle onderliggende verzamelingen gevuld voordat het retourneren van een element en rapportage deze zo geladen. Dit gedrag is gelijk aan een beneden methodologie voor het maken van de boomstructuur waar het hoofdobject het laatste object weer beschikbaar is.       U doorgaans het geretourneerde object naar een locatie in object-structuur van uw toepassing zou toewijzen, in de wetenschap dat inhoud mogelijk nog steeds worden ingevuld en indeling voor incrementele updates mogelijk als de volledige inhoud als onderdeel van de gebruikersinterface wordt weergegeven. Daarom is het typische te isoleren of te virtualiseren asynchroon geladen objecten van XAML en toepassingsspecifieke logica of toepassingsstatus gebruiken om u te waarschuwen als <xref:System.Windows.Markup.XamlReader.LoadCompleted>wordt verwerkt.</xref:System.Windows.Markup.XamlReader.LoadCompleted>       Opdat LoadAsync markup asynchroon laden, het hoofdelement in de XAML-opmaak moet het kenmerk en waarde bevatten `x:SynchronousMode=&quot;Async&quot;`. De waarde behandeld als hoofdlettergevoelig. Als de hoofdmap van de opmaak XAML geen bevat `x:SynchronousMode=&quot;Async&quot;`geen uitzondering en de aanroep wordt verwerkt als een synchrone belasting (Zie <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29>).</xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29>       Slechts één asynchrone laadbewerking per exemplaar van de <xref:System.Windows.Markup.XamlReader>klasse kan worden uitgevoerd op een tijdstip.</xref:System.Windows.Markup.XamlReader>  Als meer dan een asynchrone bewerking is geprobeerd op hetzelfde exemplaar van de <xref:System.Windows.Markup.XamlReader>klasse een <xref:System.InvalidOperationException>gegenereerd.</xref:System.InvalidOperationException> </xref:System.Windows.Markup.XamlReader>"
  syntax:
    content: public object LoadAsync (System.IO.Stream stream, System.Windows.Markup.ParserContext parserContext);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Een stroom met de invoer voor het laden van XAML."
    - id: parserContext
      type: System.Windows.Markup.ParserContext
      description: "Contextinformatie die wordt gebruikt door de parser."
    return:
      type: System.Object
      description: "De hoofdmap van de structuur van het gemaakte object."
  overload: System.Windows.Markup.XamlReader.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meerdere load-bewerkingen worden uitgevoerd als dezelfde <xref href=&quot;System.Windows.Markup.XamlReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.LoadCompleted
  id: LoadCompleted
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: LoadCompleted
  nameWithType: XamlReader.LoadCompleted
  fullName: System.Windows.Markup.XamlReader.LoadCompleted
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Deze gebeurtenis treedt op wanneer een bewerking asynchroon laden is voltooid."
  remarks: "LoadCompleted ook treedt op wanneer een bewerking asynchroon laden annuleert."
  syntax:
    content: public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;
    return:
      type: System.ComponentModel.AsyncCompletedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.Parse(System.String)
  id: Parse(System.String)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: Parse(String)
  nameWithType: XamlReader.Parse(String)
  fullName: System.Windows.Markup.XamlReader.Parse(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "De XAML-invoer in de opgegeven tekenreeks leest en retourneert een object dat overeenkomt met naar de hoofdmap van de markering opgegeven."
  remarks: "Het aanroepen van de implementatie <xref:System.Windows.Markup.XamlReader.Load%2A>intern na het maken van een stroom uit de tekenreeks.</xref:System.Windows.Markup.XamlReader.Load%2A> Zie <xref:System.Windows.Markup.XamlReader.Load%2A>voor aanvullende informatie zoals mogelijke uitzonderingen.</xref:System.Windows.Markup.XamlReader.Load%2A>"
  syntax:
    content: public static object Parse (string xamlText);
    parameters:
    - id: xamlText
      type: System.String
      description: "De invoer XAML als één tekenreeks."
    return:
      type: System.Object
      description: "De hoofdmap van de structuur van het gemaakte object."
  overload: System.Windows.Markup.XamlReader.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.Parse(System.String,System.Windows.Markup.ParserContext)
  id: Parse(System.String,System.Windows.Markup.ParserContext)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: Parse(String,ParserContext)
  nameWithType: XamlReader.Parse(String,ParserContext)
  fullName: System.Windows.Markup.XamlReader.Parse(String,ParserContext)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Leest de XAML-opmaak in de opgegeven tekenreeks (met behulp van een opgegeven <xref href=&quot;System.Windows.Markup.ParserContext&quot;> </xref>) en een object dat overeenkomt met geretourneerd naar de hoofdmap van de markering opgegeven."
  remarks: "Het aanroepen van de implementatie <xref:System.Windows.Markup.XamlReader.Load%2A>intern na het maken van een stroom uit de tekenreeks.</xref:System.Windows.Markup.XamlReader.Load%2A> Zie <xref:System.Windows.Markup.XamlReader.Load%2A>voor aanvullende informatie zoals mogelijke uitzonderingen.</xref:System.Windows.Markup.XamlReader.Load%2A>"
  syntax:
    content: public static object Parse (string xamlText, System.Windows.Markup.ParserContext parserContext);
    parameters:
    - id: xamlText
      type: System.String
      description: "De invoer XAML als één tekenreeks."
    - id: parserContext
      type: System.Windows.Markup.ParserContext
      description: "Contextinformatie die wordt gebruikt door de parser."
    return:
      type: System.Object
      description: "De hoofdmap van de structuur van het gemaakte object."
  overload: System.Windows.Markup.XamlReader.Parse*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Markup.XamlReader.#ctor
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: XamlReader()
  nameWithType: XamlReader.XamlReader()
  fullName: System.Windows.Markup.XamlReader.XamlReader()
- uid: System.Windows.Markup.XamlReader.CancelAsync
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: CancelAsync()
  nameWithType: XamlReader.CancelAsync()
  fullName: System.Windows.Markup.XamlReader.CancelAsync()
- uid: System.Windows.Markup.XamlReader.GetWpfSchemaContext
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: GetWpfSchemaContext()
  nameWithType: XamlReader.GetWpfSchemaContext()
  fullName: System.Windows.Markup.XamlReader.GetWpfSchemaContext()
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Windows.Markup.XamlReader.Load(System.IO.Stream)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Load(Stream)
  nameWithType: XamlReader.Load(Stream)
  fullName: System.Windows.Markup.XamlReader.Load(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Load(XamlReader)
  nameWithType: XamlReader.Load(XamlReader)
  fullName: System.Windows.Markup.XamlReader.Load(XamlReader)
- uid: System.Xaml.XamlReader
  parent: System.Xaml
  isExternal: false
  name: XamlReader
  nameWithType: XamlReader
  fullName: System.Xaml.XamlReader
- uid: System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Load(XmlReader)
  nameWithType: XamlReader.Load(XmlReader)
  fullName: System.Windows.Markup.XamlReader.Load(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Load(Stream,ParserContext)
  nameWithType: XamlReader.Load(Stream,ParserContext)
  fullName: System.Windows.Markup.XamlReader.Load(Stream,ParserContext)
- uid: System.Windows.Markup.ParserContext
  parent: System.Windows.Markup
  isExternal: false
  name: ParserContext
  nameWithType: ParserContext
  fullName: System.Windows.Markup.ParserContext
- uid: System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: LoadAsync(Stream)
  nameWithType: XamlReader.LoadAsync(Stream)
  fullName: System.Windows.Markup.XamlReader.LoadAsync(Stream)
- uid: System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: LoadAsync(XmlReader)
  nameWithType: XamlReader.LoadAsync(XmlReader)
  fullName: System.Windows.Markup.XamlReader.LoadAsync(XmlReader)
- uid: System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: LoadAsync(Stream,ParserContext)
  nameWithType: XamlReader.LoadAsync(Stream,ParserContext)
  fullName: System.Windows.Markup.XamlReader.LoadAsync(Stream,ParserContext)
- uid: System.Windows.Markup.XamlReader.LoadCompleted
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: LoadCompleted
  nameWithType: XamlReader.LoadCompleted
  fullName: System.Windows.Markup.XamlReader.LoadCompleted
- uid: System.ComponentModel.AsyncCompletedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventHandler
  nameWithType: AsyncCompletedEventHandler
  fullName: System.ComponentModel.AsyncCompletedEventHandler
- uid: System.Windows.Markup.XamlReader.Parse(System.String)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Parse(String)
  nameWithType: XamlReader.Parse(String)
  fullName: System.Windows.Markup.XamlReader.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.XamlReader.Parse(System.String,System.Windows.Markup.ParserContext)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Parse(String,ParserContext)
  nameWithType: XamlReader.Parse(String,ParserContext)
  fullName: System.Windows.Markup.XamlReader.Parse(String,ParserContext)
- uid: System.Windows.Markup.XamlReader.#ctor*
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: XamlReader
  nameWithType: XamlReader.XamlReader
- uid: System.Windows.Markup.XamlReader.CancelAsync*
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: CancelAsync
  nameWithType: XamlReader.CancelAsync
- uid: System.Windows.Markup.XamlReader.GetWpfSchemaContext*
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: GetWpfSchemaContext
  nameWithType: XamlReader.GetWpfSchemaContext
- uid: System.Windows.Markup.XamlReader.Load*
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Load
  nameWithType: XamlReader.Load
- uid: System.Windows.Markup.XamlReader.LoadAsync*
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: LoadAsync
  nameWithType: XamlReader.LoadAsync
- uid: System.Windows.Markup.XamlReader.Parse*
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Parse
  nameWithType: XamlReader.Parse
