### YamlMime:ManagedReference
items:
- uid: System.Windows.FrameworkCompatibilityPreferences
  id: FrameworkCompatibilityPreferences
  children:
  - System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
  - System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
  - System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
  langs:
  - csharp
  name: FrameworkCompatibilityPreferences
  nameWithType: FrameworkCompatibilityPreferences
  fullName: System.Windows.FrameworkCompatibilityPreferences
  type: Class
  summary: "Bevat eigenschappen die opgeeft hoe een toepassing zich moet gedragen ten opzichte van WPF-functies die zich in de assembly PresentationFramework."
  syntax:
    content: public static class FrameworkCompatibilityPreferences
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
  id: AreInactiveSelectionHighlightBrushKeysSupported
  parent: System.Windows.FrameworkCompatibilityPreferences
  langs:
  - csharp
  name: AreInactiveSelectionHighlightBrushKeysSupported
  nameWithType: FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
  fullName: System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de toepassing moet worden gebruikt de <> </> *> en <> </> *> eigenschappen voor de kleuren van inactieve geselecteerde items."
  remarks: "De standaardwaarde van deze eigenschap is afhankelijk van welke versie van WPF die uw app-doelen.  Als uw app WPF 4.0 gericht of eerder, de standaardwaarde is `false`.  Als uw app WPF 4.5 gericht, is de standaardinstelling `true`.  Als u deze eigenschap gebruikt om het gedrag van WPF te wijzigen, moet u de waarde van de eigenschap vroeg in de levensduur van de app, zoals in de constructor van de klasse die eigenschappen van de toepassing overneemt wijzigen.  Nadat de waarde wordt gelezen, kunt u deze opnieuw niet wijzigen."
  syntax:
    content: public static bool AreInactiveSelectionHighlightBrushKeysSupported { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>de toepassing moet worden gebruikt de <> </> *> en <> </> *> eigenschappen voor de kleuren van geselecteerde items is inactief; anders<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
  id: KeepTextBoxDisplaySynchronizedWithTextProperty
  parent: System.Windows.FrameworkCompatibilityPreferences
  langs:
  - csharp
  name: KeepTextBoxDisplaySynchronizedWithTextProperty
  nameWithType: FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
  fullName: System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of een gegevensgebonden <xref href=&quot;System.Windows.Controls.TextBox&quot;> </xref> moet worden weergegeven in een tekenreeks die identiek is aan de waarde van de bron de bijbehorende <xref:System.Windows.Controls.TextBox.Text*>eigenschap</xref:System.Windows.Controls.TextBox.Text*>"
  remarks: "De standaardwaarde van deze eigenschap is afhankelijk van welke versie van WPF die uw app-doelen.  Als uw app WPF 4.0 gericht of eerder, de standaardwaarde is `false`.  Als uw app WPF 4.5 gericht, is de standaardinstelling `true`.  Als u deze eigenschap gebruikt om het gedrag van WPF te wijzigen, moet u de waarde van de eigenschap vroeg in de levensduur van de app, zoals in de constructor van de klasse die eigenschappen van de toepassing overneemt wijzigen.  Nadat de waarde wordt gelezen, kunt u deze opnieuw niet wijzigen."
  syntax:
    content: public static bool KeepTextBoxDisplaySynchronizedWithTextProperty { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een gegevensgebonden <xref href=&quot;System.Windows.Controls.TextBox&quot;> </xref> een tekenreeks die identiek is aan de waarde van de bron moet worden weergegeven in de <xref:System.Windows.Controls.TextBox.Text*>eigenschap; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Controls.TextBox.Text*>"
  overload: System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
  id: ShouldThrowOnCopyOrCutFailure
  parent: System.Windows.FrameworkCompatibilityPreferences
  langs:
  - csharp
  name: ShouldThrowOnCopyOrCutFailure
  nameWithType: FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
  fullName: System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of een mislukte kopiëren of knippen in een <xref href=&quot;System.Windows.Controls.Primitives.TextBoxBase&quot;> </xref> exemplaar resulteert in een <xref href=&quot;System.Runtime.InteropServices.ExternalException&quot;> </xref>."
  remarks: "Als een Klembord-bewerking, zoals mislukt met een **HRESULT 0x800401D0 (CLIPBRD_E_CANT_OPEN)** fout met een overeenkomende <xref:System.Runtime.InteropServices.ExternalException>(dit is een soort Exception) gegenereerd.</xref:System.Runtime.InteropServices.ExternalException>       Omdat de Win32 `OpenClipboard` API handelingen globaal goed geschreven toepassingen moeten aanroepen de bijbehorende `CloseClipboard` API zodra ze hun klembordbewerkingen hebt voltooid. Andere toepassingen die worden uitgevoerd in dezelfde sessie worden anders geen toegang tot de Klembordfuncties.       In WPF, wordt zoals een denial-of toegang tot het Klembord normaal gesproken genegeerd achtergrond. Echter voor toepassingen kunnen kiezen voor het ontvangen van een `ExternalException` bij fouten door de vlag ShouldThrowOnCopyOrCutFailure in te stellen op `true`. Voor het ontvangen van uitzonderingen uitschakelen ook vereist echter de toepassing voor het afhandelen van <xref:System.Windows.Input.ApplicationCommands.Cut%2A>en <xref:System.Windows.Input.ApplicationCommands.Copy%2A>RoutedUICommands via een <xref:System.Windows.Input.CommandBinding>, en vervolgens op alle TextBoxBase besturingselementen toepassen die binding (<xref:System.Windows.Controls.TextBox> en <xref:System.Windows.Controls.RichTextBox>) in de toepassing.</xref:System.Windows.Controls.RichTextBox> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.ApplicationCommands.Copy%2A> </xref:System.Windows.Input.ApplicationCommands.Cut%2A> De toepassing moet ervoor zorgen dat deze ExternalExceptions ten gevolge van kopiëren en knippen bewerkingen in de CommandBinding uitgevoerde handler verwerkt."
  syntax:
    content: public static bool ShouldThrowOnCopyOrCutFailure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een mislukte kopiëren of knippen in een <xref href=&quot;System.Windows.Controls.Primitives.TextBoxBase&quot;> </xref> exemplaar resulteert in een <xref href=&quot;System.Runtime.InteropServices.ExternalException&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
  parent: System.Windows.FrameworkCompatibilityPreferences
  isExternal: false
  name: AreInactiveSelectionHighlightBrushKeysSupported
  nameWithType: FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
  fullName: System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
  parent: System.Windows.FrameworkCompatibilityPreferences
  isExternal: false
  name: KeepTextBoxDisplaySynchronizedWithTextProperty
  nameWithType: FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
  fullName: System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
- uid: System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
  parent: System.Windows.FrameworkCompatibilityPreferences
  isExternal: false
  name: ShouldThrowOnCopyOrCutFailure
  nameWithType: FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
  fullName: System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
- uid: System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported*
  parent: System.Windows.FrameworkCompatibilityPreferences
  isExternal: false
  name: AreInactiveSelectionHighlightBrushKeysSupported
  nameWithType: FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
- uid: System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty*
  parent: System.Windows.FrameworkCompatibilityPreferences
  isExternal: false
  name: KeepTextBoxDisplaySynchronizedWithTextProperty
  nameWithType: FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
- uid: System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure*
  parent: System.Windows.FrameworkCompatibilityPreferences
  isExternal: false
  name: ShouldThrowOnCopyOrCutFailure
  nameWithType: FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
