### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebApplicationInformation
  id: WebApplicationInformation
  children:
  - System.Web.Management.WebApplicationInformation.ApplicationDomain
  - System.Web.Management.WebApplicationInformation.ApplicationPath
  - System.Web.Management.WebApplicationInformation.ApplicationVirtualPath
  - System.Web.Management.WebApplicationInformation.FormatToString(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebApplicationInformation.MachineName
  - System.Web.Management.WebApplicationInformation.ToString
  - System.Web.Management.WebApplicationInformation.TrustLevel
  langs:
  - csharp
  name: WebApplicationInformation
  nameWithType: WebApplicationInformation
  fullName: System.Web.Management.WebApplicationInformation
  type: Class
  summary: "Bevat informatie die is gekoppeld aan de health-gebeurtenissen."
  remarks: "ASP.NET-statuscontrole kunt personeel voor productie en bewerkingen voor het beheren van de geïmplementeerde Web-Apps. De <xref:System.Web.Management?displayProperty=fullName>-naamruimte bevat de typen van de health-gebeurtenissen die verantwoordelijk is voor het verpakken van de toepassingsgegevens van de health-status en de providertypen verantwoordelijk voor het verwerken van deze gegevens.</xref:System.Web.Management?displayProperty=fullName> Het bevat ook ondersteunende typen die bij het beheer van health-gebeurtenissen helpen.       Instanties van de klasse WebApplicationInformation bevatten informatie die wordt verkregen met behulp van een van de typen die zijn afgeleid van de <xref:System.Web.Management.WebManagementEvent>type.</xref:System.Web.Management.WebManagementEvent>       Uw toepassing moet de juiste machtigingen voor toegang tot beveiligde informatie die door dit type.       Hier volgt een fragment van een configuratiebestand dat die u kunt ASP.NET inschakelen fout gebeurtenissen kan loggen die toepassingsinformatie bevatten.      ```   <healthMonitoring      enabled=&quot;true&quot; heartBeatInterval=&quot;0&quot;>          <rules>        <add           name=&quot;All Errors Default&quot;          eventName=&quot;All Errors&quot;          provider=&quot;EventLogProvider&quot;          profile=&quot;Default&quot;          minInterval=&quot;00:01:00&quot; />       </rules>      </healthMonitoring>   ```      > [!NOTE]> In de meeste gevallen kunt u zich de ASP.NET-statuscontrole typen gebruiken als ze zijn geïmplementeerd en u de system health monitoring te regelen door te geven waarden in de `healthMonitoring` configuratiesectie. U kunt ook afgeleid van de statuscontrole typen voor het maken van uw eigen aangepaste gebeurtenissen en providers. Zie het voorbeeld in dit onderwerp voor een voorbeeld van een aangepaste gebeurtenisklasse maken."
  example:
  - "The following code example has two parts. The first part is an excerpt of the configuration file that enables ASP.NET to use a custom event. The second shows how to create that custom event by using the WebApplicationInformation class.  \n  \n Ensure that your custom event is raised at the proper time, that is, when the equivalent system health event it replaces would be raised.  \n  \n```  \n<healthMonitoring   \n  enabled=\"true\" heartBeatInterval=\"0\">  \n  \n  <eventMappings>   \n    <add name=\"SampleApplicationInformation\"   \n        type=\"SamplesAspNet.SampleWebApplicationInformation, webapplicationinformation, Version=1.0.1585.27289, Culture=neutral, PublicKeyToken=3648e5c763a8239f, processorArchitecture=MSIL\"/>   \n  </eventMappings>  \n  \n  <rules>   \n    <add name=\"Custom Application Information\"  \n      eventName=\"SampleApplicationInformation\"   \n      provider=\"EventLogProvider\"    \n      profile=\"Default\"/>   \n</rules>  \n  \n</healthMonitoring>  \n```  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#1](~/add/codesnippet/visualbasic/t-system.web.management._26_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#1](~/add/codesnippet/csharp/t-system.web.management._26_1.cs)]"
  syntax:
    content: public sealed class WebApplicationInformation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.ApplicationDomain
  id: ApplicationDomain
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: ApplicationDomain
  nameWithType: WebApplicationInformation.ApplicationDomain
  fullName: System.Web.Management.WebApplicationInformation.ApplicationDomain
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Hiermee haalt u de naam van de huidige toepassing-domein."
  remarks: ''
  example:
  - "The following code example shows how to obtain the application domain name.  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#4](~/add/codesnippet/visualbasic/p-system.web.management._46_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#4](~/add/codesnippet/csharp/p-system.web.management._46_1.cs)]"
  syntax:
    content: public string ApplicationDomain { get; }
    return:
      type: System.String
      description: "Hiermee haalt u de domeinnaam van de toepassing."
  overload: System.Web.Management.WebApplicationInformation.ApplicationDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.ApplicationPath
  id: ApplicationPath
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: ApplicationPath
  nameWithType: WebApplicationInformation.ApplicationPath
  fullName: System.Web.Management.WebApplicationInformation.ApplicationPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Hiermee haalt u het fysieke pad van de toepassing."
  remarks: "Deze eigenschap moet de juiste machtigingen om te worden geopend. Raadpleeg de sectie machtigingen."
  example:
  - "The following code example shows how to obtain the application physical path.  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#5](~/add/codesnippet/visualbasic/p-system.web.management._44_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#5](~/add/codesnippet/csharp/p-system.web.management._44_1.cs)]"
  syntax:
    content: public string ApplicationPath { get; }
    return:
      type: System.String
      description: "Het fysieke pad van de toepassing."
  overload: System.Web.Management.WebApplicationInformation.ApplicationPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath
  id: ApplicationVirtualPath
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: ApplicationVirtualPath
  nameWithType: WebApplicationInformation.ApplicationVirtualPath
  fullName: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Hiermee haalt u het logische pad van de toepassing."
  remarks: ''
  example:
  - "The following code example shows how to obtain the application logical path.  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#6](~/add/codesnippet/visualbasic/p-system.web.management._36_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#6](~/add/codesnippet/csharp/p-system.web.management._36_1.cs)]"
  syntax:
    content: public string ApplicationVirtualPath { get; }
    return:
      type: System.String
      description: "Het logische pad van de toepassing."
  overload: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.FormatToString(System.Web.Management.WebEventFormatter)
  id: FormatToString(System.Web.Management.WebEventFormatter)
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: FormatToString(WebEventFormatter)
  nameWithType: WebApplicationInformation.FormatToString(WebEventFormatter)
  fullName: System.Web.Management.WebApplicationInformation.FormatToString(WebEventFormatter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Informatie over de toepassing wordt opgemaakt."
  remarks: "De methode FormatToString biedt een uniforme indeling voor gebeurtenisinformatie nuttig is als de gegevens van de gebeurtenis moet zijn aangemeld en later weergegeven voor de gebruiker. Intern wordt aangeroepen wanneer de provider wordt aangeroepen in een van de <xref:System.Web.Management.WebBaseEvent.ToString%2A>methoden.</xref:System.Web.Management.WebBaseEvent.ToString%2A>      > [!NOTE] > Bij het opmaken van uw aangepaste gebeurtenisgegevens om weer te geven, vervangt u de methode FormatToString in plaats van de <xref:System.Web.Management.WebApplicationInformation.ToString%2A>methode.</xref:System.Web.Management.WebApplicationInformation.ToString%2A> Hiermee worden overschreven of knoeien met gevoelige systeemgegevens voorkomen."
  example:
  - "The following code example shows how to format custom information.  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#9](~/add/codesnippet/visualbasic/e7244ae1-98b8-46f8-b4c6-_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#9](~/add/codesnippet/csharp/e7244ae1-98b8-46f8-b4c6-_1.cs)]"
  syntax:
    content: public void FormatToString (System.Web.Management.WebEventFormatter formatter);
    parameters:
    - id: formatter
      type: System.Web.Management.WebEventFormatter
      description: "De <xref href=&quot;System.Web.Management.WebEventFormatter&quot;> </xref> die de tabs en inspringingen instellingen gebruikt om de health-gebeurtenisinformatie bevat."
  overload: System.Web.Management.WebApplicationInformation.FormatToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.MachineName
  id: MachineName
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: MachineName
  nameWithType: WebApplicationInformation.MachineName
  fullName: System.Web.Management.WebApplicationInformation.MachineName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Hiermee haalt u de naam van de toepassing-machine."
  remarks: ''
  example:
  - "The following code example shows how to obtain the machine name.  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#7](~/add/codesnippet/visualbasic/p-system.web.management._25_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#7](~/add/codesnippet/csharp/p-system.web.management._25_1.cs)]"
  syntax:
    content: public string MachineName { get; }
    return:
      type: System.String
      description: "De naam van de computer waarop de toepassing wordt uitgevoerd."
  overload: System.Web.Management.WebApplicationInformation.MachineName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.ToString
  id: ToString
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: ToString()
  nameWithType: WebApplicationInformation.ToString()
  fullName: System.Web.Management.WebApplicationInformation.ToString()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Indelingen gebeurtenisgegevens om weer te geven."
  remarks: "De <xref:System.Web.Management.WebBaseEvent.ToString%2A>methode indelingen gebeurtenisgegevens door het aanroepen van de <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A>methode.</xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> </xref:System.Web.Management.WebBaseEvent.ToString%2A>      > [!NOTE] > Bij het opmaken van uw aangepaste gebeurtenisgegevens om weer te geven, overschrijven de <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A>methode in plaats van deze methode ToString.</xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> Hiermee worden overschreven of knoeien met gevoelige systeemgegevens voorkomen."
  example:
  - For an example of using the ToString method, see <xref:System.Web.Management.WebEventProvider>.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "De gegevens van de gebeurtenis."
  overload: System.Web.Management.WebApplicationInformation.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationInformation.TrustLevel
  id: TrustLevel
  parent: System.Web.Management.WebApplicationInformation
  langs:
  - csharp
  name: TrustLevel
  nameWithType: WebApplicationInformation.TrustLevel
  fullName: System.Web.Management.WebApplicationInformation.TrustLevel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Hiermee haalt u het vertrouwensniveau van toepassing."
  remarks: "Deze eigenschap moet de juiste machtigingen om te worden geopend. Raadpleeg de sectie machtigingen."
  example:
  - "The following example shows how to obtain the application-trust-level information.  \n  \n [!code-vb[System.Web.Management.WebApplicationInformation#8](~/add/codesnippet/visualbasic/p-system.web.management._2_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationInformation#8](~/add/codesnippet/csharp/p-system.web.management._2_1.cs)]"
  syntax:
    content: public string TrustLevel { get; }
    return:
      type: System.String
      description: "Het vertrouwensniveau van de toepassing."
  overload: System.Web.Management.WebApplicationInformation.TrustLevel*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Management.WebApplicationInformation.ApplicationDomain
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ApplicationDomain
  nameWithType: WebApplicationInformation.ApplicationDomain
  fullName: System.Web.Management.WebApplicationInformation.ApplicationDomain
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Management.WebApplicationInformation.ApplicationPath
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ApplicationPath
  nameWithType: WebApplicationInformation.ApplicationPath
  fullName: System.Web.Management.WebApplicationInformation.ApplicationPath
- uid: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ApplicationVirtualPath
  nameWithType: WebApplicationInformation.ApplicationVirtualPath
  fullName: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath
- uid: System.Web.Management.WebApplicationInformation.FormatToString(System.Web.Management.WebEventFormatter)
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: FormatToString(WebEventFormatter)
  nameWithType: WebApplicationInformation.FormatToString(WebEventFormatter)
  fullName: System.Web.Management.WebApplicationInformation.FormatToString(WebEventFormatter)
- uid: System.Web.Management.WebEventFormatter
  parent: System.Web.Management
  isExternal: false
  name: WebEventFormatter
  nameWithType: WebEventFormatter
  fullName: System.Web.Management.WebEventFormatter
- uid: System.Web.Management.WebApplicationInformation.MachineName
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: MachineName
  nameWithType: WebApplicationInformation.MachineName
  fullName: System.Web.Management.WebApplicationInformation.MachineName
- uid: System.Web.Management.WebApplicationInformation.ToString
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ToString()
  nameWithType: WebApplicationInformation.ToString()
  fullName: System.Web.Management.WebApplicationInformation.ToString()
- uid: System.Web.Management.WebApplicationInformation.TrustLevel
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: TrustLevel
  nameWithType: WebApplicationInformation.TrustLevel
  fullName: System.Web.Management.WebApplicationInformation.TrustLevel
- uid: System.Web.Management.WebApplicationInformation.ApplicationDomain*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ApplicationDomain
  nameWithType: WebApplicationInformation.ApplicationDomain
- uid: System.Web.Management.WebApplicationInformation.ApplicationPath*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ApplicationPath
  nameWithType: WebApplicationInformation.ApplicationPath
- uid: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ApplicationVirtualPath
  nameWithType: WebApplicationInformation.ApplicationVirtualPath
- uid: System.Web.Management.WebApplicationInformation.FormatToString*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: FormatToString
  nameWithType: WebApplicationInformation.FormatToString
- uid: System.Web.Management.WebApplicationInformation.MachineName*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: MachineName
  nameWithType: WebApplicationInformation.MachineName
- uid: System.Web.Management.WebApplicationInformation.ToString*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: ToString
  nameWithType: WebApplicationInformation.ToString
- uid: System.Web.Management.WebApplicationInformation.TrustLevel*
  parent: System.Web.Management.WebApplicationInformation
  isExternal: false
  name: TrustLevel
  nameWithType: WebApplicationInformation.TrustLevel
