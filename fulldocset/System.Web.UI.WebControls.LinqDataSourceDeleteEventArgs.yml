### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  id: LinqDataSourceDeleteEventArgs
  children:
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  langs:
  - csharp
  name: LinqDataSourceDeleteEventArgs
  nameWithType: LinqDataSourceDeleteEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  type: Class
  summary: "Biedt gegevens voor de <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Deleting&quot;> </xref> gebeurtenis."
  remarks: "Het object LinqDataSourceDeleteEventArgs wordt doorgegeven aan een handler voor de <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>gebeurtenis.</xref:System.Web.UI.WebControls.LinqDataSource.Deleting> De <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>eigenschap bevat de gegevens die worden verwijderd.</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>       Als het object waarmee de gegevensbron een validatie-uitzondering genereert voordat deze wordt verwijderd als de gegevens, de <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>eigenschap bevat een exemplaar van de <xref:System.Web.UI.WebControls.LinqDataSourceValidationException>klasse.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException> </xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> U kunt de validatie van uitzonderingen via ophalen de <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>eigenschap.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> Als er geen validatie uitzondering, de <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>eigenschap bevat `null`.</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> Als u de uitzonderingen validatie verwerken en niet wilt dat de uitzondering wordt opnieuw gemaakt, stelt de <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A>eigenschap `true`.</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A>       U maakt een gebeurtenis-handler voor de <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>gebeurtenis voor het valideren van de gegevens, om te onderzoeken validatiefouten uit de gegevensklasse of de delete-bewerking te annuleren.</xref:System.Web.UI.WebControls.LinqDataSource.Deleting> U de bewerking delete annuleren door in te stellen de <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>eigenschap `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Standaard de <xref:System.Web.UI.WebControls.LinqDataSource>staat besturingselement slaat de oorspronkelijke uit de gegevensbron in de weergave waarden in de webpagina wordt weergegeven, met uitzondering van de waarvan <xref:System.Data.Linq.Mapping.ColumnAttribute>kenmerk is gemarkeerd als `UpdateCheck.Never`.</xref:System.Data.Linq.Mapping.ColumnAttribute> </xref:System.Web.UI.WebControls.LinqDataSource> De integriteit van de gegevens LINQ naar SQL automatisch gecontroleerd voordat de gegevens te verwijderen. Dit gebeurt door het vergelijken van de huidige waarden in de gegevensbron met de oorspronkelijke waarden die zijn opgeslagen in de weergavestatus. U kunt aanvullende gegevensvalidatie uitvoeren door het maken van een handler voor de <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>gebeurtenis.</xref:System.Web.UI.WebControls.LinqDataSource.Deleting>"
  example:
  - "The following example shows how to cancel the delete operation based on a property in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property and a value from the Web page. In the example, users must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that they want to delete a product record when its `OnSale` property is set to `true`.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_255_1.vb)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_255_1.cs)]"
  syntax:
    content: 'public class LinqDataSourceDeleteEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: LinqDataSourceDeleteEventArgs(Object)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&quot;> </xref> klasse."
  syntax:
    content: public LinqDataSourceDeleteEventArgs (object originalObject);
    parameters:
    - id: originalObject
      type: System.Object
      description: "Een object van het opgegeven type in de <xref:System.Web.UI.WebControls.LinqDataSource.TableName*>eigenschap met de gegevens te verwijderen.</xref:System.Web.UI.WebControls.LinqDataSource.TableName*>"
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  id: '#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)'
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&quot;> </xref> klasse met de opgegeven uitzondering."
  syntax:
    content: public LinqDataSourceDeleteEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);
    parameters:
    - id: exception
      type: System.Web.UI.WebControls.LinqDataSourceValidationException
      description: "De uitzondering die is opgetreden bij het valideren van de gegevens te verwijderen."
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: LinqDataSourceDeleteEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Hiermee haalt u de uitzondering die is opgetreden tijdens het verifiÃ«ren van de gegevens voordat de bewerking delete."
  remarks: "Als een validatie-uitzondering is opgetreden voordat de delete-bewerking wordt uitgevoerd, wordt de uitzondering wordt opgeslagen in de eigenschap uitzondering. In de gebeurtenishandler voor de <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>gebeurtenis, kunt u de uitzondering via de eigenschap Exception ophalen.</xref:System.Web.UI.WebControls.LinqDataSource.Deleting>"
  syntax:
    content: public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }
    return:
      type: System.Web.UI.WebControls.LinqDataSourceValidationException
      description: "De uitzondering, als er is een fout opgetreden; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: LinqDataSourceDeleteEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of een waarde die aangeeft of de uitzondering is afgehandeld en dat deze moet niet worden gegenereerd opnieuw ingesteld."
  remarks: "Kunt u een gebeurtenis-handler voor de <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>gebeurtenis te onderzoeken validatie uitzonderingen die zijn geretourneerd voordat de bewerking delete.</xref:System.Web.UI.WebControls.LinqDataSource.Deleting> Als u de uitzondering verwerken en niet wilt dat deze opnieuw worden gegenereerd, de ExceptionHandled-eigenschap instelt op `true`. Als u niet de eigenschap ExceptionHandled instelt op `true`, de uitzondering wordt doorgegeven aan de volgende gebeurtenis-handler in de aanroepstack."
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de uitzondering is afgehandeld; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  id: OriginalObject
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: OriginalObject
  nameWithType: LinqDataSourceDeleteEventArgs.OriginalObject
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Hiermee haalt u het object waarmee de gegevens te verwijderen."
  remarks: "U kunt de eigenschap OriginalObject gebruiken om te communiceren met de gegevens voordat deze wordt verwijderd. U kunt de gegevens valideren of u kunt de gebeurtenis annuleren door in te stellen de <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>eigenschap `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> U kunt wijzigen welke record wordt verwijderd door de waarde of de waarden van het object in de eigenschap OriginalObject te wijzigen."
  example:
  - "The following example shows how to cancel the delete operation based on a property in the OriginalObject property and a value from the Web page. In the example, users must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that they want to delete a product record when its `OnSale` property is set to `true`.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_196_1.vb)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_196_1.cs)]"
  syntax:
    content: public object OriginalObject { get; }
    return:
      type: System.Object
      description: "Een object van het opgegeven type in de <xref:System.Web.UI.WebControls.LinqDataSource.TableName*>eigenschap met de gegevens te verwijderen.</xref:System.Web.UI.WebControls.LinqDataSource.TableName*>"
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: LinqDataSourceDeleteEventArgs(Object)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceValidationException
  nameWithType: LinqDataSourceValidationException
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceDeleteEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceDeleteEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: OriginalObject
  nameWithType: LinqDataSourceDeleteEventArgs.OriginalObject
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: LinqDataSourceDeleteEventArgs
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceDeleteEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceDeleteEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: OriginalObject
  nameWithType: LinqDataSourceDeleteEventArgs.OriginalObject
