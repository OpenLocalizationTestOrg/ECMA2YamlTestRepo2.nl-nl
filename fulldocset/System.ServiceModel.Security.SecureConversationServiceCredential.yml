### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.SecureConversationServiceCredential
  id: SecureConversationServiceCredential
  children:
  - System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  - System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  langs:
  - csharp
  name: SecureConversationServiceCredential
  nameWithType: SecureConversationServiceCredential
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential
  type: Class
  summary: "Referentie-instellingen voor een veilige uitwisseling-service biedt."
  remarks: "Veilige uitwisselingen wordt gebruikgemaakt van de uitwisseling van meerdere berichten en een beveiliging Context Token (eenvoudige Opvanglade) gebruiken om beveiliging te waarborgen. De eenvoudige Opvanglade wordt gedeeld door de communicerende partijen gedurende de levensduur van een communicatiesessie. Een service kunt twee soorten SCTs uitgeven:-de eerste is een eenvoudige op basis van sessies Opvanglade die een unieke id bevat. Berichten voeren de-id en de service onderhoudt een status-toewijzing cache die is toegewezen tussen de eenvoudige Opvanglade-id&quot;s en de inhoud (zoals claims, beveiligingssleutels, enzovoort). Een correct functioneert client moet een eenvoudige Opvanglade annulering om de service optimaliseren van de cache-resources te verzenden. Als u deze klasse door aan te roepen instantiÃ«ren <xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A>met de `requireCancellation` gelijk zijn aan de parameter `true`, de eenvoudige Opvanglade op deze manier wordt uitgegeven.</xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A>      -De tweede is een zelfstandig eenvoudige Opvanglade die zich in een cookie op de client bevindt. Deze eenvoudige Opvanglade bevat informatie over de hele provincie, dus vereist statusbeheer van de service noch eenvoudige Opvanglade annulering van de client. Dit wordt soms een eenvoudige &quot;cookie-modus&quot; Opvanglade genoemd. Omdat de eenvoudige Opvanglade de informatie over de hele status bevat, is het formaat groter dan in het geval op basis van sessies. Met op basis van sessies SCTs slaat de service veel van de statusinformatie. Echter, omdat het zelfstandige kan worden gebruikt voor service-levensduur en tijdens het afsluiten van de service en start deze opnieuw."
  syntax:
    content: public sealed class SecureConversationServiceCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  id: SecurityContextClaimTypes
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  langs:
  - csharp
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Hiermee wordt een verzameling van de <xref:System.Type>claims voor de cookie-serialisatie.</xref:System.Type>"
  remarks: "Voor het serialiseren van claims in eenvoudige Opvanglade cookies, [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] gebruikt <xref:System.Runtime.Serialization.DataContractSerializer>als standaardwaarde.</xref:System.Runtime.Serialization.DataContractSerializer> Omdat de bron van de Claim uitbreidbaar is, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] kunt u een lijst met bekende resourcetypen bieden. Dit is nuttig de <xref:System.Runtime.Serialization.DataContractSerializer>tijdens het deserialiseren van de claims in de cookie zodat deze de originele sterk getypeerde objecten kunt terugkeren.</xref:System.Runtime.Serialization.DataContractSerializer>"
  example:
  - "The following code shows how to get this property.  \n  \n [!code-cs[S_UE_SecureConversationServiceCredential#2](~/add/codesnippet/csharp/e8a69534-ad60-48be-9b2e-_1.cs)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<Type> SecurityContextClaimTypes { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Type}
      description: "Een verzameling van de <xref:System.Type>claims voor de cookie-serialisatie.</xref:System.Type>"
  overload: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  id: SecurityStateEncoder
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  langs:
  - csharp
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Opgehaald of ingesteld met een aangepaste <xref href=&quot;System.ServiceModel.Security.SecurityStateEncoder&quot;> </xref> voor coderen en decoderen van cookie-serialisatie."
  remarks: "In &quot;cookiemodus&quot; beveiligingstoken een service de client een context (eenvoudige Opvanglade) in de vorm van een cookie naar de client zodat er geen om de beveiligingsstatus van alle te behouden. De client verzendt de cookie terug in de aanvraag, zodat de service weet hoe de beveiliging opheffen en controleer of het request-bericht. Omdat de eenvoudige Opvanglade vaak wordt verzonden via een niet-beveiligde netwerk, moeten worden beveiligd.       Standaard [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] maakt gebruik van de <xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder>klasse voor het beveiligen van de cookie met behulp van de Data Protection API (DPAPI).</xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder> Voor DPAPI werken in een webfarm-omgeving, moeten alle back-end-services worden uitgevoerd als dezelfde domeingebruikersaccount. Met andere woorden, als de service dat web gehost is, moet klikt u vervolgens het werkproces van Internet Information Services (IIS) worden geconfigureerd om te worden uitgevoerd als een domeingebruiker.       Deze eigenschap kunt u een aangepaste <xref:System.ServiceModel.Security.SecurityStateEncoder>voor het versleutelen en ontsleutelen van de cookie en niet afhankelijk zijn van DPAPI.</xref:System.ServiceModel.Security.SecurityStateEncoder>"
  example:
  - "The following code shows how to set this property.  \n  \n [!code-cs[S_UE_SecureConversationServiceCredential#1](~/add/codesnippet/csharp/72c1f567-836b-4b6f-bbcd-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Security.SecurityStateEncoder SecurityStateEncoder { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityStateEncoder
      description: "Een <xref href=&quot;System.ServiceModel.Security.SecurityStateEncoder&quot;> </xref> -object, dat een aanpassing is van <xref href=&quot;System.ServiceModel.Security.DataProtectionSecurityStateEncoder&quot;> </xref>."
  overload: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
- uid: System.Collections.ObjectModel.Collection{System.Type}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Type>
  nameWithType: Collection<Type>
  fullName: System.Collections.ObjectModel.Collection<System.Type>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
- uid: System.ServiceModel.Security.SecurityStateEncoder
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityStateEncoder
  nameWithType: SecurityStateEncoder
  fullName: System.ServiceModel.Security.SecurityStateEncoder
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes*
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder*
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
