### YamlMime:ManagedReference
items:
- uid: System.Web.IHttpHandler
  id: IHttpHandler
  children:
  - System.Web.IHttpHandler.IsReusable
  - System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)
  langs:
  - csharp
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
  type: Interface
  summary: "Definieert het contract dat ASP.NET implementeert voor het synchroon verwerken van webaanvragen HTTP met aangepaste HTTP-handlers."
  remarks: "U kunt aangepaste HTTP-handlers voor het verwerken van specifieke, vooraf gedefinieerde typen HTTP-aanvragen in een andere taal van Common Language Specification (CLS)-compatibele schrijven. Uitvoerbare code die zijn gedefinieerd in de `HttpHandler` klassen, in plaats van conventionele ASP of ASP.NET-webpagina&quot;s, reageert op deze specifieke aanvragen. HTTP-handlers bieden u een methode van de interactie met de aanvraag op laag niveau en services van de reactie van de IIS-webserver en functionaliteit bieden veel zoals ISAPI-extensies, maar met een eenvoudiger programmeermodel.       Als de handler statuswaarden sessie opent wordt, moet deze implementeert de <xref:System.Web.SessionState.IRequiresSessionState>interface (een markering interface met geen methoden).</xref:System.Web.SessionState.IRequiresSessionState>"
  syntax:
    content: public interface IHttpHandler
  implements: []
  platform:
  - net462
- uid: System.Web.IHttpHandler.IsReusable
  id: IsReusable
  parent: System.Web.IHttpHandler
  langs:
  - csharp
  name: IsReusable
  nameWithType: IHttpHandler.IsReusable
  fullName: System.Web.IHttpHandler.IsReusable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee wordt een waarde die aangeeft of een andere aanvraag kan worden gebruikt de <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> exemplaar."
  remarks: "U de eigenschap IsReusable expliciet instellen op `true` of `false` door code die u opgeeft dat de eigenschapsaccessor IsReusable (getter) vervangt."
  example:
  - "The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx. All requests for handler.aspx are serviced by the `MyHttpHandler` class in the namespace `HandlerExample` contained in the assembly HandlerTest.dll.  \n  \n [!code-cs[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/csharp/p-system.web.ihttphandle_1.cs)]\n [!code-vb[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/visualbasic/p-system.web.ihttphandle_1.vb)]"
  syntax:
    content: public bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> exemplaar is herbruikbare, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.IHttpHandler.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.IHttpHandler
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.IHttpHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Schakelt verwerking van HTTP-Web-aanvragen door een aangepaste <xref uid=&quot;langword_csharp_HttpHandler&quot; name=&quot;HttpHandler&quot; href=&quot;&quot;> </xref> die implementeert de <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> interface."
  remarks: "Plaats uw aangepaste `HttpHandler` code in de ProcessRequest virtuele methode, zoals wordt weergegeven in het volgende voorbeeld."
  example:
  - "The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx. All requests for handler.aspx are serviced by the `MyHttpHandler` class in the namespace `HandlerExample` contained in the assembly HandlerTest.dll.  \n  \n [!code-cs[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/csharp/m-system.web.ihttphandle_1.cs)]\n [!code-vb[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/visualbasic/m-system.web.ihttphandle_1.vb)]"
  syntax:
    content: public void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Een <xref href=&quot;System.Web.HttpContext&quot;> </xref> -object dat de verwijzingen naar de intrinsieke serverobjecten (bijvoorbeeld <xref uid=&quot;langword_csharp_Request&quot; name=&quot;Request&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Response&quot; name=&quot;Response&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;> </xref>, en <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref>) gebruikt om HTTP-aanvragen te verwerken."
  overload: System.Web.IHttpHandler.ProcessRequest*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.IHttpHandler.IsReusable
  parent: System.Web.IHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: IHttpHandler.IsReusable
  fullName: System.Web.IHttpHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.IHttpHandler
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.IHttpHandler.ProcessRequest(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.IHttpHandler.IsReusable*
  parent: System.Web.IHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: IHttpHandler.IsReusable
- uid: System.Web.IHttpHandler.ProcessRequest*
  parent: System.Web.IHttpHandler
  isExternal: false
  name: ProcessRequest
  nameWithType: IHttpHandler.ProcessRequest
