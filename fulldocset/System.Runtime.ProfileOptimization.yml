### YamlMime:ManagedReference
items:
- uid: System.Runtime.ProfileOptimization
  id: ProfileOptimization
  children:
  - System.Runtime.ProfileOptimization.SetProfileRoot(System.String)
  - System.Runtime.ProfileOptimization.StartProfile(System.String)
  langs:
  - csharp
  name: ProfileOptimization
  nameWithType: ProfileOptimization
  fullName: System.Runtime.ProfileOptimization
  type: Class
  summary: "Verbetert de opstartprestaties van toepassingsdomeinen in toepassingen waarvoor de just-in-time-compileerprogramma (Just in time) door het uitvoeren van de achtergrond compilatie van methoden die kunnen worden uitgevoerd op basis van de profielen die zijn gemaakt tijdens de vorige compilaties."
  remarks: "> [!IMPORTANT]> Optimalisatie profiel vereist een multicore-computer. De methoden worden op andere computers genegeerd.       Elke keer dat u profiel optimalisatie in het toepassingsdomein van een, start wordt het profiel dat is gemaakt tijdens het vorige gebruik gelezen. De informatie in het profiel wordt gebruikt om te leiden achtergrond compilatie met het vaststellen van de methoden die waarschijnlijk tijdens het opstarten worden uitgevoerd. Op computers met multicore gecompileerd Dit verhoogt de kans dat een methode is al door de tijd die nodig is zodat de hoofdtoepassingsthread geen heeft JIT-compiler niet aanroepen.       De profielbestand wordt overschreven op elk gebruik zodat deze altijd de meest recente informatie over welke methoden worden gebruikt tijdens het opstarten bevat.       Optimalisatie van profielen worden niet beperkt tot het starten van de toepassing-domein. Ze kunnen worden gebruikt voor elke activiteit die intensief gebruik van de JIT-compiler is vereist. U kunt meerdere profielen voor een toepassingsdomein onderhouden zodat deze elke activiteit een eigen profiel heeft.       Als u profielen voor optimalisatie in een toepassingsdomein, belt u het <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>methode en geef de map waarin de profielen zijn opgeslagen.</xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> De map moet al bestaan. Aanroepen om te beginnen met een profiel van de <xref:System.Runtime.ProfileOptimization.StartProfile%2A>methode en geef de bestandsnaam van het profiel.</xref:System.Runtime.ProfileOptimization.StartProfile%2A> Als het bestand niet eerder is geregistreerd, wordt deze gemaakt bij het eerste gebruik. Er is geen prestaties voordeel de eerste keer een profiel is gemaakt.       Optimalisatie van het profiel wordt niet gewijzigd voor de volgorde waarin methoden worden uitgevoerd. Methoden worden niet uitgevoerd op de achtergrondthread. Als een methode is gecompileerd maar nooit aangeroepen, is het gewoon niet gebruikt. Als een bestand voor het profiel beschadigd is of kan niet worden geschreven naar de opgegeven map (bijvoorbeeld omdat de map niet bestaat), programma-uitvoering wordt voortgezet zonder optimalisatie profilering."
  syntax:
    content: public static class ProfileOptimization
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.ProfileOptimization.SetProfileRoot(System.String)
  id: SetProfileRoot(System.String)
  parent: System.Runtime.ProfileOptimization
  langs:
  - csharp
  name: SetProfileRoot(String)
  nameWithType: ProfileOptimization.SetProfileRoot(String)
  fullName: System.Runtime.ProfileOptimization.SetProfileRoot(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime
  summary: "Optimalisatie samenstellen van profiel voor het huidige toepassingsdomein kunt en stelt u de map waar het profiel optimalisatie bestanden worden opgeslagen. Op een computer single-core, wordt de methode genegeerd."
  remarks: "U moet deze methode aanroepen voordat u contact opneemt met de <xref:System.Runtime.ProfileOptimization.StartProfile%2A>methode voor het eerst in het huidige toepassingsdomein.</xref:System.Runtime.ProfileOptimization.StartProfile%2A> Als u SetProfileRoot meer dan één keer in hetzelfde toepassingsdomein aanroept, worden alle aanroepen na de eerste genegeerd.       De opgegeven map moet al bestaan. Als deze niet bestaat, aanroepen van deze methode maakt geen deze en geen profilering plaats.       Op computers waarvoor geen meerdere kernen, wordt deze methode genegeerd."
  syntax:
    content: public static void SetProfileRoot (string directoryPath);
    parameters:
    - id: directoryPath
      type: System.String
      description: "Het volledige pad naar de map waar de profielbestanden worden opgeslagen voor het huidige toepassingsdomein."
  overload: System.Runtime.ProfileOptimization.SetProfileRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.ProfileOptimization.StartProfile(System.String)
  id: StartProfile(System.String)
  parent: System.Runtime.ProfileOptimization
  langs:
  - csharp
  name: StartProfile(String)
  nameWithType: ProfileOptimization.StartProfile(String)
  fullName: System.Runtime.ProfileOptimization.StartProfile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime
  summary: "Start de compilatie van just in time (Just in time) van de methoden die eerder zijn vastgelegd in het opgegeven profiel-bestand in een achtergrondthread. Start het registratieproces van huidige methode gebruik die later het opgegeven profiel-bestand overschrijft."
  remarks: "Als het opgegeven profiel in de map die is opgegeven bestaat door de <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>methode, de inhoud ervan wordt gebruikt om te bepalen van de volgorde waarin de methoden op de achtergrondthread worden gecompileerd.</xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> De methode StartProfile maakt het profiel als deze nog niet bestaat, en de opname van methode gebruik start.       Alleen de methoden die daadwerkelijk worden aangeroepen worden vastgelegd, ongeacht of ze op de achtergrondthread of op de hoofdtoepassingsthread zijn gecompileerd. Een methode is gecompileerd in de hoofdtoepassingsthread als de toepassing moet kunnen aanroepen voordat de achtergrondthread die is gecompileerd.       De code die wordt uitgevoerd de opname houdt de frequentie waarmee methoden worden gecompileerd, met inbegrip van methoden die op de achtergrondthread en op de hoofdthread worden gecompileerd. Wanneer het percentage valt onder een vooraf vastgestelde niveau opname stopt. Registratie zorgt er ook als de frequentie van JIT-compilatie is groter dan de bovengrens van een vooraf vastgesteld.       Als de <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>methode is niet aangeroepen voor het huidige toepassingsdomein of als de computer beschikt niet over meerdere kernen, de methode StartProfile heeft geen effect.</xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>"
  syntax:
    content: public static void StartProfile (string profile);
    parameters:
    - id: profile
      type: System.String
      description: "De bestandsnaam van het profiel moet worden gebruikt."
  overload: System.Runtime.ProfileOptimization.StartProfile*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.ProfileOptimization.SetProfileRoot(System.String)
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: SetProfileRoot(String)
  nameWithType: ProfileOptimization.SetProfileRoot(String)
  fullName: System.Runtime.ProfileOptimization.SetProfileRoot(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.ProfileOptimization.StartProfile(System.String)
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: StartProfile(String)
  nameWithType: ProfileOptimization.StartProfile(String)
  fullName: System.Runtime.ProfileOptimization.StartProfile(String)
- uid: System.Runtime.ProfileOptimization.SetProfileRoot*
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: SetProfileRoot
  nameWithType: ProfileOptimization.SetProfileRoot
- uid: System.Runtime.ProfileOptimization.StartProfile*
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: StartProfile
  nameWithType: ProfileOptimization.StartProfile
