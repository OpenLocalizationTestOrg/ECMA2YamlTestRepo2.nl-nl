### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.PublisherIdentityPermission
  id: PublisherIdentityPermission
  children:
  - System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.PublisherIdentityPermission.Certificate
  - System.Security.Permissions.PublisherIdentityPermission.Copy
  - System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.PublisherIdentityPermission.ToXml
  - System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: PublisherIdentityPermission
  nameWithType: PublisherIdentityPermission
  fullName: System.Security.Permissions.PublisherIdentityPermission
  type: Class
  summary: "Hiermee geeft u de identiteit van een software-uitgever. Deze klasse kan niet worden overgenomen."
  remarks: "> [!IMPORTANT]> Vanaf de [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], Identiteitsmachtigingen worden niet gebruikt.   >> Op de .NET Framework-versies 1.0 en 1.1, Identiteitsmachtigingen kunnen niet hebben een <xref:System.Security.Permissions.PermissionState>machtiging statuswaarde.</xref:System.Security.Permissions.PermissionState> Beginnen met de .NET Framework versie 2.0, kunnen Identiteitsmachtigingen elke waarde van de status machtiging hebben. Dit betekent dat in de versies 2.0 en hoger, Identiteitsmachtigingen hetzelfde gedrag als de machtigingen die u implementeert de <xref:System.Security.Permissions.IUnrestrictedPermission>interface.</xref:System.Security.Permissions.IUnrestrictedPermission> Dat wil zeggen, een aanvraag voor een identiteit altijd is geslaagd, ongeacht de identiteit van de assembly, als de assembly heeft gekregen volledig vertrouwen.   >> Aanvragen van de Identiteitsmachtigingen zijn in de .NET Framework-versies 1.0 en 1.1, effectieve, zelfs wanneer de aanroepende assembly volledig vertrouwd. Hoewel de aanroepende assembly volledig vertrouwen heeft, mislukt een aanvraag voor een identiteit machtiging dat wil zeggen, als de assembly niet aan de gevraagde criteria voldoet. Beginnen met de .NET Framework versie 2.0, zijn verzoeken voor Identiteitsmachtigingen niet effectief als de aanroepende assembly volledig vertrouwen. Dit zorgt ervoor consistentie voor alle machtigingen, de behandeling van Identiteitsmachtigingen uitzonderlijke gevallen elimineren.      > [!NOTE] > Standaard codetoegangsbeveiliging controleert niet op <xref:System.Security.Policy.Publisher>bewijs.</xref:System.Security.Policy.Publisher> Tenzij de computer een aangepaste code-groep op basis heeft van de <xref:System.Security.Policy.PublisherMembershipCondition>klasse, u kunt de prestaties verbeteren door Authenticode-handtekeningcontrole overslaan.</xref:System.Security.Policy.PublisherMembershipCondition> Dit wordt bereikt door het configureren van de runtime geen <xref:System.Security.Policy.Publisher>bewijs van codetoegangsbeveiliging.</xref:System.Security.Policy.Publisher> Voor meer informatie over het configureren van deze optie en welke toepassingen worden gebruikt, Zie het element."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class PublisherIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)'
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: PublisherIdentityPermission(X509Certificate)
  nameWithType: PublisherIdentityPermission.PublisherIdentityPermission(X509Certificate)
  fullName: System.Security.Permissions.PublisherIdentityPermission.PublisherIdentityPermission(X509Certificate)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Permissions.PublisherIdentityPermission&quot;> </xref> klasse met het opgegeven Authenticode X.509v3-certificaat."
  remarks: "Het X.509-certificaat definieert de identiteit van de opgegeven software-uitgever, zoals ingesteld door de Authenticode-handtekening."
  syntax:
    content: public PublisherIdentityPermission (System.Security.Cryptography.X509Certificates.X509Certificate certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Een X.509-certificaat voor identiteit van de software-uitgever."
  overload: System.Security.Permissions.PublisherIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>certificate</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> certificate </code> parameter is niet een geldig certificaat."
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: PublisherIdentityPermission(PermissionState)
  nameWithType: PublisherIdentityPermission.PublisherIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.PublisherIdentityPermission.PublisherIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Permissions.PublisherIdentityPermission&quot;> </xref> klasse met de opgegeven <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  remarks: "Hiermee maakt u een volledig beperkte (`None`) of `Unrestricted` machtiging.      > [!NOTE] > In de .NET Framework-versies 1.0 en 1.1, Identiteitsmachtigingen kunnen geen hebben een <xref:System.Security.Permissions.PermissionState>machtiging statuswaarde.</xref:System.Security.Permissions.PermissionState> Beginnen met de .NET Framework versie 2.0, kunnen Identiteitsmachtigingen elke waarde van de status machtiging hebben. Dit betekent dat in de versies 2.0 en hoger, Identiteitsmachtigingen hetzelfde gedrag als de machtigingen die u implementeert de <xref:System.Security.Permissions.IUnrestrictedPermission>interface.</xref:System.Security.Permissions.IUnrestrictedPermission> Dat wil zeggen, een aanvraag voor een identiteit altijd is geslaagd, ongeacht de identiteit van de assembly, als de assembly heeft gekregen volledig vertrouwen.       Aanvragen van de Identiteitsmachtigingen zijn in de .NET Framework-versies 1.0 en 1.1, effectieve, zelfs wanneer de aanroepende assembly volledig vertrouwd. Hoewel de aanroepende assembly volledig vertrouwen heeft, mislukt een aanvraag voor een identiteit machtiging dat wil zeggen, als de assembly niet aan de gevraagde criteria voldoet. Beginnen met de .NET Framework versie 2.0, zijn verzoeken voor Identiteitsmachtigingen niet effectief als de aanroepende assembly volledig vertrouwen. Dit zorgt ervoor consistentie voor alle machtigingen, de behandeling van Identiteitsmachtigingen uitzonderlijke gevallen elimineren."
  example:
  - "The following example shows how to use the PublisherIdentityPermission constructor.  \n  \n [!code-cs[System.Security.Permissions.PublisherIdentityPermission#7](~/add/codesnippet/csharp/1a39ce0c-6535-46dd-bd5f-_1.cs)]\n [!code-vb[System.Security.Permissions.PublisherIdentityPermission#7](~/add/codesnippet/visualbasic/1a39ce0c-6535-46dd-bd5f-_1.vb)]\n [!code-cpp[System.Security.Permissions.PublisherIdentityPermission#7](~/add/codesnippet/cpp/1a39ce0c-6535-46dd-bd5f-_1.cpp)]"
  syntax:
    content: public PublisherIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Een van de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> waarden."
  overload: System.Security.Permissions.PublisherIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> state </code> parameter is geen geldige waarde van <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.Certificate
  id: Certificate
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: Certificate
  nameWithType: PublisherIdentityPermission.Certificate
  fullName: System.Security.Permissions.PublisherIdentityPermission.Certificate
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Opgehaald of ingesteld van Authenticode X.509v3-certificaat de identiteit van de software-uitgever vertegenwoordigt."
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate Certificate { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Een X.509-certificaat dat de identiteit van de software-uitgever vertegenwoordigt."
  overload: System.Security.Permissions.PublisherIdentityPermission.Certificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Het certificaat is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Het certificaat is niet een geldig certificaat."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De eigenschap kan niet worden ingesteld omdat de identiteit niet eenduidig is."
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: PublisherIdentityPermission.Copy()
  fullName: System.Security.Permissions.PublisherIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Maakt en een identieke kopie van de huidige machtiging retourneert."
  remarks: "Een kopie van een machtiging vertegenwoordigt dezelfde toegang tot bronnen als de oorspronkelijke machtiging."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Een kopie van de huidige machtiging."
  overload: System.Security.Permissions.PublisherIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: PublisherIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.PublisherIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee reconstrueert machtiging met een opgegeven status van een XML-codering."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "De XML-codering voor het gebruik van de machtiging opnieuw."
  overload: System.Security.Permissions.PublisherIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> esd </code> parameter is niet geldig machtigingselement.       - of - de <code> esd </code> versienummer van de parameter is niet geldig."
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: PublisherIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.PublisherIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Maakt en retourneert een machtiging die is het snijpunt van de huidige machtigingen en de opgegeven."
  remarks: "Het snijpunt van twee machtigingen is een machtiging die wordt beschreven welke bewerkingen die ze beide gemeenschappelijk beschrijven. Alleen een aanvraag waarin zowel oorspronkelijke machtigingen doorgegeven geeft het snijpunt.       <xref:System.Security.Permissions.PublisherIdentityPermission>bewerkingen voor ondersteunt alleen instellen (<xref:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf%2A>, Intersect en <xref:System.Security.Permissions.PublisherIdentityPermission.Union%2A>) wanneer de huidige machtiging is gelijk aan de opgegeven machtiging.</xref:System.Security.Permissions.PublisherIdentityPermission.Union%2A> </xref:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf%2A></xref:System.Security.Permissions.PublisherIdentityPermission>"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Een machtiging voor intersect met de huidige machtiging. Deze moeten van hetzelfde type als de huidige machtiging."
    return:
      type: System.Security.IPermission
      description: "Een nieuwe machtiging die het snijpunt van de huidige machtigingen en de opgegeven vertegenwoordigt. Deze nieuwe machtiging is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als het snijpunt leeg is."
  overload: System.Security.Permissions.PublisherIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> target </code> parameter is niet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> en is niet van hetzelfde type als de huidige machtiging."
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: PublisherIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee wordt bepaald of de huidige machtiging een subset van de opgegeven machtiging."
  remarks: "De huidige machtiging is een subset van de opgegeven machtiging als de twee machtigingen gelijk zijn. Als deze methode retourneert `true`, de huidige machtiging dezelfde toegang tot de beveiligde bron als de opgegeven machtiging vertegenwoordigt.       <xref:System.Security.Permissions.PublisherIdentityPermission>ondersteunt bewerkingen instellen (IsSubsetOf, <xref:System.Security.Permissions.PublisherIdentityPermission.Intersect%2A>, en <xref:System.Security.Permissions.PublisherIdentityPermission.Union%2A>) alleen als de huidige machtiging is gelijk aan de opgegeven machtiging.</xref:System.Security.Permissions.PublisherIdentityPermission.Union%2A> </xref:System.Security.Permissions.PublisherIdentityPermission.Intersect%2A></xref:System.Security.Permissions.PublisherIdentityPermission>"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Een machtiging die moet worden getest voor de relatie subset. Deze machtiging moet van hetzelfde type als de huidige machtiging."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de huidige machtiging een subset van de opgegeven machtiging is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> target </code> parameter is niet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> en is niet van hetzelfde type als de huidige machtiging."
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: PublisherIdentityPermission.ToXml()
  fullName: System.Security.Permissions.PublisherIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee maakt u een XML-codering van de machtigingen en de huidige status."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Een XML-codering van de machtiging, met inbegrip van eventuele statusgegevens."
  overload: System.Security.Permissions.PublisherIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: PublisherIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.PublisherIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee maakt u een machtiging die is de vereniging van de huidige machtigingen en de opgegeven."
  remarks: "Het resultaat van een aanroep naar de methode Union is een machtiging die staat voor alle bewerkingen die worden vertegenwoordigd door zowel de huidige machtigingen en de opgegeven. Elke vraag die beide toestemming geeft hun union is geslaagd.       De <xref:System.Security.Permissions.PublisherIdentityPermission>klasse biedt alleen ondersteuning voor set-bewerkingen (<xref:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf%2A>, <xref:System.Security.Permissions.PublisherIdentityPermission.Intersect%2A>, en Unie) wanneer de huidige machtiging is gelijk aan de opgegeven machtiging.</xref:System.Security.Permissions.PublisherIdentityPermission.Intersect%2A> </xref:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf%2A> </xref:System.Security.Permissions.PublisherIdentityPermission>"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Een machtiging te combineren met de huidige machtiging. Deze moeten van hetzelfde type als de huidige machtiging."
    return:
      type: System.Security.IPermission
      description: "Een nieuwe machtiging die staat voor de samenvoeging van de huidige machtigingen en de opgegeven."
  overload: System.Security.Permissions.PublisherIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> target </code> parameter is niet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> en is niet van hetzelfde type als de huidige machtiging.       - of - twee machtigingen niet gelijk zijn."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: PublisherIdentityPermission(X509Certificate)
  nameWithType: PublisherIdentityPermission.PublisherIdentityPermission(X509Certificate)
  fullName: System.Security.Permissions.PublisherIdentityPermission.PublisherIdentityPermission(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: PublisherIdentityPermission(PermissionState)
  nameWithType: PublisherIdentityPermission.PublisherIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.PublisherIdentityPermission.PublisherIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.PublisherIdentityPermission.Certificate
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Certificate
  nameWithType: PublisherIdentityPermission.Certificate
  fullName: System.Security.Permissions.PublisherIdentityPermission.Certificate
- uid: System.Security.Permissions.PublisherIdentityPermission.Copy
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: PublisherIdentityPermission.Copy()
  fullName: System.Security.Permissions.PublisherIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: PublisherIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.PublisherIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: PublisherIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.PublisherIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: PublisherIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.PublisherIdentityPermission.ToXml
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: PublisherIdentityPermission.ToXml()
  fullName: System.Security.Permissions.PublisherIdentityPermission.ToXml()
- uid: System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: PublisherIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.PublisherIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.PublisherIdentityPermission.#ctor*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: PublisherIdentityPermission
  nameWithType: PublisherIdentityPermission.PublisherIdentityPermission
- uid: System.Security.Permissions.PublisherIdentityPermission.Certificate*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Certificate
  nameWithType: PublisherIdentityPermission.Certificate
- uid: System.Security.Permissions.PublisherIdentityPermission.Copy*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: PublisherIdentityPermission.Copy
- uid: System.Security.Permissions.PublisherIdentityPermission.FromXml*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: PublisherIdentityPermission.FromXml
- uid: System.Security.Permissions.PublisherIdentityPermission.Intersect*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: PublisherIdentityPermission.Intersect
- uid: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: PublisherIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.PublisherIdentityPermission.ToXml*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: PublisherIdentityPermission.ToXml
- uid: System.Security.Permissions.PublisherIdentityPermission.Union*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Union
  nameWithType: PublisherIdentityPermission.Union
