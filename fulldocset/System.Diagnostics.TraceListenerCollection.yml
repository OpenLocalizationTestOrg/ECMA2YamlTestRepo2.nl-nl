### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceListenerCollection
  id: TraceListenerCollection
  children:
  - System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])
  - System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)
  - System.Diagnostics.TraceListenerCollection.Clear
  - System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  - System.Diagnostics.TraceListenerCollection.Count
  - System.Diagnostics.TraceListenerCollection.GetEnumerator
  - System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.Item(System.Int32)
  - System.Diagnostics.TraceListenerCollection.Item(System.String)
  - System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.Remove(System.String)
  - System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)
  - System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized
  - System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: TraceListenerCollection
  nameWithType: TraceListenerCollection
  fullName: System.Diagnostics.TraceListenerCollection
  type: Class
  summary: "Geeft een lijst van de thread-veilige van <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> objecten."
  remarks: "De lijst TraceListenerCollection wordt gebruikt om op te geven van de uitvoer-listeners voor de <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>en de <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName>verzamelingen.</xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> </xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> U kunt een exemplaar van deze klasse kan niet maken.       Deze lijst is thread-veilige, maar de methoden die wordt gebruikt voor toegang tot de lijst en de enumerator synchronisatie vergrendelingen worden pas van kracht. In plaats daarvan de verzameling wordt gekopieerd, het exemplaar is gewijzigd en een verwijzing is ingesteld op de kopie van de verzameling. Methoden zoals <xref:System.Diagnostics.TraceListenerCollection.Add%2A>, <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>, en <xref:System.Diagnostics.TraceListenerCollection.Clear%2A>Wijzig de elementen in de verzameling.</xref:System.Diagnostics.TraceListenerCollection.Clear%2A> </xref:System.Diagnostics.TraceListenerCollection.Remove%2A> </xref:System.Diagnostics.TraceListenerCollection.Add%2A>       De klasse TraceListenerCollection biedt de <xref:System.Diagnostics.TraceListenerCollection.Count%2A>eigenschap voor informatie over de lijst.</xref:System.Diagnostics.TraceListenerCollection.Count%2A> Het bevat ook de volgende methoden: <xref:System.Diagnostics.TraceListenerCollection.Contains%2A>, <xref:System.Diagnostics.TraceListenerCollection.GetEnumerator%2A> <xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A>.</xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A> </xref:System.Diagnostics.TraceListenerCollection.GetEnumerator%2A> </xref:System.Diagnostics.TraceListenerCollection.Contains%2A>       Deze klasse biedt ook de volgende methoden om de lijst te wijzigen: <xref:System.Diagnostics.TraceListenerCollection.Add%2A>, <xref:System.Diagnostics.TraceListenerCollection.Clear%2A>, <xref:System.Diagnostics.TraceListenerCollection.Insert%2A>, en <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>.</xref:System.Diagnostics.TraceListenerCollection.Remove%2A> </xref:System.Diagnostics.TraceListenerCollection.Insert%2A> </xref:System.Diagnostics.TraceListenerCollection.Clear%2A> </xref:System.Diagnostics.TraceListenerCollection.Add%2A> De <xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A>methode een deel van de lijst kopieert naar een matrix.</xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A> De <xref:System.Diagnostics.TraceListenerCollection.RemoveAt%2A>methode verwijdert u de lijstlid op een opgegeven indexnummer.</xref:System.Diagnostics.TraceListenerCollection.RemoveAt%2A>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that writes to the console screen. The code then adds the new listener to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>.  \n  \n [!code-cs[Classic Trace.Listeners Example#1](~/add/codesnippet/csharp/t-system.diagnostics.tra_1_1.cs)]\n [!code-vb[Classic Trace.Listeners Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_1_1.vb)]\n [!code-cpp[Classic Trace.Listeners Example#1](~/add/codesnippet/cpp/t-system.diagnostics.tra_1_1.cpp)]"
  syntax:
    content: 'public class TraceListenerCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)
  id: Add(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Add(TraceListener)
  nameWithType: TraceListenerCollection.Add(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Add(TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Voegt een <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> aan de lijst."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that outputs to the console screen. The code then adds the new listener to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>.  \n  \n [!code-cpp[Classic TraceListenerCollection.Add Example#1](~/add/codesnippet/cpp/06848b43-b480-461b-8d6e-_1.cpp)]\n [!code-vb[Classic TraceListenerCollection.Add Example#1](~/add/codesnippet/visualbasic/06848b43-b480-461b-8d6e-_1.vb)]\n [!code-cs[Classic TraceListenerCollection.Add Example#1](~/add/codesnippet/csharp/06848b43-b480-461b-8d6e-_1.cs)]"
  syntax:
    content: public int Add (System.Diagnostics.TraceListener listener);
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "Een <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> om toe te voegen aan de lijst."
    return:
      type: System.Int32
      description: "De positie waar de nieuwe listener is ingevoegd."
  overload: System.Diagnostics.TraceListenerCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])
  id: AddRange(System.Diagnostics.TraceListener[])
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: AddRange(TraceListener[])
  nameWithType: TraceListenerCollection.AddRange(TraceListener[])
  fullName: System.Diagnostics.TraceListenerCollection.AddRange(TraceListener[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Voegt een matrix van <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> objecten aan de lijst."
  syntax:
    content: public void AddRange (System.Diagnostics.TraceListener[] value);
    parameters:
    - id: value
      type: System.Diagnostics.TraceListener[]
      description: "Een matrix van <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> objecten toevoegen aan de lijst."
  overload: System.Diagnostics.TraceListenerCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)
  id: AddRange(System.Diagnostics.TraceListenerCollection)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: AddRange(TraceListenerCollection)
  nameWithType: TraceListenerCollection.AddRange(TraceListenerCollection)
  fullName: System.Diagnostics.TraceListenerCollection.AddRange(TraceListenerCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Voegt de inhoud van een andere <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> aan de lijst."
  syntax:
    content: public void AddRange (System.Diagnostics.TraceListenerCollection value);
    parameters:
    - id: value
      type: System.Diagnostics.TraceListenerCollection
      description: "Een andere <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> waarvan de inhoud worden toegevoegd aan de lijst."
  overload: System.Diagnostics.TraceListenerCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Clear
  id: Clear
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: TraceListenerCollection.Clear()
  fullName: System.Diagnostics.TraceListenerCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee wist u de listeners uit de lijst."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Diagnostics.TraceListenerCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)
  id: Contains(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Contains(TraceListener)
  nameWithType: TraceListenerCollection.Contains(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Contains(TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Controleert of de lijst met de opgegeven listener bevat."
  remarks: "De methode bevat kunt bevestigen de aanwezigheid van een <xref:System.Diagnostics.TraceListener>voordat u meer bewerkingen uitvoeren.</xref:System.Diagnostics.TraceListener>"
  syntax:
    content: public bool Contains (System.Diagnostics.TraceListener listener);
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "Een <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> vinden in de lijst."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de listener in de lijst is. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.TraceListenerCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  id: CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: CopyTo(TraceListener[],Int32)
  nameWithType: TraceListenerCollection.CopyTo(TraceListener[],Int32)
  fullName: System.Diagnostics.TraceListenerCollection.CopyTo(TraceListener[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een gedeelte van de huidige kopieert <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> lijst aan de opgegeven matrix met de opgegeven index."
  syntax:
    content: public void CopyTo (System.Diagnostics.TraceListener[] listeners, int index);
    parameters:
    - id: listeners
      type: System.Diagnostics.TraceListener[]
      description: "Een matrix van het type <xref:System.Array>kopiëren van de elementen in.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "De beginwaarde in de index in de huidige lijst van kopiëren."
  overload: System.Diagnostics.TraceListenerCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Count
  id: Count
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Count
  nameWithType: TraceListenerCollection.Count
  fullName: System.Diagnostics.TraceListenerCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee haalt het aantal listeners in de lijst."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Het aantal luisteraars in de lijst."
  overload: System.Diagnostics.TraceListenerCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TraceListenerCollection.GetEnumerator()
  fullName: System.Diagnostics.TraceListenerCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee wordt een enumerator voor deze lijst."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Een enumerator van het type <xref:System.Collections.IEnumerator>.</xref:System.Collections.IEnumerator>"
  overload: System.Diagnostics.TraceListenerCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)
  id: IndexOf(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: IndexOf(TraceListener)
  nameWithType: TraceListenerCollection.IndexOf(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.IndexOf(TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee haalt u de index van de opgegeven listener."
  syntax:
    content: public int IndexOf (System.Diagnostics.TraceListener listener);
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "Een <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> vinden in de lijst."
    return:
      type: System.Int32
      description: "De index van de listener, als deze kan worden gevonden in de lijst. anders wordt -1."
  overload: System.Diagnostics.TraceListenerCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)
  id: Insert(System.Int32,System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Insert(Int32,TraceListener)
  nameWithType: TraceListenerCollection.Insert(Int32,TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Insert(Int32,TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Voegt de listener met de opgegeven index."
  remarks: "Als de index is gelijk aan het aantal items in de lijst, wordt de listener toegevoegd aan het einde van de lijst.       De index is gebaseerd op nul. Dus als u wilt de listener in de derde positie invoegen, moet u aanroepen `myTraceListenerColl.Insert(2, myNewListener)`."
  syntax:
    content: public void Insert (int index, System.Diagnostics.TraceListener listener);
    parameters:
    - id: index
      type: System.Int32
      description: "De positie in de lijst de nieuwe invoegen <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>."
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "Een <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> invoegen in de lijst."
  overload: System.Diagnostics.TraceListenerCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> index </code> is geen geldige index in de lijst."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>listener</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TraceListenerCollection.Item(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> bij de opgegeven index."
  remarks: "De index is gebaseerd op nul. Daarom moet u afgetrokken van de numerieke positie van een bepaalde <xref:System.Diagnostics.TraceListener>voor toegang tot die <xref:System.Diagnostics.TraceListener>.</xref:System.Diagnostics.TraceListener> </xref:System.Diagnostics.TraceListener> Bijvoorbeeld, om op te halen van de derde <xref:System.Diagnostics.TraceListener>, moet u opgeven `myTraceListenerColl[2]`.</xref:System.Diagnostics.TraceListener>"
  syntax:
    content: public System.Diagnostics.TraceListener this[int i] { get; set; }
    parameters:
    - id: i
      type: System.Int32
      description: "De op nul gebaseerde index van de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> ophalen uit de lijst."
    return:
      type: System.Diagnostics.TraceListener
      description: "Een <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> met de opgegeven index."
  overload: System.Diagnostics.TraceListenerCollection.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De waarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: TraceListenerCollection.Item(String)
  fullName: System.Diagnostics.TraceListenerCollection.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "De eerste opgehaald <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> in de lijst met de opgegeven naam."
  remarks: "De <xref:System.Diagnostics.TraceListenerCollection.Item%2A>eigenschap is hoofdlettergevoelig zoeken naar namen.</xref:System.Diagnostics.TraceListenerCollection.Item%2A> Dat als twee listeners bestaat met de namen &quot;Lname&quot; en &quot;lname&quot; <xref:System.Diagnostics.TraceListenerCollection.Item%2A>eigenschap vindt u alleen de <xref:System.Diagnostics.TraceListener>met de <xref:System.Diagnostics.TraceListener.Name%2A>dat u opgeeft, niet beide.</xref:System.Diagnostics.TraceListener.Name%2A> </xref:System.Diagnostics.TraceListener> </xref:System.Diagnostics.TraceListenerCollection.Item%2A>"
  syntax:
    content: public System.Diagnostics.TraceListener this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "De naam van de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> ophalen uit de lijst."
    return:
      type: System.Diagnostics.TraceListener
      description: "De eerste <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> in de lijst met de opgegeven <xref:System.Diagnostics.TraceListener.Name*>.</xref:System.Diagnostics.TraceListener.Name*> Dit item retourneert <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> met de opgegeven naam kan worden gevonden."
  overload: System.Diagnostics.TraceListenerCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)
  id: Remove(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Remove(TraceListener)
  nameWithType: TraceListenerCollection.Remove(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Remove(TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "De opgegeven verwijdert uit de verzameling <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>."
  syntax:
    content: public void Remove (System.Diagnostics.TraceListener listener);
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "Een <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> verwijderen uit de lijst."
  overload: System.Diagnostics.TraceListenerCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: TraceListenerCollection.Remove(String)
  fullName: System.Diagnostics.TraceListenerCollection.Remove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Verwijdert uit de verzameling van de eerste <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> met de opgegeven naam."
  remarks: "De `name` parameter is hoofdlettergevoelig. Dus als twee listeners bestaat met de naam &quot;Rname&quot; en &quot;rname&quot; de <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>methode vindt u de specifieke listener dat u de naam.</xref:System.Diagnostics.TraceListenerCollection.Remove%2A>"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> verwijderen uit de lijst."
  overload: System.Diagnostics.TraceListenerCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TraceListenerCollection.RemoveAt(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Verwijdert uit de verzameling de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> bij de opgegeven index."
  remarks: "De index is gebaseerd op nul. Daarom moet u afgetrokken van de numerieke positie van een bepaalde <xref:System.Diagnostics.TraceListener>die <xref:System.Diagnostics.TraceListener>.</xref:System.Diagnostics.TraceListener> verwijderen</xref:System.Diagnostics.TraceListener> Om bijvoorbeeld te verwijderen van de derde <xref:System.Diagnostics.TraceListener>, moet u opgeven `myTraceListenerColl.RemoveAt(2)`.</xref:System.Diagnostics.TraceListener>"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index van de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> verwijderen uit de lijst."
  overload: System.Diagnostics.TraceListenerCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> index </code> is geen geldige index in de lijst."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TraceListenerCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een gedeelte van de huidige kopieert <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> aan de opgegeven matrix van <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> objecten."
  remarks: "Gebruik de <xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A>methode van de <xref:System.Diagnostics.TraceListenerCollection>klasse of een deel van de verzameling kopiëren naar een matrix.</xref:System.Diagnostics.TraceListenerCollection> </xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "De eendimensionale matrix van <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> objecten die het doel van de elementen die zijn gekopieerd uit de <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>. De matrix moet hebben op nul gebaseerde indexering."
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index in `array` welke kopiëren begint."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TraceListenerCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Haalt een waarde die aangeeft of de toegang tot de <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> is gesynchroniseerd (thread-veilig)."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TraceListenerCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Haalt een object dat kan worden gebruikt voor het synchroniseren van toegang tot de <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "De huidige <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> object."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Add(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Voegt een traceringslistener naar de <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>."
  remarks: "Gebruik de <xref:System.Diagnostics.TraceListenerCollection.Add%2A>methode een nieuwe traceringslistener toevoegen aan de verzameling.</xref:System.Diagnostics.TraceListenerCollection.Add%2A>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Het object toevoegen aan de <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>."
    return:
      type: System.Int32
      description: "De positie waarin de nieuwe traceringslistener is ingevoegd."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>value</code> is not a <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Contains(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee wordt bepaald of de <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> bevat een specifiek object."
  remarks: "Gebruik de <xref:System.Diagnostics.TraceListenerCollection.Contains%2A>methode van de <xref:System.Diagnostics.TraceListenerCollection>klasse om te bepalen of de verzameling een specifieke bevat <xref:System.Diagnostics.TraceListener>object.</xref:System.Diagnostics.TraceListener> </xref:System.Diagnostics.TraceListenerCollection> </xref:System.Diagnostics.TraceListenerCollection.Contains%2A>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Het object te vinden in de <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref:System.Object>is gevonden in de <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Bepaalt de index van een bepaald object in de <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>."
  remarks: "Gebruik de <xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A>methode van de <xref:System.Diagnostics.TraceListenerCollection>klasse om te bepalen van de index van een <xref:System.Diagnostics.TraceListener>object in de verzameling.</xref:System.Diagnostics.TraceListener> </xref:System.Diagnostics.TraceListenerCollection> </xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Het object te vinden in de <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>."
    return:
      type: System.Int32
      description: "De index van <code> value </code> als gevonden in de <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>; anders wordt -1."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Voegt een <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> object op de opgegeven positie in de <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>."
  remarks: "Gebruik de <xref:System.Diagnostics.TraceListenerCollection.Insert%2A>methode van de <xref:System.Diagnostics.TraceListenerCollection>klasse invoegen een <xref:System.Diagnostics.TraceListener>object in de verzameling.</xref:System.Diagnostics.TraceListener> </xref:System.Diagnostics.TraceListenerCollection> </xref:System.Diagnostics.TraceListenerCollection.Insert%2A>"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index waarop `value` moet worden ingevoegd."
    - id: value
      type: System.Object
      description: "De <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> object worden ingevoegd in de <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>is niet een <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> object."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: TraceListenerCollection.System.Collections.IList.IsFixedSize
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Haalt een waarde die aangeeft of de <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> heeft een vaste grootte."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: TraceListenerCollection.System.Collections.IList.IsReadOnly
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Haalt een waarde die aangeeft of de <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> is alleen-lezen"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: TraceListenerCollection.System.Collections.IList.Item(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> op de opgegeven index in de <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>."
  remarks: "Gebruik de <xref:System.Diagnostics.TraceListenerCollection.Item%2A>eigenschap of de indexeerfunctie van de <xref:System.Diagnostics.TraceListenerCollection>klasse ophalen of instellen een <xref:System.Diagnostics.TraceListener>in de verzameling.</xref:System.Diagnostics.TraceListener> </xref:System.Diagnostics.TraceListenerCollection> </xref:System.Diagnostics.TraceListenerCollection.Item%2A>"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index van de `value` om op te halen."
    return:
      type: System.Object
      description: "De <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> bij de opgegeven index."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Remove(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee verwijdert u een object uit de <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>."
  remarks: "Gebruik de <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>methode van de <xref:System.Diagnostics.TraceListenerCollection>klasse verwijderen van een <xref:System.Diagnostics.TraceListener>uit de verzameling.</xref:System.Diagnostics.TraceListener> </xref:System.Diagnostics.TraceListenerCollection> </xref:System.Diagnostics.TraceListenerCollection.Remove%2A>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Het object verwijderen uit de <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Add(TraceListener)
  nameWithType: TraceListenerCollection.Add(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Add(TraceListener)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.TraceListener
  parent: System.Diagnostics
  isExternal: false
  name: TraceListener
  nameWithType: TraceListener
  fullName: System.Diagnostics.TraceListener
- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: AddRange(TraceListener[])
  nameWithType: TraceListenerCollection.AddRange(TraceListener[])
  fullName: System.Diagnostics.TraceListenerCollection.AddRange(TraceListener[])
- uid: System.Diagnostics.TraceListener[]
  parent: System.Diagnostics
  isExternal: false
  name: TraceListener
  nameWithType: TraceListener
  fullName: System.Diagnostics.TraceListener[]
  spec.csharp:
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: TraceListener[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: AddRange(TraceListenerCollection)
  nameWithType: TraceListenerCollection.AddRange(TraceListenerCollection)
  fullName: System.Diagnostics.TraceListenerCollection.AddRange(TraceListenerCollection)
- uid: System.Diagnostics.TraceListenerCollection
  parent: System.Diagnostics
  isExternal: false
  name: TraceListenerCollection
  nameWithType: TraceListenerCollection
  fullName: System.Diagnostics.TraceListenerCollection
- uid: System.Diagnostics.TraceListenerCollection.Clear
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Clear()
  nameWithType: TraceListenerCollection.Clear()
  fullName: System.Diagnostics.TraceListenerCollection.Clear()
- uid: System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Contains(TraceListener)
  nameWithType: TraceListenerCollection.Contains(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Contains(TraceListener)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: CopyTo(TraceListener[],Int32)
  nameWithType: TraceListenerCollection.CopyTo(TraceListener[],Int32)
  fullName: System.Diagnostics.TraceListenerCollection.CopyTo(TraceListener[],Int32)
- uid: System.Diagnostics.TraceListenerCollection.Count
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Count
  nameWithType: TraceListenerCollection.Count
  fullName: System.Diagnostics.TraceListenerCollection.Count
- uid: System.Diagnostics.TraceListenerCollection.GetEnumerator
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TraceListenerCollection.GetEnumerator()
  fullName: System.Diagnostics.TraceListenerCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: IndexOf(TraceListener)
  nameWithType: TraceListenerCollection.IndexOf(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.IndexOf(TraceListener)
- uid: System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Insert(Int32,TraceListener)
  nameWithType: TraceListenerCollection.Insert(Int32,TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Insert(Int32,TraceListener)
- uid: System.Diagnostics.TraceListenerCollection.Item(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TraceListenerCollection.Item(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.Item(Int32)
- uid: System.Diagnostics.TraceListenerCollection.Item(System.String)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Item(String)
  nameWithType: TraceListenerCollection.Item(String)
  fullName: System.Diagnostics.TraceListenerCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Remove(TraceListener)
  nameWithType: TraceListenerCollection.Remove(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Remove(TraceListener)
- uid: System.Diagnostics.TraceListenerCollection.Remove(System.String)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Remove(String)
  nameWithType: TraceListenerCollection.Remove(String)
  fullName: System.Diagnostics.TraceListenerCollection.Remove(String)
- uid: System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TraceListenerCollection.RemoveAt(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.RemoveAt(Int32)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TraceListenerCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TraceListenerCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TraceListenerCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.SyncRoot
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Add(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Add(Object)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Contains(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Contains(Object)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TraceListenerCollection.System.Collections.IList.IsFixedSize
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IsFixedSize
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: TraceListenerCollection.System.Collections.IList.IsReadOnly
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IsReadOnly
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: TraceListenerCollection.System.Collections.IList.Item(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Item(Int32)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Remove(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Remove(Object)
- uid: System.Diagnostics.TraceListenerCollection.Add*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Add
  nameWithType: TraceListenerCollection.Add
- uid: System.Diagnostics.TraceListenerCollection.AddRange*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: AddRange
  nameWithType: TraceListenerCollection.AddRange
- uid: System.Diagnostics.TraceListenerCollection.Clear*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Clear
  nameWithType: TraceListenerCollection.Clear
- uid: System.Diagnostics.TraceListenerCollection.Contains*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Contains
  nameWithType: TraceListenerCollection.Contains
- uid: System.Diagnostics.TraceListenerCollection.CopyTo*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: CopyTo
  nameWithType: TraceListenerCollection.CopyTo
- uid: System.Diagnostics.TraceListenerCollection.Count*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Count
  nameWithType: TraceListenerCollection.Count
- uid: System.Diagnostics.TraceListenerCollection.GetEnumerator*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TraceListenerCollection.GetEnumerator
- uid: System.Diagnostics.TraceListenerCollection.IndexOf*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: IndexOf
  nameWithType: TraceListenerCollection.IndexOf
- uid: System.Diagnostics.TraceListenerCollection.Insert*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Insert
  nameWithType: TraceListenerCollection.Insert
- uid: System.Diagnostics.TraceListenerCollection.Item*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Item
  nameWithType: TraceListenerCollection.Item
- uid: System.Diagnostics.TraceListenerCollection.Remove*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Remove
  nameWithType: TraceListenerCollection.Remove
- uid: System.Diagnostics.TraceListenerCollection.RemoveAt*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TraceListenerCollection.RemoveAt
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: TraceListenerCollection.System.Collections.ICollection.CopyTo
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TraceListenerCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TraceListenerCollection.System.Collections.ICollection.SyncRoot
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: TraceListenerCollection.System.Collections.IList.Add
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: TraceListenerCollection.System.Collections.IList.Contains
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: TraceListenerCollection.System.Collections.IList.IndexOf
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: TraceListenerCollection.System.Collections.IList.Insert
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TraceListenerCollection.System.Collections.IList.IsFixedSize
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: TraceListenerCollection.System.Collections.IList.IsReadOnly
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: TraceListenerCollection.System.Collections.IList.Item
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: TraceListenerCollection.System.Collections.IList.Remove
