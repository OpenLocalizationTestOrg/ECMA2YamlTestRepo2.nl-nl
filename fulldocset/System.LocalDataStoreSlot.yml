### YamlMime:ManagedReference
items:
- uid: System.LocalDataStoreSlot
  id: LocalDataStoreSlot
  children:
  - System.LocalDataStoreSlot.Finalize
  langs:
  - csharp
  name: LocalDataStoreSlot
  nameWithType: LocalDataStoreSlot
  fullName: System.LocalDataStoreSlot
  type: Class
  summary: "Ingekapseld in een geheugensleuf voor het opslaan van lokale gegevens. Deze klasse kan niet worden overgenomen."
  remarks: ".NET Framework biedt twee methoden voor het gebruik van lokale opslag van thread (TLS): thread-relatief statische velden en gegevens sleuven.      -Thread-relatief statische velden zijn `static` velden (`Shared` velden in Visual Basic) die zijn gemarkeerd met de <xref:System.ThreadStaticAttribute>kenmerk.</xref:System.ThreadStaticAttribute> Ze zorgen voor betere prestaties dan gegevens sleuven en inschakelen van controle van het type van de compilatie.      -Data sleuven zijn trager en meer onhandige te gebruiken dan de thread-relatief statische velden. Bovendien worden gegevens opgeslagen als type <xref:System.Object>zodat u dit naar het juiste type casten voordat u deze kunt gebruiken</xref:System.Object> U kunt echter gegevens sleuven gebruiken wanneer u beschikt over onvoldoende informatie op het tijdstip van statische velden toewijzen.       Zie voor meer informatie over het gebruik van TLS [lokale opslag Thread: Thread-relatief statische velden en gegevens sleuven](~/add/includes/ajax-current-ext-md.md).       Op deze manier van .NET Framework biedt twee methoden voor het gebruik van lokale opslag context: context-relatief statische velden en sleuven. Context-relatief statische zijn statische velden die zijn gemarkeerd met de <xref:System.ContextStaticAttribute>kenmerk.</xref:System.ContextStaticAttribute> De verschillen tussen het gebruik van deze twee methoden zijn vergelijkbaar met de wisselwerking tussen het gebruik van de statische velden en sleuven ten opzichte van de thread.       De structuur LocalDataStoreSlot fungeert als een mechanisme voor het geheugen van de opslag van lokale dat threads en contexten kunnen gebruiken voor het opslaan van thread-specifieke en context-specifieke gegevens, respectievelijk. De common language runtime wijst een matrix met meerdere sleuven data store aan elk proces, wanneer deze wordt gemaakt. De thread- of context aanroepen diverse functies aan een site gegevens in het gegevensarchief toewijzen, opslaan en ophalen van een gegevenswaarde in de sleuf en met een gegevensgebied voor gratis gebruiken na het verstrijken van de thread- of context-object.       De gegevens sleuven zijn uniek per thread of context; de waarden worden niet gedeeld tussen de objecten thread of context. Sleuven gegevens kunnen worden toegewezen door een naam of een indexnummer.       Zie voor meer informatie over het opslaan van lokale gegevens <xref:System.Threading.Thread>of <xref:System.Runtime.Remoting.Contexts.Context>.</xref:System.Runtime.Remoting.Contexts.Context> </xref:System.Threading.Thread> De klasse LocalDataStoreSlot wordt gebruikt met methoden zoals <xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=fullName>, <xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=fullName>, <xref:System.Threading.Thread.GetData%2A?displayProperty=fullName>, en <xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=fullName>; deze heeft geen methoden van een eigen die u wilt gebruiken.</xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=fullName> </xref:System.Threading.Thread.GetData%2A?displayProperty=fullName> </xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=fullName> </xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class LocalDataStoreSlot
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.LocalDataStoreSlot.Finalize
  id: Finalize
  parent: System.LocalDataStoreSlot
  langs:
  - csharp
  name: Finalize()
  nameWithType: LocalDataStoreSlot.Finalize()
  fullName: System.LocalDataStoreSlot.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Zorgt ervoor dat resources zijn vrijgegeven en andere opschonen-bewerkingen worden uitgevoerd wanneer de garbage collector indexrijen de <xref href=&quot;System.LocalDataStoreSlot&quot;> </xref> object."
  remarks: "De garbage collector roept Finalize als het huidige object is gereed om te worden voltooid."
  syntax:
    content: ~LocalDataStoreSlot ();
    parameters: []
  overload: System.LocalDataStoreSlot.Finalize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.LocalDataStoreSlot.Finalize
  parent: System.LocalDataStoreSlot
  isExternal: false
  name: Finalize()
  nameWithType: LocalDataStoreSlot.Finalize()
  fullName: System.LocalDataStoreSlot.Finalize()
- uid: System.LocalDataStoreSlot.Finalize*
  parent: System.LocalDataStoreSlot
  isExternal: false
  name: Finalize
  nameWithType: LocalDataStoreSlot.Finalize
