### YamlMime:ManagedReference
items:
- uid: System.Web.UI.PageHandlerFactory
  id: PageHandlerFactory
  children:
  - System.Web.UI.PageHandlerFactory.#ctor
  - System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  - System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  langs:
  - csharp
  name: PageHandlerFactory
  nameWithType: PageHandlerFactory
  fullName: System.Web.UI.PageHandlerFactory
  type: Class
  summary: "Hiermee maakt u exemplaren van klassen die van overnemen de <xref href=&quot;System.Web.UI.Page&quot;> </xref> klasse en het implementeren van de <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> interface. Exemplaren worden dynamisch gemaakt voor de verwerking van aanvragen voor ASP.NET-bestanden. De klasse PageHandlerFactory is de standaard handler factory-implementatie voor ASP.NET-pagina&quot;s."
  remarks: "De PageHandlerFactory klasse implementeert de <xref:System.Web.IHttpHandlerFactory>interface voor de standaard HTTP-handler voor ASP.NET-bestanden.</xref:System.Web.IHttpHandlerFactory> De PageHandlerFactory roept u de ASP.NET-compilatie-systeem voor het samenstellen, indien nodig en het exacte type overeenkomt met de URL te retourneren, en maakt vervolgens een exemplaar van dat type. Het paginatype neemt over van de <xref:System.Web.UI.Page>klasse en implementeert de <xref:System.Web.IHttpHandler>interface.</xref:System.Web.IHttpHandler> </xref:System.Web.UI.Page>       Een aangepaste pagina handler-fabriek bouwen, implementeren de <xref:System.Web.IHttpHandlerFactory>en registreer de aangepaste PageHandlerFactory-klasse in het bestand Web.config voor de toepassing in de [httpHandlers Element (ASP.NET-instellingenschema)](http://msdn.microsoft.com/en-us/24ca01f3-7141-4fdc-acac-71c0733cf6c2) configuratiesectie.</xref:System.Web.IHttpHandlerFactory>"
  syntax:
    content: public class PageHandlerFactory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.PageHandlerFactory.#ctor
  id: '#ctor'
  parent: System.Web.UI.PageHandlerFactory
  langs:
  - csharp
  name: PageHandlerFactory()
  nameWithType: PageHandlerFactory.PageHandlerFactory()
  fullName: System.Web.UI.PageHandlerFactory.PageHandlerFactory()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.UI.PageHandlerFactory&quot;> </xref> klasse."
  remarks: "De constructor PageHandlerFactory is de standaardconstructor en initialiseert de velden op hun standaardwaarden."
  syntax:
    content: protected PageHandlerFactory ();
    parameters: []
  overload: System.Web.UI.PageHandlerFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  id: GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  parent: System.Web.UI.PageHandlerFactory
  langs:
  - csharp
  name: GetHandler(HttpContext,String,String,String)
  nameWithType: PageHandlerFactory.GetHandler(HttpContext,String,String,String)
  fullName: System.Web.UI.PageHandlerFactory.GetHandler(HttpContext,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Retourneert een exemplaar van de <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> interface voor het verwerken van de aangevraagde bron."
  remarks: "De methode GetHandler wordt aangeroepen door de ASP.NET Runtime en retourneert een geldig exemplaar van de <xref:System.Web.IHttpHandler>interface of `null`.</xref:System.Web.IHttpHandler>"
  syntax:
    content: public virtual System.Web.IHttpHandler GetHandler (System.Web.HttpContext context, string requestType, string virtualPath, string path);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Een exemplaar van de <xref href=&quot;System.Web.HttpContext&quot;> </xref> klasse die naar intrinsieke serverobjecten (bijvoorbeeld aanvraag, antwoord-sessie en Server verwijzingen) die worden gebruikt om HTTP-aanvragen te verwerken."
    - id: requestType
      type: System.String
      description: "De HTTP-gegevensoverdracht methode (GET of POST) die de client gebruikt."
    - id: virtualPath
      type: System.String
      description: "Het virtuele pad naar de aangevraagde bron."
    - id: path
      type: System.String
      description: "De <xref:System.Web.HttpRequest.PhysicalApplicationPath*>eigenschap in op de aangevraagde bron.</xref:System.Web.HttpRequest.PhysicalApplicationPath*>"
    return:
      type: System.Web.IHttpHandler
      description: "Een nieuwe <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> die de aanvraag wordt verwerkt; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.PageHandlerFactory.GetHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  id: ReleaseHandler(System.Web.IHttpHandler)
  parent: System.Web.UI.PageHandlerFactory
  langs:
  - csharp
  name: ReleaseHandler(IHttpHandler)
  nameWithType: PageHandlerFactory.ReleaseHandler(IHttpHandler)
  fullName: System.Web.UI.PageHandlerFactory.ReleaseHandler(IHttpHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hiermee kunt een factory hergebruiken van een bestaand exemplaar van een handler."
  syntax:
    content: public virtual void ReleaseHandler (System.Web.IHttpHandler handler);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "De <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> om opnieuw te gebruiken."
  overload: System.Web.UI.PageHandlerFactory.ReleaseHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.PageHandlerFactory.#ctor
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: PageHandlerFactory()
  nameWithType: PageHandlerFactory.PageHandlerFactory()
  fullName: System.Web.UI.PageHandlerFactory.PageHandlerFactory()
- uid: System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: GetHandler(HttpContext,String,String,String)
  nameWithType: PageHandlerFactory.GetHandler(HttpContext,String,String,String)
  fullName: System.Web.UI.PageHandlerFactory.GetHandler(HttpContext,String,String,String)
- uid: System.Web.IHttpHandler
  parent: System.Web
  isExternal: false
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: ReleaseHandler(IHttpHandler)
  nameWithType: PageHandlerFactory.ReleaseHandler(IHttpHandler)
  fullName: System.Web.UI.PageHandlerFactory.ReleaseHandler(IHttpHandler)
- uid: System.Web.UI.PageHandlerFactory.#ctor*
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: PageHandlerFactory
  nameWithType: PageHandlerFactory.PageHandlerFactory
- uid: System.Web.UI.PageHandlerFactory.GetHandler*
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: GetHandler
  nameWithType: PageHandlerFactory.GetHandler
- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler*
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: ReleaseHandler
  nameWithType: PageHandlerFactory.ReleaseHandler
