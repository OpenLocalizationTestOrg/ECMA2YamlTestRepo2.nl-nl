### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbConnection
  id: OleDbConnection
  children:
  - System.Data.OleDb.OleDbConnection.#ctor
  - System.Data.OleDb.OleDbConnection.#ctor(System.String)
  - System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.OleDb.OleDbConnection.BeginTransaction
  - System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)
  - System.Data.OleDb.OleDbConnection.Close
  - System.Data.OleDb.OleDbConnection.ConnectionString
  - System.Data.OleDb.OleDbConnection.ConnectionTimeout
  - System.Data.OleDb.OleDbConnection.CreateCommand
  - System.Data.OleDb.OleDbConnection.CreateDbCommand
  - System.Data.OleDb.OleDbConnection.Database
  - System.Data.OleDb.OleDbConnection.DataSource
  - System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)
  - System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  - System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])
  - System.Data.OleDb.OleDbConnection.GetSchema
  - System.Data.OleDb.OleDbConnection.GetSchema(System.String)
  - System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])
  - System.Data.OleDb.OleDbConnection.InfoMessage
  - System.Data.OleDb.OleDbConnection.Open
  - System.Data.OleDb.OleDbConnection.Provider
  - System.Data.OleDb.OleDbConnection.ReleaseObjectPool
  - System.Data.OleDb.OleDbConnection.ResetState
  - System.Data.OleDb.OleDbConnection.ServerVersion
  - System.Data.OleDb.OleDbConnection.State
  - System.Data.OleDb.OleDbConnection.System#ICloneable#Clone
  langs:
  - csharp
  name: OleDbConnection
  nameWithType: OleDbConnection
  fullName: System.Data.OleDb.OleDbConnection
  type: Class
  summary: "Hiermee geeft u een open verbinding met een gegevensbron."
  remarks: "Een object OleDbConnection vertegenwoordigt een unieke verbinding met een gegevensbron. Met een client/server-database-systeem komt dit overeen met een netwerkverbinding met de server. Afhankelijk van de functionaliteit die wordt ondersteund door de native OLE DB-provider kan een aantal methoden of eigenschappen van een object OleDbConnection mogelijk niet beschikbaar.       Wanneer u een exemplaar van OleDbConnection maakt, worden alle eigenschappen ingesteld op de oorspronkelijke waarden. Zie voor een lijst van deze waarden, de OleDbConnection-constructor.       U kunt meer dan één DataReader op een enkele OleDbConnection openen. Als u OLE DB-provider geen ondersteuning biedt meer dan één DataReader op een enkele verbinding, wordt een extra verbinding door de provider impliciet voor elk geopend.       Als de OleDbConnection buiten het bereik gaat, is het niet gesloten. Daarom moet u expliciet sluiten de verbinding door het aanroepen van <xref:System.Data.OleDb.OleDbConnection.Close%2A>of **Dispose**, of met behulp van gemaakt binnen een `Using` instructie.</xref:System.Data.OleDb.OleDbConnection.Close%2A>      > [!NOTE] > Krachtige om toepassingen te implementeren, moet u groepsgewijze verbinding nodig. Wanneer u de .NET Framework Data Provider voor OLE DB, kunt u hebt niet inschakelen omdat de provider automatisch beheerd Groepsgewijze verbinding nodig. Zie voor meer informatie over het gebruik van verbinding met de .NET Framework Data Provider voor OLE DB, groeperen [OLE DB, ODBC- en Oracle groepsgewijze](~/add/includes/ajax-current-ext-md.md).       Als een fatale <xref:System.Data.OleDb.OleDbException>(bijvoorbeeld een SQL Server ernst niveau van 20 of hoger) is gegenereerd door het uitvoeren van de methode een <xref:System.Data.OleDb.OleDbCommand>, de OleDbConnection kan worden gesloten.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbException> De gebruiker kan echter opnieuw de verbinding en doorgaan.       Een toepassing die u een exemplaar van gemaakt maakt, kan alle directe en indirecte aanroepfuncties voldoende rechten hebt voor de code door instelling declaratieve of imperatieve beveiliging eisen vereisen. OleDbConnection maakt eisen inzake beveiliging met behulp van de <xref:System.Data.OleDb.OleDbPermission>object.</xref:System.Data.OleDb.OleDbPermission> Gebruikers kunnen verifiëren met hun code is gemachtigd met behulp van de <xref:System.Data.OleDb.OleDbPermissionAttribute>object.</xref:System.Data.OleDb.OleDbPermissionAttribute> Gebruikers en beheerders kunnen ook gebruiken de [Caspol.exe (Code Access Security-beleid Tool)](~/add/includes/ajax-current-ext-md.md) beveiligingsbeleid op de computer, gebruiker en enterprise-niveaus wijzigen. Zie voor meer informatie [Code Access Security en ADO.NET](~/add/includes/ajax-current-ext-md.md).       Zie voor meer informatie over het afhandelen van waarschuwingen en informatieve berichten van de gegevensserver [verbindingsgebeurtenissen](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > De OleDbConnection-object biedt geen ondersteuning instellen of ophalen van de dynamische eigenschappen die specifiek zijn voor een OLE DB-provider. Alleen eigenschappen die kunnen worden doorgegeven in de verbindingsreeks voor de OLE DB-provider worden ondersteund."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and an OleDbConnection. The OleDbConnection is opened and set as the <xref:System.Data.OleDb.OleDbCommand.Connection%2A> for the <xref:System.Data.OleDb.OleDbCommand>. The example then calls <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> and closes the connection. To accomplish this, <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.  \n  \n [!code-cs[Classic WebData OleDbConnection Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_3_1.cs)]\n [!code-vb[Classic WebData OleDbConnection Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_3_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("InfoMessage")]

      public sealed class OleDbConnection : System.Data.Common.DbConnection, ICloneable, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.DbProviderFactory
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: OleDbConnection()
  nameWithType: OleDbConnection.OleDbConnection()
  fullName: System.Data.OleDb.OleDbConnection.OleDbConnection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> klasse."
  remarks: "Wanneer een nieuw exemplaar van <xref:System.Data.OleDb.OleDbConnection>is gemaakt, de lezen/schrijven eigenschappen zijn ingesteld op de volgende Beginwaarden tenzij ze zijn specifiek ingesteld met behulp van hun bijbehorende trefwoorden in de <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>eigenschap.</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnection>      | Eigenschappen | Initiële waarde |   |----------------|-------------------|   | <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>| lege tekenreeks (&quot;&quot;) |   | <xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.OleDb.OleDbConnection.Database%2A>| lege tekenreeks (&quot;&quot;) |   | <xref:System.Data.OleDb.OleDbConnection.DataSource%2A>| lege tekenreeks (&quot;&quot;) |       U kunt de waarde voor deze eigenschappen wijzigen alleen met behulp van de <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>eigenschap.</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnection.DataSource%2A> </xref:System.Data.OleDb.OleDbConnection.Database%2A> </xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A> </xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>"
  example:
  - "The following example creates and opens an <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-cs[Classic WebData OleDbConnection.OleDbConnection Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_7_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.OleDbConnection Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_7_1.vb)]"
  syntax:
    content: public OleDbConnection ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: OleDbConnection(String)
  nameWithType: OleDbConnection.OleDbConnection(String)
  fullName: System.Data.OleDb.OleDbConnection.OleDbConnection(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> klasse met de opgegeven verbindingsreeks."
  remarks: "Wanneer een nieuw exemplaar van <xref:System.Data.OleDb.OleDbConnection>is gemaakt, de lezen/schrijven eigenschappen zijn ingesteld op de volgende Beginwaarden tenzij ze zijn specifiek ingesteld met behulp van hun bijbehorende trefwoorden in de <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>eigenschap.</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnection>      | Eigenschappen | Initiële waarde |   |----------------|-------------------|   | <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>| `connectionString`|   | <xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.OleDb.OleDbConnection.Database%2A>| lege tekenreeks (&quot;&quot;) |   | <xref:System.Data.OleDb.OleDbConnection.DataSource%2A>| lege tekenreeks (&quot;&quot;) |       U kunt de waarde voor deze eigenschappen wijzigen alleen met behulp van de <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>eigenschap.</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnection.DataSource%2A> </xref:System.Data.OleDb.OleDbConnection.Database%2A> </xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A> </xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>"
  example:
  - "The following example creates and opens an <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-cs[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_1_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_1_1.vb)]"
  syntax:
    content: public OleDbConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "De verbinding die wordt gebruikt voor het openen van de database."
  overload: System.Data.OleDb.OleDbConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OleDbConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.OleDb.OleDbConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Moet worden toegevoegd."
    return:
      type: System.Data.Common.DbTransaction
      description: "Moet worden toegevoegd."
  overload: System.Data.OleDb.OleDbConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: OleDbConnection.BeginTransaction()
  fullName: System.Data.OleDb.OleDbConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Een databasetransactie begint met de huidige <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> waarde."
  remarks: "U moet expliciet doorvoeren of terugdraaien van de transactie met behulp van de <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>of <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A>methode.</xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> </xref:System.Data.OleDb.OleDbTransaction.Commit%2A> Om ervoor te zorgen dat de .NET Framework Data Provider voor OLE DB-model voor het beheer van transactie correct wordt uitgevoerd, te voorkomen dat met de andere transactie management modellen, zoals die worden verstrekt door de gegevensbron."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and an <xref:System.Data.OleDb.OleDbTransaction>. It also demonstrates how to use the BeginTransaction, <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, and <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData OleDbConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_23_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_23_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbTransaction
      description: "Een object dat de nieuwe transactie vertegenwoordigt."
  overload: System.Data.OleDb.OleDbConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Parallelle transacties worden niet ondersteund."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: OleDbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.OleDb.OleDbConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Een databasetransactie begint met het opgegeven isolatieniveau."
  remarks: "U moet expliciet doorvoeren of terugdraaien van de transactie met behulp van de <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>of <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A>methode.</xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> </xref:System.Data.OleDb.OleDbTransaction.Commit%2A> Om ervoor te zorgen dat de .NET Framework Data Provider voor OLE DB-model voor het beheer van transactie correct wordt uitgevoerd, te voorkomen dat met de andere transactie management modellen, zoals die worden verstrekt door de gegevensbron.      > [!NOTE] > Als u een isolatieniveau niet opgeeft, wordt het standaard-isolatieniveau voor de onderliggende provider gebruikt. Geef een isolatieniveau op met de methode BeginTransaction door gebruik van de overbelasting waarvoor de `isolationLevel` parameter."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and an <xref:System.Data.OleDb.OleDbTransaction>. It also demonstrates how to use the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, a <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, and <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_25_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_25_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Het isolatieniveau op grond waarvan de transactie moet worden uitgevoerd."
    return:
      type: System.Data.OleDb.OleDbTransaction
      description: "Een object dat de nieuwe transactie vertegenwoordigt."
  overload: System.Data.OleDb.OleDbConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Parallelle transacties worden niet ondersteund."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: OleDbConnection.ChangeDatabase(String)
  fullName: System.Data.OleDb.OleDbConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Wijzigingen van de huidige database voor een open <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>."
  remarks: "De waarde die is opgegeven de `database` parameter moet een geldige databasenaam op. De `database` parameter mag geen null-waarde, een lege tekenreeks of een tekenreeks met alleen spaties bevatten."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData OleDbConnection.Database Example#2](~/add/codesnippet/csharp/m-system.data.oledb.oled_20_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.Database Example#2](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_20_1.vb)]"
  syntax:
    content: public override void ChangeDatabase (string value);
    parameters:
    - id: value
      type: System.String
      description: "De naam van de database."
  overload: System.Data.OleDb.OleDbConnection.ChangeDatabase*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Naam van de database is niet geldig."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verbinding is niet geopend."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Kan de database niet wijzigen."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Close
  id: Close
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Close()
  nameWithType: OleDbConnection.Close()
  fullName: System.Data.OleDb.OleDbConnection.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Hiermee sluit u de verbinding met de gegevensbron."
  remarks: "De methode Close teruggedraaid in de transacties die in behandeling. Vervolgens de verbinding met de verbindingsgroep releases of de verbinding wordt gesloten als Groepsgewijze verbinding nodig is uitgeschakeld. Als sluiten wordt aangeroepen tijdens de verwerking van een <xref:System.Data.Common.DbConnection.StateChange>gebeurtenis, geen extra <xref:System.Data.Common.DbConnection.StateChange>worden gebeurtenissen.</xref:System.Data.Common.DbConnection.StateChange> </xref:System.Data.Common.DbConnection.StateChange>       Een toepassing kunt sluiten meer dan één keer aanroepen. Er is geen uitzondering gegenereerd.      > [!CAUTION] > Roep niet sluiten of **buitengebruikstelling** op een <xref:System.Data.OleDb.OleDbConnection>, een <xref:System.Data.OleDb.OleDbDataReader>, of een beheerd object in de `Finalize` methode van de klasse</xref:System.Data.OleDb.OleDbDataReader> </xref:System.Data.OleDb.OleDbConnection> In een finalizer, moet u alleen niet-beheerde bronnen waartoe de klasse rechtstreeks vrijgeven. Als uw klasse is geen eigenaar van een niet-beheerde bronnen, bevatten geen een `Finalize` methode in de klassedefinitie van de. Zie voor meer informatie [garbagecollection](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: OleDbConnection.ConnectionString
  fullName: System.Data.OleDb.OleDbConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Opgehaald of ingesteld van de tekenreeks die wordt gebruikt voor het openen van een database."
  remarks: "The ConnectionString is designed to match OLE DB connection string format as closely as possible with the following exceptions:  \n  \n-   The \"Provider = `value` \" clause is required. However, you cannot use \"Provider = MSDASQL\" because the .NET Framework Data Provider for OLE DB does not support the OLE DB Provider for ODBC (MSDASQL). To access ODBC data sources, use the <xref:System.Data.Odbc.OdbcConnection> object that is in the <xref:System.Data.Odbc> namespace.  \n  \n-   Unlike ODBC or ADO, the connection string that is returned is the same as the user-set ConnectionString, minus security information if `Persist Security Info` is set to `false` (default). The .NET Framework Data Provider for OLE DB does not persist or return the password in a connection string unless you set the `Persist Security Info` keyword to `true` (not recommended). To maintain a high level of security, it is strongly recommended that you use the `Integrated Security` keyword with `Persist Security Info` set to `false`.  \n  \n You can use the ConnectionString property to connect to a variety of data sources. The following example illustrates several possible connection strings.  \n  \n```  \n\"Provider=MSDAORA; Data Source=ORACLE8i7;Persist Security Info=False;Integrated Security=Yes\"  \n  \n\"Provider=Microsoft.Jet.OLEDB.4.0; Data Source=c:\\bin\\LocalAccess40.mdb\"  \n  \n\"Provider=SQLOLEDB;Data Source=(local);Integrated Security=SSPI\"  \n```  \n  \n If the `Data Source` keyword is not specified in the connection string, the provider will try to connect to the local server if one is available.  \n  \n For more information about connection strings, see [Using Connection String Keywords with SQL Server Native Client](http://go.microsoft.com/fwlink/?LinkId=126696).  \n  \n The ConnectionString property can be set only when the connection is closed. Many of the connection string values have corresponding read-only properties. When the connection string is set, these properties are updated, except when an error is detected. In this case, none of the properties are updated. <xref:System.Data.OleDb.OleDbConnection> properties return only those settings that are contained in the ConnectionString.  \n  \n Resetting the ConnectionString on a closed connection resets all connection string values and related properties. This includes the password. For example, if you set a connection string that includes \"Initial Catalog= AdventureWorks\", and then reset the connection string to \"Provider= SQLOLEDB;Data Source= MySQLServer;IntegratedSecurity=SSPI\", the <xref:System.Data.OleDb.OleDbConnection.Database%2A> property is no longer set to AdventureWorks. (The Initial Catalog value of the connection string corresponds to the `Database` property.)  \n  \n A preliminary validation of the connection string is performed when the property is set. If values for the `Provider`, `Connect Timeout`, `Persist Security Info`, or `OLE DB Services` are included in the string, these values are checked. When an application calls the <xref:System.Data.OleDb.OleDbConnection.Open%2A> method, the connection string is fully validated. If the connection string contains invalid or unsupported properties, a run-time exception, such as <xref:System.ArgumentException>, is generated.  \n  \n> [!CAUTION]\n>  It is possible to supply connection information for an <xref:System.Data.OleDb.OleDbConnection> in a Universal Data Link (UDL) file; however you should avoid doing so. UDL files are not encrypted and expose connection string information in clear text. Because a UDL file is an external file-based resource to your application, it cannot be secured using the .NET Framework.  \n  \n The basic format of a connection string includes a series of keyword/value pairs separated by semicolons. The equal sign (=) connects each keyword and its value. To include values that contain a semicolon, single-quote character, or double-quote character, the value must be enclosed in double quotation marks. If the value contains both a semicolon and a double-quote character, the value can be enclosed in single quotation marks. The single quotation mark is also useful if the value starts with a double-quote character. Conversely, the double quotation mark can be used if the value starts with a single quotation mark. If the value contains both single-quote and double-quote characters, the quotation-mark character used to enclose the value must be doubled every time it occurs within the value.  \n  \n To include preceding or trailing spaces in the string value, the value must be enclosed in either single quotation marks or double quotation marks. Any leading or trailing spaces around integer, Boolean, or enumerated values are ignored, even if enclosed in quotation marks. However, spaces within a string literal keyword or value are preserved. Single or double quotation marks may be used within a connection string without using delimiters (for example, `Data Source= my'Server` or `Data Source= my\"Server`) unless a quotation-mark character is the first or last character in the value.  \n  \n To include an equal sign (=) in a keyword or value, it must be preceded by another equal sign. For example, in the hypothetical connection string  \n  \n```  \n\"key==word=value\"  \n```  \n  \n the keyword is \"key=word\" and the value is \"value\".  \n  \n If a specific keyword in a keyword=value pair occurs multiple times in a connection string, the last occurrence listed is used in the value set.  \n  \n Keywords are not case sensitive.  \n  \n> [!CAUTION]\n>  You should use caution when constructing a connection string based on user input, for example, when retrieving user ID and password information from a dialog box and appending it to the connection string. The application should make sure that a user cannot embed additional connection-string parameters in these values, for example, entering a password as \"validpassword;database= somedb\" in an attempt to attach to a different database. If you use the Extended Properties connection string parameter for OLE DB connections, avoid passing user IDs and passwords because you should avoid storing user IDs and passwords in clear text if you can, and because the default setting of `Persist Security Info= false` does not affect the `Extended Properties` parameter."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and sets some of its properties in the connection string.  \n  \n [!code-cs[Classic WebData OleDbConnection.DataSource Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_4_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_4_1.vb)]"
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "De OLE DB-provider verbindingstekenreeks met de naam van de gegevensbron en andere parameters die nodig zijn om de initiële verbinding maken. De standaardwaarde is een lege tekenreeks."
  overload: System.Data.OleDb.OleDbConnection.ConnectionString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Een ongeldige verbinding tekenreeksargument is opgegeven of een tekenreeksargument vereiste verbinding is niet opgegeven."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: OleDbConnection.ConnectionTimeout
  fullName: System.Data.OleDb.OleDbConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Met deze eigenschap moet worden gewacht tijdens een poging tot stand brengen van een verbinding tot stand voordat de poging wordt afgebroken en een fout optreedt."
  remarks: "Een waarde van 0 geeft geen limiet aan, en moeten worden vermeden een <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>omdat een poging verbinding maken voor onbepaalde tijd wordt gewacht.</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and sets some of its properties in the connection string.  \n  \n [!code-vb[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_2_1.vb)]\n [!code-cs[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_2_1.cs)]"
  syntax:
    content: public override int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "De tijd in seconden moet worden gewacht voor een verbinding te openen. De standaardwaarde is 15 seconden."
  overload: System.Data.OleDb.OleDbConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De waarde ingesteld is kleiner dan 0."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: OleDbConnection.CreateCommand()
  fullName: System.Data.OleDb.OleDbConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Maakt en retourneert een <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> object gekoppeld aan de <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>."
  syntax:
    content: public System.Data.OleDb.OleDbCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "Een <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> object."
  overload: System.Data.OleDb.OleDbConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: OleDbConnection.CreateDbCommand()
  fullName: System.Data.OleDb.OleDbConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Moet worden toegevoegd."
  overload: System.Data.OleDb.OleDbConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Database
  id: Database
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Database
  nameWithType: OleDbConnection.Database
  fullName: System.Data.OleDb.OleDbConnection.Database
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Hiermee haalt u de naam van de huidige database of de database moet worden gebruikt wanneer een verbinding is geopend."
  remarks: "De Database-eigenschap dynamisch bijgewerkt. Als u de huidige database met een SQL-instructie of de <xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A>methode een informatief bericht wordt verzonden en de eigenschap wordt automatisch bijgewerkt.</xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData OleDbConnection.Database Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_14_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.Database Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_14_1.vb)]"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "De naam van de huidige database of de naam van de database moet worden gebruikt wanneer een verbinding is geopend. De standaardwaarde is een lege tekenreeks."
  overload: System.Data.OleDb.OleDbConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.DataSource
  id: DataSource
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: OleDbConnection.DataSource
  fullName: System.Data.OleDb.OleDbConnection.DataSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Hiermee haalt u de servernaam of de bestandsnaam van de gegevensbron."
  remarks: "Als de verbinding met de database is gesloten, de `DataSource` eigenschap wat is opgenomen in `ConnectionString` voor de data source-sleutelwoord. Als de verbinding geopend is en de `ConnectionString` data source sleutelwoord waarde begint met &quot;| datadirectory | &quot;, wat is opgenomen in de eigenschap resulteert in `ConnectionString` voor de data source-trefwoord alleen. Als de verbinding met de database geopend is, wordt de eigenschap retourneert de systeemeigen provider retourneert voor de `DBPROP_INIT_DATASOURCE,` en als die niet leeg is, wordt de systeemeigen provider `DBPROP_DATASOURCENAME` wordt geretourneerd."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData OleDbConnection.DataSource Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_26_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_26_1.vb)]"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "De servernaam of de bestandsnaam van de gegevensbron. De standaardwaarde is een lege tekenreeks."
  overload: System.Data.OleDb.OleDbConnection.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OleDbConnection.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Moet worden toegevoegd."
  overload: System.Data.OleDb.OleDbConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  id: EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OleDbConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(ITransaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Zich aanmeldt bij de opgegeven transactie als een gedistribueerde transactie."
  remarks: "Nieuw in ADO.NET 2.0 is ondersteuning voor het gebruik van de <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>methode een aanmeldingspoging in een gedistribueerde transactie.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Omdat deze zich aanmeldt met een verbinding in een <xref:System.Transactions.Transaction>exemplaar, **EnlistTransaction** wordt gebruikgemaakt van de functie is beschikbaar in de <xref:System.Transactions>naamruimte voor het beheren van gedistribueerde transacties, zodat u beter **EnlistDistributedTransaction** voor dit doel.</xref:System.Transactions> </xref:System.Transactions.Transaction> Zie voor meer informatie [gedistribueerde transacties](~/add/includes/ajax-current-ext-md.md).       U kunt blijven aanmeldingspoging in een bestaande gedistribueerde transactie met behulp van de methode EnlistDistributedTransaction als automatische aanmelding is uitgeschakeld. Aanmelden voor een bestaande gedistribueerde transactie ervoor zorgt dat, als de transactie is doorgevoerd of teruggedraaid, wijzigingen aangebracht door de code in de gegevensbron zijn ook doorgevoerd of teruggedraaid. Zie voor meer informatie over gedistribueerde transacties [gedistribueerde transacties](../Topic/Distributed%20Transactions.md).       EnlistDistributedTransaction een uitzondering geretourneerd als het <xref:System.Data.OleDb.OleDbConnection>al is begonnen met een transactie met <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.</xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> </xref:System.Data.OleDb.OleDbConnection> Echter, als de transactie een lokale transactie is gestart op de gegevensbron is (bijvoorbeeld door het uitvoeren van expliciet de BEGIN TRANSACTION instructie met behulp van een <xref:System.Data.OleDbClient.OleDbCommand>object), EnlistDistributedTransaction lokale transactie is teruggedraaid en zich aanmeldt bij de bestaande gedistribueerde transactie, zoals aangevraagd.</xref:System.Data.OleDbClient.OleDbCommand> U ontvangt geen melding dat de lokale transactie is teruggedraaid en zijn verantwoordelijk voor het beheren van lokale transacties niet gestart met behulp van<xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.</xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>"
  syntax:
    content: public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);
    parameters:
    - id: transaction
      type: System.EnterpriseServices.ITransaction
      description: "Een verwijzing naar een bestaande <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> waarin een aanmeldingspoging."
  overload: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: OleDbConnection.EnlistTransaction(Transaction)
  fullName: System.Data.OleDb.OleDbConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Zich aanmeldt bij de opgegeven transactie als een gedistribueerde transactie."
  remarks: 'Nieuw in ADO.NET 2.0 is ondersteuning voor het gebruik van de <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>methode een aanmeldingspoging in een gedistribueerde transactie.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Omdat deze zich aanmeldt met een verbinding in een <xref:System.Transactions.Transaction>exemplaar, **EnlistTransaction** wordt gebruikgemaakt van de functie is beschikbaar in de <xref:System.Transactions>naamruimte voor het beheren van gedistribueerde transacties, zodat u beter **EnlistDistributedTransaction**, dat via een <xref:System.EnterpriseServices.ITransaction>object.</xref:System.EnterpriseServices.ITransaction> </xref:System.Transactions> </xref:System.Transactions.Transaction> Heeft ook iets anders semantiek: zodra een verbinding is expliciet aangemeld voor een transactie, mag niet unenlisted of aangemeld in een andere transactie, totdat de eerste transactie is voltooid. Zie voor meer informatie over gedistribueerde transacties [gedistribueerde transacties](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Een verwijzing naar een bestaande <xref href=&quot;System.Transactions.Transaction&quot;> </xref> waarin een aanmeldingspoging."
  overload: System.Data.OleDb.OleDbConnection.EnlistTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])
  id: GetOleDbSchemaTable(System.Guid,System.Object[])
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: GetOleDbSchemaTable(Guid,Object[])
  nameWithType: OleDbConnection.GetOleDbSchemaTable(Guid,Object[])
  fullName: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(Guid,Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Retourneert de schema-informatie van een gegevensbron zoals aangegeven door een GUID en nadat de beperkingen van de opgegeven toepassing."
  remarks: "De schematabel wordt geretourneerd als een <xref:System.Data.DataTable>die heeft dezelfde indeling als de OLE DB-schemarijenset die is opgegeven door de `schema` parameter.</xref:System.Data.DataTable> Gebruik de `restrictions` parameter voor het filteren van de rijen worden geretourneerd in de <xref:System.Data.DataTable>(bijvoorbeeld door beperkingen voor de tabelnaam, type, de eigenaar of schema opgeven).</xref:System.Data.DataTable> Wanneer u waarden in de matrix doorgeven, neemt u lege tekenreeksen of null-waarden voor de matrixelementen die geen waarden bevatten. Als u een lege matrix aan doorgeeft `restrictions`, alle rijen (één voor elke tabel) in volgorde worden geretourneerd. Waarden in de matrix komen overeen met de volgorde van de kolommen in de brontabel en <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Elk element in de matrix beperkingen wordt vergeleken met de inhoud van de bijbehorende kolom in de schemarijenset. Het eerste element in de matrix beperkingen wordt bijvoorbeeld vergeleken met de eerste kolom in de rijenset. Als een beperking element niet null is, alleen die rijen uit de schemarijenset die exact overeenkomen met de waarde van de beperking die wordt toegevoegd aan de resulterende <xref:System.Data.DataTable>.</xref:System.Data.DataTable>       De <xref:System.Data.OleDb.OleDbConnection>de onderliggende OLE DB-methodeaanroepen **IDBSchemaRowset::GetRowset** methode met behulp van de common language runtime conversie standaardregels.</xref:System.Data.OleDb.OleDbConnection> Zie voor meer informatie [COM-gegevenstypen](http://msdn.microsoft.com/en-us/f93ae35d-a416-4218-8700-c8218cc90061).       U kunt informatie over letterlijke waarden ophalen met behulp van <xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals>.</xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals> Hierdoor krijgt u informatie identiek aan het aanroepen van de OLE DB **IDBInfo::GetLiteralInfo** -interface of de ADO **Connection.OpenSchema** methode met de `adSchemaDBInfoLiterals` constante."
  example:
  - "The following sample returns a list of tables in a database.  \n  \n [!code-cs[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/add/codesnippet/csharp/da103458-7630-4900-9261-_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/add/codesnippet/visualbasic/da103458-7630-4900-9261-_1.vb)]"
  syntax:
    content: public System.Data.DataTable GetOleDbSchemaTable (Guid schema, object[] restrictions);
    parameters:
    - id: schema
      type: System.Guid
      description: "Een van de <xref href=&quot;System.Data.OleDb.OleDbSchemaGuid&quot;> </xref> waarden waarmee de schematabel om terug te keren."
    - id: restrictions
      type: System.Object[]
      description: "Een <xref:System.Object>matrix van beperkingswaarden.</xref:System.Object> Deze worden toegepast in volgorde van de kolommen beperking. Dat wil zeggen, de eerste waarde van de beperking van toepassing is op de eerste kolom van de beperking, de tweede beperkende waarde is van toepassing op de tweede kolom van de beperking, enzovoort."
    return:
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> die de aangevraagde schema-informatie bevat."
  overload: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable*
  exceptions:
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "De opgegeven reeks beperkingen is ongeldig."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> is gesloten."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De opgegeven schemarijenset wordt niet ondersteund door OLE DB-provider.       - of - de <code> schema </code> parameter bevat een waarde van <xref href=&quot;System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals&quot;> </xref> en de <code> restrictions </code> parameter bevat een of meer beperkingen."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.GetSchema
  id: GetSchema
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: OleDbConnection.GetSchema()
  fullName: System.Data.OleDb.OleDbConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Retourneert de schema-informatie voor de gegevensbron van deze <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>."
  syntax:
    content: public override System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> die schema-informatie bevat."
  overload: System.Data.OleDb.OleDbConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: OleDbConnection.GetSchema(String)
  fullName: System.Data.OleDb.OleDbConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Retourneert de schema-informatie voor de gegevensbron van deze <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> met behulp van de opgegeven tekenreeks voor de naam van het schema."
  remarks: "Wanneer `collectionName` is opgegeven als null, de <xref:System.Data.DataTable>bevat informatie over de metagegevens die beschikbaar is en de beperkingen.</xref:System.Data.DataTable>"
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: "Hiermee geeft u de naam van het schema te retourneren."
    return:
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> die schema-informatie bevat."
  overload: System.Data.OleDb.OleDbConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: GetSchema(String,String[])
  nameWithType: OleDbConnection.GetSchema(String,String[])
  fullName: System.Data.OleDb.OleDbConnection.GetSchema(String,String[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Retourneert de schema-informatie voor de gegevensbron van deze <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> met behulp van de opgegeven tekenreeks voor de naam van het schema en de matrix van de opgegeven tekenreeks voor de beperkingswaarden."
  remarks: "Wanneer `collectionName` is opgegeven als null, de <xref:System.Data.DataTable>bevat informatie over de metagegevens die beschikbaar is en de beperkingen.</xref:System.Data.DataTable>       De `restrictionValues` parameter kan leveren *n* diepte van de waarden die zijn opgegeven door de verzameling met beperkingen voor een specifieke verzameling. Om de waarden instellen op een gegeven beperking en de waarden van andere beperkingen niet is ingesteld, moet u de voorgaande beperkingen voor null- en zet de juiste waarde in voor de beperking die u wilt een waarde opgeven voor.       Een voorbeeld hiervan is de verzameling &quot;Tabellen&quot;. Als de verzameling &quot;Tabellen&quot; drie beperkingen (database-eigenaar en tabelnaam bevat) en u wilt teruggaan alleen de tabellen die zijn gekoppeld aan de eigenaar van de &quot;Carl&quot;, moet u in de volgende waarden (minimaal) doorgeven: null, &quot;Carl&quot;. Als een beperkende waarde niet is doorgegeven, worden de standaardwaarden gebruikt voor deze beperking. Dit is dezelfde toewijzing als doorgeven in null, die verschilt van doorgeven in een lege tekenreeks voor de parameterwaarde. In dat geval wordt de lege tekenreeks (&quot;&quot;) wordt beschouwd als de waarde voor de opgegeven parameter."
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: "Hiermee geeft u de naam van het schema te retourneren."
    - id: restrictionValues
      type: System.String[]
      description: "Hiermee geeft u een reeks beperkingswaarden voor het aangevraagde schema."
    return:
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> die schema-informatie bevat."
  overload: System.Data.OleDb.OleDbConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.InfoMessage
  id: InfoMessage
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: InfoMessage
  nameWithType: OleDbConnection.InfoMessage
  fullName: System.Data.OleDb.OleDbConnection.InfoMessage
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Deze gebeurtenis treedt op wanneer de provider een waarschuwing of een informatief bericht verzendt."
  remarks: "Clients die u wilt laten verwerken voor waarschuwingen of informatieve berichten die zijn verzonden door de server moeten maken een <xref:System.Data.OleDb.OleDbInfoMessageEventHandler>gemachtigde om te luisteren naar deze gebeurtenis.</xref:System.Data.OleDb.OleDbInfoMessageEventHandler>       De InfoMessage-gebeurtenis treedt op wanneer een bericht met laag dreigingsniveau van de gegevensbron wordt geretourneerd. Laag dreigingsniveau berichten zijn die niet voor een uitzondering zorgen. Dit omvat voor Microsoft SQL Server, foutberichten die van 10 ernst of minder voor meer informatie en een voorbeeld: Zie [verbindingsgebeurtenissen](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage;
    return:
      type: System.Data.OleDb.OleDbInfoMessageEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Open
  id: Open
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Open()
  nameWithType: OleDbConnection.Open()
  fullName: System.Data.OleDb.OleDbConnection.Open()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Hiermee opent u de verbinding met een database met de instellingen van de opgegeven door de <xref:System.Data.OleDb.OleDbConnection.ConnectionString*>.</xref:System.Data.OleDb.OleDbConnection.ConnectionString*>"
  remarks: "De <xref:System.Data.OleDb.OleDbConnection>een open verbinding uit de verbindingsgroep tekent, indien beschikbaar.</xref:System.Data.OleDb.OleDbConnection> Anders maakt het nieuwe verbinding met de gegevensbron. U kunt meer dan één DataReader op één <xref:System.Data.OleDb.OleDbConnection>.</xref:System.Data.OleDb.OleDbConnection> openen Als de OLEDB-provider die u niet meer dan één actieve DataReader op één verbinding ondersteunt, wordt in de OLEDB-provider impliciet een extra verbinding voor elk geopend.      > [!NOTE] > Als de <xref:System.Data.OleDb.OleDbConnection>gaan buiten bereik, dit niet is gesloten.</xref:System.Data.OleDb.OleDbConnection> Daarom moet u expliciet sluiten de verbinding door het aanroepen van <xref:System.Data.OleDb.OleDbConnection.Close%2A>of **buitengebruikstelling**, of met behulp van de verbinding binnen een `Using` instructie.</xref:System.Data.OleDb.OleDbConnection.Close%2A>"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.Open*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verbinding is al geopend."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Er is een verbindingsniveau-fout opgetreden tijdens het openen van de verbinding."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Provider
  id: Provider
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Provider
  nameWithType: OleDbConnection.Provider
  fullName: System.Data.OleDb.OleDbConnection.Provider
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Hiermee wordt de naam van de OLE DB-provider die is opgegeven in de &quot; Provider = &quot;-component van de verbindingsreeks."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData OleDbConnection.Provider Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_1_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.Provider Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_1_1.vb)]"
  syntax:
    content: public string Provider { get; }
    return:
      type: System.String
      description: "De naam van de provider zoals opgegeven in de &quot; Provider = &quot;-component van de verbindingsreeks. De standaardwaarde is een lege tekenreeks."
  overload: System.Data.OleDb.OleDbConnection.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ReleaseObjectPool
  id: ReleaseObjectPool
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ReleaseObjectPool()
  nameWithType: OleDbConnection.ReleaseObjectPool()
  fullName: System.Data.OleDb.OleDbConnection.ReleaseObjectPool()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Geeft aan dat de <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> object-groep kan worden vrijgegeven wanneer de laatste onderliggende verbinding is verbroken."
  remarks: "`ReleaseObjectPool`kan worden aangeroepen om resources vrij die anders zou worden gereserveerd voor gegroepeerde <xref:System.Data.OleDb.OleDbConnection>objecten.</xref:System.Data.OleDb.OleDbConnection> Mogelijk wilt deze methode niet aanroepen als u bijvoorbeeld het object wordt niet gebruikt opnieuw voor de hoeveelheid tijd die OLE DB services blijft verbindingen normaal actief. Houd er rekening mee dat alleen aanroepen van de methode wordt niet daadwerkelijk vrijgegeven de actieve verbindingen dat in de groep bestaat.       De volgende moet plaatsvinden voordat de groep ten slotte wordt verwijderd: 1.  Roep <xref:System.Data.OleDb.OleDbConnection.Close%2A>om terug te keren het verbindingsobject aan de groep.</xref:System.Data.OleDb.OleDbConnection.Close%2A>      2.  Toestaan dat elke verbindingsobject time-out van de groep.      3.  ReleaseObjectPool aanroepen.      4.  Garbagecollection worden aangeroepen.       Als u daarentegen als u aanroept <xref:System.Data.OleDb.OleDbConnection.Close%2A>op alle actieve verbindingen en garbagecollection aanroepen, maar niet aangeroepen door ReleaseObjectPool, de resources die zijn gereserveerd voor de gegroepeerde objecten beschikbaar blijven.</xref:System.Data.OleDb.OleDbConnection.Close%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection>, opens it, displays some of its properties, closes the connection, and releases the object pool to conserve resources.  \n  \n [!code-cs[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_15_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_15_1.vb)]"
  syntax:
    content: public static void ReleaseObjectPool ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.ReleaseObjectPool*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ResetState
  id: ResetState
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ResetState()
  nameWithType: OleDbConnection.ResetState()
  fullName: System.Data.OleDb.OleDbConnection.ResetState()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Updates de <xref:System.Data.OleDb.OleDbConnection.State*>eigenschap van de <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> object.</xref:System.Data.OleDb.OleDbConnection.State*>"
  remarks: "Sommige OLE DB-providers kunnen de huidige status van de verbinding controleren. Bijvoorbeeld, als de databaseserver is gerecycled sinds u geopend uw <xref:System.Data.OleDb.OleDbConnection>, wordt de <xref:System.Data.OleDb.OleDbConnection.State%2A>eigenschap blijft om terug te keren `Open`.</xref:System.Data.OleDb.OleDbConnection.State%2A> </xref:System.Data.OleDb.OleDbConnection> Als u met een OLE DB-Provider die ondersteuning biedt voor polling voor deze informatie op een live-verbinding werkt, de methode ResetState en vervolgens controleren of de <xref:System.Data.OleDb.OleDbConnection.State%2A>eigenschap vertelt u de verbinding is niet langer openen.</xref:System.Data.OleDb.OleDbConnection.State%2A> De methode ResetState is afhankelijk van functionaliteit in de OLE DB-Provider om te controleren of de huidige status van de verbinding. Om te bepalen of de OLE DB-Provider deze functionaliteit ondersteunt, Controleer de provider-documentatie voor informatie over DBPROP_CONNECTIONSTATUS."
  syntax:
    content: public void ResetState ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.ResetState*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: OleDbConnection.ServerVersion
  fullName: System.Data.OleDb.OleDbConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Hiermee haalt u een tekenreeks met de versie van de server waarmee de client is verbonden."
  remarks: "De eigenschap ServerVersion toegewezen aan de OLE DB-DBPROP_DBMSVER-eigenschap. Als ServerVersion wordt niet ondersteund door de onderliggende OLE DB-provider, wordt een lege tekenreeks geretourneerd.       De versie van het formulier is *##. ##. ###*, waarbij de eerste twee cijfers de primaire versie zijn, de volgende twee cijfers de secundaire versie zijn en de laatste vier cijfers de releaseversie zijn. De provider moet de versie van het product in dit formulier weergeven, maar ook de product-specifieke versie kunt toevoegen, bijvoorbeeld &quot; 04.01.0000 Rdb 4.1 &quot;. De tekenreeks is van het formulier *major.minor.build*, waarbij de primaire en secundaire zijn precies twee cijfers build is exact vier cijfers."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-vb[Classic WebData OleDbConnection.ServerVersion Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_6_1.vb)]\n [!code-cs[Classic WebData OleDbConnection.ServerVersion Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_6_1.cs)]"
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "De versie van de gekoppelde server."
  overload: System.Data.OleDb.OleDbConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verbinding is gesloten."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.State
  id: State
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: State
  nameWithType: OleDbConnection.State
  fullName: System.Data.OleDb.OleDbConnection.State
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Hiermee haalt u de huidige status van de verbinding."
  remarks: "De volgende wijzigingen zijn toegestaan: - van `Closed` naar `Open`, waarbij de <xref:System.Data.OleDb.OleDbConnection.Open%2A>methode van de <xref:System.Data.OleDb.OleDbConnection>object.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbConnection.Open%2A>      -Van `Open` naar `Closed`, met behulp van de <xref:System.Data.OleDb.OleDbConnection.Close%2A>methode of de **buitengebruikstelling** methode van de <xref:System.Data.OleDb.OleDbConnection>object.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbConnection.Close%2A>      > [!NOTE] > In de vorige versie van .NET Framework voor het aanroepen van de eigenschap State verhoogd overhead van toepassing omdat elke aanroep van een aanroep van de OLE DB-DBPROP_CONNECTIONSTATUS-eigenschap voor een open verbinding veroorzaakt. Met de versie van .NET Framework 2.0 is dit niet langer een probleem."
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "Een bitsgewijze combinatie van de <xref href=&quot;System.Data.ConnectionState&quot;> </xref> waarden. De standaardwaarde is gesloten."
  overload: System.Data.OleDb.OleDbConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OleDbConnection.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbConnection.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Zie voor een beschrijving van dit lid &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."
  remarks: "Dit lid is een expliciete interface lid-implementatie. Het kan worden gebruikt alleen wanneer de <xref:System.Data.OleDb.OleDbConnection>exemplaar is geconverteerd naar een <xref:System.ICloneable>interface.</xref:System.ICloneable> </xref:System.Data.OleDb.OleDbConnection>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Een nieuwe <xref:System.Object>die een kopie van dit exemplaar.</xref:System.Object>"
  overload: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.OleDb.OleDbException
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbException
  nameWithType: OleDbException
  fullName: System.Data.OleDb.OleDbException
- uid: System.Data.OleDb.OleDbConnection.#ctor
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: OleDbConnection()
  nameWithType: OleDbConnection.OleDbConnection()
  fullName: System.Data.OleDb.OleDbConnection.OleDbConnection()
- uid: System.Data.OleDb.OleDbConnection.#ctor(System.String)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: OleDbConnection(String)
  nameWithType: OleDbConnection.OleDbConnection(String)
  fullName: System.Data.OleDb.OleDbConnection.OleDbConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OleDbConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.OleDb.OleDbConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: OleDbConnection.BeginTransaction()
  fullName: System.Data.OleDb.OleDbConnection.BeginTransaction()
- uid: System.Data.OleDb.OleDbTransaction
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbTransaction
  nameWithType: OleDbTransaction
  fullName: System.Data.OleDb.OleDbTransaction
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: OleDbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.OleDb.OleDbConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: OleDbConnection.ChangeDatabase(String)
  fullName: System.Data.OleDb.OleDbConnection.ChangeDatabase(String)
- uid: System.Data.OleDb.OleDbConnection.Close
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Close()
  nameWithType: OleDbConnection.Close()
  fullName: System.Data.OleDb.OleDbConnection.Close()
- uid: System.Data.OleDb.OleDbConnection.ConnectionString
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OleDbConnection.ConnectionString
  fullName: System.Data.OleDb.OleDbConnection.ConnectionString
- uid: System.Data.OleDb.OleDbConnection.ConnectionTimeout
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OleDbConnection.ConnectionTimeout
  fullName: System.Data.OleDb.OleDbConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbConnection.CreateCommand
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: OleDbConnection.CreateCommand()
  fullName: System.Data.OleDb.OleDbConnection.CreateCommand()
- uid: System.Data.OleDb.OleDbCommand
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
- uid: System.Data.OleDb.OleDbConnection.CreateDbCommand
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: OleDbConnection.CreateDbCommand()
  fullName: System.Data.OleDb.OleDbConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.OleDb.OleDbConnection.Database
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Database
  nameWithType: OleDbConnection.Database
  fullName: System.Data.OleDb.OleDbConnection.Database
- uid: System.Data.OleDb.OleDbConnection.DataSource
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: DataSource
  nameWithType: OleDbConnection.DataSource
  fullName: System.Data.OleDb.OleDbConnection.DataSource
- uid: System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OleDbConnection.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbConnection.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OleDbConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(ITransaction)
- uid: System.EnterpriseServices.ITransaction
  parent: System.EnterpriseServices
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: System.EnterpriseServices.ITransaction
- uid: System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: OleDbConnection.EnlistTransaction(Transaction)
  fullName: System.Data.OleDb.OleDbConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetOleDbSchemaTable(Guid,Object[])
  nameWithType: OleDbConnection.GetOleDbSchemaTable(Guid,Object[])
  fullName: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(Guid,Object[])
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OleDb.OleDbConnection.GetSchema
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetSchema()
  nameWithType: OleDbConnection.GetSchema()
  fullName: System.Data.OleDb.OleDbConnection.GetSchema()
- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: OleDbConnection.GetSchema(String)
  fullName: System.Data.OleDb.OleDbConnection.GetSchema(String)
- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetSchema(String,String[])
  nameWithType: OleDbConnection.GetSchema(String,String[])
  fullName: System.Data.OleDb.OleDbConnection.GetSchema(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OleDb.OleDbConnection.InfoMessage
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: InfoMessage
  nameWithType: OleDbConnection.InfoMessage
  fullName: System.Data.OleDb.OleDbConnection.InfoMessage
- uid: System.Data.OleDb.OleDbInfoMessageEventHandler
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbInfoMessageEventHandler
  nameWithType: OleDbInfoMessageEventHandler
  fullName: System.Data.OleDb.OleDbInfoMessageEventHandler
- uid: System.Data.OleDb.OleDbConnection.Open
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Open()
  nameWithType: OleDbConnection.Open()
  fullName: System.Data.OleDb.OleDbConnection.Open()
- uid: System.Data.OleDb.OleDbConnection.Provider
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Provider
  nameWithType: OleDbConnection.Provider
  fullName: System.Data.OleDb.OleDbConnection.Provider
- uid: System.Data.OleDb.OleDbConnection.ReleaseObjectPool
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ReleaseObjectPool()
  nameWithType: OleDbConnection.ReleaseObjectPool()
  fullName: System.Data.OleDb.OleDbConnection.ReleaseObjectPool()
- uid: System.Data.OleDb.OleDbConnection.ResetState
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ResetState()
  nameWithType: OleDbConnection.ResetState()
  fullName: System.Data.OleDb.OleDbConnection.ResetState()
- uid: System.Data.OleDb.OleDbConnection.ServerVersion
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OleDbConnection.ServerVersion
  fullName: System.Data.OleDb.OleDbConnection.ServerVersion
- uid: System.Data.OleDb.OleDbConnection.State
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: State
  nameWithType: OleDbConnection.State
  fullName: System.Data.OleDb.OleDbConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OleDbConnection.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbConnection.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OleDb.OleDbConnection.#ctor*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: OleDbConnection
  nameWithType: OleDbConnection.OleDbConnection
- uid: System.Data.OleDb.OleDbConnection.BeginDbTransaction*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: OleDbConnection.BeginDbTransaction
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: OleDbConnection.BeginTransaction
- uid: System.Data.OleDb.OleDbConnection.ChangeDatabase*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: OleDbConnection.ChangeDatabase
- uid: System.Data.OleDb.OleDbConnection.Close*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Close
  nameWithType: OleDbConnection.Close
- uid: System.Data.OleDb.OleDbConnection.ConnectionString*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OleDbConnection.ConnectionString
- uid: System.Data.OleDb.OleDbConnection.ConnectionTimeout*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OleDbConnection.ConnectionTimeout
- uid: System.Data.OleDb.OleDbConnection.CreateCommand*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: CreateCommand
  nameWithType: OleDbConnection.CreateCommand
- uid: System.Data.OleDb.OleDbConnection.CreateDbCommand*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: OleDbConnection.CreateDbCommand
- uid: System.Data.OleDb.OleDbConnection.Database*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Database
  nameWithType: OleDbConnection.Database
- uid: System.Data.OleDb.OleDbConnection.DataSource*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: DataSource
  nameWithType: OleDbConnection.DataSource
- uid: System.Data.OleDb.OleDbConnection.Dispose*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Dispose
  nameWithType: OleDbConnection.Dispose
- uid: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: EnlistDistributedTransaction
  nameWithType: OleDbConnection.EnlistDistributedTransaction
- uid: System.Data.OleDb.OleDbConnection.EnlistTransaction*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: OleDbConnection.EnlistTransaction
- uid: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetOleDbSchemaTable
  nameWithType: OleDbConnection.GetOleDbSchemaTable
- uid: System.Data.OleDb.OleDbConnection.GetSchema*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetSchema
  nameWithType: OleDbConnection.GetSchema
- uid: System.Data.OleDb.OleDbConnection.Open*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Open
  nameWithType: OleDbConnection.Open
- uid: System.Data.OleDb.OleDbConnection.Provider*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Provider
  nameWithType: OleDbConnection.Provider
- uid: System.Data.OleDb.OleDbConnection.ReleaseObjectPool*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ReleaseObjectPool
  nameWithType: OleDbConnection.ReleaseObjectPool
- uid: System.Data.OleDb.OleDbConnection.ResetState*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ResetState
  nameWithType: OleDbConnection.ResetState
- uid: System.Data.OleDb.OleDbConnection.ServerVersion*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OleDbConnection.ServerVersion
- uid: System.Data.OleDb.OleDbConnection.State*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: State
  nameWithType: OleDbConnection.State
- uid: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OleDbConnection.System.ICloneable.Clone
