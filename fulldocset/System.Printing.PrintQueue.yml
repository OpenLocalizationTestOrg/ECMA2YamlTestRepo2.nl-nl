### YamlMime:ManagedReference
items:
- uid: System.Printing.PrintQueue
  id: PrintQueue
  children:
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[])
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)
  - System.Printing.PrintQueue.AddJob
  - System.Printing.PrintQueue.AddJob(System.String)
  - System.Printing.PrintQueue.AddJob(System.String,System.Printing.PrintTicket)
  - System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean)
  - System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)
  - System.Printing.PrintQueue.AveragePagesPerMinute
  - System.Printing.PrintQueue.ClientPrintSchemaVersion
  - System.Printing.PrintQueue.Comment
  - System.Printing.PrintQueue.Commit
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintQueue)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Double@,System.Double@)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  - System.Printing.PrintQueue.CurrentJobSettings
  - System.Printing.PrintQueue.DefaultPrintTicket
  - System.Printing.PrintQueue.DefaultPriority
  - System.Printing.PrintQueue.Description
  - System.Printing.PrintQueue.FullName
  - System.Printing.PrintQueue.GetJob(System.Int32)
  - System.Printing.PrintQueue.GetPrintCapabilities
  - System.Printing.PrintQueue.GetPrintCapabilities(System.Printing.PrintTicket)
  - System.Printing.PrintQueue.GetPrintCapabilitiesAsXml
  - System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)
  - System.Printing.PrintQueue.GetPrintJobInfoCollection
  - System.Printing.PrintQueue.HasPaperProblem
  - System.Printing.PrintQueue.HasToner
  - System.Printing.PrintQueue.HostingPrintServer
  - System.Printing.PrintQueue.InPartialTrust
  - System.Printing.PrintQueue.InternalDispose(System.Boolean)
  - System.Printing.PrintQueue.IsBidiEnabled
  - System.Printing.PrintQueue.IsBusy
  - System.Printing.PrintQueue.IsDevQueryEnabled
  - System.Printing.PrintQueue.IsDirect
  - System.Printing.PrintQueue.IsDoorOpened
  - System.Printing.PrintQueue.IsHidden
  - System.Printing.PrintQueue.IsInError
  - System.Printing.PrintQueue.IsInitializing
  - System.Printing.PrintQueue.IsIOActive
  - System.Printing.PrintQueue.IsManualFeedRequired
  - System.Printing.PrintQueue.IsNotAvailable
  - System.Printing.PrintQueue.IsOffline
  - System.Printing.PrintQueue.IsOutOfMemory
  - System.Printing.PrintQueue.IsOutOfPaper
  - System.Printing.PrintQueue.IsOutputBinFull
  - System.Printing.PrintQueue.IsPaperJammed
  - System.Printing.PrintQueue.IsPaused
  - System.Printing.PrintQueue.IsPendingDeletion
  - System.Printing.PrintQueue.IsPowerSaveOn
  - System.Printing.PrintQueue.IsPrinting
  - System.Printing.PrintQueue.IsProcessing
  - System.Printing.PrintQueue.IsPublished
  - System.Printing.PrintQueue.IsQueued
  - System.Printing.PrintQueue.IsRawOnlyEnabled
  - System.Printing.PrintQueue.IsServerUnknown
  - System.Printing.PrintQueue.IsShared
  - System.Printing.PrintQueue.IsTonerLow
  - System.Printing.PrintQueue.IsWaiting
  - System.Printing.PrintQueue.IsWarmingUp
  - System.Printing.PrintQueue.IsXpsDevice
  - System.Printing.PrintQueue.KeepPrintedJobs
  - System.Printing.PrintQueue.Location
  - System.Printing.PrintQueue.MaxPrintSchemaVersion
  - System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)
  - System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)
  - System.Printing.PrintQueue.Name
  - System.Printing.PrintQueue.NeedUserIntervention
  - System.Printing.PrintQueue.NumberOfJobs
  - System.Printing.PrintQueue.PagePunt
  - System.Printing.PrintQueue.Pause
  - System.Printing.PrintQueue.PrintingIsCancelled
  - System.Printing.PrintQueue.Priority
  - System.Printing.PrintQueue.Purge
  - System.Printing.PrintQueue.QueueAttributes
  - System.Printing.PrintQueue.QueueDriver
  - System.Printing.PrintQueue.QueuePort
  - System.Printing.PrintQueue.QueuePrintProcessor
  - System.Printing.PrintQueue.QueueStatus
  - System.Printing.PrintQueue.Refresh
  - System.Printing.PrintQueue.Resume
  - System.Printing.PrintQueue.ScheduleCompletedJobsFirst
  - System.Printing.PrintQueue.SeparatorFile
  - System.Printing.PrintQueue.ShareName
  - System.Printing.PrintQueue.StartTimeOfDay
  - System.Printing.PrintQueue.UntilTimeOfDay
  - System.Printing.PrintQueue.UserPrintTicket
  langs:
  - csharp
  name: PrintQueue
  nameWithType: PrintQueue
  fullName: System.Printing.PrintQueue
  type: Class
  summary: "Printers en afdruktaken beheert."
  remarks: "Sommige eigenschappen van het PrintQueue-object kenmerken van de afdrukwachtrij-hulpprogramma dat wordt uitgevoerd op de computer, maar andere functies of de statussen van de printer zichzelf bevatten. Bijvoorbeeld: <xref:System.Printing.PrintQueue.NumberOfJobs%2A>is een kenmerk van de afdrukwachtrij maar <xref:System.Printing.PrintQueue.Location%2A>is een eigenschap van de printer.</xref:System.Printing.PrintQueue.Location%2A> </xref:System.Printing.PrintQueue.NumberOfJobs%2A> Veel van de eigenschappen van de printer, zoals of gebruiker aandacht, moeten worden doorgegeven, door middel van de <xref:System.Printing.PrintQueue.Refresh%2A>methode van de printer zelf voor het PrintQueue-object.</xref:System.Printing.PrintQueue.Refresh%2A> Dit moet gebeuren voordat de bijbehorende eigenschap (<xref:System.Printing.PrintQueue.NeedUserIntervention%2A>) kan worden gelezen door uw programma.</xref:System.Printing.PrintQueue.NeedUserIntervention%2A> Op dezelfde manier als het programma de waarden van een of meer eigenschappen van een PrintQueue-object verandert, moet de wijziging voldoen aan het werkelijke afdrukwachtrij-hulpprogramma op de computer. Dit doen met de <xref:System.Printing.PrintQueue.Commit%2A>methode.</xref:System.Printing.PrintQueue.Commit%2A>      > [!CAUTION] > Klassen binnen de <xref:System.Printing>naamruimte worden niet ondersteund voor gebruik in een Windows-service of ASP.NET-toepassing of service.</xref:System.Printing> Bij het gebruik van deze klassen uit binnen één van deze toepassingstypen kan leiden tot onverwachte problemen, zoals verminderde prestaties en runtime-uitzonderingen service.       Als u afdrukken vanuit een Windows Forms-toepassingen wilt, raadpleegt u de <xref:System.Drawing.Printing>naamruimte.</xref:System.Drawing.Printing>"
  syntax:
    content: 'public class PrintQueue : System.Printing.PrintSystemObject'
  inheritance:
  - System.Object
  - System.Printing.PrintSystemObject
  implements: []
  inheritedMembers:
  - System.Printing.PrintSystemObject.BaseAttributeNames
  - System.Printing.PrintSystemObject.Dispose
  - System.Printing.PrintSystemObject.Dispose(System.Boolean)
  - System.Printing.PrintSystemObject.Initialize
  - System.Printing.PrintSystemObject.IsDisposed
  - System.Printing.PrintSystemObject.Parent
  - System.Printing.PrintSystemObject.PropertiesCollection
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String)
  id: '#ctor(System.Printing.PrintServer,System.String)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Initialiseert een nieuw exemplaar van <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> met behulp van de opgegeven klasse <xref href=&quot;System.Printing.PrintServer&quot;> </xref> en de wachtrijnaam van de."
  remarks: "<xref:System.Printing.PrintQueue>constructors die geen bevatten een <xref:System.Printing.PrintSystemDesiredAccess>parameterstandaard <xref:System.Printing.PrintSystemDesiredAccess>toegang.</xref:System.Printing.PrintSystemDesiredAccess> </xref:System.Printing.PrintSystemDesiredAccess></xref:System.Printing.PrintQueue>"
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "De afdrukserver voor het hosten van de afdrukwachtrij."
    - id: printQueueName
      type: System.String
      description: "De naam van de afdrukwachtrij."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32)
  id: '#ctor(System.Printing.PrintServer,System.String,System.Int32)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,Int32)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,Int32)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,Int32)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Initialiseert een nieuw exemplaar van <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> met behulp van de opgegeven klasse <xref href=&quot;System.Printing.PrintServer&quot;> </xref>, de naam van de wachtrij en schemaversie afdrukken."
  remarks: "<xref:System.Printing.PrintQueue>constructors die geen bevatten een <xref:System.Printing.PrintSystemDesiredAccess>parameterstandaard <xref:System.Printing.PrintSystemDesiredAccess>toegang.</xref:System.Printing.PrintSystemDesiredAccess> </xref:System.Printing.PrintSystemDesiredAccess></xref:System.Printing.PrintQueue>       De [afdrukken Schema](http://go.microsoft.com/fwlink/?LinkId=186397) versie uitgebracht met Windows Vista &quot;1&quot; is."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, int printSchemaVersion);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "De afdrukserver die als host fungeert voor de afdrukwachtrij."
    - id: printQueueName
      type: System.String
      description: "De naam van de afdrukwachtrij."
    - id: printSchemaVersion
      type: System.Int32
      description: "De versie van de afdruk-Schema te gebruiken."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])
  id: '#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Initialiseert een nieuw exemplaar van <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> met behulp van de opgegeven klasse <xref href=&quot;System.Printing.PrintServer&quot;> </xref>, wachtrijnaam en matrix van <xref href=&quot;System.Printing.PrintQueueIndexedProperty&quot;> </xref> waarden worden geïnitialiseerd."
  remarks: "<xref:System.Printing.PrintQueue>constructors die geen bevatten een <xref:System.Printing.PrintSystemDesiredAccess>parameterstandaard <xref:System.Printing.PrintSystemDesiredAccess>toegang.</xref:System.Printing.PrintSystemDesiredAccess> </xref:System.Printing.PrintSystemDesiredAccess></xref:System.Printing.PrintQueue>       Het gebruik van een constructor met de `propertyFilter` parameter verbetert de prestaties."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintQueueIndexedProperty[] propertyFilter);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "De afdrukserver die als host fungeert voor de afdrukwachtrij."
    - id: printQueueName
      type: System.String
      description: "De naam van de afdrukwachtrij."
    - id: propertyFilter
      type: System.Printing.PrintQueueIndexedProperty[]
      description: "Een matrix van <xref href=&quot;System.Printing.PrintQueueIndexedProperty&quot;> </xref> waarden die de eigenschapswaarden worden geïnitialiseerd."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)
  id: '#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Initialiseert een nieuw exemplaar van <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> met behulp van de opgegeven klasse <xref href=&quot;System.Printing.PrintServer&quot;> </xref>, wachtrij-naam en gewenste toegang."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintSystemDesiredAccess desiredAccess);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "De afdrukserver die als host fungeert voor de afdrukwachtrij."
    - id: printQueueName
      type: System.String
      description: "De naam van de afdrukwachtrij."
    - id: desiredAccess
      type: System.Printing.PrintSystemDesiredAccess
      description: "Een van de <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref> waarden die het type toegang tot de afdrukwachtrij die het programma nodig heeft."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<code>desiredAccess</code>is een waarde die kan worden alleen toegepast op een <xref href=&quot;System.Printing.PrintServer&quot;> </xref> -object is niet een <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> object. Bijvoorbeeld: <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref>."
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[])
  id: '#ctor(System.Printing.PrintServer,System.String,System.String[])'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,String[])
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,String[])
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,String[])
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Initialiseert een nieuw exemplaar van <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> met behulp van de opgegeven klasse <xref href=&quot;System.Printing.PrintServer&quot;> </xref>, wachtrijnaam en matrix van eigenschapnamen worden geïnitialiseerd."
  remarks: "<xref:System.Printing.PrintQueue>constructors die geen bevatten een <xref:System.Printing.PrintSystemDesiredAccess>parameterstandaard <xref:System.Printing.PrintSystemDesiredAccess>toegang.</xref:System.Printing.PrintSystemDesiredAccess> </xref:System.Printing.PrintSystemDesiredAccess></xref:System.Printing.PrintQueue>       Het gebruik van een constructor met de `propertyFilter` parameter verbetert de prestaties."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "De afdrukserver die als host fungeert voor de afdrukwachtrij."
    - id: printQueueName
      type: System.String
      description: "De naam van de afdrukwachtrij."
    - id: propertyFilter
      type: System.String[]
      description: "Een matrix met de namen van eigenschappen worden geïnitialiseerd."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)
  id: '#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Initialiseert een nieuw exemplaar van <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> met behulp van de opgegeven klasse <xref href=&quot;System.Printing.PrintServer&quot;> </xref>, de naam van de wachtrij, afdrukken schemaversie en gewenste toegang."
  remarks: "De [afdrukken Schema](http://go.microsoft.com/fwlink/?LinkId=186397) versie uitgebracht met Windows Vista &quot;1&quot; is."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, int printSchemaVersion, System.Printing.PrintSystemDesiredAccess desiredAccess);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "De afdrukserver die als host fungeert voor de afdrukwachtrij."
    - id: printQueueName
      type: System.String
      description: "De naam van de afdrukwachtrij."
    - id: printSchemaVersion
      type: System.Int32
      description: "De versie van de afdruk-Schema te gebruiken."
    - id: desiredAccess
      type: System.Printing.PrintSystemDesiredAccess
      description: "Een van de <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref> waarden die het type toegang tot de afdrukwachtrij die het programma nodig heeft."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<code>desiredAccess</code>is een waarde die kan worden alleen toegepast op een <xref href=&quot;System.Printing.PrintServer&quot;> </xref> -object is niet een <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> object. Bijvoorbeeld: <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref>."
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)
  id: '#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Initialiseert een nieuw exemplaar van <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> klasse met de opgegeven <xref href=&quot;System.Printing.PrintServer&quot;> </xref>, wachtrijnaam, matrix van <xref href=&quot;System.Printing.PrintQueueIndexedProperty&quot;> </xref> waarden te initialiseren en gewenste toegang."
  remarks: "Het gebruik van een constructor met de `propertyFilter` parameter verbetert de prestaties."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintQueueIndexedProperty[] propertyFilter, System.Printing.PrintSystemDesiredAccess desiredAccess);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "De afdrukserver die als host fungeert voor de afdrukwachtrij."
    - id: printQueueName
      type: System.String
      description: "De naam van de afdrukwachtrij."
    - id: propertyFilter
      type: System.Printing.PrintQueueIndexedProperty[]
      description: "Een matrix van <xref href=&quot;System.Printing.PrintQueueIndexedProperty&quot;> </xref> waarden die Hiermee worden de eigenschappen worden geïnitialiseerd."
    - id: desiredAccess
      type: System.Printing.PrintSystemDesiredAccess
      description: "Een van de <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref> waarden die het type toegang tot de afdrukwachtrij die het programma nodig heeft."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<code>desiredAccess</code>is een waarde die kan worden alleen toegepast op een <xref href=&quot;System.Printing.PrintServer&quot;> </xref> -object is niet een <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> object. Bijvoorbeeld: <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref>."
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)
  id: '#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Initialiseert een nieuw exemplaar van <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> met behulp van de opgegeven klasse <xref href=&quot;System.Printing.PrintServer&quot;> </xref>, naam eigenschappenfilter, een wachtrij en gewenste toegang."
  remarks: "Het gebruik van een constructor met de `propertyFilter` parameter verbetert de prestaties."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter, System.Printing.PrintSystemDesiredAccess desiredAccess);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "De afdrukserver die als host fungeert voor de afdrukwachtrij."
    - id: printQueueName
      type: System.String
      description: "De naam van de afdrukwachtrij."
    - id: propertyFilter
      type: System.String[]
      description: "Een matrix met de namen van eigenschappen worden geïnitialiseerd."
    - id: desiredAccess
      type: System.Printing.PrintSystemDesiredAccess
      description: "Een van de <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref> waarden die het type toegang tot de afdrukwachtrij die het programma nodig heeft."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<code>desiredAccess</code>is een waarde die kan worden alleen toegepast op een <xref href=&quot;System.Printing.PrintServer&quot;> </xref> -object is niet een <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> object. Bijvoorbeeld: <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref>."
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob
  id: AddJob
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob()
  nameWithType: PrintQueue.AddJob()
  fullName: System.Printing.PrintQueue.AddJob()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee voegt u een nieuwe (algemeen benoemde) afdruktaak, waarvan de inhoud is een <xref:System.Byte>matrix in de wachtrij.</xref:System.Byte>"
  remarks: "Gebruik deze methode om specifieke apparaatgegevens schrijven naar een bestand printerwachtrij, die niet automatisch is opgenomen door de [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] spooler. Daarnaast moet u weten of het spoolbestand is [!INCLUDE[TLA#tla_emf](~/add/includes/tlasharptla-emf-md.md)] of [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]. Als u liever wilt werken met de <xref:System.IO.Stream> [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)], kunt u de <xref:System.Printing.PrintQueueStream>klasse in plaats van deze methode.</xref:System.Printing.PrintQueueStream> </xref:System.IO.Stream>       Nadat de AddJob-methode is aangeroepen, moet u een <xref:System.Byte>matrix naar de <xref:System.Printing.PrintSystemJobInfo.JobStream%2A>eigenschap van de <xref:System.Printing.PrintSystemJobInfo>die wordt geretourneerd door AddJob of geen afdruktaak is gemaakt.</xref:System.Printing.PrintSystemJobInfo> </xref:System.Printing.PrintSystemJobInfo.JobStream%2A> </xref:System.Byte> Deze matrix is wat wordt afgedrukt als de printer functioneert en wordt niet onderbroken.      > [!CAUTION] > Als de <xref:System.Printing.PrintSystemJobInfo.JobStream%2A>niet is gesloten met <xref:System.IO.Stream.Close%2A>vóór het einde van de thread waarin AddJob wordt aangeroepen, wordt er een <xref:System.InvalidOperationException>gegenereerd wanneer deze thread wordt beëindigd omdat de thread spooler besturingselement kan worden verkregen via de <xref:System.IO.Stream>object.</xref:System.IO.Stream> </xref:System.InvalidOperationException> </xref:System.IO.Stream.Close%2A> </xref:System.Printing.PrintSystemJobInfo.JobStream%2A>       In de afdrukwachtrij [!INCLUDE[TLA#tla_gui](~/add/includes/ajax-current-ext-md.md)], de taak is de naam &quot;Systeem Document afdrukken&quot;. Als u de taak een andere naam geven, gebruikt u de <xref:System.Printing.PrintQueue.AddJob%28System.String%29>overbelasting.</xref:System.Printing.PrintQueue.AddJob%28System.String%29>       Andere manieren om af te drukken [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] omvatten de <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName>methode die kan worden gebruikt met of zonder het openen van het dialoogvenster en veel <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>en <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>methoden van de <xref:System.Windows.Xps.XpsDocumentWriter>.</xref:System.Windows.Xps.XpsDocumentWriter> </xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> </xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> </xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName>"
  example:
  - "The following example shows how to use AddJob to send a <xref:System.Byte> array to a print queue. This code only works with printers that can detect and print plain text. Some of them cannot.  \n  \n [!code-vb[WriteToSpoolFile#AddUnnamedJob](~/add/codesnippet/visualbasic/writetospoolfile/program.vb#addunnamedjob)]\n [!code-cs[WriteToSpoolFile#AddUnnamedJob](~/add/codesnippet/csharp/WriteToSpoolFile/Program.cs#addunnamedjob)]"
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob ();
    parameters: []
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "Een <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> die staat voor de afdruktaak en de status ervan."
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob(System.String)
  id: AddJob(System.String)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob(String)
  nameWithType: PrintQueue.AddJob(String)
  fullName: System.Printing.PrintQueue.AddJob(String)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee voegt u een nieuwe afdruktaak, waarvan de inhoud is een <xref:System.Byte>matrix in de wachtrij.</xref:System.Byte>"
  remarks: "Gebruik deze methode om specifieke apparaatgegevens schrijven naar een bestand printerwachtrij, die niet automatisch is opgenomen door de [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] spooler. Daarnaast moet u weten of het spoolbestand is [!INCLUDE[TLA#tla_emf](~/add/includes/tlasharptla-emf-md.md)] of [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]. Als u liever wilt werken met de <xref:System.IO.Stream> [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)], kunt u de <xref:System.Printing.PrintQueueStream>klasse in plaats van deze methode.</xref:System.Printing.PrintQueueStream> </xref:System.IO.Stream>       Na de <xref:System.Printing.PrintQueue.AddJob%2A>methode is aangeroepen, moet u een <xref:System.Byte>matrix naar de <xref:System.Printing.PrintSystemJobInfo.JobStream%2A>eigenschap van de <xref:System.Printing.PrintSystemJobInfo>die wordt geretourneerd door AddJob of geen afdruktaak is gemaakt.</xref:System.Printing.PrintSystemJobInfo> </xref:System.Printing.PrintSystemJobInfo.JobStream%2A> </xref:System.Byte> </xref:System.Printing.PrintQueue.AddJob%2A> Deze matrix is wat wordt afgedrukt als de printer functioneert en wordt niet onderbroken.      > [!CAUTION] > Als de <xref:System.Printing.PrintSystemJobInfo.JobStream%2A>niet is gesloten met <xref:System.IO.Stream.Close%2A>vóór het einde van de thread waarin <xref:System.Printing.PrintQueue.AddJob%2A>wordt aangeroepen, wordt er een <xref:System.InvalidOperationException>gegenereerd wanneer deze thread wordt beëindigd omdat de thread spooler besturingselement kan worden verkregen via de <xref:System.IO.Stream>object.</xref:System.IO.Stream> </xref:System.InvalidOperationException> </xref:System.Printing.PrintQueue.AddJob%2A> </xref:System.IO.Stream.Close%2A> </xref:System.Printing.PrintSystemJobInfo.JobStream%2A>       Andere manieren om af te drukken [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] omvatten de <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName>methode die kan worden gebruikt met of zonder het openen van het dialoogvenster en veel <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>en <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>methoden van de <xref:System.Windows.Xps.XpsDocumentWriter>.</xref:System.Windows.Xps.XpsDocumentWriter> </xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> </xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> </xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName>"
  example:
  - "The following example shows how to use AddJob to read a file into a <xref:System.Byte> array and send the array to a print queue. This code assumes that there is a file called test.txt in the root of the C: drive. This code only works with printers that can detect and print plain text. Some of them cannot.  \n  \n [!code-vb[WriteToSpoolFile#AddNamedJob](~/add/codesnippet/visualbasic/writetospoolfile/program.vb#addnamedjob)]\n [!code-cs[WriteToSpoolFile#AddNamedJob](~/add/codesnippet/csharp/WriteToSpoolFile/Program.cs#addnamedjob)]"
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob (string jobName);
    parameters:
    - id: jobName
      type: System.String
      description: "De naam van de afdruktaak."
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "Een <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> die staat voor de afdruktaak en de status ervan."
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob(System.String,System.Printing.PrintTicket)
  id: AddJob(System.String,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob(String,PrintTicket)
  nameWithType: PrintQueue.AddJob(String,PrintTicket)
  fullName: System.Printing.PrintQueue.AddJob(String,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee voegt u een nieuwe afdruktaak voor een [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)] Document in de wachtrij en krijgt deze de opgegeven naam en de instellingen."
  remarks: "Zie voor meer informatie <xref:System.Printing.PrintQueue.AddJob%28System.String%29>.</xref:System.Printing.PrintQueue.AddJob%28System.String%29>"
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob (string jobName, System.Printing.PrintTicket printTicket);
    parameters:
    - id: jobName
      type: System.String
      description: "Het pad en de naam van het document dat wordt afgedrukt."
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "De instellingen van de afdruktaak."
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "Een <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> die staat voor de afdruktaak en de status ervan."
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean)
  id: AddJob(System.String,System.String,System.Boolean)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob(String,String,Boolean)
  nameWithType: PrintQueue.AddJob(String,String,Boolean)
  fullName: System.Printing.PrintQueue.AddJob(String,String,Boolean)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee voegt u een nieuwe afdruktaak voor een [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)] Document in de wachtrij, krijgt deze de opgegeven naam en geeft aan of niet moeten worden gevalideerd."
  remarks: "Als `fastCopy` is `true`, en vervolgens de printer moet een [Printing Overview](~/add/includes/ajax-current-ext-md.md). Als dit niet het geval is, genereert de methode AddJob een uitzondering.       Als `fastCopy` is `false`, en vervolgens het is niet nodig om een printer XPSDrv te gebruiken. De [!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)] bestand wordt toegevoegd aan de wachtrij wordt geconverteerd naar de printer pagina Beschrijving taal, zoals PCL of Postscript. Dit soort afdrukken heeft echter een aanroep van [!INCLUDE[TLA#tla_com](~/add/includes/ajax-current-ext-md.md)]. De aanroep van [!INCLUDE[TLA2#tla_com](~/add/includes/tla2sharptla-com-md.md)] vereist dat de aanroepende thread een single thread apartment (<xref:System.Threading.ApartmentState>) in plaats van meerdere threads apartment (<xref:System.Threading.ApartmentState>) Dit is de standaardwaarde in [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] 2.0 en hoger.</xref:System.Threading.ApartmentState> </xref:System.Threading.ApartmentState> (Zie voor meer informatie over threading en apartment status [beheerde en onbeheerde Threading](http://msdn.microsoft.com/en-us/db425c20-4b2f-4433-bf96-76071c7881e5), en <xref:System.Threading.ApartmentState>.)</xref:System.Threading.ApartmentState> Er zijn twee manieren om dit te doen:-de eenvoudigste manier is het toevoegen van de <xref:System.STAThreadAttribute>(dat wil zeggen, &quot;`[System.STAThreadAttribute()]`&quot;) erboven in de eerste regel van de toepassing `Main` methode (meestal &quot;`static void Main(string[] args)`&quot;).</xref:System.STAThreadAttribute>      -Als u moet uw `Main` apartmentstatus van thread, <xref:System.Threading.ApartmentState>kunt u de aanroep van AddJob in een afzonderlijke thread waarvan apartmentstatus is ingesteld op <xref:System.Threading.ApartmentState> <xref:System.Threading.Thread.SetApartmentState%2A>.</xref:System.Threading.Thread.SetApartmentState%2A> </xref:System.Threading.ApartmentState> bevatten</xref:System.Threading.ApartmentState> Het volgende voorbeeld ziet u deze tweede methode.      > [!NOTE] > Kan niet worden toegepast de <xref:System.STAThreadAttribute>voor elke methode, behalve `Main` en u niet gebruiken <xref:System.Threading.Thread.SetApartmentState%2A>voor de `Main` thread.</xref:System.Threading.Thread.SetApartmentState%2A> </xref:System.STAThreadAttribute>       Andere manieren om af te drukken [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] omvatten de <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName>methode die kan worden gebruikt met of zonder het openen van het dialoogvenster en veel <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>en <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>methoden van de <xref:System.Windows.Xps.XpsDocumentWriter>.</xref:System.Windows.Xps.XpsDocumentWriter> </xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> </xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> </xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName>"
  example:
  - "The following example shows how to use AddJob to batch print all the [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)] files in a directory.  \n  \n [!code-cs[BatchPrintXPSFiles#BatchPrintXPSFiles](~/add/codesnippet/csharp/BatchPrintXPSFiles/Program.cs#batchprintxpsfiles)]\n [!code-vb[BatchPrintXPSFiles#BatchPrintXPSFiles](~/add/codesnippet/visualbasic/batchprintxpsfiles/program.vb#batchprintxpsfiles)]"
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob (string jobName, string documentPath, bool fastCopy);
    parameters:
    - id: jobName
      type: System.String
      description: "De naam van de afdruktaak."
    - id: documentPath
      type: System.String
      description: "Het pad en de naam van het document dat wordt afgedrukt."
    - id: fastCopy
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>naar de wachtrij snel zonder per pagina Voortgang feedback en valideren van het bestand is geldig [!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "Een <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> die staat voor de afdruktaak en de status ervan."
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)
  id: AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob(String,String,Boolean,PrintTicket)
  nameWithType: PrintQueue.AddJob(String,String,Boolean,PrintTicket)
  fullName: System.Printing.PrintQueue.AddJob(String,String,Boolean,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee voegt u een nieuwe afdruktaak voor een [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)] Document in de wachtrij, krijgt deze de opgegeven naam en de instellingen en geeft aan of niet moeten worden gevalideerd."
  remarks: "Zie voor meer informatie <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>.</xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>"
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob (string jobName, string documentPath, bool fastCopy, System.Printing.PrintTicket printTicket);
    parameters:
    - id: jobName
      type: System.String
      description: "Het pad en de naam van het document dat wordt afgedrukt."
    - id: documentPath
      type: System.String
      description: "Het pad en de naam van het document dat wordt afgedrukt."
    - id: fastCopy
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>naar de wachtrij snel zonder per pagina Voortgang feedback en valideren van het bestand is geldig [!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "De instellingen van de afdruktaak."
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "Een <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> die staat voor de afdruktaak en de status ervan."
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AveragePagesPerMinute
  id: AveragePagesPerMinute
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AveragePagesPerMinute
  nameWithType: PrintQueue.AveragePagesPerMinute
  fullName: System.Printing.PrintQueue.AveragePagesPerMinute
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee haalt u de snelheid van de printer gemeten in pagina&quot;s per minuut."
  syntax:
    content: public virtual int AveragePagesPerMinute { get; }
    return:
      type: System.Int32
      description: "Het gemiddeld aantal pagina&quot;s per minuut van de printer afgedrukt."
  overload: System.Printing.PrintQueue.AveragePagesPerMinute*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.ClientPrintSchemaVersion
  id: ClientPrintSchemaVersion
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: ClientPrintSchemaVersion
  nameWithType: PrintQueue.ClientPrintSchemaVersion
  fullName: System.Printing.PrintQueue.ClientPrintSchemaVersion
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Met deze eigenschap wordt de versie van de [afdrukken Schema](http://go.microsoft.com/fwlink/?LinkId=186397)."
  remarks: "De [afdrukken Schema](http://go.microsoft.com/fwlink/?LinkId=186397) versie uitgebracht met Windows Vista is 1."
  syntax:
    content: public int ClientPrintSchemaVersion { get; }
    return:
      type: System.Int32
      description: "De versie van de [afdrukken Schema](http://go.microsoft.com/fwlink/?LinkId=186397) in gebruik."
  overload: System.Printing.PrintQueue.ClientPrintSchemaVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Comment
  id: Comment
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Comment
  nameWithType: PrintQueue.Comment
  fullName: System.Printing.PrintQueue.Comment
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Opgehaald of ingesteld van een opmerking over de printer."
  remarks: "De opmerking is zichtbaar voor gebruikers in de lijst met Windows-printers en in het dialoogvenster Windows algemene afdrukken. Informatie niet is opgenomen in de naam van de printer, het model of de locatie-eigenschappen ook weergegeven in de dezelfde plaatsen worden; kan geven bijvoorbeeld &quot;gereserveerd voor salarissen afdeling tussen 15: 00 en 4 uur.&quot; (De <xref:System.Printing.PrintQueue.Description%2A>eigenschap kunt u voor het opslaan van informatie die gebruikers niet weergeven tenzij uw toepassing zichtbaar worden.)</xref:System.Printing.PrintQueue.Description%2A>"
  syntax:
    content: public virtual string Comment { get; set; }
    return:
      type: System.String
      description: "Een opmerking over de printer."
  overload: System.Printing.PrintQueue.Comment*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Commit
  id: Commit
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Commit()
  nameWithType: PrintQueue.Commit()
  fullName: System.Printing.PrintQueue.Commit()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Schrijft de huidige eigenschappen van de <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> object naar de werkelijke afdrukwachtrij op de afdrukserver."
  remarks: "Wijzigingen die uw programma aan de eigenschappen van aanbrengt een <xref:System.Printing.PrintQueue>object niet daadwerkelijk doorgevoerd totdat het programma wordt uitgevoerd voor de methode Commit.</xref:System.Printing.PrintQueue>       De methode vereist dat de <xref:System.Printing.PrintQueue>object worden gemaakt met <xref:System.Printing.PrintSystemDesiredAccess>rights.</xref:System.Printing.PrintSystemDesiredAccess> </xref:System.Printing.PrintQueue>"
  example:
  - "The following example shows how to use this method while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public override void Commit ();
    parameters: []
  overload: System.Printing.PrintQueue.Commit*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "Sommige eigenschappen kan niet worden doorgevoerd."
  - type: System.Printing.PrintCommitAttributesException
    commentId: T:System.Printing.PrintCommitAttributesException
    description: "Some of the properties could not be committed.  \n  \n \\- or -  \n  \n The <xref href=\"System.Printing.PrintQueue\"></xref> object was not created with sufficient rights."
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)
  id: CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(PrintDocumentImageableArea)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Maakt een <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> object, opent u een dialoogvenster Windows algemene afdrukken en resulteert in een <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> in Visual Basic) parameter met informatie over het afdrukbare gebied en de afmetingen van de media."
  remarks: "Veel printers moeten tot een kwartaal van een inch van niet-afgedrukte ruimte rond de randen van elke pagina aan het papier greep en verplaatsen door middel van de printer. Toner zou anders het papier stroom mechanisme Pa. Het gebied dat kan worden afgedrukt is het &quot;afdrukbare gebied&quot;.       Het type <xref:System.Printing.PrintDocumentImageableArea>bevat geen openbare constructor.</xref:System.Printing.PrintDocumentImageableArea> Daarom de variabele `documentImageableArea` moet worden gedeclareerd en toegewezen aan `null` en alleen vervolgens doorgegeven aan de methode. Deze methode wordt weergegeven een <xref:System.Windows.Controls.PrintDialog>tussenkomst van de gebruiker.</xref:System.Windows.Controls.PrintDialog> Nadat de gebruiker heeft een printer, het papierformaat en de afdrukstand geselecteerd en het dialoogvenster gesloten `documentImageableArea` verwijst naar een object en de eigenschappen ervan zijn geïnitialiseerd.       Als de gebruiker wordt geannuleerd of het dialoogvenster sluit, de geretourneerde waarde is `null`. Als gevolg hiervan de retourwaarde moet worden gecontroleerd voor `null` door uw toepassing."
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref System.Printing.PrintDocumentImageableArea documentImageableArea);
    parameters:
    - id: documentImageableArea
      type: System.Printing.PrintDocumentImageableArea
      description: "Een verwijzing naar een object met de afmetingen van het gebied van de pagina waarop het apparaat kunt afdrukken. Omdat het gegevenstype geen openbare constructor bevat, wordt deze parameter niet-geïnitialiseerde doorgegeven."
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "Een <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> die XPS-gegevens naar een stream worden geschreven. Dit kan zijn <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. (De parameter <code> documentImageableArea </code> is een <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> [<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> in Visual Basic] parameter die wordt geïnitialiseerd door de methode, zodat deze een tweede vertegenwoordigt item geretourneerd.)"
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintQueue)
  id: CreateXpsDocumentWriter(System.Printing.PrintQueue)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(PrintQueue)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintQueue)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintQueue)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Maakt een <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> object en associeert deze met de opgegeven wachtrij."
  remarks: ''
  example:
  - "The following example shows how to use this method to create an <xref:System.Windows.Xps.XpsDocumentWriter>.  \n  \n [!code-cs[XpsPrint#PrintQueueSnip](~/add/codesnippet/csharp/XpsPrint/XpsPrintHelper.cs#printqueuesnip)]\n [!code-vb[XpsPrint#PrintQueueSnip](~/add/codesnippet/visualbasic/xpsprint/xpsprinthelper.vb#printqueuesnip)]"
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (System.Printing.PrintQueue printQueue);
    parameters:
    - id: printQueue
      type: System.Printing.PrintQueue
      description: "Een afdrukwachtrij de XPS-document af te drukken."
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "Een <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> die naar een XPS-stroom wordt geschreven."
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Double@,System.Double@)
  id: CreateXpsDocumentWriter(System.Double@,System.Double@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(Double,Double)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(Double,Double)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(Double,Double)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Maakt een <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> object met de opgegeven dimensies."
  remarks: "Deze methode wordt weergegeven een <xref:System.Windows.Controls.PrintDialog>tussenkomst van de gebruiker.</xref:System.Windows.Controls.PrintDialog> Als de gebruiker wordt geannuleerd of het dialoogvenster sluit, de geretourneerde waarde is `null`. Als gevolg hiervan de retourwaarde moet worden gecontroleerd voor `null` door uw toepassing."
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref double width, ref double height);
    parameters:
    - id: width
      type: System.Double
      description: "De breedte van het XPS-document."
    - id: height
      type: System.Double
      description: "De hoogte van het XPS-document."
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "Een <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> die naar een XPS-stroom wordt geschreven. Dit kan zijn <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)
  id: CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Maakt een <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> object, wordt een dialoogvenster Windows algemene afdrukken geopend (en voorziet in een beschrijving van de taak) en retourneert een <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> in Visual Basic) parameter met informatie over het afdrukbare gebied en de afmetingen van de media."
  remarks: "Veel printers moeten tot een kwartaal van een inch van niet-afgedrukte ruimte rond de randen van elke pagina aan het papier greep en verplaatsen door middel van de printer. Toner zou anders het papier stroom mechanisme Pa. Het gebied dat kan worden afgedrukt is het &quot;afdrukbare gebied&quot;.       Het type <xref:System.Printing.PrintDocumentImageableArea>bevat geen openbare constructor.</xref:System.Printing.PrintDocumentImageableArea> Daarom de variabele `documentImageableArea` moet worden gedeclareerd en toegewezen aan `null` en alleen vervolgens doorgegeven aan de methode. Deze methode wordt weergegeven een <xref:System.Windows.Controls.PrintDialog>tussenkomst van de gebruiker.</xref:System.Windows.Controls.PrintDialog> Nadat de gebruiker heeft een printer, het papierformaat en de afdrukstand geselecteerd en het dialoogvenster gesloten `documentImageableArea` verwijst naar een object en de eigenschappen ervan zijn geïnitialiseerd.       Als de gebruiker wordt geannuleerd of het dialoogvenster sluit, de geretourneerde waarde is `null`. Als gevolg hiervan de retourwaarde moet worden gecontroleerd voor `null` door uw toepassing."
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (string jobDescription, ref System.Printing.PrintDocumentImageableArea documentImageableArea);
    parameters:
    - id: jobDescription
      type: System.String
      description: "Een naam voor de afdruktaak. Deze weergegeven in de gebruikersinterface van Windows afdrukken."
    - id: documentImageableArea
      type: System.Printing.PrintDocumentImageableArea
      description: "Een verwijzing naar een object met de afmetingen van het gebied van de pagina waarop het apparaat kunt afdrukken. Omdat het gegevenstype geen openbare constructor bevat, wordt deze parameter niet-geïnitialiseerde doorgegeven."
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "Een <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> die XPS-gegevens naar een stream worden geschreven. Dit kan zijn <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. (De parameter <code> documentImageableArea </code> is een <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> [<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> in Visual Basic] parameter die wordt geïnitialiseerd door de methode, zodat deze een tweede vertegenwoordigt item geretourneerd.)"
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  id: CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Maakt een <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> object, opent u een dialoogvenster Windows algemene afdrukken, voorziet in het dialoogvenster met een paginabereik en een beschrijving van de afdruktaak en resulteert in een <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> in Visual Basic) parameter met informatie over het afdrukbare gebied en de afmetingen van de media."
  remarks: "Veel printers moeten tot een kwartaal van een inch van niet-afgedrukte ruimte rond de randen van elke pagina aan het papier greep en verplaatsen door middel van de printer. Toner zou anders het papier stroom mechanisme Pa. Het gebied dat kan worden afgedrukt is het &quot;afdrukbare gebied&quot;.       Het type <xref:System.Printing.PrintDocumentImageableArea>bevat geen openbare constructor.</xref:System.Printing.PrintDocumentImageableArea> Daarom de variabele `documentImageableArea` moet worden gedeclareerd en toegewezen aan `null` en alleen vervolgens doorgegeven aan de methode. Deze methode wordt weergegeven een <xref:System.Windows.Controls.PrintDialog>tussenkomst van de gebruiker.</xref:System.Windows.Controls.PrintDialog> De gebruiker configureert zijn afdruktaak in het dialoogvenster (inclusief een printer, papierformaat, afdrukstand en paginabereik selecteren). Wanneer het dialoogvenster wordt gesloten, `pageRangeSelection` en `pageRange` waarden, en `documentImageableArea` verwijst naar een object waarvan de eigenschappen zijn geïnitialiseerd.       Als de gebruiker wordt geannuleerd of het dialoogvenster sluit, de geretourneerde waarde is `null`. Als gevolg hiervan de retourwaarde moet worden gecontroleerd voor `null` door uw toepassing."
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref System.Printing.PrintDocumentImageableArea documentImageableArea, ref System.Windows.Controls.PageRangeSelection pageRangeSelection, ref System.Windows.Controls.PageRange pageRange);
    parameters:
    - id: documentImageableArea
      type: System.Printing.PrintDocumentImageableArea
      description: "Een verwijzing naar een object met de afmetingen van het gebied van de pagina waarop het apparaat kunt afdrukken. Omdat het gegevenstype geen openbare constructor bevat, wordt deze parameter niet-geïnitialiseerde doorgegeven."
    - id: pageRangeSelection
      type: System.Windows.Controls.PageRangeSelection
      description: "Een waarde die aangeeft of alle pagina&quot;s of alleen een bereik dat is opgegeven door de gebruiker wilt afdrukken."
    - id: pageRange
      type: System.Windows.Controls.PageRange
      description: "Het bereik van pagina&quot;s dat wordt afgedrukt."
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "Een <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> die XPS-gegevens naar een stream worden geschreven. Dit kan zijn <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. (De parameters <code> documentImageableArea </code>, <code> pageRangeSelection </code>, en <code> pageRange </code> zijn alle <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> [<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> in Visual Basic] parameters die zijn geïnitialiseerd door de gebruiker en geretourneerd wanneer het dialoogvenster wordt gesloten, zodat elk een extra item geretourneerd vertegenwoordigt.)"
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  id: CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Maakt een <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> object, wordt een dialoogvenster Windows algemene afdrukken geopend, voorziet in het dialoogvenster met een paginabereik en resulteert in een <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> in Visual Basic) parameter met informatie over het afdrukbare gebied en de afmetingen van de media."
  remarks: "Veel printers moeten tot een kwartaal van een inch van niet-afgedrukte ruimte rond de randen van elke pagina aan het papier greep en verplaatsen door middel van de printer. Toner zou anders het papier stroom mechanisme Pa. Het gebied dat kan worden afgedrukt is het &quot;afdrukbare gebied&quot;.       Het type <xref:System.Printing.PrintDocumentImageableArea>bevat geen openbare constructor.</xref:System.Printing.PrintDocumentImageableArea> Daarom de variabele `documentImageableArea` moet worden gedeclareerd en toegewezen aan `null` en alleen vervolgens doorgegeven aan de methode. Deze methode wordt weergegeven een <xref:System.Windows.Controls.PrintDialog>tussenkomst van de gebruiker.</xref:System.Windows.Controls.PrintDialog> De gebruiker configureert zijn afdruktaak in het dialoogvenster (inclusief een printer, papierformaat, afdrukstand en paginabereik selecteren). Wanneer het dialoogvenster wordt gesloten, `pageRangeSelection` en `pageRange` waarden, en `documentImageableArea` verwijst naar een object waarvan de eigenschappen zijn geïnitialiseerd.       Als de gebruiker wordt geannuleerd of het dialoogvenster sluit, de geretourneerde waarde is `null`. Als gevolg hiervan de retourwaarde moet worden gecontroleerd voor `null` door uw toepassing."
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (string jobDescription, ref System.Printing.PrintDocumentImageableArea documentImageableArea, ref System.Windows.Controls.PageRangeSelection pageRangeSelection, ref System.Windows.Controls.PageRange pageRange);
    parameters:
    - id: jobDescription
      type: System.String
      description: "Een naam voor de afdruktaak. Deze weergegeven in de gebruikersinterface van Windows afdrukken."
    - id: documentImageableArea
      type: System.Printing.PrintDocumentImageableArea
      description: "Een verwijzing naar een object met de afmetingen van het gebied van de pagina waarop het apparaat kunt afdrukken. Omdat het gegevenstype geen openbare constructor bevat, wordt deze parameter niet-geïnitialiseerde doorgegeven."
    - id: pageRangeSelection
      type: System.Windows.Controls.PageRangeSelection
      description: "Een waarde die aangeeft of alle pagina&quot;s of alleen een bereik dat is opgegeven door de gebruiker wilt afdrukken."
    - id: pageRange
      type: System.Windows.Controls.PageRange
      description: "Het bereik van pagina&quot;s dat wordt afgedrukt."
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "Een <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> die XPS-gegevens naar een stream worden geschreven. Dit kan zijn <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. (De parameters <code> documentImageableArea </code>, <code> pageRangeSelection </code>, en <code> pageRange </code> zijn alle <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> [<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> in Visual Basic] parameters die zijn geïnitialiseerd door de gebruiker en geretourneerd wanneer het dialoogvenster wordt gesloten, zodat elk een extra item geretourneerd vertegenwoordigt.)"
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CurrentJobSettings
  id: CurrentJobSettings
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CurrentJobSettings
  nameWithType: PrintQueue.CurrentJobSettings
  fullName: System.Printing.PrintQueue.CurrentJobSettings
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee haalt u een object dat de configuratie-instellingen voor de huidige afdruktaak bevat."
  syntax:
    content: public System.Printing.PrintJobSettings CurrentJobSettings { get; }
    return:
      type: System.Printing.PrintJobSettings
      description: "Een <xref href=&quot;System.Printing.PrintJobSettings&quot;> </xref> waarde die de instellingen van de taak die momenteel wordt afgedrukt bevat. Deze instellingen omvatten een beschrijving van de taak en een verwijzing naar de taak <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>."
  overload: System.Printing.PrintQueue.CurrentJobSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.DefaultPrintTicket
  id: DefaultPrintTicket
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: DefaultPrintTicket
  nameWithType: PrintQueue.DefaultPrintTicket
  fullName: System.Printing.PrintQueue.DefaultPrintTicket
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Opgehaald of ingesteld van de standaardopties printer die is gekoppeld aan dit <xref href=&quot;System.Printing.PrintQueue&quot;> </xref>."
  remarks: "De standaardwaarde <xref:System.Printing.PrintTicket>worden opties opgegeven afdruktaak zoals <xref:System.Printing.PrintTicket.CopyCount%2A>, <xref:System.Printing.PrintTicket.PageOrientation%2A>, <xref:System.Printing.PrintTicket.Duplexing%2A>, <xref:System.Printing.PrintTicket.Stapling%2A>, en andere.</xref:System.Printing.PrintTicket.Stapling%2A> </xref:System.Printing.PrintTicket.Duplexing%2A> </xref:System.Printing.PrintTicket.PageOrientation%2A> </xref:System.Printing.PrintTicket.CopyCount%2A> </xref:System.Printing.PrintTicket>       Elke <xref:System.Printing.PrintQueue>onderhoudt een eigen DefaultPrintTicket.</xref:System.Printing.PrintQueue>       In de normale werking de DefaultPrintTicket retourneert eigenschap een <xref:System.Printing.PrintTicket>.</xref:System.Printing.PrintTicket>  Als de <xref:System.Printing.PrintQueue>detecteert een ongeldige status DefaultPrintTicket retourneert `null`.</xref:System.Printing.PrintQueue>  Als DefaultPrintTicket retourneert `null`, de toepassing moet een informatief gebruikersdialoogvenster waarin is een fout opgetreden op dit afdrukwachtrij worden weergegeven en dat de afdruktaak moet opnieuw worden gestart met de uitvoer omgeleid naar een andere wachtrij.       Ophalen of instellen van de eigenschap DefaultPrintTicket valideren de <xref:System.Printing.PrintTicket>.</xref:System.Printing.PrintTicket> niet  De <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>methode kan worden gebruikt voor het valideren van een <xref:System.Printing.PrintTicket>.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>"
  example:
  - "The following example shows how to use this property while testing a printer's capabilities and configuring a print job to take advantage of them.  \n  \n [!code-cs[XpsCreate#PrinterCapabilities](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#printercapabilities)]\n [!code-cpp[XpsCreate#PrinterCapabilities](~/add/codesnippet/cpp/xpscreate/XpsCreate.cpp#printercapabilities)]\n [!code-vb[XpsCreate#PrinterCapabilities](~/add/codesnippet/visualbasic/xpscreate/xpscreate.vb#printercapabilities)]"
  syntax:
    content: public virtual System.Printing.PrintTicket DefaultPrintTicket { get; set; }
    return:
      type: System.Printing.PrintTicket
      description: "De standaardwaarde <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> voor de afdrukwachtrij; of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als een fout in de afdrukwachtrij opgetreden."
  overload: System.Printing.PrintQueue.DefaultPrintTicket*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.DefaultPriority
  id: DefaultPriority
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: DefaultPriority
  nameWithType: PrintQueue.DefaultPriority
  fullName: System.Printing.PrintQueue.DefaultPriority
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Opgehaald of ingesteld van de prioriteit is standaard die is toegewezen aan elke nieuwe afdruktaak toegevoegd aan de wachtrij."
  remarks: "Prioriteit van een afdruktaak kan door gebruikers worden gewijzigd nadat vervolgens omschakelt naar de wachtrij."
  syntax:
    content: public virtual int DefaultPriority { get; set; }
    return:
      type: System.Int32
      description: "De standaardprioriteit voor afdruktaken toegevoegd aan de wachtrij. Mogelijke waarden liggen tussen 1 en 99. De standaardwaarde is 1."
  overload: System.Printing.PrintQueue.DefaultPriority*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Description
  id: Description
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Description
  nameWithType: PrintQueue.Description
  fullName: System.Printing.PrintQueue.Description
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee haalt u een beschrijving van de afdrukwachtrij."
  remarks: "Wanneer de wachtrij is gemaakt, de beschrijving wordt standaard ingesteld op een drie onderdeel tekenreeks die uit de wachtrijnaam, het model en de locatie bestaat, gescheiden door komma&quot;s. De eigenschap Description met contrast de <xref:System.Printing.PrintQueue.Comment%2A>eigenschap die zichtbaar voor gebruikers in het dialoogvenster voor algemene afdrukken en de lijst met Printers en faxapparaten is.</xref:System.Printing.PrintQueue.Comment%2A>"
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: "Een beschrijving van de afdrukwachtrij."
  overload: System.Printing.PrintQueue.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.FullName
  id: FullName
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: FullName
  nameWithType: PrintQueue.FullName
  fullName: System.Printing.PrintQueue.FullName
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee haalt u de volledige naam van de wachtrij."
  remarks: "Voor wachtrijen op de lokale afdrukserver, de waarde van deze eigenschap is identiek aan <xref:System.Printing.PrintQueue.Name%2A>, anders het omvat de volledige naam van de UNC-(Universal Naming Convention).</xref:System.Printing.PrintQueue.Name%2A>       De <xref:System.Printing.PrintQueue>-object heeft beschrijfbare <xref:System.Printing.PrintQueue.Name%2A>en <xref:System.Printing.PrintQueue.ShareName%2A>Eigenschappen.</xref:System.Printing.PrintQueue.ShareName%2A> </xref:System.Printing.PrintQueue.Name%2A> </xref:System.Printing.PrintQueue>"
  example:
  - "The following example shows how to use this property while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public string FullName { get; }
    return:
      type: System.String
      description: "De volledige naam van de afdrukwachtrij."
  overload: System.Printing.PrintQueue.FullName*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetJob(System.Int32)
  id: GetJob(System.Int32)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetJob(Int32)
  nameWithType: PrintQueue.GetJob(Int32)
  fullName: System.Printing.PrintQueue.GetJob(Int32)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee haalt u de afdruktaak met de opgegeven id-nummer."
  remarks: "U kunt ook de <xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=fullName>methode voor hetzelfde doel.</xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=fullName>"
  example:
  - "The following example shows how to use this method when diagnosing a problem with a print job.  \n  \n [!code-cs[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/csharp/DiagnoseProblematicPrintJob/Program.cs#enumeratejobsinqueues)]\n [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/cpp/diagnoseproblematicprintjob/Program.cpp#enumeratejobsinqueues)]\n [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/visualbasic/diagnoseproblematicprintjob/program.vb#enumeratejobsinqueues)]"
  syntax:
    content: public System.Printing.PrintSystemJobInfo GetJob (int jobId);
    parameters:
    - id: jobId
      type: System.Int32
      description: "Het nummer van de taak in de wachtrij."
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "Een <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> Hiermee worden de eigenschappen van de taak en de status ervan."
  overload: System.Printing.PrintQueue.GetJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintCapabilities
  id: GetPrintCapabilities
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintCapabilities()
  nameWithType: PrintQueue.GetPrintCapabilities()
  fullName: System.Printing.PrintQueue.GetPrintCapabilities()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een <xref href=&quot;System.Printing.PrintCapabilities&quot;> </xref> object waarmee de mogelijkheden van de printer."
  remarks: ''
  example:
  - "The following example shows how to use this method while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public System.Printing.PrintCapabilities GetPrintCapabilities ();
    parameters: []
    return:
      type: System.Printing.PrintCapabilities
      description: "Een <xref href=&quot;System.Printing.PrintCapabilities&quot;> </xref> object waarmee wordt aangegeven wat de printer en niet mogelijk, zoals dubbelzijdige kopiëren of automatische nieten."
  overload: System.Printing.PrintQueue.GetPrintCapabilities*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "De <xref href=&quot;System.Printing.PrintCapabilities&quot;> </xref> object kan niet worden opgehaald."
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintCapabilities(System.Printing.PrintTicket)
  id: GetPrintCapabilities(System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintCapabilities(PrintTicket)
  nameWithType: PrintQueue.GetPrintCapabilities(PrintTicket)
  fullName: System.Printing.PrintQueue.GetPrintCapabilities(PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een <xref href=&quot;System.Printing.PrintCapabilities&quot;> </xref> object waarmee de mogelijkheden van de printer."
  remarks: "De <xref:System.Printing.PrintTicket>parameter wordt gebruikt als basis waarop om samen te stellen de <xref:System.Printing.PrintCapabilities>object.</xref:System.Printing.PrintCapabilities> </xref:System.Printing.PrintTicket> Stel de printer alleen media typen A en B uit de invoer bin 1 en deze alleen ondersteund mediatype C van de invoer opslaglocatie 2. Als de `printTicket` parameter opgegeven invoer bin 1, wordt het <xref:System.Printing.PrintCapabilities>object dat wordt geretourneerd omvat alle drie mediatypen, maar het type C als &quot;beperkte.&quot; rapporteren</xref:System.Printing.PrintCapabilities> Als de `printTicket` parameter opgegeven invoer bin 2, wordt het <xref:System.Printing.PrintCapabilities>object dat wordt geretourneerd omvat alle drie mediatypen, maar het zou rapporttypen A en B als de &quot;beperkte&quot;.</xref:System.Printing.PrintCapabilities> Zie de [afdrukken Schema](http://go.microsoft.com/fwlink/?LinkId=186397) voor meer informatie over de beperkingen.       Als `printTicket` is `null`, wordt de <xref:System.Printing.PrintQueue.UserPrintTicket%2A>wordt gebruikt.</xref:System.Printing.PrintQueue.UserPrintTicket%2A>"
  syntax:
    content: public System.Printing.PrintCapabilities GetPrintCapabilities (System.Printing.PrintTicket printTicket);
    parameters:
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "Een print ticket die vormt de basis waarop de afdrukken mogelijkheden worden gerapporteerd."
    return:
      type: System.Printing.PrintCapabilities
      description: "Een <xref href=&quot;System.Printing.PrintCapabilities&quot;> </xref> object waarmee wordt aangegeven wat de printer en niet mogelijk, zoals dubbelzijdige kopiëren of automatische nieten."
  overload: System.Printing.PrintQueue.GetPrintCapabilities*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "De <xref href=&quot;System.Printing.PrintCapabilities&quot;> </xref> object kan niet worden opgehaald."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>printTicket</code>is niet grammaticaal correct."
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml
  id: GetPrintCapabilitiesAsXml
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintCapabilitiesAsXml()
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml()
  fullName: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een <xref:System.IO.MemoryStream>object waarmee de mogelijkheden van de printer als een XML-stream die voldoet aan de [afdrukken Schema](http://go.microsoft.com/fwlink/?LinkId=186397).</xref:System.IO.MemoryStream>"
  syntax:
    content: public System.IO.MemoryStream GetPrintCapabilitiesAsXml ();
    parameters: []
    return:
      type: System.IO.MemoryStream
      description: "Een <xref:System.IO.MemoryStream>mogelijkheden van de printer opgeven met behulp van het XML-schema &quot;PrintCapabilities&quot;, een onderdeel van de [afdrukken Schema](http://go.microsoft.com/fwlink/?LinkId=186397) system.</xref:System.IO.MemoryStream>"
  overload: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "De mogelijkheden voor afdrukken kunnen niet worden opgehaald."
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)
  id: GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintCapabilitiesAsXml(PrintTicket)
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml(PrintTicket)
  fullName: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een <xref:System.IO.MemoryStream>object waarmee de mogelijkheden van de printer in een XML-indeling die voldoet aan de [afdrukken Schema](http://go.microsoft.com/fwlink/?LinkId=186397).</xref:System.IO.MemoryStream>"
  remarks: "De <xref:System.Printing.PrintTicket>parameter wordt gebruikt als de basis voor het maken van de mogelijkheden XML.</xref:System.Printing.PrintTicket> Stel de printer alleen media typen A en B uit de invoer bin 1 en deze alleen ondersteund mediatype C van de invoer opslaglocatie 2. Als de `printTicket` parameter opgegeven invoer bin 1, en vervolgens de XML-bestand dat wordt geretourneerd mogelijkheden omvat alle drie mediatypen, maar het zou rapporttype C als &quot;beperkt&quot;. Als de `printTicket` parameter opgegeven invoer bin 2, en vervolgens de XML-bestand dat wordt geretourneerd mogelijkheden omvat alle drie mediatypen, maar het zou rapporttypen A en B zoals &quot;beperkt&quot;. Zie de [afdrukken Schema](http://go.microsoft.com/fwlink/?LinkId=186397) voor meer informatie over de beperkingen.       Als `printTicket` is `null`, wordt de <xref:System.Printing.PrintQueue.UserPrintTicket%2A>wordt gebruikt.</xref:System.Printing.PrintQueue.UserPrintTicket%2A>"
  syntax:
    content: public System.IO.MemoryStream GetPrintCapabilitiesAsXml (System.Printing.PrintTicket printTicket);
    parameters:
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "Een print ticket die vormt de basis waarop de afdrukken mogelijkheden worden gerapporteerd."
    return:
      type: System.IO.MemoryStream
      description: "Een <xref:System.IO.MemoryStream>mogelijkheden van de printer opgeven met behulp van het XML-schema &quot;PrintCapabilities&quot;, een onderdeel van de [afdrukken Schema](http://go.microsoft.com/fwlink/?LinkId=186397) system.</xref:System.IO.MemoryStream>"
  overload: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "De mogelijkheden voor afdrukken kunnen niet worden opgehaald."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>printTicket</code>is niet grammaticaal correct."
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintJobInfoCollection
  id: GetPrintJobInfoCollection
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintJobInfoCollection()
  nameWithType: PrintQueue.GetPrintJobInfoCollection()
  fullName: System.Printing.PrintQueue.GetPrintJobInfoCollection()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Maakt een verzameling met een <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> object voor elke taak in de wachtrij."
  remarks: ''
  example:
  - "The following example shows how to use this method when performing the same action on every job in a queue.  \n  \n [!code-cs[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/csharp/DiagnoseProblematicPrintJob/Program.cs#enumeratejobsinqueues)]\n [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/cpp/diagnoseproblematicprintjob/Program.cpp#enumeratejobsinqueues)]\n [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/visualbasic/diagnoseproblematicprintjob/program.vb#enumeratejobsinqueues)]"
  syntax:
    content: public System.Printing.PrintJobInfoCollection GetPrintJobInfoCollection ();
    parameters: []
    return:
      type: System.Printing.PrintJobInfoCollection
      description: "Retourneert een <xref href=&quot;System.Printing.PrintJobInfoCollection&quot;> </xref> van <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> objecten. Er is één voor elke taak in de wachtrij."
  overload: System.Printing.PrintQueue.GetPrintJobInfoCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.HasPaperProblem
  id: HasPaperProblem
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: HasPaperProblem
  nameWithType: PrintQueue.HasPaperProblem
  fullName: System.Printing.PrintQueue.HasPaperProblem
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft als de printer een niet nader omschreven Papierprobleem ondervindt."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`.       De <xref:System.Printing.PrintQueue>-object heeft ook <xref:System.Printing.PrintQueue.IsPaperJammed%2A>en <xref:System.Printing.PrintQueue.IsOutOfPaper%2A>Eigenschappen.</xref:System.Printing.PrintQueue.IsOutOfPaper%2A> </xref:System.Printing.PrintQueue.IsPaperJammed%2A> </xref:System.Printing.PrintQueue>"
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool HasPaperProblem { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als er een Papierprobleem van niet-gespecificeerde; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.HasPaperProblem*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.HasToner
  id: HasToner
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: HasToner
  nameWithType: PrintQueue.HasToner
  fullName: System.Printing.PrintQueue.HasToner
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of de printer toner heeft."
  remarks: "Sommige printerfabrikanten mag dit signaal gebruiken om aan te geven dat die toner is niet laag. Anderen mag deze gebruiken om aan te geven dat de tonercartridge aanwezig en goed geplaatst tijdens het gebruik van is <xref:System.Printing.PrintQueue.IsTonerLow%2A>om aan te geven die toner lage.</xref:System.Printing.PrintQueue.IsTonerLow%2A>       Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool HasToner { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de huidige printer toner heeft; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.HasToner*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.HostingPrintServer
  id: HostingPrintServer
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: HostingPrintServer
  nameWithType: PrintQueue.HostingPrintServer
  fullName: System.Printing.PrintQueue.HostingPrintServer
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Opgehaald of ingesteld (beveiligde) de afdrukserver die de afdrukwachtrij bepaalt."
  remarks: "Deze eigenschap kan worden ingesteld door een klasse die is afgeleid van <xref:System.Printing.PrintQueue>omdat de eigenschap-setter `protected`.</xref:System.Printing.PrintQueue>"
  syntax:
    content: public virtual System.Printing.PrintServer HostingPrintServer { get; protected set; }
    return:
      type: System.Printing.PrintServer
      description: "De naam en andere eigenschappen van de <xref href=&quot;System.Printing.PrintServer&quot;> </xref> die als host fungeert voor de afdrukwachtrij."
  overload: System.Printing.PrintQueue.HostingPrintServer*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.InPartialTrust
  id: InPartialTrust
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: InPartialTrust
  nameWithType: PrintQueue.InPartialTrust
  fullName: System.Printing.PrintQueue.InPartialTrust
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de wachtrij wordt uitgevoerd in een gedeeltelijk vertrouwde modus, een hogere mate van vertrouwen."
  remarks: "Als de eigenschap InPartialTrust is `true`, kan niet worden gemaakt door het programma een <xref:System.Printing.PrintQueue>-object met deze printer, tenzij de gebruiker volledige machtigingen voor de printer voor afdrukken heeft.</xref:System.Printing.PrintQueue>"
  syntax:
    content: public bool InPartialTrust { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de wachtrij wordt uitgevoerd in een gedeeltelijk vertrouwde modus; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.InPartialTrust*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.InternalDispose(System.Boolean)
  id: InternalDispose(System.Boolean)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: InternalDispose(Boolean)
  nameWithType: PrintQueue.InternalDispose(Boolean)
  fullName: System.Printing.PrintQueue.InternalDispose(Boolean)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Heft de niet-beheerde bronnen worden gebruikt door de <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> en eventueel de beheerde bronnen vrij."
  syntax:
    content: protected override sealed void InternalDispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om alleen niet-beheerde bronnen vrij te geven."
  overload: System.Printing.PrintQueue.InternalDispose*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsBidiEnabled
  id: IsBidiEnabled
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsBidiEnabled
  nameWithType: PrintQueue.IsBidiEnabled
  fullName: System.Printing.PrintQueue.IsBidiEnabled
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of bidirectionele communicatie met de printer is ingeschakeld."
  syntax:
    content: public bool IsBidiEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als bidirectionele communicatie met de printer is ingeschakeld; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsBidiEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsBusy
  id: IsBusy
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsBusy
  nameWithType: PrintQueue.IsBusy
  fullName: System.Printing.PrintQueue.IsBusy
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee wordt een waarde die aangeeft of de printer bezig is."
  remarks: "Bezet betekent niet noodzakelijkerwijs dat het een afdruktaak verwerken. Als het apparaat een combinatie van printer/fax/kopieerapparaten is, klikt u vervolgens het mogelijk faxt of kopiëren. Vergelijken met de <xref:System.Printing.PrintQueue.IsProcessing%2A>eigenschap.</xref:System.Printing.PrintQueue.IsProcessing%2A>       Als een signaal met deze zin biedt geen ondersteuning voor het apparaat, wordt de eigenschap altijd is `false`."
  syntax:
    content: public bool IsBusy { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het apparaat bezet is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsBusy*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsDevQueryEnabled
  id: IsDevQueryEnabled
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsDevQueryEnabled
  nameWithType: PrintQueue.IsDevQueryEnabled
  fullName: System.Printing.PrintQueue.IsDevQueryEnabled
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of de wachtrij documenten, wanneer het document en de printer configuraties komen niet overeen."
  syntax:
    content: public bool IsDevQueryEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de wachtrij niet-overeenkomende configuraties bevat. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsDevQueryEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsDirect
  id: IsDirect
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsDirect
  nameWithType: PrintQueue.IsDirect
  fullName: System.Printing.PrintQueue.IsDirect
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Een waarde die aangeeft of de wachtrij wordt afgedrukt rechtstreeks naar de printer of spools documenten eerste opgehaald en vervolgens wordt afgedrukt."
  remarks: "Deze eigenschap kan alleen via het dialoogvenster Windows algemene afdrukken worden ingesteld."
  syntax:
    content: public bool IsDirect { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als in de wachtrij worden afgedrukt rechtstreeks naar de printer. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsDirect*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsDoorOpened
  id: IsDoorOpened
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsDoorOpened
  nameWithType: PrintQueue.IsDoorOpened
  fullName: System.Printing.PrintQueue.IsDoorOpened
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee wordt een waarde die aangeeft of de deur van een open op de printer is."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsDoorOpened { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een klep geopend is. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsDoorOpened*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsHidden
  id: IsHidden
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsHidden
  nameWithType: PrintQueue.IsHidden
  fullName: System.Printing.PrintQueue.IsHidden
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of de afdrukwachtrij is verborgen in de gebruikersinterface van uw toepassing."
  remarks: "U niet automatisch te verbergen de afdrukwachtrij wanneer u deze eigenschap instelt op `true`. Het programma moet nog steeds stappen om ervoor te zorgen dat deze niet wordt weergegeven in een lijst met wachtrijen in de interface van het programma uitvoeren.       Afdrukwachtrijen kunnen niet worden verborgen in de Windows-gebruikersinterface, zoals de lijst met Printers en faxapparaten."
  syntax:
    content: public bool IsHidden { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de afdrukwachtrij is verborgen in de gebruikersinterface van Windows. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsHidden*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsInError
  id: IsInError
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsInError
  nameWithType: PrintQueue.IsInError
  fullName: System.Printing.PrintQueue.IsInError
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee wordt een waarde die aangeeft of een fout opgetreden tijdens de printer of het apparaat is."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsInError { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het apparaat zich in een fout opgetreden; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsInError*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsInitializing
  id: IsInitializing
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsInitializing
  nameWithType: PrintQueue.IsInitializing
  fullName: System.Printing.PrintQueue.IsInitializing
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of de printer zelf wordt geïnitialiseerd."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  syntax:
    content: public bool IsInitializing { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de printer wordt geïnitialiseerd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsInitializing*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsIOActive
  id: IsIOActive
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsIOActive
  nameWithType: PrintQueue.IsIOActive
  fullName: System.Printing.PrintQueue.IsIOActive
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of de printer is ontvangen of verzenden van gegevens of signalen."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  syntax:
    content: public bool IsIOActive { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de printer is ontvangen of verzenden; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsIOActive*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsManualFeedRequired
  id: IsManualFeedRequired
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsManualFeedRequired
  nameWithType: PrintQueue.IsManualFeedRequired
  fullName: System.Printing.PrintQueue.IsManualFeedRequired
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of de printer moet papier voor de huidige afdruktaak handmatig worden ingevoerd."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  syntax:
    content: public bool IsManualFeedRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de printer moet handmatig worden ingevoerd papier; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsManualFeedRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsNotAvailable
  id: IsNotAvailable
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsNotAvailable
  nameWithType: PrintQueue.IsNotAvailable
  fullName: System.Printing.PrintQueue.IsNotAvailable
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of de printer beschikbaar is."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsNotAvailable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Indien de printer beschikbaar is. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsNotAvailable*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsOffline
  id: IsOffline
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsOffline
  nameWithType: PrintQueue.IsOffline
  fullName: System.Printing.PrintQueue.IsOffline
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of de printer offline is."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsOffline { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de printer offline is. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsOffline*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsOutOfMemory
  id: IsOutOfMemory
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsOutOfMemory
  nameWithType: PrintQueue.IsOutOfMemory
  fullName: System.Printing.PrintQueue.IsOutOfMemory
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee wordt een waarde die aangeeft of de printer onvoldoende geheugen is."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsOutOfMemory { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de printer onvoldoende geheugen is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsOutOfMemory*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsOutOfPaper
  id: IsOutOfPaper
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsOutOfPaper
  nameWithType: PrintQueue.IsOutOfPaper
  fullName: System.Printing.PrintQueue.IsOutOfPaper
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of de printer moet opnieuw worden geladen met papier van de grootte die vereist zijn voor de huidige taak."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsOutOfPaper { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de printer opnieuw worden geladen moet. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsOutOfPaper*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsOutputBinFull
  id: IsOutputBinFull
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsOutputBinFull
  nameWithType: PrintQueue.IsOutputBinFull
  fullName: System.Printing.PrintQueue.IsOutputBinFull
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of het gedeelte van de uitvoer van de printer in gevaar overloop is."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsOutputBinFull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het gedeelte van de uitvoer van de printer vol is anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsOutputBinFull*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPaperJammed
  id: IsPaperJammed
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPaperJammed
  nameWithType: PrintQueue.IsPaperJammed
  fullName: System.Printing.PrintQueue.IsPaperJammed
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of het huidige blad papier is vastgelopen in de printer."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsPaperJammed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het papier is vastgelopen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsPaperJammed*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPaused
  id: IsPaused
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPaused
  nameWithType: PrintQueue.IsPaused
  fullName: System.Printing.PrintQueue.IsPaused
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of de afdrukwachtrij is onderbroken."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsPaused { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de afdrukwachtrij is onderbroken; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsPaused*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPendingDeletion
  id: IsPendingDeletion
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPendingDeletion
  nameWithType: PrintQueue.IsPendingDeletion
  fullName: System.Printing.PrintQueue.IsPendingDeletion
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee wordt een waarde die aangeeft of de printer bezig te verwijderen van een afdruktaak."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  syntax:
    content: public bool IsPendingDeletion { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de printer is een taak; verwijderen anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsPendingDeletion*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPowerSaveOn
  id: IsPowerSaveOn
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPowerSaveOn
  nameWithType: PrintQueue.IsPowerSaveOn
  fullName: System.Printing.PrintQueue.IsPowerSaveOn
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee wordt een waarde die aangeeft of de printer in de energiebesparingsmodus is."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  syntax:
    content: public bool IsPowerSaveOn { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de printer in power modus; opslaan anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsPowerSaveOn*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPrinting
  id: IsPrinting
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPrinting
  nameWithType: PrintQueue.IsPrinting
  fullName: System.Printing.PrintQueue.IsPrinting
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of een taak wordt afgedrukt."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  syntax:
    content: public bool IsPrinting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een taak wordt afgedrukt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsPrinting*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsProcessing
  id: IsProcessing
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsProcessing
  nameWithType: PrintQueue.IsProcessing
  fullName: System.Printing.PrintQueue.IsProcessing
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of een afdruktaak wordt verwerkt door de printer."
  remarks: "Sommige printerfabrikanten ondersteuning voor dit signaal in plaats van de minder specifieke <xref:System.Printing.PrintQueue.IsBusy%2A>.</xref:System.Printing.PrintQueue.IsBusy%2A>       Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  syntax:
    content: public bool IsProcessing { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de printer wordt verwerkt door een afdruktaak; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsProcessing*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPublished
  id: IsPublished
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPublished
  nameWithType: PrintQueue.IsPublished
  fullName: System.Printing.PrintQueue.IsPublished
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee wordt een waarde die aangeeft of de printer zichtbaar voor andere netwerkgebruikers is."
  syntax:
    content: public bool IsPublished { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de printer zichtbaar voor andere netwerkgebruikers is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsPublished*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsQueued
  id: IsQueued
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsQueued
  nameWithType: PrintQueue.IsQueued
  fullName: System.Printing.PrintQueue.IsQueued
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of de printer kunt ondersteuning voor een wachtrij met meer dan een afdruktaak in het tegelijk."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  syntax:
    content: public bool IsQueued { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de printer kan ondersteunen het in de wachtrij van meerdere afdruktaken; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsQueued*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsRawOnlyEnabled
  id: IsRawOnlyEnabled
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsRawOnlyEnabled
  nameWithType: PrintQueue.IsRawOnlyEnabled
  fullName: System.Printing.PrintQueue.IsRawOnlyEnabled
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of de afdrukwachtrij EMF (Enhanced Meta File) waarmee u sneller gegevensstroom uit een toepassing afdrukken naar de Windows-spooler kan gebruiken."
  syntax:
    content: public bool IsRawOnlyEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de printer niet afdrukken EMF kunt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsRawOnlyEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsServerUnknown
  id: IsServerUnknown
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsServerUnknown
  nameWithType: PrintQueue.IsServerUnknown
  fullName: System.Printing.PrintQueue.IsServerUnknown
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee wordt een waarde die aangeeft of de printer in een foutstatus is."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  syntax:
    content: public bool IsServerUnknown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als in de printer bevindt zich in een foutstatus; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsServerUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsShared
  id: IsShared
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsShared
  nameWithType: PrintQueue.IsShared
  fullName: System.Printing.PrintQueue.IsShared
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee wordt een waarde die aangeeft of de printer beschikbaar voor gebruik door andere computers in het netwerk is."
  remarks: "Deze eigenschap kan alleen worden ingesteld met het dialoogvenster Windows algemene afdrukken."
  syntax:
    content: public bool IsShared { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de printer wordt gedeeld; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsShared*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsTonerLow
  id: IsTonerLow
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsTonerLow
  nameWithType: PrintQueue.IsTonerLow
  fullName: System.Printing.PrintQueue.IsTonerLow
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of de printer niet genoeg toner wordt uitgevoerd."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`.       De <xref:System.Printing.PrintQueue>-object heeft ook een <xref:System.Printing.PrintQueue.HasToner%2A>eigenschap.</xref:System.Printing.PrintQueue.HasToner%2A> </xref:System.Printing.PrintQueue>"
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsTonerLow { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de printer niet genoeg toner; wordt uitgevoerd anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsTonerLow*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsWaiting
  id: IsWaiting
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsWaiting
  nameWithType: PrintQueue.IsWaiting
  fullName: System.Printing.PrintQueue.IsWaiting
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of de wachtrij op een taak wacht moet worden toegevoegd."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  syntax:
    content: public bool IsWaiting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de wachtrij op een taak wachten moet; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsWaiting*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsWarmingUp
  id: IsWarmingUp
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsWarmingUp
  nameWithType: PrintQueue.IsWarmingUp
  fullName: System.Printing.PrintQueue.IsWarmingUp
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of de printer wordt opgewarmd."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  syntax:
    content: public bool IsWarmingUp { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de printer wordt opgewarmd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsWarmingUp*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsXpsDevice
  id: IsXpsDevice
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsXpsDevice
  nameWithType: PrintQueue.IsXpsDevice
  fullName: System.Printing.PrintQueue.IsXpsDevice
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee wordt een waarde die aangeeft of het stuurprogramma van de printer is gebaseerd op de [Printing Overview](~/add/includes/ajax-current-ext-md.md) zodat deze gebruikmaakt van [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)] als de taal van de beschrijving van de pagina."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  syntax:
    content: public bool IsXpsDevice { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de printer die gebruikmaakt van de [Printing Overview](../Topic/Printing%20Overview.md); anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.IsXpsDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.KeepPrintedJobs
  id: KeepPrintedJobs
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: KeepPrintedJobs
  nameWithType: PrintQueue.KeepPrintedJobs
  fullName: System.Printing.PrintQueue.KeepPrintedJobs
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of de wachtrij is worden gebruikt voor het opslaan van het bestand van de printer taal in plaats van het verwijderen van het volgende af te drukken."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  syntax:
    content: public bool KeepPrintedJobs { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de wachtrij is het bestand van de printer taal; opslaan anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.KeepPrintedJobs*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Location
  id: Location
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Location
  nameWithType: PrintQueue.Location
  fullName: System.Printing.PrintQueue.Location
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Opgehaald of ingesteld van de fysieke locatie van de printer."
  remarks: ''
  example:
  - "The following example shows how to use this property to list a subset of available print queues.  \n  \n [!code-cs[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/csharp/EnumerateSubsetOfPrintQueues/Program.cs#listsubsetofprintqueues)]\n [!code-vb[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/visualbasic/enumeratesubsetofprintqueues/program.vb#listsubsetofprintqueues)]\n [!code-cpp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/cpp/enumeratesubsetofprintqueues/Program.cpp#listsubsetofprintqueues)]"
  syntax:
    content: public virtual string Location { get; set; }
    return:
      type: System.String
      description: "De fysieke locatie van de printer."
  overload: System.Printing.PrintQueue.Location*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.MaxPrintSchemaVersion
  id: MaxPrintSchemaVersion
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: MaxPrintSchemaVersion
  nameWithType: PrintQueue.MaxPrintSchemaVersion
  fullName: System.Printing.PrintQueue.MaxPrintSchemaVersion
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt het meest recente mogelijke versienummer van de [afdrukken Schema](http://go.microsoft.com/fwlink/?LinkId=186397) die de wachtrij kunt gebruiken."
  remarks: "De versie van de [afdrukken Schema](http://go.microsoft.com/fwlink/?LinkId=186397) uitgebracht met Windows Vista is 1."
  syntax:
    content: public static int MaxPrintSchemaVersion { get; }
    return:
      type: System.Int32
      description: "Het nummer van de meest recente versie van de [afdrukken Schema](http://go.microsoft.com/fwlink/?LinkId=186397) die de wachtrij kunt gebruiken."
  overload: System.Printing.PrintQueue.MaxPrintSchemaVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)
  id: MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  nameWithType: PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  fullName: System.Printing.PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Samenvoegingen twee <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>s en zorgt u ervoor dat de resulterende <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> geldig is en wordt niet gevraagd voor afdrukken functionaliteit die de printer niet ondersteunt."
  remarks: "De methode levert een praktische print ticket; dat wil zeggen, een ticket die geen aanvraagt afdrukken functies die de printer niet ondersteunt. De methode valideert eerst de twee ingevoerde afdrukken tickets tegen de [Schema afdrukken](http://go.microsoft.com/fwlink/?LinkId=186397). Als een ongeldig is, wordt een uitzondering opgetreden.       De twee tickets worden vervolgens samengevoegd. Als ze verschillende waarden voor een bepaalde eigenschap hebben vervolgens de resulterende samengevoegde ticket in eerste instantie gebruikt de waarde van de delta-ticket.       Het samengevoegde ticket wordt vervolgens vergeleken met de werkelijke mogelijkheden van de printer. Deze wil eventuele instellingen in het ticket zijn niet compatibel met de mogelijkheden van de printer en het printerstuurprogramma activeert vervolgens de instellingen met behulp van gelijk welke logica. Normaal gesproken wordt de gebruiker of een van de printer standaardwaarde voor de instelling vervangen. Het bron van de vervangende waarden van het stuurprogramma is niet dezelfde ticket als `basePrintTicket`, moet het samengevoegde ticket wellicht sommige instellingen die afwijken van beide van de invoer tickets. Als het printerstuurprogramma heeft geen instellingen te wijzigen wordt dit feit gerapporteerd in de <xref:System.Printing.ValidationResult.ConflictStatus%2A>eigenschap van het <xref:System.Printing.ValidationResult>.</xref:System.Printing.ValidationResult> </xref:System.Printing.ValidationResult.ConflictStatus%2A>       Om samen te voegen en te valideren op basis van standaardinstellingen voor een afdrukwachtrij, moet u instellen `basePrintTicket` naar de <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>of de <xref:System.Printing.PrintQueue.UserPrintTicket%2A>.</xref:System.Printing.PrintQueue.UserPrintTicket%2A> </xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>       De `deltaPrintTicket` parameter is `null`, in welk geval de `basePrintTicket` is gevalideerd, gecontroleerd op haalbaarheid en geretourneerd, mogelijk met wijzigingen.       Met deze overbelasting van MergeAndValidatePrintTicket, zowel de `deltaPrintTicket` en de <xref:System.Printing.PrintTicket>in de <xref:System.Printing.ValidationResult>die wordt geretourneerd taak breed bereik hebt.</xref:System.Printing.ValidationResult> </xref:System.Printing.PrintTicket> Geef een ander bereik gebruik van de andere overbelasting van deze methode."
  example:
  - "The following example shows how to use this method to merge two print tickets and respond to the <xref:System.Printing.ValidationResult> that is returned.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public System.Printing.ValidationResult MergeAndValidatePrintTicket (System.Printing.PrintTicket basePrintTicket, System.Printing.PrintTicket deltaPrintTicket);
    parameters:
    - id: basePrintTicket
      type: System.Printing.PrintTicket
      description: "Het eerste print ticket."
    - id: deltaPrintTicket
      type: System.Printing.PrintTicket
      description: "Het tweede print ticket. Dit kan zijn <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Printing.ValidationResult
      description: "Een <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> waarin de samengevoegde <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> en een indicatie van of een van de instellingen worden gewijzigd om te garanderen haalbaarheid had."
  overload: System.Printing.PrintQueue.MergeAndValidatePrintTicket*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ten minste één van de invoer afdrukken tickets is niet geldig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>basePrintTicket</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "De validatie, fusie en haalbaarheid controleren van de bewerking is mislukt."
  platform:
  - net462
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)
  id: MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  nameWithType: PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  fullName: System.Printing.PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Samenvoegingen twee <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>s en zorgt u ervoor dat de resulterende <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> geldig is, wordt niet gevraagd voor afdrukken functionaliteit biedt geen ondersteuning voor de printer en is beperkt tot het opgegeven bereik."
  remarks: "De methode levert een praktische print ticket; dat wil zeggen, een ticket die geen aanvraagt afdrukken functies die de printer niet ondersteunt. De methode valideert eerst de twee ingevoerde afdrukken tickets tegen de [Schema afdrukken](http://go.microsoft.com/fwlink/?LinkId=186397). Als een ongeldig is, wordt een uitzondering opgetreden.       De twee tickets worden vervolgens samengevoegd. Als ze verschillende waarden voor een bepaalde eigenschap hebben vervolgens de resulterende samengevoegde ticket in eerste instantie gebruikt de waarde van de delta-ticket.       Het samengevoegde ticket wordt vervolgens vergeleken met de werkelijke mogelijkheden van de printer. Deze wil eventuele instellingen in het ticket zijn niet compatibel met de mogelijkheden van de printer en het printerstuurprogramma activeert vervolgens de instellingen met behulp van gelijk welke logica. Normaal gesproken wordt de gebruiker of een van de printer standaardwaarde voor de instelling vervangen. Het bron van de vervangende waarden van het stuurprogramma is niet dezelfde ticket als `basePrintTicket`, moet het samengevoegde ticket wellicht sommige instellingen die afwijken van beide van de invoer tickets. Als het printerstuurprogramma heeft geen instellingen te wijzigen wordt dit feit gerapporteerd in de <xref:System.Printing.ValidationResult.ConflictStatus%2A>eigenschap van het <xref:System.Printing.ValidationResult>.</xref:System.Printing.ValidationResult> </xref:System.Printing.ValidationResult.ConflictStatus%2A>       Om samen te voegen en te valideren op basis van standaardinstellingen voor een afdrukwachtrij, moet u instellen `basePrintTicket` naar de <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>of de <xref:System.Printing.PrintQueue.UserPrintTicket%2A>.</xref:System.Printing.PrintQueue.UserPrintTicket%2A> </xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>       De `deltaPrintTicket` parameter is `null`, in welk geval de `basePrintTicket` is gevalideerd, gecontroleerd op haalbaarheid en geretourneerd, mogelijk met wijzigingen.       Als de `scope` is een taak, wordt het print ticket geretourneerd in de <xref:System.Printing.ValidationResult>kunt opnemen [afdrukken Schema](http://go.microsoft.com/fwlink/?LinkId=186397) parameters met de taak, Document en pagina voorvoegsels.</xref:System.Printing.ValidationResult> Als de `scope` is een document wordt per taak instellingen in `deltaPrintTicket` worden genegeerd, en het geretourneerde ticket parameters met Document kan bevatten en pagina-prefixes. Als de `scope` is een pagina, en vervolgens de instellingen voor de per taak en de instellingen voor de per document in `deltaPrintTicket` worden genegeerd, en het geretourneerde ticket parameters met alleen het voorvoegsel kunt opnemen."
  syntax:
    content: public System.Printing.ValidationResult MergeAndValidatePrintTicket (System.Printing.PrintTicket basePrintTicket, System.Printing.PrintTicket deltaPrintTicket, System.Printing.PrintTicketScope scope);
    parameters:
    - id: basePrintTicket
      type: System.Printing.PrintTicket
      description: "Het eerste print ticket."
    - id: deltaPrintTicket
      type: System.Printing.PrintTicket
      description: "Het tweede print ticket. Dit kan zijn <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: scope
      type: System.Printing.PrintTicketScope
      description: "Een waarde die aangeeft of het bereik van `deltaPrintTicket`, en het bereik van het print ticket geretourneerd in de <xref href=&quot;System.Printing.ValidationResult&quot;> </xref>, wordt een pagina, een document of de hele taak."
    return:
      type: System.Printing.ValidationResult
      description: "Een <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> waarin de samengevoegde <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> en een indicatie van of een van de instellingen worden gewijzigd om te garanderen haalbaarheid had."
  overload: System.Printing.PrintQueue.MergeAndValidatePrintTicket*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ten minste één van de invoer afdrukken tickets is niet geldig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>basePrintTicket</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> scope </code> parameter heeft geen geldige <xref href=&quot;System.Printing.PrintTicketScope&quot;> </xref> waarde."
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "De validatie, fusie en haalbaarheid controleren van de bewerking is mislukt."
  platform:
  - net462
- uid: System.Printing.PrintQueue.Name
  id: Name
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Name
  nameWithType: PrintQueue.Name
  fullName: System.Printing.PrintQueue.Name
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Naam opgehaald of ingesteld van de afdrukwachtrij."
  remarks: "De <xref:System.Printing.PrintQueue>-object heeft ook een alleen-lezen <xref:System.Printing.PrintQueue.FullName%2A>eigenschap en een schrijfbaar <xref:System.Printing.PrintQueue.ShareName%2A>eigenschap.</xref:System.Printing.PrintQueue.ShareName%2A> </xref:System.Printing.PrintQueue.FullName%2A> </xref:System.Printing.PrintQueue>       Naam voor wachtrijen op de lokale afdrukserver en <xref:System.Printing.PrintQueue.FullName%2A>zijn hetzelfde.</xref:System.Printing.PrintQueue.FullName%2A>"
  example:
  - "The following example shows how to use this property to list a subset of available print queues.  \n  \n [!code-cs[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/csharp/EnumerateSubsetOfPrintQueues/Program.cs#listsubsetofprintqueues)]\n [!code-vb[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/visualbasic/enumeratesubsetofprintqueues/program.vb#listsubsetofprintqueues)]\n [!code-cpp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/cpp/enumeratesubsetofprintqueues/Program.cpp#listsubsetofprintqueues)]"
  syntax:
    content: public override sealed string Name { get; set; }
    return:
      type: System.String
      description: "De naam van de afdrukwachtrij."
  overload: System.Printing.PrintQueue.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.NeedUserIntervention
  id: NeedUserIntervention
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: NeedUserIntervention
  nameWithType: PrintQueue.NeedUserIntervention
  fullName: System.Printing.PrintQueue.NeedUserIntervention
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Haalt een waarde die aangeeft of de printer die de aandacht fotograferen."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool NeedUserIntervention { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de printer menselijke aandacht; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.NeedUserIntervention*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.NumberOfJobs
  id: NumberOfJobs
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: NumberOfJobs
  nameWithType: PrintQueue.NumberOfJobs
  fullName: System.Printing.PrintQueue.NumberOfJobs
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee haalt u het totale aantal taken in de afdrukwachtrij uitgelijnd."
  syntax:
    content: public virtual int NumberOfJobs { get; }
    return:
      type: System.Int32
      description: "Het aantal taken in de wachtrij."
  overload: System.Printing.PrintQueue.NumberOfJobs*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.PagePunt
  id: PagePunt
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PagePunt
  nameWithType: PrintQueue.PagePunt
  fullName: System.Printing.PrintQueue.PagePunt
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee wordt een waarde die aangeeft of de printer is niet de huidige pagina afdrukken."
  remarks: "Als een signaal met deze zin biedt geen ondersteuning voor de printer, wordt de eigenschap altijd is `false`."
  syntax:
    content: public bool PagePunt { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de printer niet afdrukken van de huidige pagina. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.PagePunt*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Pause
  id: Pause
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Pause()
  nameWithType: PrintQueue.Pause()
  fullName: System.Printing.PrintQueue.Pause()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Onderbreekt de afdrukwachtrij. Het blijft onderbroken tot <xref:System.Printing.PrintQueue.Resume*>wordt uitgevoerd.</xref:System.Printing.PrintQueue.Resume*>"
  syntax:
    content: public virtual void Pause ();
    parameters: []
  overload: System.Printing.PrintQueue.Pause*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "De printer kan niet worden onderbroken."
  platform:
  - net462
- uid: System.Printing.PrintQueue.PrintingIsCancelled
  id: PrintingIsCancelled
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintingIsCancelled
  nameWithType: PrintQueue.PrintingIsCancelled
  fullName: System.Printing.PrintQueue.PrintingIsCancelled
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de huidige afdruktaak wordt geannuleerd."
  syntax:
    content: public bool PrintingIsCancelled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de afdruktaak wordt geannuleerd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.PrintingIsCancelled*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Priority
  id: Priority
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Priority
  nameWithType: PrintQueue.Priority
  fullName: System.Printing.PrintQueue.Priority
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Opgehaald of ingesteld van de prioriteit van de afdrukwachtrij ten opzichte van andere wachtrijen die worden gehost door de dezelfde afdrukserver en die gebruikmaken van dezelfde fysieke printer."
  remarks: "Deze eigenschap met contrast de <xref:System.Printing.PrintQueue.DefaultPriority%2A>eigenschap hebben die over de relatieve prioriteit van afdruktaken in de wachtrij.</xref:System.Printing.PrintQueue.DefaultPriority%2A>"
  syntax:
    content: public virtual int Priority { get; set; }
    return:
      type: System.Int32
      description: "De prioriteit voor de afdrukwachtrij. Mogelijke waarden zijn tussen 1 en 99. De standaardwaarde is 1."
  overload: System.Printing.PrintQueue.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Purge
  id: Purge
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Purge()
  nameWithType: PrintQueue.Purge()
  fullName: System.Printing.PrintQueue.Purge()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee verwijdert u alle taken in de afdrukwachtrij."
  syntax:
    content: public virtual void Purge ();
    parameters: []
  overload: System.Printing.PrintQueue.Purge*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "Sommige afdruktaken kunnen niet worden verwijderd uit de wachtrij."
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueueAttributes
  id: QueueAttributes
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueueAttributes
  nameWithType: PrintQueue.QueueAttributes
  fullName: System.Printing.PrintQueue.QueueAttributes
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee haalt u de eigenschappen van de afdrukwachtrij."
  syntax:
    content: public System.Printing.PrintQueueAttributes QueueAttributes { get; }
    return:
      type: System.Printing.PrintQueueAttributes
      description: "Een bitsgewijze combinatie van de <xref href=&quot;System.Printing.PrintQueueAttributes&quot;> </xref> opsommingswaarden."
  overload: System.Printing.PrintQueue.QueueAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueueDriver
  id: QueueDriver
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueueDriver
  nameWithType: PrintQueue.QueueDriver
  fullName: System.Printing.PrintQueue.QueueDriver
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Opgehaald of ingesteld van het stuurprogramma voor de wachtrij."
  syntax:
    content: public virtual System.Printing.PrintDriver QueueDriver { get; set; }
    return:
      type: System.Printing.PrintDriver
      description: "De <xref href=&quot;System.Printing.PrintDriver&quot;> </xref> die gebruikmaakt van de wachtrij."
  overload: System.Printing.PrintQueue.QueueDriver*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueuePort
  id: QueuePort
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueuePort
  nameWithType: PrintQueue.QueuePort
  fullName: System.Printing.PrintQueue.QueuePort
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Opgehaald of ingesteld van de poort die gebruikmaakt van de wachtrij."
  syntax:
    content: public virtual System.Printing.PrintPort QueuePort { get; set; }
    return:
      type: System.Printing.PrintPort
      description: "De <xref href=&quot;System.Printing.PrintPort&quot;> </xref> die is toegewezen aan de wachtrij."
  overload: System.Printing.PrintQueue.QueuePort*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueuePrintProcessor
  id: QueuePrintProcessor
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueuePrintProcessor
  nameWithType: PrintQueue.QueuePrintProcessor
  fullName: System.Printing.PrintQueue.QueuePrintProcessor
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Opgehaald of ingesteld van de afdrukprocessor die gebruikmaakt van de wachtrij."
  syntax:
    content: public virtual System.Printing.PrintProcessor QueuePrintProcessor { get; set; }
    return:
      type: System.Printing.PrintProcessor
      description: "De <xref href=&quot;System.Printing.PrintProcessor&quot;> </xref> die gebruikmaakt van de wachtrij, zoals WinPrint of ModiPrint."
  overload: System.Printing.PrintQueue.QueuePrintProcessor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueueStatus
  id: QueueStatus
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueueStatus
  nameWithType: PrintQueue.QueueStatus
  fullName: System.Printing.PrintQueue.QueueStatus
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Hiermee wordt een waarde die de status van de printer vertegenwoordigt. Deze omvatten &quot;opwarmen,&quot; &quot;initialiseren&quot;, &quot;afdrukken&quot; en andere informatie."
  remarks: ''
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueattributes)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueattributes)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueattributes)]"
  syntax:
    content: public System.Printing.PrintQueueStatus QueueStatus { get; }
    return:
      type: System.Printing.PrintQueueStatus
      description: "De huidige <xref href=&quot;System.Printing.PrintQueueStatus&quot;> </xref> waarde."
  overload: System.Printing.PrintQueue.QueueStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Refresh
  id: Refresh
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Refresh()
  nameWithType: PrintQueue.Refresh()
  fullName: System.Printing.PrintQueue.Refresh()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "De eigenschappen van de <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> object met waarden uit de printer en het hulpprogramma afdrukwachtrij die wordt uitgevoerd op de computer."
  remarks: "Wijzigingen uw programma maakt een <xref:System.Printing.PrintQueue>Eigenschappen-object, gaan verloren wanneer vernieuwen wordt uitgevoerd, tenzij ze zijn geschreven naar de printer en afdrukwachtrij met <xref:System.Printing.PrintQueue.Commit%2A>.</xref:System.Printing.PrintQueue.Commit%2A> </xref:System.Printing.PrintQueue>"
  example:
  - "The following example shows how to use this method as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SurveyQueues](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#surveyqueues)]\n [!code-vb[PrinterStatusSurvey#SurveyQueues](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#surveyqueues)]\n [!code-cs[PrinterStatusSurvey#SurveyQueues](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#surveyqueues)]"
  syntax:
    content: public override void Refresh ();
    parameters: []
  overload: System.Printing.PrintQueue.Refresh*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "Sommige eigenschappen kan niet worden vernieuwd."
  platform:
  - net462
- uid: System.Printing.PrintQueue.Resume
  id: Resume
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Resume()
  nameWithType: PrintQueue.Resume()
  fullName: System.Printing.PrintQueue.Resume()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Start opnieuw op een afdrukwachtrij die is onderbroken."
  remarks: ''
  example:
  - "The following example shows how to use this method to resume a paused print queue.  \n  \n [!code-cs[DiagnoseProblematicPrintJob#HandlePausedJob](~/add/codesnippet/csharp/DiagnoseProblematicPrintJob/Program.cs#handlepausedjob)]\n [!code-cpp[DiagnoseProblematicPrintJob#HandlePausedJob](~/add/codesnippet/cpp/diagnoseproblematicprintjob/Program.cpp#handlepausedjob)]\n [!code-vb[DiagnoseProblematicPrintJob#HandlePausedJob](~/add/codesnippet/visualbasic/diagnoseproblematicprintjob/program.vb#handlepausedjob)]"
  syntax:
    content: public virtual void Resume ();
    parameters: []
  overload: System.Printing.PrintQueue.Resume*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "De printer hervatten niet."
  platform:
  - net462
- uid: System.Printing.PrintQueue.ScheduleCompletedJobsFirst
  id: ScheduleCompletedJobsFirst
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: ScheduleCompletedJobsFirst
  nameWithType: PrintQueue.ScheduleCompletedJobsFirst
  fullName: System.Printing.PrintQueue.ScheduleCompletedJobsFirst
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Eerste opgehaald van een waarde die aangeeft of de printer wordt afgedrukt taken die het proces in de wachtrij voor taken die u niet volledig in de wachtrij geplaatst hebt zelfs als de laatste ingevoerd de wachtrij is voltooid of een hogere prioriteit hebben."
  syntax:
    content: public bool ScheduleCompletedJobsFirst { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de printer wordt afgedrukt taken die het proces in de wachtrij voor taken die u niet volledig in de wachtrij geplaatst hebt; is voltooid anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueue.ScheduleCompletedJobsFirst*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.SeparatorFile
  id: SeparatorFile
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: SeparatorFile
  nameWithType: PrintQueue.SeparatorFile
  fullName: System.Printing.PrintQueue.SeparatorFile
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Opgehaald of ingesteld van het pad en de naam van een bestand dat wordt ingevoegd aan het begin van elke afdruktaak."
  remarks: "Dit is normaal gesproken één pagina-bestand dat wordt gebruikt om het gemakkelijker te scheiden van de uitvoer van verschillende afdruktaken."
  syntax:
    content: public virtual string SeparatorFile { get; set; }
    return:
      type: System.String
      description: "Het pad en de naam van het bestand scheidingsteken."
  overload: System.Printing.PrintQueue.SeparatorFile*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.ShareName
  id: ShareName
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: ShareName
  nameWithType: PrintQueue.ShareName
  fullName: System.Printing.PrintQueue.ShareName
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Opgehaald of ingesteld van een naam voor de printer die is gezien door gebruikers in het netwerk wanneer ze worden gedeeld."
  remarks: "De <xref:System.Printing.PrintQueue>-object heeft ook een alleen-lezen <xref:System.Printing.PrintQueue.FullName%2A>eigenschap en een schrijfbaar <xref:System.Printing.PrintQueue.Name%2A>eigenschap.</xref:System.Printing.PrintQueue.Name%2A> </xref:System.Printing.PrintQueue.FullName%2A> </xref:System.Printing.PrintQueue> Voor wachtrijen op de lokale afdrukserver wordt met deze eigenschappen dezelfde waarde hebben."
  syntax:
    content: public virtual string ShareName { get; set; }
    return:
      type: System.String
      description: "De openbare naam van een gedeelde printer."
  overload: System.Printing.PrintQueue.ShareName*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.StartTimeOfDay
  id: StartTimeOfDay
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: StartTimeOfDay
  nameWithType: PrintQueue.StartTimeOfDay
  fullName: System.Printing.PrintQueue.StartTimeOfDay
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Opgehaald of ingesteld van het oudste tijdstip, uitgedrukt als het aantal minuten na middernacht Coordinated Universal Time (UTC) (ook wel Greenwich Mean Time [GMT]), wordt de printer een taak afgedrukt."
  remarks: "If you are not in the UTC time zone, you must add or subtract multiples of 60 to set or get the correct time for your time zone. For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC. To set StartTimeOfDay to 12 AM in your time zone, you set it to 8 AM UTC, which is 480 (= 8 * 60). You also must remember that time rolls over to zero after 24 hours (that is; after the 1439th minute). To set it to 6 PM in your time zone, you set it to 2 AM UTC, which is 120 (= 2 \\* 60). See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> classes for helpful time zone manipulating methods.  \n  \n If the printer is always available, then this property returns 0 in all time zones."
  example:
  - "The following example shows how to use this property to determine whether a printer is available at the present time.  \n  \n [!code-cpp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#usingstartanduntiltimes)]\n [!code-vb[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#usingstartanduntiltimes)]\n [!code-cs[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#usingstartanduntiltimes)]"
  syntax:
    content: public virtual int StartTimeOfDay { get; set; }
    return:
      type: System.Int32
      description: "De tijd waarop de printer eerst weer beschikbaar is, uitgedrukt als het aantal minuten na middernacht (UTC). De maximumwaarde is 1439. Wanneer een printer eerst wordt geïnstalleerd met behulp van de [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] Printer toevoegen, het standaard beschikbaar wordt voortdurend en deze eigenschap retourneert 0 in alle tijdzones."
  overload: System.Printing.PrintQueue.StartTimeOfDay*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.UntilTimeOfDay
  id: UntilTimeOfDay
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: UntilTimeOfDay
  nameWithType: PrintQueue.UntilTimeOfDay
  fullName: System.Printing.PrintQueue.UntilTimeOfDay
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Opgehaald of ingesteld van de tijd van laatste, uitgedrukt als het aantal minuten na middernacht Coordinated Universal Time (UTC) (ook wel Greenwich Mean Time [GMT]), wordt de printer een taak afgedrukt."
  remarks: "If you are not in the UTC time zone, you must add or subtract multiples of 60 to set or get the correct time for your time zone. For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC. To set UntilTimeOfDay to 12 AM in your time zone, you set it to 8 AM UTC, which is 480 (= 8 * 60). You also must remember that time rolls over to zero after the 24th hour (the 1439th minute). To set it to 6 PM in your time zone, you set it to 2 AM UTC, which is 120 (= 2 \\* 60). See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> classes for helpful time zone manipulating methods.  \n  \n If the printer is always available, then this property returns 0 in all time zones."
  example:
  - "The following example shows how to use this property to determine whether a printer is available at the present time.  \n  \n [!code-cpp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#usingstartanduntiltimes)]\n [!code-vb[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#usingstartanduntiltimes)]\n [!code-cs[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#usingstartanduntiltimes)]"
  syntax:
    content: public virtual int UntilTimeOfDay { get; set; }
    return:
      type: System.Int32
      description: "De tijd waarop de printer niet langer beschikbaar is is, uitgedrukt als het aantal minuten na middernacht (UTC). De maximumwaarde is 1439. Wanneer een printer eerst wordt geïnstalleerd met behulp van de [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] Printer toevoegen, het standaard beschikbaar wordt voortdurend en deze eigenschap retourneert 0 in alle tijdzones."
  overload: System.Printing.PrintQueue.UntilTimeOfDay*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.UserPrintTicket
  id: UserPrintTicket
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: UserPrintTicket
  nameWithType: PrintQueue.UserPrintTicket
  fullName: System.Printing.PrintQueue.UserPrintTicket
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Opgehaald of ingesteld van de huidige gebruiker standaard <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> object bevat gedetailleerde informatie over de afdruktaak."
  remarks: "Elke gebruiker kan zijn of haar eigen standaard <xref:System.Printing.PrintTicket>.</xref:System.Printing.PrintTicket> hebben       Deze eigenschap kan worden `null`."
  example:
  - "The following example shows how to use this property while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public virtual System.Printing.PrintTicket UserPrintTicket { get; set; }
    return:
      type: System.Printing.PrintTicket
      description: "De <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> voor de huidige gebruiker of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als een gebruiker <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> is niet opgegeven."
  overload: System.Printing.PrintQueue.UserPrintTicket*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Printing.PrintSystemObject
  isExternal: false
  name: System.Printing.PrintSystemObject
- uid: System.Printing.PrintQueueException
  parent: System.Printing
  isExternal: false
  name: PrintQueueException
  nameWithType: PrintQueueException
  fullName: System.Printing.PrintQueueException
- uid: System.Printing.PrintSystemException
  parent: System.Printing
  isExternal: false
  name: PrintSystemException
  nameWithType: PrintSystemException
  fullName: System.Printing.PrintSystemException
- uid: System.Printing.PrintCommitAttributesException
  parent: System.Printing
  isExternal: false
  name: PrintCommitAttributesException
  nameWithType: PrintCommitAttributesException
  fullName: System.Printing.PrintCommitAttributesException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String)
- uid: System.Printing.PrintServer
  parent: System.Printing
  isExternal: false
  name: PrintServer
  nameWithType: PrintServer
  fullName: System.Printing.PrintServer
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,Int32)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,Int32)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
- uid: System.Printing.PrintQueueIndexedProperty[]
  parent: System.Printing
  isExternal: false
  name: PrintQueueIndexedProperty
  nameWithType: PrintQueueIndexedProperty
  fullName: System.Printing.PrintQueueIndexedProperty[]
  spec.csharp:
  - uid: System.Printing.PrintQueueIndexedProperty
    name: PrintQueueIndexedProperty
    nameWithType: PrintQueueIndexedProperty
    fullName: PrintQueueIndexedProperty[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
- uid: System.Printing.PrintSystemDesiredAccess
  parent: System.Printing
  isExternal: false
  name: PrintSystemDesiredAccess
  nameWithType: PrintSystemDesiredAccess
  fullName: System.Printing.PrintSystemDesiredAccess
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[])
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,String[])
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,String[])
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
- uid: System.Printing.PrintQueue.AddJob
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob()
  nameWithType: PrintQueue.AddJob()
  fullName: System.Printing.PrintQueue.AddJob()
- uid: System.Printing.PrintSystemJobInfo
  parent: System.Printing
  isExternal: false
  name: PrintSystemJobInfo
  nameWithType: PrintSystemJobInfo
  fullName: System.Printing.PrintSystemJobInfo
- uid: System.Printing.PrintQueue.AddJob(System.String)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob(String)
  nameWithType: PrintQueue.AddJob(String)
  fullName: System.Printing.PrintQueue.AddJob(String)
- uid: System.Printing.PrintQueue.AddJob(System.String,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob(String,PrintTicket)
  nameWithType: PrintQueue.AddJob(String,PrintTicket)
  fullName: System.Printing.PrintQueue.AddJob(String,PrintTicket)
- uid: System.Printing.PrintTicket
  parent: System.Printing
  isExternal: false
  name: PrintTicket
  nameWithType: PrintTicket
  fullName: System.Printing.PrintTicket
- uid: System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob(String,String,Boolean)
  nameWithType: PrintQueue.AddJob(String,String,Boolean)
  fullName: System.Printing.PrintQueue.AddJob(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob(String,String,Boolean,PrintTicket)
  nameWithType: PrintQueue.AddJob(String,String,Boolean,PrintTicket)
  fullName: System.Printing.PrintQueue.AddJob(String,String,Boolean,PrintTicket)
- uid: System.Printing.PrintQueue.AveragePagesPerMinute
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AveragePagesPerMinute
  nameWithType: PrintQueue.AveragePagesPerMinute
  fullName: System.Printing.PrintQueue.AveragePagesPerMinute
- uid: System.Printing.PrintQueue.ClientPrintSchemaVersion
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ClientPrintSchemaVersion
  nameWithType: PrintQueue.ClientPrintSchemaVersion
  fullName: System.Printing.PrintQueue.ClientPrintSchemaVersion
- uid: System.Printing.PrintQueue.Comment
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Comment
  nameWithType: PrintQueue.Comment
  fullName: System.Printing.PrintQueue.Comment
- uid: System.Printing.PrintQueue.Commit
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Commit()
  nameWithType: PrintQueue.Commit()
  fullName: System.Printing.PrintQueue.Commit()
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(PrintDocumentImageableArea)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea)
- uid: System.Windows.Xps.XpsDocumentWriter
  parent: System.Windows.Xps
  isExternal: false
  name: XpsDocumentWriter
  nameWithType: XpsDocumentWriter
  fullName: System.Windows.Xps.XpsDocumentWriter
- uid: System.Printing.PrintDocumentImageableArea
  parent: System.Printing
  isExternal: false
  name: PrintDocumentImageableArea
  nameWithType: PrintDocumentImageableArea
  fullName: System.Printing.PrintDocumentImageableArea
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintQueue)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(PrintQueue)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintQueue)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintQueue)
- uid: System.Printing.PrintQueue
  parent: System.Printing
  isExternal: false
  name: PrintQueue
  nameWithType: PrintQueue
  fullName: System.Printing.PrintQueue
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Double@,System.Double@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(Double,Double)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(Double,Double)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
- uid: System.Windows.Controls.PageRangeSelection
  parent: System.Windows.Controls
  isExternal: false
  name: PageRangeSelection
  nameWithType: PageRangeSelection
  fullName: System.Windows.Controls.PageRangeSelection
- uid: System.Windows.Controls.PageRange
  parent: System.Windows.Controls
  isExternal: false
  name: PageRange
  nameWithType: PageRange
  fullName: System.Windows.Controls.PageRange
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
- uid: System.Printing.PrintQueue.CurrentJobSettings
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CurrentJobSettings
  nameWithType: PrintQueue.CurrentJobSettings
  fullName: System.Printing.PrintQueue.CurrentJobSettings
- uid: System.Printing.PrintJobSettings
  parent: System.Printing
  isExternal: false
  name: PrintJobSettings
  nameWithType: PrintJobSettings
  fullName: System.Printing.PrintJobSettings
- uid: System.Printing.PrintQueue.DefaultPrintTicket
  parent: System.Printing.PrintQueue
  isExternal: false
  name: DefaultPrintTicket
  nameWithType: PrintQueue.DefaultPrintTicket
  fullName: System.Printing.PrintQueue.DefaultPrintTicket
- uid: System.Printing.PrintQueue.DefaultPriority
  parent: System.Printing.PrintQueue
  isExternal: false
  name: DefaultPriority
  nameWithType: PrintQueue.DefaultPriority
  fullName: System.Printing.PrintQueue.DefaultPriority
- uid: System.Printing.PrintQueue.Description
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Description
  nameWithType: PrintQueue.Description
  fullName: System.Printing.PrintQueue.Description
- uid: System.Printing.PrintQueue.FullName
  parent: System.Printing.PrintQueue
  isExternal: false
  name: FullName
  nameWithType: PrintQueue.FullName
  fullName: System.Printing.PrintQueue.FullName
- uid: System.Printing.PrintQueue.GetJob(System.Int32)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetJob(Int32)
  nameWithType: PrintQueue.GetJob(Int32)
  fullName: System.Printing.PrintQueue.GetJob(Int32)
- uid: System.Printing.PrintQueue.GetPrintCapabilities
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilities()
  nameWithType: PrintQueue.GetPrintCapabilities()
  fullName: System.Printing.PrintQueue.GetPrintCapabilities()
- uid: System.Printing.PrintCapabilities
  parent: System.Printing
  isExternal: false
  name: PrintCapabilities
  nameWithType: PrintCapabilities
  fullName: System.Printing.PrintCapabilities
- uid: System.Printing.PrintQueue.GetPrintCapabilities(System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilities(PrintTicket)
  nameWithType: PrintQueue.GetPrintCapabilities(PrintTicket)
  fullName: System.Printing.PrintQueue.GetPrintCapabilities(PrintTicket)
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilitiesAsXml()
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml()
  fullName: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml()
- uid: System.IO.MemoryStream
  parent: System.IO
  isExternal: true
  name: MemoryStream
  nameWithType: MemoryStream
  fullName: System.IO.MemoryStream
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilitiesAsXml(PrintTicket)
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml(PrintTicket)
  fullName: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(PrintTicket)
- uid: System.Printing.PrintQueue.GetPrintJobInfoCollection
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintJobInfoCollection()
  nameWithType: PrintQueue.GetPrintJobInfoCollection()
  fullName: System.Printing.PrintQueue.GetPrintJobInfoCollection()
- uid: System.Printing.PrintJobInfoCollection
  parent: System.Printing
  isExternal: false
  name: PrintJobInfoCollection
  nameWithType: PrintJobInfoCollection
  fullName: System.Printing.PrintJobInfoCollection
- uid: System.Printing.PrintQueue.HasPaperProblem
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HasPaperProblem
  nameWithType: PrintQueue.HasPaperProblem
  fullName: System.Printing.PrintQueue.HasPaperProblem
- uid: System.Printing.PrintQueue.HasToner
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HasToner
  nameWithType: PrintQueue.HasToner
  fullName: System.Printing.PrintQueue.HasToner
- uid: System.Printing.PrintQueue.HostingPrintServer
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HostingPrintServer
  nameWithType: PrintQueue.HostingPrintServer
  fullName: System.Printing.PrintQueue.HostingPrintServer
- uid: System.Printing.PrintQueue.InPartialTrust
  parent: System.Printing.PrintQueue
  isExternal: false
  name: InPartialTrust
  nameWithType: PrintQueue.InPartialTrust
  fullName: System.Printing.PrintQueue.InPartialTrust
- uid: System.Printing.PrintQueue.InternalDispose(System.Boolean)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: InternalDispose(Boolean)
  nameWithType: PrintQueue.InternalDispose(Boolean)
  fullName: System.Printing.PrintQueue.InternalDispose(Boolean)
- uid: System.Printing.PrintQueue.IsBidiEnabled
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsBidiEnabled
  nameWithType: PrintQueue.IsBidiEnabled
  fullName: System.Printing.PrintQueue.IsBidiEnabled
- uid: System.Printing.PrintQueue.IsBusy
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsBusy
  nameWithType: PrintQueue.IsBusy
  fullName: System.Printing.PrintQueue.IsBusy
- uid: System.Printing.PrintQueue.IsDevQueryEnabled
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDevQueryEnabled
  nameWithType: PrintQueue.IsDevQueryEnabled
  fullName: System.Printing.PrintQueue.IsDevQueryEnabled
- uid: System.Printing.PrintQueue.IsDirect
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDirect
  nameWithType: PrintQueue.IsDirect
  fullName: System.Printing.PrintQueue.IsDirect
- uid: System.Printing.PrintQueue.IsDoorOpened
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDoorOpened
  nameWithType: PrintQueue.IsDoorOpened
  fullName: System.Printing.PrintQueue.IsDoorOpened
- uid: System.Printing.PrintQueue.IsHidden
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsHidden
  nameWithType: PrintQueue.IsHidden
  fullName: System.Printing.PrintQueue.IsHidden
- uid: System.Printing.PrintQueue.IsInError
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsInError
  nameWithType: PrintQueue.IsInError
  fullName: System.Printing.PrintQueue.IsInError
- uid: System.Printing.PrintQueue.IsInitializing
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsInitializing
  nameWithType: PrintQueue.IsInitializing
  fullName: System.Printing.PrintQueue.IsInitializing
- uid: System.Printing.PrintQueue.IsIOActive
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsIOActive
  nameWithType: PrintQueue.IsIOActive
  fullName: System.Printing.PrintQueue.IsIOActive
- uid: System.Printing.PrintQueue.IsManualFeedRequired
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsManualFeedRequired
  nameWithType: PrintQueue.IsManualFeedRequired
  fullName: System.Printing.PrintQueue.IsManualFeedRequired
- uid: System.Printing.PrintQueue.IsNotAvailable
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsNotAvailable
  nameWithType: PrintQueue.IsNotAvailable
  fullName: System.Printing.PrintQueue.IsNotAvailable
- uid: System.Printing.PrintQueue.IsOffline
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOffline
  nameWithType: PrintQueue.IsOffline
  fullName: System.Printing.PrintQueue.IsOffline
- uid: System.Printing.PrintQueue.IsOutOfMemory
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutOfMemory
  nameWithType: PrintQueue.IsOutOfMemory
  fullName: System.Printing.PrintQueue.IsOutOfMemory
- uid: System.Printing.PrintQueue.IsOutOfPaper
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutOfPaper
  nameWithType: PrintQueue.IsOutOfPaper
  fullName: System.Printing.PrintQueue.IsOutOfPaper
- uid: System.Printing.PrintQueue.IsOutputBinFull
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutputBinFull
  nameWithType: PrintQueue.IsOutputBinFull
  fullName: System.Printing.PrintQueue.IsOutputBinFull
- uid: System.Printing.PrintQueue.IsPaperJammed
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPaperJammed
  nameWithType: PrintQueue.IsPaperJammed
  fullName: System.Printing.PrintQueue.IsPaperJammed
- uid: System.Printing.PrintQueue.IsPaused
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPaused
  nameWithType: PrintQueue.IsPaused
  fullName: System.Printing.PrintQueue.IsPaused
- uid: System.Printing.PrintQueue.IsPendingDeletion
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPendingDeletion
  nameWithType: PrintQueue.IsPendingDeletion
  fullName: System.Printing.PrintQueue.IsPendingDeletion
- uid: System.Printing.PrintQueue.IsPowerSaveOn
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPowerSaveOn
  nameWithType: PrintQueue.IsPowerSaveOn
  fullName: System.Printing.PrintQueue.IsPowerSaveOn
- uid: System.Printing.PrintQueue.IsPrinting
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPrinting
  nameWithType: PrintQueue.IsPrinting
  fullName: System.Printing.PrintQueue.IsPrinting
- uid: System.Printing.PrintQueue.IsProcessing
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsProcessing
  nameWithType: PrintQueue.IsProcessing
  fullName: System.Printing.PrintQueue.IsProcessing
- uid: System.Printing.PrintQueue.IsPublished
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPublished
  nameWithType: PrintQueue.IsPublished
  fullName: System.Printing.PrintQueue.IsPublished
- uid: System.Printing.PrintQueue.IsQueued
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsQueued
  nameWithType: PrintQueue.IsQueued
  fullName: System.Printing.PrintQueue.IsQueued
- uid: System.Printing.PrintQueue.IsRawOnlyEnabled
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsRawOnlyEnabled
  nameWithType: PrintQueue.IsRawOnlyEnabled
  fullName: System.Printing.PrintQueue.IsRawOnlyEnabled
- uid: System.Printing.PrintQueue.IsServerUnknown
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsServerUnknown
  nameWithType: PrintQueue.IsServerUnknown
  fullName: System.Printing.PrintQueue.IsServerUnknown
- uid: System.Printing.PrintQueue.IsShared
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsShared
  nameWithType: PrintQueue.IsShared
  fullName: System.Printing.PrintQueue.IsShared
- uid: System.Printing.PrintQueue.IsTonerLow
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsTonerLow
  nameWithType: PrintQueue.IsTonerLow
  fullName: System.Printing.PrintQueue.IsTonerLow
- uid: System.Printing.PrintQueue.IsWaiting
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsWaiting
  nameWithType: PrintQueue.IsWaiting
  fullName: System.Printing.PrintQueue.IsWaiting
- uid: System.Printing.PrintQueue.IsWarmingUp
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsWarmingUp
  nameWithType: PrintQueue.IsWarmingUp
  fullName: System.Printing.PrintQueue.IsWarmingUp
- uid: System.Printing.PrintQueue.IsXpsDevice
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsXpsDevice
  nameWithType: PrintQueue.IsXpsDevice
  fullName: System.Printing.PrintQueue.IsXpsDevice
- uid: System.Printing.PrintQueue.KeepPrintedJobs
  parent: System.Printing.PrintQueue
  isExternal: false
  name: KeepPrintedJobs
  nameWithType: PrintQueue.KeepPrintedJobs
  fullName: System.Printing.PrintQueue.KeepPrintedJobs
- uid: System.Printing.PrintQueue.Location
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Location
  nameWithType: PrintQueue.Location
  fullName: System.Printing.PrintQueue.Location
- uid: System.Printing.PrintQueue.MaxPrintSchemaVersion
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MaxPrintSchemaVersion
  nameWithType: PrintQueue.MaxPrintSchemaVersion
  fullName: System.Printing.PrintQueue.MaxPrintSchemaVersion
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  nameWithType: PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  fullName: System.Printing.PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
- uid: System.Printing.ValidationResult
  parent: System.Printing
  isExternal: false
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: System.Printing.ValidationResult
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  nameWithType: PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  fullName: System.Printing.PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
- uid: System.Printing.PrintTicketScope
  parent: System.Printing
  isExternal: false
  name: PrintTicketScope
  nameWithType: PrintTicketScope
  fullName: System.Printing.PrintTicketScope
- uid: System.Printing.PrintQueue.Name
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Name
  nameWithType: PrintQueue.Name
  fullName: System.Printing.PrintQueue.Name
- uid: System.Printing.PrintQueue.NeedUserIntervention
  parent: System.Printing.PrintQueue
  isExternal: false
  name: NeedUserIntervention
  nameWithType: PrintQueue.NeedUserIntervention
  fullName: System.Printing.PrintQueue.NeedUserIntervention
- uid: System.Printing.PrintQueue.NumberOfJobs
  parent: System.Printing.PrintQueue
  isExternal: false
  name: NumberOfJobs
  nameWithType: PrintQueue.NumberOfJobs
  fullName: System.Printing.PrintQueue.NumberOfJobs
- uid: System.Printing.PrintQueue.PagePunt
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PagePunt
  nameWithType: PrintQueue.PagePunt
  fullName: System.Printing.PrintQueue.PagePunt
- uid: System.Printing.PrintQueue.Pause
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Pause()
  nameWithType: PrintQueue.Pause()
  fullName: System.Printing.PrintQueue.Pause()
- uid: System.Printing.PrintQueue.PrintingIsCancelled
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintingIsCancelled
  nameWithType: PrintQueue.PrintingIsCancelled
  fullName: System.Printing.PrintQueue.PrintingIsCancelled
- uid: System.Printing.PrintQueue.Priority
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Priority
  nameWithType: PrintQueue.Priority
  fullName: System.Printing.PrintQueue.Priority
- uid: System.Printing.PrintQueue.Purge
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Purge()
  nameWithType: PrintQueue.Purge()
  fullName: System.Printing.PrintQueue.Purge()
- uid: System.Printing.PrintQueue.QueueAttributes
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueAttributes
  nameWithType: PrintQueue.QueueAttributes
  fullName: System.Printing.PrintQueue.QueueAttributes
- uid: System.Printing.PrintQueueAttributes
  parent: System.Printing
  isExternal: false
  name: PrintQueueAttributes
  nameWithType: PrintQueueAttributes
  fullName: System.Printing.PrintQueueAttributes
- uid: System.Printing.PrintQueue.QueueDriver
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueDriver
  nameWithType: PrintQueue.QueueDriver
  fullName: System.Printing.PrintQueue.QueueDriver
- uid: System.Printing.PrintDriver
  parent: System.Printing
  isExternal: false
  name: PrintDriver
  nameWithType: PrintDriver
  fullName: System.Printing.PrintDriver
- uid: System.Printing.PrintQueue.QueuePort
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueuePort
  nameWithType: PrintQueue.QueuePort
  fullName: System.Printing.PrintQueue.QueuePort
- uid: System.Printing.PrintPort
  parent: System.Printing
  isExternal: false
  name: PrintPort
  nameWithType: PrintPort
  fullName: System.Printing.PrintPort
- uid: System.Printing.PrintQueue.QueuePrintProcessor
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueuePrintProcessor
  nameWithType: PrintQueue.QueuePrintProcessor
  fullName: System.Printing.PrintQueue.QueuePrintProcessor
- uid: System.Printing.PrintProcessor
  parent: System.Printing
  isExternal: false
  name: PrintProcessor
  nameWithType: PrintProcessor
  fullName: System.Printing.PrintProcessor
- uid: System.Printing.PrintQueue.QueueStatus
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueStatus
  nameWithType: PrintQueue.QueueStatus
  fullName: System.Printing.PrintQueue.QueueStatus
- uid: System.Printing.PrintQueueStatus
  parent: System.Printing
  isExternal: false
  name: PrintQueueStatus
  nameWithType: PrintQueueStatus
  fullName: System.Printing.PrintQueueStatus
- uid: System.Printing.PrintQueue.Refresh
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Refresh()
  nameWithType: PrintQueue.Refresh()
  fullName: System.Printing.PrintQueue.Refresh()
- uid: System.Printing.PrintQueue.Resume
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Resume()
  nameWithType: PrintQueue.Resume()
  fullName: System.Printing.PrintQueue.Resume()
- uid: System.Printing.PrintQueue.ScheduleCompletedJobsFirst
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ScheduleCompletedJobsFirst
  nameWithType: PrintQueue.ScheduleCompletedJobsFirst
  fullName: System.Printing.PrintQueue.ScheduleCompletedJobsFirst
- uid: System.Printing.PrintQueue.SeparatorFile
  parent: System.Printing.PrintQueue
  isExternal: false
  name: SeparatorFile
  nameWithType: PrintQueue.SeparatorFile
  fullName: System.Printing.PrintQueue.SeparatorFile
- uid: System.Printing.PrintQueue.ShareName
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ShareName
  nameWithType: PrintQueue.ShareName
  fullName: System.Printing.PrintQueue.ShareName
- uid: System.Printing.PrintQueue.StartTimeOfDay
  parent: System.Printing.PrintQueue
  isExternal: false
  name: StartTimeOfDay
  nameWithType: PrintQueue.StartTimeOfDay
  fullName: System.Printing.PrintQueue.StartTimeOfDay
- uid: System.Printing.PrintQueue.UntilTimeOfDay
  parent: System.Printing.PrintQueue
  isExternal: false
  name: UntilTimeOfDay
  nameWithType: PrintQueue.UntilTimeOfDay
  fullName: System.Printing.PrintQueue.UntilTimeOfDay
- uid: System.Printing.PrintQueue.UserPrintTicket
  parent: System.Printing.PrintQueue
  isExternal: false
  name: UserPrintTicket
  nameWithType: PrintQueue.UserPrintTicket
  fullName: System.Printing.PrintQueue.UserPrintTicket
- uid: System.Printing.PrintQueue.#ctor*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue
  nameWithType: PrintQueue.PrintQueue
- uid: System.Printing.PrintQueue.AddJob*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob
  nameWithType: PrintQueue.AddJob
- uid: System.Printing.PrintQueue.AveragePagesPerMinute*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AveragePagesPerMinute
  nameWithType: PrintQueue.AveragePagesPerMinute
- uid: System.Printing.PrintQueue.ClientPrintSchemaVersion*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ClientPrintSchemaVersion
  nameWithType: PrintQueue.ClientPrintSchemaVersion
- uid: System.Printing.PrintQueue.Comment*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Comment
  nameWithType: PrintQueue.Comment
- uid: System.Printing.PrintQueue.Commit*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Commit
  nameWithType: PrintQueue.Commit
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter
  nameWithType: PrintQueue.CreateXpsDocumentWriter
- uid: System.Printing.PrintQueue.CurrentJobSettings*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CurrentJobSettings
  nameWithType: PrintQueue.CurrentJobSettings
- uid: System.Printing.PrintQueue.DefaultPrintTicket*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: DefaultPrintTicket
  nameWithType: PrintQueue.DefaultPrintTicket
- uid: System.Printing.PrintQueue.DefaultPriority*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: DefaultPriority
  nameWithType: PrintQueue.DefaultPriority
- uid: System.Printing.PrintQueue.Description*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Description
  nameWithType: PrintQueue.Description
- uid: System.Printing.PrintQueue.FullName*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: FullName
  nameWithType: PrintQueue.FullName
- uid: System.Printing.PrintQueue.GetJob*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetJob
  nameWithType: PrintQueue.GetJob
- uid: System.Printing.PrintQueue.GetPrintCapabilities*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilities
  nameWithType: PrintQueue.GetPrintCapabilities
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilitiesAsXml
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml
- uid: System.Printing.PrintQueue.GetPrintJobInfoCollection*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintJobInfoCollection
  nameWithType: PrintQueue.GetPrintJobInfoCollection
- uid: System.Printing.PrintQueue.HasPaperProblem*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HasPaperProblem
  nameWithType: PrintQueue.HasPaperProblem
- uid: System.Printing.PrintQueue.HasToner*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HasToner
  nameWithType: PrintQueue.HasToner
- uid: System.Printing.PrintQueue.HostingPrintServer*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HostingPrintServer
  nameWithType: PrintQueue.HostingPrintServer
- uid: System.Printing.PrintQueue.InPartialTrust*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: InPartialTrust
  nameWithType: PrintQueue.InPartialTrust
- uid: System.Printing.PrintQueue.InternalDispose*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: InternalDispose
  nameWithType: PrintQueue.InternalDispose
- uid: System.Printing.PrintQueue.IsBidiEnabled*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsBidiEnabled
  nameWithType: PrintQueue.IsBidiEnabled
- uid: System.Printing.PrintQueue.IsBusy*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsBusy
  nameWithType: PrintQueue.IsBusy
- uid: System.Printing.PrintQueue.IsDevQueryEnabled*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDevQueryEnabled
  nameWithType: PrintQueue.IsDevQueryEnabled
- uid: System.Printing.PrintQueue.IsDirect*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDirect
  nameWithType: PrintQueue.IsDirect
- uid: System.Printing.PrintQueue.IsDoorOpened*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDoorOpened
  nameWithType: PrintQueue.IsDoorOpened
- uid: System.Printing.PrintQueue.IsHidden*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsHidden
  nameWithType: PrintQueue.IsHidden
- uid: System.Printing.PrintQueue.IsInError*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsInError
  nameWithType: PrintQueue.IsInError
- uid: System.Printing.PrintQueue.IsInitializing*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsInitializing
  nameWithType: PrintQueue.IsInitializing
- uid: System.Printing.PrintQueue.IsIOActive*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsIOActive
  nameWithType: PrintQueue.IsIOActive
- uid: System.Printing.PrintQueue.IsManualFeedRequired*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsManualFeedRequired
  nameWithType: PrintQueue.IsManualFeedRequired
- uid: System.Printing.PrintQueue.IsNotAvailable*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsNotAvailable
  nameWithType: PrintQueue.IsNotAvailable
- uid: System.Printing.PrintQueue.IsOffline*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOffline
  nameWithType: PrintQueue.IsOffline
- uid: System.Printing.PrintQueue.IsOutOfMemory*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutOfMemory
  nameWithType: PrintQueue.IsOutOfMemory
- uid: System.Printing.PrintQueue.IsOutOfPaper*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutOfPaper
  nameWithType: PrintQueue.IsOutOfPaper
- uid: System.Printing.PrintQueue.IsOutputBinFull*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutputBinFull
  nameWithType: PrintQueue.IsOutputBinFull
- uid: System.Printing.PrintQueue.IsPaperJammed*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPaperJammed
  nameWithType: PrintQueue.IsPaperJammed
- uid: System.Printing.PrintQueue.IsPaused*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPaused
  nameWithType: PrintQueue.IsPaused
- uid: System.Printing.PrintQueue.IsPendingDeletion*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPendingDeletion
  nameWithType: PrintQueue.IsPendingDeletion
- uid: System.Printing.PrintQueue.IsPowerSaveOn*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPowerSaveOn
  nameWithType: PrintQueue.IsPowerSaveOn
- uid: System.Printing.PrintQueue.IsPrinting*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPrinting
  nameWithType: PrintQueue.IsPrinting
- uid: System.Printing.PrintQueue.IsProcessing*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsProcessing
  nameWithType: PrintQueue.IsProcessing
- uid: System.Printing.PrintQueue.IsPublished*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPublished
  nameWithType: PrintQueue.IsPublished
- uid: System.Printing.PrintQueue.IsQueued*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsQueued
  nameWithType: PrintQueue.IsQueued
- uid: System.Printing.PrintQueue.IsRawOnlyEnabled*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsRawOnlyEnabled
  nameWithType: PrintQueue.IsRawOnlyEnabled
- uid: System.Printing.PrintQueue.IsServerUnknown*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsServerUnknown
  nameWithType: PrintQueue.IsServerUnknown
- uid: System.Printing.PrintQueue.IsShared*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsShared
  nameWithType: PrintQueue.IsShared
- uid: System.Printing.PrintQueue.IsTonerLow*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsTonerLow
  nameWithType: PrintQueue.IsTonerLow
- uid: System.Printing.PrintQueue.IsWaiting*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsWaiting
  nameWithType: PrintQueue.IsWaiting
- uid: System.Printing.PrintQueue.IsWarmingUp*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsWarmingUp
  nameWithType: PrintQueue.IsWarmingUp
- uid: System.Printing.PrintQueue.IsXpsDevice*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsXpsDevice
  nameWithType: PrintQueue.IsXpsDevice
- uid: System.Printing.PrintQueue.KeepPrintedJobs*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: KeepPrintedJobs
  nameWithType: PrintQueue.KeepPrintedJobs
- uid: System.Printing.PrintQueue.Location*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Location
  nameWithType: PrintQueue.Location
- uid: System.Printing.PrintQueue.MaxPrintSchemaVersion*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MaxPrintSchemaVersion
  nameWithType: PrintQueue.MaxPrintSchemaVersion
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MergeAndValidatePrintTicket
  nameWithType: PrintQueue.MergeAndValidatePrintTicket
- uid: System.Printing.PrintQueue.Name*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Name
  nameWithType: PrintQueue.Name
- uid: System.Printing.PrintQueue.NeedUserIntervention*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: NeedUserIntervention
  nameWithType: PrintQueue.NeedUserIntervention
- uid: System.Printing.PrintQueue.NumberOfJobs*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: NumberOfJobs
  nameWithType: PrintQueue.NumberOfJobs
- uid: System.Printing.PrintQueue.PagePunt*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PagePunt
  nameWithType: PrintQueue.PagePunt
- uid: System.Printing.PrintQueue.Pause*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Pause
  nameWithType: PrintQueue.Pause
- uid: System.Printing.PrintQueue.PrintingIsCancelled*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintingIsCancelled
  nameWithType: PrintQueue.PrintingIsCancelled
- uid: System.Printing.PrintQueue.Priority*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Priority
  nameWithType: PrintQueue.Priority
- uid: System.Printing.PrintQueue.Purge*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Purge
  nameWithType: PrintQueue.Purge
- uid: System.Printing.PrintQueue.QueueAttributes*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueAttributes
  nameWithType: PrintQueue.QueueAttributes
- uid: System.Printing.PrintQueue.QueueDriver*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueDriver
  nameWithType: PrintQueue.QueueDriver
- uid: System.Printing.PrintQueue.QueuePort*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueuePort
  nameWithType: PrintQueue.QueuePort
- uid: System.Printing.PrintQueue.QueuePrintProcessor*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueuePrintProcessor
  nameWithType: PrintQueue.QueuePrintProcessor
- uid: System.Printing.PrintQueue.QueueStatus*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueStatus
  nameWithType: PrintQueue.QueueStatus
- uid: System.Printing.PrintQueue.Refresh*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Refresh
  nameWithType: PrintQueue.Refresh
- uid: System.Printing.PrintQueue.Resume*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Resume
  nameWithType: PrintQueue.Resume
- uid: System.Printing.PrintQueue.ScheduleCompletedJobsFirst*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ScheduleCompletedJobsFirst
  nameWithType: PrintQueue.ScheduleCompletedJobsFirst
- uid: System.Printing.PrintQueue.SeparatorFile*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: SeparatorFile
  nameWithType: PrintQueue.SeparatorFile
- uid: System.Printing.PrintQueue.ShareName*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ShareName
  nameWithType: PrintQueue.ShareName
- uid: System.Printing.PrintQueue.StartTimeOfDay*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: StartTimeOfDay
  nameWithType: PrintQueue.StartTimeOfDay
- uid: System.Printing.PrintQueue.UntilTimeOfDay*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: UntilTimeOfDay
  nameWithType: PrintQueue.UntilTimeOfDay
- uid: System.Printing.PrintQueue.UserPrintTicket*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: UserPrintTicket
  nameWithType: PrintQueue.UserPrintTicket
