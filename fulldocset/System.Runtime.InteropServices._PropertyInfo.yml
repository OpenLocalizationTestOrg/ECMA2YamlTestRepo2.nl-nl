### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._PropertyInfo
  id: _PropertyInfo
  children:
  - System.Runtime.InteropServices._PropertyInfo.Attributes
  - System.Runtime.InteropServices._PropertyInfo.CanRead
  - System.Runtime.InteropServices._PropertyInfo.CanWrite
  - System.Runtime.InteropServices._PropertyInfo.DeclaringType
  - System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)
  - System.Runtime.InteropServices._PropertyInfo.GetAccessors
  - System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetGetMethod
  - System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetHashCode
  - System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._PropertyInfo.GetIndexParameters
  - System.Runtime.InteropServices._PropertyInfo.GetSetMethod
  - System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetType
  - System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)
  - System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])
  - System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  - System.Runtime.InteropServices._PropertyInfo.MemberType
  - System.Runtime.InteropServices._PropertyInfo.Name
  - System.Runtime.InteropServices._PropertyInfo.PropertyType
  - System.Runtime.InteropServices._PropertyInfo.ReflectedType
  - System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  - System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._PropertyInfo.ToString
  langs:
  - csharp
  name: _PropertyInfo
  nameWithType: _PropertyInfo
  fullName: System.Runtime.InteropServices._PropertyInfo
  type: Interface
  summary: "Beschrijft de openbare leden van de &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; klasse code naar onbegeleide code."
  remarks: "Deze interface is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       Deze interface de vtable-volgorde van bewaart de <xref:System.Reflection.PropertyInfo?displayProperty=fullName>klasse leden die toegankelijk zijn voor niet-beheerde COM-objecten.</xref:System.Reflection.PropertyInfo?displayProperty=fullName>"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("F59ED4E4-E68F-3218-BD77-061AA82824BF")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.PropertyInfo))]

      public interface _PropertyInfo
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Attributes
  id: Attributes
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Attributes
  nameWithType: _PropertyInfo.Attributes
  fullName: System.Runtime.InteropServices._PropertyInfo.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.PropertyInfo.Attributes*>eigenschap.</xref:System.Reflection.PropertyInfo.Attributes*>"
  remarks: "Deze eigenschap is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.PropertyInfo.Attributes%2A>eigenschap haalt de kenmerken van deze eigenschap.</xref:System.Reflection.PropertyInfo.Attributes%2A>"
  syntax:
    content: public System.Reflection.PropertyAttributes Attributes { get; }
    return:
      type: System.Reflection.PropertyAttributes
      description: "De kenmerken van deze eigenschap."
  overload: System.Runtime.InteropServices._PropertyInfo.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.CanRead
  id: CanRead
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: CanRead
  nameWithType: _PropertyInfo.CanRead
  fullName: System.Runtime.InteropServices._PropertyInfo.CanRead
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.PropertyInfo.CanRead*>eigenschap.</xref:System.Reflection.PropertyInfo.CanRead*>"
  remarks: "Deze eigenschap is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.PropertyInfo.CanRead%2A>eigenschap haalt een waarde die aangeeft of de eigenschap kan worden gelezen.</xref:System.Reflection.PropertyInfo.CanRead%2A>"
  syntax:
    content: public bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als deze eigenschap kan worden gelezen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._PropertyInfo.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite
  id: CanWrite
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: CanWrite
  nameWithType: _PropertyInfo.CanWrite
  fullName: System.Runtime.InteropServices._PropertyInfo.CanWrite
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.PropertyInfo.CanWrite*>eigenschap.</xref:System.Reflection.PropertyInfo.CanWrite*>"
  remarks: "Deze eigenschap is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.PropertyInfo.CanWrite%2A>eigenschap haalt een waarde die aangeeft of de eigenschap kan worden geschreven.</xref:System.Reflection.PropertyInfo.CanWrite%2A>"
  syntax:
    content: public bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als deze eigenschap kan worden geschreven; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._PropertyInfo.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType
  id: DeclaringType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: DeclaringType
  nameWithType: _PropertyInfo.DeclaringType
  fullName: System.Runtime.InteropServices._PropertyInfo.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.MemberInfo.DeclaringType*>eigenschap.</xref:System.Reflection.MemberInfo.DeclaringType*>"
  remarks: "Deze eigenschap is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.MemberInfo.DeclaringType%2A>eigenschap haalt de klasse die wordt gedeclareerd dit lid.</xref:System.Reflection.MemberInfo.DeclaringType%2A>"
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: "De <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> object voor de klasse die wordt gedeclareerd dit lid."
  overload: System.Runtime.InteropServices._PropertyInfo.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _PropertyInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._PropertyInfo.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Object.Equals*>methode.</xref:System.Object.Equals*>"
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Object.Equals%2A>methode bepaalt of de opgegeven die <xref:System.Object>gelijk is aan de huidige <xref:System.Object>.</xref:System.Object> </xref:System.Object> </xref:System.Object.Equals%2A>"
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "<xref:System.Object>Om te vergelijken met de huidige <xref:System.Object>.</xref:System.Object> </xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opgegeven <xref:System.Object>gelijk is aan de huidige <xref:System.Object>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object> </xref:System.Object>"
  overload: System.Runtime.InteropServices._PropertyInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors
  id: GetAccessors
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetAccessors()
  nameWithType: _PropertyInfo.GetAccessors()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.PropertyInfo.GetAccessors*>methode.</xref:System.Reflection.PropertyInfo.GetAccessors*>"
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.PropertyInfo.GetAccessors%2A>methode retourneert een matrix waarvan de elementen overeenstemming met de openbare `get`, `set`, en andere accessors van de eigenschap weergegeven door het huidige exemplaar.</xref:System.Reflection.PropertyInfo.GetAccessors%2A>"
  syntax:
    content: public System.Reflection.MethodInfo[] GetAccessors ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo[]
      description: "Een matrix van <xref:System.Reflection.MethodInfo>objecten die overeenkomen met de openbare <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>, en andere accessors van de eigenschap weergegeven door het huidige exemplaar als accessors worden gevonden; anders wordt deze methode retourneert een matrix met nul (0) elementen.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetAccessors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)
  id: GetAccessors(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetAccessors(Boolean)
  nameWithType: _PropertyInfo.GetAccessors(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.PropertyInfo.GetAccessors*>methode.</xref:System.Reflection.PropertyInfo.GetAccessors*>"
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.PropertyInfo.GetAccessors%2A>methode retourneert een matrix waarvan de elementen overeenstemming met de openbare en, indien opgegeven, niet-openbaar `get`, `set`, en andere accessors van de eigenschap weergegeven door het huidige exemplaar.</xref:System.Reflection.PropertyInfo.GetAccessors%2A>"
  syntax:
    content: public System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>niet-openbare methoden opnemen in de geretourneerde <xref uid=&quot;langword_csharp_MethodInfo&quot; name=&quot;MethodInfo&quot; href=&quot;&quot;> </xref> matrix; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.MethodInfo[]
      description: "Een matrix van <xref:System.Reflection.MethodInfo>objecten waarvan de elementen weerspiegelen de <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>, en andere accessors van de eigenschap weergegeven door het huidige exemplaar.</xref:System.Reflection.MethodInfo> Als de <code> nonPublic </code> parameter <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, deze matrix bevat openbare en niet-openbaar <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>, en andere accessors. Als <code> nonPublic </code> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, deze matrix bevat alleen openbare <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>, en andere accessors. Als er geen accessors met de opgegeven zichtbaarheid worden gevonden, wordt deze methode retourneert een matrix met nul (0) elementen."
  overload: System.Runtime.InteropServices._PropertyInfo.GetAccessors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.MemberInfo.GetCustomAttributes*>methode.</xref:System.Reflection.MemberInfo.GetCustomAttributes*>"
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>methode retourneert een matrix met de aangepaste kenmerken.</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "waar om te zoeken dit lid overname keten vinden van de kenmerken zijn. anders ONWAAR."
    return:
      type: System.Object[]
      description: "Een matrix met de aangepaste kenmerken, of een matrix met nul elementen als geen kenmerken zijn gedefinieerd."
  overload: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.MemberInfo.GetCustomAttributes*>methode.</xref:System.Reflection.MemberInfo.GetCustomAttributes*>"
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>methode retourneert een matrix van aangepaste kenmerken die zijn geïdentificeerd door <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "Het type van kenmerk om te zoeken. Alleen de kenmerken die toegewezen aan dit type zijn worden geretourneerd."
    - id: inherit
      type: System.Boolean
      description: "waar om te zoeken dit lid overname keten vinden van de kenmerken zijn. anders ONWAAR."
    return:
      type: System.Object[]
      description: "Een matrix van aangepaste kenmerken die worden toegepast op dit lid of een matrix met nul (0) elementen als er geen kenmerken zijn toegepast."
  overload: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod
  id: GetGetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetGetMethod()
  nameWithType: _PropertyInfo.GetGetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.PropertyInfo.GetGetMethod*>methode.</xref:System.Reflection.PropertyInfo.GetGetMethod*>"
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.PropertyInfo.GetGetMethod%2A>methode retourneert het publiek `get` accessor voor deze eigenschap.</xref:System.Reflection.PropertyInfo.GetGetMethod%2A>"
  syntax:
    content: public System.Reflection.MethodInfo GetGetMethod ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "Een <xref:System.Reflection.MethodInfo>-object als de openbare <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor voor deze eigenschap of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor niet openbaar is of niet bestaat.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)
  id: GetGetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetGetMethod(Boolean)
  nameWithType: _PropertyInfo.GetGetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.PropertyInfo.GetGetMethod*>methode.</xref:System.Reflection.PropertyInfo.GetGetMethod*>"
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.PropertyInfo.GetGetMethod%2A>methode retourneert de openbare of niet-openbaar `get` accessor voor deze eigenschap.</xref:System.Reflection.PropertyInfo.GetGetMethod%2A>"
  syntax:
    content: public System.Reflection.MethodInfo GetGetMethod (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om te retourneren van een niet-openbaar <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.MethodInfo
      description: "Een <xref:System.Reflection.MethodInfo>object voor de <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor voor deze eigenschap als de <code> nonPublic </code> parameter <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo> Or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if <code>nonPublic</code> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> and the <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref> accessor is non-public, or if <code>nonPublic</code> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but no <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref> accessors exist."
  overload: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _PropertyInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Object.GetHashCode*>methode.</xref:System.Object.GetHashCode*>"
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Object.GetHashCode%2A>methode fungeert als een hash-functie voor een bepaald type.</xref:System.Object.GetHashCode%2A> <xref:System.Object.GetHashCode%2A>is geschikt voor gebruik in de hash-algoritmen en gegevens structuren zoals hash-tabel.</xref:System.Object.GetHashCode%2A>"
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "De hash-code voor het huidige exemplaar."
  overload: System.Runtime.InteropServices._PropertyInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Een set namen toegewezen aan een overeenkomende set van dispatch-id."
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code. Voor meer informatie over `IDispatch::GetIDsOfNames`, Zie de MSDN-bibliotheek."
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "Gereserveerd voor toekomstig gebruik. Moet IID_NULL."
    - id: rgszNames
      type: System.IntPtr
      description: "Een matrix met namen worden toegewezen."
    - id: cNames
      type: System.UInt32
      description: "Het aantal van de namen worden toegewezen."
    - id: lcid
      type: System.UInt32
      description: "De landinstelling context waarin u de namen te interpreteren."
    - id: rgDispId
      type: System.IntPtr
      description: "Een matrix die is toegewezen door de aanroeper ontvangt dat de id&quot;s die overeenkomen met de namen."
  overload: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters
  id: GetIndexParameters
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetIndexParameters()
  nameWithType: _PropertyInfo.GetIndexParameters()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.PropertyInfo.GetIndexParameters*>methode.</xref:System.Reflection.PropertyInfo.GetIndexParameters*>"
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A>methode retourneert een matrix van de index-parameters voor de eigenschap</xref:System.Reflection.PropertyInfo.GetIndexParameters%2A>"
  syntax:
    content: public System.Reflection.ParameterInfo[] GetIndexParameters ();
    parameters: []
    return:
      type: System.Reflection.ParameterInfo[]
      description: "Een matrix van het type <xref:System.Reflection.ParameterInfo>met de parameters voor de indexen.</xref:System.Reflection.ParameterInfo>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod
  id: GetSetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetSetMethod()
  nameWithType: _PropertyInfo.GetSetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.PropertyInfo.GetSetMethod*>methode.</xref:System.Reflection.PropertyInfo.GetSetMethod*>"
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.PropertyInfo.GetSetMethod%2A>methode retourneert het publiek `set` accessor voor deze eigenschap.</xref:System.Reflection.PropertyInfo.GetSetMethod%2A>"
  syntax:
    content: public System.Reflection.MethodInfo GetSetMethod ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "De <xref:System.Reflection.MethodInfo>object voor de <xref uid=&quot;langword_csharp_Set&quot; name=&quot;Set&quot; href=&quot;&quot;> </xref> methode voor deze eigenschap als de <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor wordt openbaar, of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor is niet openbaar.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)
  id: GetSetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetSetMethod(Boolean)
  nameWithType: _PropertyInfo.GetSetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.PropertyInfo.GetSetMethod*>methode.</xref:System.Reflection.PropertyInfo.GetSetMethod*>"
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.PropertyInfo.GetSetMethod%2A>methode retourneert de `set` accessor voor deze eigenschap.</xref:System.Reflection.PropertyInfo.GetSetMethod%2A>"
  syntax:
    content: public System.Reflection.MethodInfo GetSetMethod (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om te retourneren van een niet-openbaar accessor; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.MethodInfo
      description: "Een van de waarden in de volgende tabel.       <table><thead><tr><th> Waarde       </th><th> Betekenis       </th></tr></thead><tbody><tr><td> Een <xref:System.Reflection.MethodInfo>object voor de <xref uid=&quot;langword_csharp_Set&quot; name=&quot;Set&quot; href=&quot;&quot;> </xref> methode voor deze eigenschap.</xref:System.Reflection.MethodInfo>       </td><td> De <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor openbaar is.       - of - de <code> nonPublic </code> parameter <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> en de <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor voor niet-openbaar is.       </td></tr><tr><td><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref></td><td> De <code> nonPublic </code> parameter <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, maar de eigenschap is alleen-lezen.       - of - de <code> nonPublic </code> parameter <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> en de <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor voor niet-openbaar is.       - of - er is geen <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor.       </td></tr></tbody></table>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetType
  id: GetType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetType()
  nameWithType: _PropertyInfo.GetType()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Object.GetType*>methode.</xref:System.Object.GetType*>"
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Object.GetType%2A>methode Hiermee wordt het type van het huidige exemplaar.</xref:System.Object.GetType%2A>"
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "Een <xref:System.Type>object.</xref:System.Type>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Haalt de type-informatie voor een object dat kan worden gebruikt voor de type-informatie ophalen voor een interface."
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code. Voor meer informatie over `IDispatch::GetTypeInfo`, Zie de MSDN-bibliotheek."
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "De type-informatie te retourneren."
    - id: lcid
      type: System.UInt32
      description: "De landinstellingen-id voor de type-informatie."
    - id: ppTInfo
      type: System.IntPtr
      description: "Een verwijzing naar het gevraagde type-informatie-object."
  overload: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _PropertyInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Het nummer van het type informatie interfaces dat een object (0 of 1) biedt opgehaald."
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code. Voor meer informatie over `IDispatch::GetTypeInfoCount`, Zie de MSDN-bibliotheek."
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "Wanneer deze methode retourneert, bevat een verwijzing naar een locatie die het nummer van het type informatie interfaces van het object ontvangt. Deze parameter wordt doorgegeven niet geïnitialiseerd."
  overload: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])
  id: GetValue(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetValue(Object,Object[])
  nameWithType: _PropertyInfo.GetValue(Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.PropertyInfo.GetValue*>methode.</xref:System.Reflection.PropertyInfo.GetValue*>"
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.PropertyInfo.GetValue%2A>methode retourneert een letterlijke waarde die is gekoppeld aan de eigenschap door een compiler.</xref:System.Reflection.PropertyInfo.GetValue%2A>"
  syntax:
    content: public object GetValue (object obj, object[] index);
    parameters:
    - id: obj
      type: System.Object
      description: "Het object waarvan de de eigenschapswaarde wordt geretourneerd."
    - id: index
      type: System.Object[]
      description: "Optionele indexwaarden voor geïndexeerde eigenschappen. Deze waarde moet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> voor niet-geïndexeerde eigenschappen."
    return:
      type: System.Object
      description: "De waarde van de eigenschap voor de <code> obj </code> parameter."
  overload: System.Runtime.InteropServices._PropertyInfo.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.PropertyInfo.GetValue*>methode.</xref:System.Reflection.PropertyInfo.GetValue*>"
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.PropertyInfo.GetValue%2A>methode retourneert de waarde van een eigenschap met de opgegeven binding, index en <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> </xref:System.Reflection.PropertyInfo.GetValue%2A>"
  syntax:
    content: public object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "Het object waarvan de de eigenschapswaarde wordt geretourneerd."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: 'Het kenmerk aanroepen. This must be a bit flag from <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref>: <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateInstance&quot; name=&quot;CreateInstance&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SetField&quot; name=&quot;SetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetProperty&quot; name=&quot;GetProperty&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_SetProperty&quot; name=&quot;SetProperty&quot; href=&quot;&quot;></xref>. Een kenmerk geschikte aanroep moet worden opgegeven. Als u een statisch lid wordt aangeroepen, de <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;> </xref> vlag van <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;> </xref> moet worden ingesteld.'
    - id: binder
      type: System.Reflection.Binder
      description: "Een object waarmee de binding, afdwingen van het argument van het type, aanroepen van leden, en het ophalen van <xref uid=&quot;langword_csharp_MemberInfo&quot; name=&quot;MemberInfo&quot; href=&quot;&quot;> </xref> objecten via reflectie. Als `binder` is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, de binder standaard wordt gebruikt."
    - id: index
      type: System.Object[]
      description: "Optionele indexwaarden voor geïndexeerde eigenschappen. Deze waarde moet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> voor niet-geïndexeerde eigenschappen."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "De <xref uid=&quot;langword_csharp_CultureInfo&quot; name=&quot;CultureInfo&quot; href=&quot;&quot;> </xref> -object met de cultuur waarvoor u de bron wordt gelokaliseerd. Houd er rekening mee dat als de bron is niet gelokaliseerd voor deze cultuur, wordt de <xref uid=&quot;langword_csharp_CultureInfo.Parent&quot; name=&quot;CultureInfo.Parent&quot; href=&quot;&quot;> </xref> methode achtereenvolgens op een overeenkomst moet worden aangeroepen. Als deze waarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, wordt de <xref uid=&quot;langword_csharp_CultureInfo&quot; name=&quot;CultureInfo&quot; href=&quot;&quot;> </xref> wordt opgehaald uit de <xref uid=&quot;langword_csharp_CultureInfo.CurrentUICulture&quot; name=&quot;CultureInfo.CurrentUICulture&quot; href=&quot;&quot;> </xref> eigenschap."
    return:
      type: System.Object
      description: "De waarde van de eigenschap voor de <code> obj </code> parameter."
  overload: System.Runtime.InteropServices._PropertyInfo.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Biedt toegang tot eigenschappen en methoden die worden weergegeven door een object."
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code. Voor meer informatie over `IDispatch::Invoke`, Zie de MSDN-bibliotheek."
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "Een id van een lid."
    - id: riid
      type: System.Guid
      description: "Gereserveerd voor toekomstig gebruik. Moet IID_NULL."
    - id: lcid
      type: System.UInt32
      description: "De landinstelling context waarin u argumenten interpreteren."
    - id: wFlags
      type: System.Int16
      description: "De vlaggen met een beschrijving van de context van de aanroep."
    - id: pDispParams
      type: System.IntPtr
      description: "Een verwijzing naar een structuur met een matrix van argumenten, een matrix van dit argument DISPID&quot;s voor benoemde argumenten en tellingen voor het aantal elementen in de arrays."
    - id: pVarResult
      type: System.IntPtr
      description: "Een verwijzing naar de locatie waar het resultaat wordt opgeslagen."
    - id: pExcepInfo
      type: System.IntPtr
      description: "Een verwijzing naar een structuur die informatie over de uitzondering bevat."
    - id: puArgErr
      type: System.IntPtr
      description: "De index van het eerste argument waarvoor een fout."
  overload: System.Runtime.InteropServices._PropertyInfo.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: _PropertyInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.MemberInfo.IsDefined*>methode.</xref:System.Reflection.MemberInfo.IsDefined*>"
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.MemberInfo.IsDefined%2A>methode geeft aan of een of meer exemplaar van de `attributeType` parameter wordt toegepast op dit lid.</xref:System.Reflection.MemberInfo.IsDefined%2A>"
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "De <xref:System.Type>object waarop de aangepaste kenmerken zijn toegepast.</xref:System.Type>"
    - id: inherit
      type: System.Boolean
      description: "waar om te zoeken dit lid overname keten vinden van de kenmerken zijn. anders ONWAAR."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een of meer exemplaren van de <code> attributeType </code> parameter zijn toegepast op dit lid, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._PropertyInfo.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  id: IsSpecialName
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: _PropertyInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.PropertyInfo.IsSpecialName*>eigenschap.</xref:System.Reflection.PropertyInfo.IsSpecialName*>"
  remarks: "Deze eigenschap is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.PropertyInfo.IsSpecialName%2A>eigenschap stelt u een waarde die aangeeft of de eigenschap de naam van de speciale is.</xref:System.Reflection.PropertyInfo.IsSpecialName%2A>"
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als deze eigenschap de naam van de speciale is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._PropertyInfo.IsSpecialName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.MemberType
  id: MemberType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: MemberType
  nameWithType: _PropertyInfo.MemberType
  fullName: System.Runtime.InteropServices._PropertyInfo.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.PropertyInfo.MemberType*>eigenschap.</xref:System.Reflection.PropertyInfo.MemberType*>"
  remarks: "Deze eigenschap is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.PropertyInfo.MemberType%2A>opgehaald van de eigenschap een <xref:System.Reflection.MemberTypes>waarde die aangeeft dat dit lid is van een eigenschap.</xref:System.Reflection.MemberTypes> </xref:System.Reflection.PropertyInfo.MemberType%2A>"
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "Een van de <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref> waarden die aangeeft dat dit lid is van een eigenschap."
  overload: System.Runtime.InteropServices._PropertyInfo.MemberType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Name
  id: Name
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Name
  nameWithType: _PropertyInfo.Name
  fullName: System.Runtime.InteropServices._PropertyInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.MemberInfo.Name*>eigenschap.</xref:System.Reflection.MemberInfo.Name*>"
  remarks: "Deze eigenschap is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.MemberInfo.Name%2A>eigenschap wordt de naam van het huidige lid.</xref:System.Reflection.MemberInfo.Name%2A>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Een <xref:System.String>object met de naam van dit lid.</xref:System.String>"
  overload: System.Runtime.InteropServices._PropertyInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType
  id: PropertyType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: PropertyType
  nameWithType: _PropertyInfo.PropertyType
  fullName: System.Runtime.InteropServices._PropertyInfo.PropertyType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.PropertyInfo.PropertyType*>eigenschap.</xref:System.Reflection.PropertyInfo.PropertyType*>"
  remarks: "Deze eigenschap is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.PropertyInfo.PropertyType%2A>eigenschap Hiermee wordt het type van deze eigenschap.</xref:System.Reflection.PropertyInfo.PropertyType%2A>"
  syntax:
    content: public Type PropertyType { get; }
    return:
      type: System.Type
      description: "Het type van deze eigenschap."
  overload: System.Runtime.InteropServices._PropertyInfo.PropertyType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType
  id: ReflectedType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: ReflectedType
  nameWithType: _PropertyInfo.ReflectedType
  fullName: System.Runtime.InteropServices._PropertyInfo.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.MemberInfo.ReflectedType*>eigenschap.</xref:System.Reflection.MemberInfo.ReflectedType*>"
  remarks: "Deze eigenschap is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.MemberInfo.ReflectedType%2A>eigenschap haalt de klassenobject dat is gebruikt voor het verkrijgen van dit <xref:System.Reflection.MemberInfo>object.</xref:System.Reflection.MemberInfo> </xref:System.Reflection.MemberInfo.ReflectedType%2A>"
  syntax:
    content: public Type ReflectedType { get; }
    return:
      type: System.Type
      description: "De <xref:System.Type>-object via waarvoor deze <xref:System.Reflection.MemberInfo>object is opgehaald.</xref:System.Reflection.MemberInfo> </xref:System.Type>"
  overload: System.Runtime.InteropServices._PropertyInfo.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  id: SetValue(System.Object,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: SetValue(Object,Object,Object[])
  nameWithType: _PropertyInfo.SetValue(Object,Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.PropertyInfo.SetValue*>methode.</xref:System.Reflection.PropertyInfo.SetValue*>"
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.PropertyInfo.SetValue%2A>methode stelt u de waarde van de eigenschap met de waarden van optionele index voor Indexeigenschappen.</xref:System.Reflection.PropertyInfo.SetValue%2A>"
  syntax:
    content: public void SetValue (object obj, object value, object[] index);
    parameters:
    - id: obj
      type: System.Object
      description: "Het object waarvan de de eigenschapswaarde wordt ingesteld."
    - id: value
      type: System.Object
      description: "De nieuwe waarde voor deze eigenschap."
    - id: index
      type: System.Object[]
      description: "Optionele indexwaarden voor geïndexeerde eigenschappen. Deze waarde moet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> voor niet-geïndexeerde eigenschappen."
  overload: System.Runtime.InteropServices._PropertyInfo.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Reflection.FieldInfo.SetValue*>methode.</xref:System.Reflection.FieldInfo.SetValue*>"
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.       De <xref:System.Reflection.FieldInfo.SetValue%2A>methode wordt de waarde van de eigenschap voor het gegeven object ingesteld op de opgegeven waarde.</xref:System.Reflection.FieldInfo.SetValue%2A>"
  syntax:
    content: public void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "Het object waarvan de de eigenschapswaarde wordt geretourneerd."
    - id: value
      type: System.Object
      description: "De nieuwe waarde voor deze eigenschap."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: 'Het kenmerk aanroepen. This must be a bit flag from <xref href=&quot;System.Reflection.BindingFlags&quot;></xref>: <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateInstance&quot; name=&quot;CreateInstance&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SetField&quot; name=&quot;SetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetProperty&quot; name=&quot;GetProperty&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_SetProperty&quot; name=&quot;SetProperty&quot; href=&quot;&quot;></xref>. Een kenmerk geschikte aanroep moet worden opgegeven. Als u een statisch lid wordt aangeroepen, de <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;> </xref> vlag van <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;> </xref> moet worden ingesteld.'
    - id: binder
      type: System.Reflection.Binder
      description: "Een object waarmee de binding, afdwingen van het argument van het type, aanroepen van leden, en het ophalen van <xref:System.Reflection.MemberInfo>objecten via reflectie.</xref:System.Reflection.MemberInfo> Als `binder` is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, de binder standaard wordt gebruikt."
    - id: index
      type: System.Object[]
      description: "Optionele indexwaarden voor geïndexeerde eigenschappen. Deze waarde moet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> voor niet-geïndexeerde eigenschappen."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "De <xref:System.Globalization.CultureInfo>-object met de cultuur waarvoor u de bron wordt gelokaliseerd.</xref:System.Globalization.CultureInfo> Houd er rekening mee dat als de bron is niet gelokaliseerd voor deze cultuur, wordt de <xref uid=&quot;langword_csharp_CultureInfo.Parent&quot; name=&quot;CultureInfo.Parent&quot; href=&quot;&quot;> </xref> methode achtereenvolgens op een overeenkomst moet worden aangeroepen. Als deze waarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, wordt de <xref uid=&quot;langword_csharp_CultureInfo&quot; name=&quot;CultureInfo&quot; href=&quot;&quot;> </xref> wordt opgehaald uit de <xref uid=&quot;langword_csharp_CultureInfo.CurrentUICulture&quot; name=&quot;CultureInfo.CurrentUICulture&quot; href=&quot;&quot;> </xref> eigenschap."
  overload: System.Runtime.InteropServices._PropertyInfo.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.ToString
  id: ToString
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: _PropertyInfo.ToString()
  fullName: System.Runtime.InteropServices._PropertyInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM-objecten bevat met versie-onafhankelijke toegang tot de <xref:System.Object.ToString*>methode.</xref:System.Object.ToString*>"
  remarks: "Deze methode is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code."
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Een tekenreeks met de huidige <xref:System.Object>.</xref:System.Object>"
  overload: System.Runtime.InteropServices._PropertyInfo.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices._PropertyInfo.Attributes
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Attributes
  nameWithType: _PropertyInfo.Attributes
  fullName: System.Runtime.InteropServices._PropertyInfo.Attributes
- uid: System.Reflection.PropertyAttributes
  parent: System.Reflection
  isExternal: true
  name: PropertyAttributes
  nameWithType: PropertyAttributes
  fullName: System.Reflection.PropertyAttributes
- uid: System.Runtime.InteropServices._PropertyInfo.CanRead
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanRead
  nameWithType: _PropertyInfo.CanRead
  fullName: System.Runtime.InteropServices._PropertyInfo.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanWrite
  nameWithType: _PropertyInfo.CanWrite
  fullName: System.Runtime.InteropServices._PropertyInfo.CanWrite
- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _PropertyInfo.DeclaringType
  fullName: System.Runtime.InteropServices._PropertyInfo.DeclaringType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: _PropertyInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._PropertyInfo.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetAccessors()
  nameWithType: _PropertyInfo.GetAccessors()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors()
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetAccessors(Boolean)
  nameWithType: _PropertyInfo.GetAccessors(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors(Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Type,Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetGetMethod()
  nameWithType: _PropertyInfo.GetGetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod()
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetGetMethod(Boolean)
  nameWithType: _PropertyInfo.GetGetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: _PropertyInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIndexParameters()
  nameWithType: _PropertyInfo.GetIndexParameters()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters()
- uid: System.Reflection.ParameterInfo[]
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo[]
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetSetMethod()
  nameWithType: _PropertyInfo.GetSetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod()
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetSetMethod(Boolean)
  nameWithType: _PropertyInfo.GetSetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetType()
  nameWithType: _PropertyInfo.GetType()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetType()
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _PropertyInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(UInt32)
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetValue(Object,Object[])
  nameWithType: _PropertyInfo.GetValue(Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,Object[])
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: _PropertyInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.IsDefined(Type,Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _PropertyInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
- uid: System.Runtime.InteropServices._PropertyInfo.MemberType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: MemberType
  nameWithType: _PropertyInfo.MemberType
  fullName: System.Runtime.InteropServices._PropertyInfo.MemberType
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Runtime.InteropServices._PropertyInfo.Name
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Name
  nameWithType: _PropertyInfo.Name
  fullName: System.Runtime.InteropServices._PropertyInfo.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: PropertyType
  nameWithType: _PropertyInfo.PropertyType
  fullName: System.Runtime.InteropServices._PropertyInfo.PropertyType
- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _PropertyInfo.ReflectedType
  fullName: System.Runtime.InteropServices._PropertyInfo.ReflectedType
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: SetValue(Object,Object,Object[])
  nameWithType: _PropertyInfo.SetValue(Object,Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,Object[])
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Runtime.InteropServices._PropertyInfo.ToString
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ToString()
  nameWithType: _PropertyInfo.ToString()
  fullName: System.Runtime.InteropServices._PropertyInfo.ToString()
- uid: System.Runtime.InteropServices._PropertyInfo.Attributes*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Attributes
  nameWithType: _PropertyInfo.Attributes
- uid: System.Runtime.InteropServices._PropertyInfo.CanRead*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanRead
  nameWithType: _PropertyInfo.CanRead
- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanWrite
  nameWithType: _PropertyInfo.CanWrite
- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _PropertyInfo.DeclaringType
- uid: System.Runtime.InteropServices._PropertyInfo.Equals*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Equals
  nameWithType: _PropertyInfo.Equals
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetAccessors
  nameWithType: _PropertyInfo.GetAccessors
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _PropertyInfo.GetCustomAttributes
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetGetMethod
  nameWithType: _PropertyInfo.GetGetMethod
- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetHashCode
  nameWithType: _PropertyInfo.GetHashCode
- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _PropertyInfo.GetIDsOfNames
- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIndexParameters
  nameWithType: _PropertyInfo.GetIndexParameters
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetSetMethod
  nameWithType: _PropertyInfo.GetSetMethod
- uid: System.Runtime.InteropServices._PropertyInfo.GetType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetType
  nameWithType: _PropertyInfo.GetType
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfo
  nameWithType: _PropertyInfo.GetTypeInfo
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _PropertyInfo.GetTypeInfoCount
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetValue
  nameWithType: _PropertyInfo.GetValue
- uid: System.Runtime.InteropServices._PropertyInfo.Invoke*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Invoke
  nameWithType: _PropertyInfo.Invoke
- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsDefined
  nameWithType: _PropertyInfo.IsDefined
- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _PropertyInfo.IsSpecialName
- uid: System.Runtime.InteropServices._PropertyInfo.MemberType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: MemberType
  nameWithType: _PropertyInfo.MemberType
- uid: System.Runtime.InteropServices._PropertyInfo.Name*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Name
  nameWithType: _PropertyInfo.Name
- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: PropertyType
  nameWithType: _PropertyInfo.PropertyType
- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _PropertyInfo.ReflectedType
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: SetValue
  nameWithType: _PropertyInfo.SetValue
- uid: System.Runtime.InteropServices._PropertyInfo.ToString*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ToString
  nameWithType: _PropertyInfo.ToString
