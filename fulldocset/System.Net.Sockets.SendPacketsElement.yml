### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.SendPacketsElement
  id: SendPacketsElement
  children:
  - System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])
  - System.Net.Sockets.SendPacketsElement.#ctor(System.String)
  - System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)
  - System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)
  - System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)
  - System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)
  - System.Net.Sockets.SendPacketsElement.Buffer
  - System.Net.Sockets.SendPacketsElement.Count
  - System.Net.Sockets.SendPacketsElement.EndOfPacket
  - System.Net.Sockets.SendPacketsElement.FilePath
  - System.Net.Sockets.SendPacketsElement.Offset
  langs:
  - csharp
  name: SendPacketsElement
  nameWithType: SendPacketsElement
  fullName: System.Net.Sockets.SendPacketsElement
  type: Class
  summary: "Hiermee geeft u een element in een matrix SendPacketsElement."
  remarks: "De klasse SendPacketsElement wordt gebruikt voor het verbeteren van de <xref:System.Net.Sockets.Socket>klasse voor gebruik door servertoepassingen die gebruikmaken van asynchrone netwerk-i/o de hoogste prestaties bereiken.</xref:System.Net.Sockets.Socket> De klasse SendPacketsElement wordt gebruikt met de <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName>eigenschap ophalen of instellen van een gegevensbuffer of het bestand kan worden verzonden met behulp van de <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName>methode.</xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName> </xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName>"
  syntax:
    content: public class SendPacketsElement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: SendPacketsElement(Byte[])
  nameWithType: SendPacketsElement.SendPacketsElement(Byte[])
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(Byte[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref> klasse met behulp van de opgegeven buffer."
  remarks: "De constructor SendPacketsElement initialiseert een nieuw exemplaar van de <xref:System.Net.Sockets.SendPacketsElement>klasse met een bytematrix van gegevens.</xref:System.Net.Sockets.SendPacketsElement> De <xref:System.Net.Sockets.SendPacketsElement>klasse wordt gebruikt met de <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName>eigenschap ophalen of instellen van een gegevensbuffer of het bestand kan worden verzonden met behulp van de <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName>methode.</xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName> </xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName> </xref:System.Net.Sockets.SendPacketsElement>"
  syntax:
    content: public SendPacketsElement (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Een bytematrix van gegevens worden verzonden met behulp van de &lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName&gt; methode."
  overload: System.Net.Sockets.SendPacketsElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <code> buffer </code> parameter kan niet null zijn"
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: SendPacketsElement(String)
  nameWithType: SendPacketsElement.SendPacketsElement(String)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref> klasse met het opgegeven bestand."
  remarks: "De constructor SendPacketsElement initialiseert een nieuw exemplaar van de <xref:System.Net.Sockets.SendPacketsElement>klasse met een bestandsnaam van een bestand.</xref:System.Net.Sockets.SendPacketsElement> De <xref:System.Net.Sockets.SendPacketsElement>klasse wordt gebruikt met de <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName>eigenschap ophalen of instellen van een gegevensbuffer of het bestand kan worden verzonden met behulp van de <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName>methode.</xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName> </xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName> </xref:System.Net.Sockets.SendPacketsElement>       Universal Naming Convention (UNC)-paden worden ondersteund door de `filepath` parameter. Als het bestand zich in de huidige werkmap, wordt geen informatie over het pad moet worden opgegeven."
  syntax:
    content: public SendPacketsElement (string filepath);
    parameters:
    - id: filepath
      type: System.String
      description: "De bestandsnaam van het bestand moet worden verzonden met de &lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName&gt; methode."
  overload: System.Net.Sockets.SendPacketsElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <code> filepath </code> parameter kan niet null zijn"
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)
  id: '#ctor(System.Byte[],System.Int32,System.Int32)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: SendPacketsElement(Byte[],Int32,Int32)
  nameWithType: SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref> klasse met behulp van de opgegeven buffer, buffer-offset en aantal."
  remarks: "De constructor SendPacketsElement initialiseert een nieuw exemplaar van de <xref:System.Net.Sockets.SendPacketsElement>klasse met een bytematrix van gegevens.</xref:System.Net.Sockets.SendPacketsElement> De <xref:System.Net.Sockets.SendPacketsElement>klasse wordt gebruikt met de <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName>eigenschap ophalen of instellen van een gegevensbuffer of het bestand kan worden verzonden met behulp van de <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName>methode.</xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName> </xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName> </xref:System.Net.Sockets.SendPacketsElement>"
  syntax:
    content: public SendPacketsElement (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Een bytematrix van gegevens worden verzonden met behulp van de &lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName&gt; methode."
    - id: offset
      type: System.Int32
      description: "De verschuiving, in bytes, vanaf het begin van de `buffer` naar de locatie in de `buffer` om te beginnen met het verzenden van gegevens die zijn opgegeven de `buffer` parameter."
    - id: count
      type: System.Int32
      description: "Het aantal bytes worden verzonden vanaf de `offset` parameter. Als `count` gelijk is aan nul, geen bytes worden verzonden."
  overload: System.Net.Sockets.SendPacketsElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <code> buffer </code> parameter kan niet null zijn"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> offset </code> en <code> count </code> parameters moet groter zijn dan of gelijk zijn aan nul.       De <code> offset </code> en <code> count </code> moet kleiner zijn dan de grootte van de buffer"
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: SendPacketsElement(String,Int32,Int32)
  nameWithType: SendPacketsElement.SendPacketsElement(String,Int32,Int32)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(String,Int32,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref> klasse met behulp van de opgegeven bestandsnaam pad, offset en aantal."
  remarks: "De constructor SendPacketsElement initialiseert een nieuw exemplaar van de <xref:System.Net.Sockets.SendPacketsElement>klasse met een bestandsnaam van een bestand.</xref:System.Net.Sockets.SendPacketsElement> De <xref:System.Net.Sockets.SendPacketsElement>klasse wordt gebruikt met de <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName>eigenschap ophalen of instellen van een gegevensbuffer of het bestand kan worden verzonden met behulp van de <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName>methode.</xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName> </xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName> </xref:System.Net.Sockets.SendPacketsElement>       Universal Naming Convention (UNC)-paden worden ondersteund door de `filepath` parameter. Als het bestand zich in de huidige werkmap, wordt geen informatie over het pad moet worden opgegeven."
  syntax:
    content: public SendPacketsElement (string filepath, int offset, int count);
    parameters:
    - id: filepath
      type: System.String
      description: "De bestandsnaam van het bestand moet worden verzonden met de &lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName&gt; methode."
    - id: offset
      type: System.Int32
      description: "De verschuiving, in bytes, vanaf het begin van het bestand naar de locatie in het bestand om te beginnen met het verzenden van het bestand dat is opgegeven in de `filepath` parameter."
    - id: count
      type: System.Int32
      description: "Het aantal bytes worden verzonden vanaf de `offset` parameter. Als `count` nul, is het hele bestand wordt verzonden."
  overload: System.Net.Sockets.SendPacketsElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <code> filepath </code> parameter kan niet null zijn"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> offset </code> en <code> count </code> parameters moet groter zijn dan of gelijk zijn aan nul.       De <code> offset </code> en <code> count </code> moet kleiner zijn dan de grootte van het bestand aangegeven door de <code> filepath </code> parameter."
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)
  id: '#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: SendPacketsElement(Byte[],Int32,Int32,Boolean)
  nameWithType: SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32,Boolean)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref> klasse met behulp van de opgegeven buffer, buffer-offset en aantal met de optie voor het combineren van dit element met het volgende element in een Verzendaanvraag één van de laag sockets voor het transport."
  remarks: "De constructor SendPacketsElement initialiseert een nieuw exemplaar van de <xref:System.Net.Sockets.SendPacketsElement>klasse met een bytematrix van gegevens.</xref:System.Net.Sockets.SendPacketsElement> De <xref:System.Net.Sockets.SendPacketsElement>klasse wordt gebruikt met de <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName>eigenschap ophalen of instellen van een gegevensbuffer of het bestand kan worden verzonden met behulp van de <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName>methode.</xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName> </xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName> </xref:System.Net.Sockets.SendPacketsElement>"
  syntax:
    content: public SendPacketsElement (byte[] buffer, int offset, int count, bool endOfPacket);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Een bytematrix van gegevens worden verzonden met behulp van de &lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName&gt; methode."
    - id: offset
      type: System.Int32
      description: "De verschuiving, in bytes, vanaf het begin van de `buffer` naar de locatie in de `buffer` om te beginnen met het verzenden van gegevens die zijn opgegeven de `buffer` parameter."
    - id: count
      type: System.Int32
      description: "Het aantal bytes worden verzonden vanaf de `offset` parameter. Als `count` gelijk is aan nul, geen bytes worden verzonden."
    - id: endOfPacket
      type: System.Boolean
      description: "Een Booleaanse waarde die aangeeft dat dit element moet niet worden gecombineerd met het volgende element in een enkele aanvraag verzenden uit de laag sockets aan het transport. Deze markering wordt gebruikt voor gedetailleerde controle over van de inhoud van elk bericht op een datagram of bericht-georiënteerd socket."
  overload: System.Net.Sockets.SendPacketsElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <code> buffer </code> parameter kan niet null zijn"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> offset </code> en <code> count </code> parameters moet groter zijn dan of gelijk zijn aan nul.       De <code> offset </code> en <code> count </code> moet kleiner zijn dan de grootte van de buffer"
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)
  id: '#ctor(System.String,System.Int32,System.Int32,System.Boolean)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: SendPacketsElement(String,Int32,Int32,Boolean)
  nameWithType: SendPacketsElement.SendPacketsElement(String,Int32,Int32,Boolean)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(String,Int32,Int32,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref> klasse met behulp van de opgegeven bestandsnaam pad, buffer-offset en aantal met de optie combineren van dit element met het volgende element in een Verzendaanvraag één van de laag sockets voor het transport."
  remarks: "De constructor SendPacketsElement initialiseert een nieuw exemplaar van de <xref:System.Net.Sockets.SendPacketsElement>klasse met een bestandsnaam van een bestand.</xref:System.Net.Sockets.SendPacketsElement> De <xref:System.Net.Sockets.SendPacketsElement>klasse wordt gebruikt met de <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName>eigenschap ophalen of instellen van een gegevensbuffer of het bestand kan worden verzonden met behulp van de <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName>methode.</xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName> </xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName> </xref:System.Net.Sockets.SendPacketsElement>       Universal Naming Convention (UNC)-paden worden ondersteund door de `filepath` parameter. Als het bestand zich in de huidige werkmap, wordt geen informatie over het pad moet worden opgegeven."
  syntax:
    content: public SendPacketsElement (string filepath, int offset, int count, bool endOfPacket);
    parameters:
    - id: filepath
      type: System.String
      description: "De bestandsnaam van het bestand moet worden verzonden met de &lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName&gt; methode."
    - id: offset
      type: System.Int32
      description: "De verschuiving, in bytes, vanaf het begin van het bestand naar de locatie in het bestand om te beginnen met het verzenden van het bestand dat is opgegeven in de `filepath` parameter."
    - id: count
      type: System.Int32
      description: "Het aantal bytes worden verzonden vanaf de `offset` parameter. Als `count` nul, is het hele bestand wordt verzonden."
    - id: endOfPacket
      type: System.Boolean
      description: "Een Booleaanse waarde die aangeeft dat dit element moet niet worden gecombineerd met het volgende element in een enkele aanvraag verzenden uit de laag sockets aan het transport. Deze markering wordt gebruikt voor gedetailleerde controle over van de inhoud van elk bericht op een datagram of bericht-georiënteerd socket."
  overload: System.Net.Sockets.SendPacketsElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <code> filepath </code> parameter kan niet null zijn"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> offset </code> en <code> count </code> parameters moet groter zijn dan of gelijk zijn aan nul.       De <code> offset </code> en <code> count </code> moet kleiner zijn dan de grootte van het bestand aangegeven door de <code> filepath </code> parameter."
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.Buffer
  id: Buffer
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: Buffer
  nameWithType: SendPacketsElement.Buffer
  fullName: System.Net.Sockets.SendPacketsElement.Buffer
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Opgehaald van de buffer worden verzonden als de <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref> klasse is geïnitialiseerd met een <code> buffer </code> parameter."
  remarks: "De standaardwaarde voor de eigenschap Buffer is een matrix met lengte nul als de <xref:System.Net.Sockets.SendPacketsElement>klasse niet is geïnitialiseerd met een `buffer` parameter.</xref:System.Net.Sockets.SendPacketsElement>"
  syntax:
    content: public byte[] Buffer { get; }
    return:
      type: System.Byte[]
      description: "De byte-buffer te verzenden als de <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref> klasse is geïnitialiseerd met een <code> buffer </code> parameter."
  overload: System.Net.Sockets.SendPacketsElement.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.Count
  id: Count
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: Count
  nameWithType: SendPacketsElement.Count
  fullName: System.Net.Sockets.SendPacketsElement.Count
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Hiermee haalt u het aantal bytes dat moet worden verzonden."
  remarks: "De standaardwaarde voor de eigenschap Count is nul als de <xref:System.Net.Sockets.SendPacketsElement>klasse niet is geïnitialiseerd met een `count` parameter.</xref:System.Net.Sockets.SendPacketsElement>       Als het aantal gelijk is aan nul voor een bestand, wordt het hele bestand verzonden. Als het aantal gelijk is aan nul voor een buffer, kan geen bytes worden verzonden."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Het aantal bytes te verzenden als de <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref> klasse is geïnitialiseerd met een <code> count </code> parameter."
  overload: System.Net.Sockets.SendPacketsElement.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.EndOfPacket
  id: EndOfPacket
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: EndOfPacket
  nameWithType: SendPacketsElement.EndOfPacket
  fullName: System.Net.Sockets.SendPacketsElement.EndOfPacket
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Hiermee haalt u een Boolean die aangeeft of dit element moet niet worden gecombineerd met het volgende element in een Verzendaanvraag één van de laag sockets voor het transport."
  remarks: "De standaardwaarde voor de eigenschap EndOfPacket is ingesteld op false als de <xref:System.Net.Sockets.SendPacketsElement>klasse niet is geïnitialiseerd met een `endOfPacket` parameter ingesteld op true.</xref:System.Net.Sockets.SendPacketsElement>"
  syntax:
    content: public bool EndOfPacket { get; }
    return:
      type: System.Boolean
      description: "Een Boolean die aangeeft als dit element moet niet worden gecombineerd met het volgende element in een enkele aanvraag verzenden."
  overload: System.Net.Sockets.SendPacketsElement.EndOfPacket*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.FilePath
  id: FilePath
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: FilePath
  nameWithType: SendPacketsElement.FilePath
  fullName: System.Net.Sockets.SendPacketsElement.FilePath
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Haalt de bestandsnaam van het bestand om te verzenden als de <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref> klasse is geïnitialiseerd met een <code> filepath </code> parameter."
  remarks: "Universal Naming Convention (UNC)-paden worden ondersteund door de eigenschap FilePath. Als het bestand zich in de huidige werkmap, wordt geen informatie over het pad moet worden opgegeven.       De standaardwaarde voor de eigenschap FilePath is een lege tekenreeks als de <xref:System.Net.Sockets.SendPacketsElement>klasse niet is geïnitialiseerd met een `filepath` parameter.</xref:System.Net.Sockets.SendPacketsElement>"
  syntax:
    content: public string FilePath { get; }
    return:
      type: System.String
      description: "De bestandsnaam van het bestand om te verzenden als de <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref> klasse is geïnitialiseerd met een <code> filepath </code> parameter."
  overload: System.Net.Sockets.SendPacketsElement.FilePath*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.Offset
  id: Offset
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: Offset
  nameWithType: SendPacketsElement.Offset
  fullName: System.Net.Sockets.SendPacketsElement.Offset
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Hiermee haalt de offset in bytes, vanaf het begin van de gegevensbuffer of het bestand naar de locatie in de buffer of het bestand om te beginnen met het verzenden van de gegevens."
  remarks: "De standaardwaarde voor de eigenschap Offset is nul als de <xref:System.Net.Sockets.SendPacketsElement>klasse niet is geïnitialiseerd met een `offset` parameter.</xref:System.Net.Sockets.SendPacketsElement>"
  syntax:
    content: public int Offset { get; }
    return:
      type: System.Int32
      description: "De verschuiving in bytes, vanaf het begin van de gegevensbuffer of het bestand naar de locatie in de buffer of het bestand om te beginnen met het verzenden van de gegevens."
  overload: System.Net.Sockets.SendPacketsElement.Offset*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement(Byte[])
  nameWithType: SendPacketsElement.SendPacketsElement(Byte[])
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String)
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement(String)
  nameWithType: SendPacketsElement.SendPacketsElement(String)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement(Byte[],Int32,Int32)
  nameWithType: SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement(String,Int32,Int32)
  nameWithType: SendPacketsElement.SendPacketsElement(String,Int32,Int32)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(String,Int32,Int32)
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement(Byte[],Int32,Int32,Boolean)
  nameWithType: SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32,Boolean)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement(String,Int32,Int32,Boolean)
  nameWithType: SendPacketsElement.SendPacketsElement(String,Int32,Int32,Boolean)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(String,Int32,Int32,Boolean)
- uid: System.Net.Sockets.SendPacketsElement.Buffer
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: Buffer
  nameWithType: SendPacketsElement.Buffer
  fullName: System.Net.Sockets.SendPacketsElement.Buffer
- uid: System.Net.Sockets.SendPacketsElement.Count
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: Count
  nameWithType: SendPacketsElement.Count
  fullName: System.Net.Sockets.SendPacketsElement.Count
- uid: System.Net.Sockets.SendPacketsElement.EndOfPacket
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: EndOfPacket
  nameWithType: SendPacketsElement.EndOfPacket
  fullName: System.Net.Sockets.SendPacketsElement.EndOfPacket
- uid: System.Net.Sockets.SendPacketsElement.FilePath
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: FilePath
  nameWithType: SendPacketsElement.FilePath
  fullName: System.Net.Sockets.SendPacketsElement.FilePath
- uid: System.Net.Sockets.SendPacketsElement.Offset
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: Offset
  nameWithType: SendPacketsElement.Offset
  fullName: System.Net.Sockets.SendPacketsElement.Offset
- uid: System.Net.Sockets.SendPacketsElement.#ctor*
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement
  nameWithType: SendPacketsElement.SendPacketsElement
- uid: System.Net.Sockets.SendPacketsElement.Buffer*
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: Buffer
  nameWithType: SendPacketsElement.Buffer
- uid: System.Net.Sockets.SendPacketsElement.Count*
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: Count
  nameWithType: SendPacketsElement.Count
- uid: System.Net.Sockets.SendPacketsElement.EndOfPacket*
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: EndOfPacket
  nameWithType: SendPacketsElement.EndOfPacket
- uid: System.Net.Sockets.SendPacketsElement.FilePath*
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: FilePath
  nameWithType: SendPacketsElement.FilePath
- uid: System.Net.Sockets.SendPacketsElement.Offset*
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: Offset
  nameWithType: SendPacketsElement.Offset
