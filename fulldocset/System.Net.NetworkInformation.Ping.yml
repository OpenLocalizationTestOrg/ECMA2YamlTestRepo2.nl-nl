### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.Ping
  id: Ping
  children:
  - System.Net.NetworkInformation.Ping.#ctor
  - System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  - System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  - System.Net.NetworkInformation.Ping.PingCompleted
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.Send(System.String)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsyncCancel
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  langs:
  - csharp
  name: Ping
  nameWithType: Ping
  fullName: System.Net.NetworkInformation.Ping
  type: Class
  summary: "Kan een toepassing om te bepalen of een externe computer toegankelijk via het netwerk is."
  remarks: "Toepassingen gebruiken de Ping-klasse om te detecteren of een externe computer bereikbaar is.       Netwerktopologie kunt bepalen of Ping is contact kan maken met een externe host. De aanwezigheid en de configuratie van proxy&quot;s, netwerkapparatuur address translation (NAT) of firewalls kunnen voorkomen dat Ping slaagt. Een geslaagde Ping geeft alleen aan dat de externe host kunt worden bereikt op het netwerk. de aanwezigheid van een hoger niveau services (zoals een webserver) op de externe host kan niet worden gegarandeerd.       Deze klasse biedt functionaliteit die vergelijkbaar is met het opdrachtregelprogramma Ping.exe. De <xref:System.Net.NetworkInformation.Ping.Send%2A>en <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methoden een Internet Control Message Protocol (ICMP) echo request-bericht naar een externe computer en wacht op een ICMP-echo-antwoordbericht verzenden vanaf die computer.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Zie voor een gedetailleerde beschrijving van ICMP-berichten RFC 792, beschikbaar op [http://www.ietf.org](http://www.ietf.org/).       De volgende typen worden gebruikt met de Ping-klasse en hieronder in detail worden beschreven.      | **Typenaam**|**beschrijving**|   |-------------------|---------------------|   | <xref:System.Net.NetworkInformation.IPStatus>| Statuscodes die het resultaat van een request-bericht van ICMP echo beschrijven definieert. |   | <xref:System.Net.NetworkInformation.PingOptions>| Hiermee kunt u configureren of de instellingen die hoe vaak het request-pakket (<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>) bepalen, kan worden doorgestuurd ophalen en of het kan gefragmenteerde (<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> ). |   | <xref:System.Net.NetworkInformation.PingReply>| Bevat de resultaten van een echoaanvraag. |   | <xref:System.Net.NetworkInformation.PingException>| Gegenereerd als een onherstelbare fout optreedt. |   | <xref:System.Net.NetworkInformation.PingCompletedEventArgs>| Bevat de gegevens die zijn gekoppeld aan <xref:System.Net.NetworkInformation.Ping.PingCompleted>gebeurtenissen die worden gegenereerd wanneer een <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>-aanroep is voltooid of is geannuleerd. |   | <xref:System.Net.NetworkInformation.PingCompletedEventHandler>| De gemachtigde die voorziet in de callback-methode aangeroepen wanneer een <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>-aanroep is voltooid of geannuleerd. |       De <xref:System.Net.NetworkInformation.Ping.Send%2A>en <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methoden retourneren het antwoord in een <xref:System.Net.NetworkInformation.PingReply>object.</xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.PingCompleted> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> </xref:System.Net.NetworkInformation.PingException> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.PingOptions> </xref:System.Net.NetworkInformation.IPStatus> De <xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>eigenschap retourneert een <xref:System.Net.NetworkInformation.IPStatus>waarde om aan te geven van de uitkomst van de aanvraag.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>       Wanneer u de aanvraag verzendt, moet u de externe computer. U kunt dit doen door op te geven van een host tekenreeks met een IP-adres in de indeling van tekenreeks of een <xref:System.Net.IPAddress>object.</xref:System.Net.IPAddress>       U kunt ook een van de volgende soorten informatie opgeven:-gegevens naar vergezeld gaan van de aanvraag. Geven `buffer` kunt u meer informatie over de hoeveelheid tijd die nodig is voor een pakket van een bepaalde grootte worden getransporteerd van en naar de externe host en de maximale verzendeenheid van het netwerkpad. (Zie de <xref:System.Net.NetworkInformation.Ping.Send%2A>of <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overloads die nemen een `buffer` parameter.)      -Of het ICMP-Echo-pakket onderweg kan worden gefragmenteerd.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> (Zie de eigenschap <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>en de <xref:System.Net.NetworkInformation.Ping.Send%2A>of <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overloads die duren voordat een `options` parameter.)      -Het aantal keren routering knooppunten, zoals routers of gateways, kan het pakket doorsturen voordat deze de doelcomputer heeft bereikt of is verwijderd.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> (Zie <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>en de <xref:System.Net.NetworkInformation.Ping.Send%2A>of <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overloads die nemen een `options` parameter.)      -De tijdslimiet waarbinnen het antwoord moet worden ontvangen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> (Zie de <xref:System.Net.NetworkInformation.Ping.Send%2A>of <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overloads die nemen een `timeout` parameter.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>       De Ping-klasse biedt synchrone en asynchrone methoden voor het verzenden van de aanvraag. Als uw toepassing tijdens het wachten op een antwoord blokkeren moet, gebruikt u de <xref:System.Net.NetworkInformation.Ping.Send%2A>methoden; deze methoden zijn synchrone.</xref:System.Net.NetworkInformation.Ping.Send%2A> Als uw toepassing niet blokkeren moet, gebruikt u de asynchrone <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methoden.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Een aanroep van <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wordt uitgevoerd in een eigen thread die automatisch wordt toegewezen vanuit de threadgroep.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wanneer de asynchrone bewerking is voltooid, wordt de <xref:System.Net.NetworkInformation.Ping.PingCompleted>gebeurtenis.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Toepassingen gebruiken een <xref:System.Net.NetworkInformation.PingCompletedEventHandler>gemachtigde om op te geven van de methode die wordt aangeroepen voor <xref:System.Net.NetworkInformation.Ping.PingCompleted>gebeurtenissen.</xref:System.Net.NetworkInformation.Ping.PingCompleted> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> U moet ook <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegeren aan de gebeurtenis voordat u <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> toevoegen Ontvangt van de gemachtigde-methode een <xref:System.Net.NetworkInformation.PingCompletedEventArgs>object met een <xref:System.Net.NetworkInformation.PingReply>-object dat wordt beschreven wat de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>aanroepen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs>       U kunt hetzelfde exemplaar van de Ping-klasse niet gebruiken voor het genereren van meerdere gelijktijdige ICMP-echoaanvragen. Aanroepen <xref:System.Net.NetworkInformation.Ping.Send%2A>tijdens een <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>aanroep wordt uitgevoerd of aanroepen <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>meerdere keren voordat alle vorige aanroepen voltooide oorzaken een <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> hebben</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>"
  example:
  - "The following code example demonstrates using the Ping class synchronously.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_1.cpp)]  \n  \n The following code example demonstrates using the Ping class asynchronously.  \n  \n [!code-cpp[NCLPingASync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_2.cpp)]\n [!code-cs[NCLPingASync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_2.cs)]"
  syntax:
    content: 'public class Ping : System.ComponentModel.Component'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Net.NetworkInformation.Ping&quot;> </xref> klasse."
  remarks: ''
  example:
  - "The following code example demonstrates creating a <xref:System.Net.NetworkInformation.Ping> instance. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/m-system.net.networkinfo_4_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/m-system.net.networkinfo_4_1.cs)]"
  syntax:
    content: public Ping ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Heft de niet-beheerde bronnen worden gebruikt door de <xref href=&quot;System.Net.NetworkInformation.Ping&quot;> </xref> object en eventueel verwijdert de beheerde bronnen."
  remarks: "Deze methode wordt aangeroepen door het publiek `Dispose()` methode en de <xref:System.ComponentModel.Component.Finalize%2A>methode.</xref:System.ComponentModel.Component.Finalize%2A> De openbare `Dispose()` methode roept de beveiligde methode Dispose met de `disposing` parameter ingesteld op `true`. <xref:System.ComponentModel.Component.Finalize%2A>roept `Dispose` met `disposing` ingesteld op `false`.</xref:System.ComponentModel.Component.Finalize%2A>       Wanneer de `disposing` parameter `true`, deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit <xref:System.Net.NetworkInformation.Ping>verwijzingen.</xref:System.Net.NetworkInformation.Ping> Deze methode roept de `Dispose()` methode van elk object waarnaar wordt verwezen."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> zonder begeleiding resources op alleen-versies."
  overload: System.Net.NetworkInformation.Ping.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  id: OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Geeft de <xref href=&quot;System.Net.NetworkInformation.Ping.PingCompleted&quot;> </xref> gebeurtenis."
  remarks: "Klassen die van overnemen de <xref:System.Net.NetworkInformation.Ping>klasse kunt negeren deze methode voor het uitvoeren van extra taken, zoals logboekregistratie van de gegevens in de `e` parameter.</xref:System.Net.NetworkInformation.Ping>       Een gebeurtenis te verhogen, roept de gebeurtenis-handler via een gemachtigde. Zie voor meer informatie [KROONTJESPEN: verhogen van een gebeurtenis](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       De methode OnPingCompleted kan afgeleide klassen de gebeurtenis te verwerken zonder te koppelen van een gemachtigde. Dit is de voorkeur voor het afhandelen van de gebeurtenis in een afgeleide klasse."
  syntax:
    content: protected void OnPingCompleted (System.Net.NetworkInformation.PingCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.NetworkInformation.PingCompletedEventArgs
      description: "Een <xref href=&quot;System.Net.NetworkInformation.PingCompletedEventArgs&quot;> </xref> object waarin de gebeurtenisgegevens."
  overload: System.Net.NetworkInformation.Ping.OnPingCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  id: PingCompleted
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
  type: Event
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Deze gebeurtenis treedt op wanneer een asynchrone bewerking een Internet Control Message Protocol (ICMP) echo-bericht verzenden en ontvangen van de bijbehorende ICMP echo-antwoordbericht is voltooid of is geannuleerd."
  remarks: "Toepassingen gebruiken de gebeurtenis PingCompleted voor informatie over de voltooiingsstatus en gegevens die worden verzameld door een aanroep naar een van de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methoden.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> De <xref:System.Net.NetworkInformation.PingCompletedEventHandler>gemachtigde biedt de aanroep van back-methode aanroepen wanneer <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Deze gebeurtenis wordt gegeven.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler>"
  example:
  - "The following code example demonstrates specifying a callback method for the PingCompleted event. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/e-system.net.networkinfo_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/e-system.net.networkinfo_1.cs)]"
  syntax:
    content: public event System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted;
    return:
      type: System.Net.NetworkInformation.PingCompletedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  id: Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Probeert een Internet Control Message Protocol (ICMP) echo-bericht verzenden naar de computer met de opgegeven <xref:System.Net.IPAddress>, en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer.</xref:System.Net.IPAddress>"
  remarks: "Deze methode verzendt naar de host die is opgegeven door `address` een 32 <xref:System.Byte>gegevensbuffer met het ICMP-echo-bericht.</xref:System.Byte> De methode wacht vijf seconden op een ICMP-echo-antwoordbericht. Als deze niet een antwoord in die tijd, de methode retourneert en de <xref:System.Net.NetworkInformation.PingReply.Status%2A>eigenschap is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> ontvangt</xref:System.Net.NetworkInformation.PingReply.Status%2A>       Deze overbelasting gebruikt de standaardinstellingen voor pakket fragmentatie en doorsturen van pakketten. Het pakket met het ICMP-echo-bericht kan worden gefragmenteerd onderweg als de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de knooppunten routering tussen de lokale en externe computers. Om te voorkomen dat fragmentatie, gebruikt u een van de <xref:System.Net.NetworkInformation.Ping.Send%2A>methoden waarmee een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>eigenschap `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Wanneer <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>is `true` en de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de routing-knooppunten tussen de lokale en externe computers, mislukt de ICMP-echoaanvraag.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Het pakket of pakketfragmenten (als gefragmenteerd) kunnen worden doorgestuurd door Routering knooppunten 128 keer voordat het wordt verwijderd. U kunt deze instelling wijzigen met een <xref:System.Net.NetworkInformation.Ping.Send%2A>overbelasting waarvoor een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>eigenschap in op de gewenste waarde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Als het pakket niet aan de bestemming komt na het opgegeven aantal keren worden doorgestuurd, wordt het pakket verwijderd en wordt de ICMP-echoaanvraag mislukt. Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#3](~/add/codesnippet/csharp/m-system.net.networkinfo_5_1.cs)]\n [!code-cpp[NCLPingSampler#3](~/add/codesnippet/cpp/m-system.net.networkinfo_5_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Een <xref:System.Net.IPAddress>die aangeeft dat de computer die het doel van het bericht van ICMP echo.</xref:System.Net.IPAddress>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Een <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> object bevat informatie over het antwoordbericht ICMP echo als een is ontvangen of de reden voor het mislukken beschrijft als er geen bericht is ontvangen."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van <xref:System.Net.NetworkInformation.Ping.SendAsync*>wordt uitgevoerd.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> een IPv6-adres en de lokale computer een besturingssysteem ouder dan Windows 2000 wordt uitgevoerd."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Er is een uitzondering opgetreden tijdens het verzenden of ontvangen van de ICMP-berichten. Zie de binnenste uitzondering voor de exacte uitzondering die is gegenereerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is verwijderd."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  id: Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Pogingen om een Internet Control Message Protocol (ICMP) echo-bericht met de opgegeven computer verzenden en ontvangen van een bijbehorende ICMP echo antwoordbericht vanaf die computer."
  remarks: "Deze methode verzendt een 32 <xref:System.Byte>gegevensbuffer met het ICMP-echo-bericht.</xref:System.Byte> De methode wacht vijf seconden op een ICMP-echo-antwoordbericht. Als deze niet een antwoord in die tijd, de methode retourneert en de <xref:System.Net.NetworkInformation.PingReply.Status%2A>eigenschap is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> ontvangt</xref:System.Net.NetworkInformation.PingReply.Status%2A>       Deze overbelasting gebruikt de standaardinstellingen voor pakket fragmentatie en doorsturen van pakketten. Het pakket met het ICMP-echo-bericht kan worden gefragmenteerd onderweg als de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de knooppunten routering tussen de lokale en externe computers. Om te voorkomen dat fragmentatie, gebruikt u een van de <xref:System.Net.NetworkInformation.Ping.Send%2A>methoden waarmee een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>eigenschap `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Wanneer <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>is `true` en de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de routing-knooppunten tussen de lokale en externe computers, mislukt de ICMP-echoaanvraag.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Het pakket of pakketfragmenten (als gefragmenteerd) kunnen worden doorgestuurd door Routering knooppunten 128 keer voordat het wordt verwijderd. U kunt deze instelling wijzigen met een <xref:System.Net.NetworkInformation.Ping.Send%2A>overbelasting waarvoor een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>eigenschap in op de gewenste waarde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Als het pakket niet aan de bestemming komt na het opgegeven aantal keren worden doorgestuurd, wordt het pakket verwijderd en wordt de ICMP-echoaanvraag mislukt. Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#2](~/add/codesnippet/csharp/m-system.net.networkinfo_2_1.cs)]\n [!code-cpp[NCLPingSampler#2](~/add/codesnippet/cpp/m-system.net.networkinfo_2_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Een <xref:System.String>die aangeeft dat de computer die het doel van het bericht van ICMP echo.</xref:System.String> De opgegeven waarde voor deze parameter kan niet een hostnaam of een tekenreeksrepresentatie van een IP-adres."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Een <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> object bevat informatie over het antwoordbericht ICMP echo als is ontvangen, of de oorzaak van het probleem geeft als er geen bericht is ontvangen."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van <xref:System.Net.NetworkInformation.Ping.SendAsync*>wordt uitgevoerd.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> een IPv6-adres en de lokale computer een besturingssysteem ouder dan Windows 2000 wordt uitgevoerd."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Er is een uitzondering opgetreden tijdens het verzenden of ontvangen van de ICMP-berichten. Zie de binnenste uitzondering voor de exacte uitzondering die is gegenereerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is verwijderd."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  id: Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Wil een Internet Control Message Protocol (ICMP) echo-bericht met de opgegeven gegevensbuffer verzenden naar de computer met de opgegeven <xref:System.Net.IPAddress>, en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer.</xref:System.Net.IPAddress> Deze methode kunt u een time-outwaarde voor de bewerking opgeven."
  remarks: "Als het ICMP-echo-antwoordbericht niet binnen de tijd die is opgegeven ontvangen in de `timeout` parameter, is de ICMP-echo mislukt en de <xref:System.Net.NetworkInformation.PingReply.Status%2A>eigenschap is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Bij het opgeven van zeer kleine getallen voor `timeout`, kunt u de Ping-antwoord ontvangen zelfs als `timeout` milliseconden zijn verstreken.       Deze overbelasting gebruikt de standaardinstellingen voor pakket fragmentatie en doorsturen van pakketten. Het pakket met het ICMP-echo-bericht kan worden gefragmenteerd onderweg als de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de knooppunten routering tussen de lokale en externe computers. Om te voorkomen dat fragmentatie, gebruikt u een van de <xref:System.Net.NetworkInformation.Ping.Send%2A>methoden waarmee een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>eigenschap `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Wanneer <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>is `true` en de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de routing-knooppunten tussen de lokale en externe computers, mislukt de ICMP-echoaanvraag.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Het pakket of pakketfragmenten kunnen worden doorgestuurd door Routering knooppunten 128 keer voordat het wordt verwijderd. U kunt deze instelling wijzigen met een <xref:System.Net.NetworkInformation.Ping.Send%2A>overbelasting waarvoor een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>eigenschap in op de gewenste waarde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Als het pakket niet aan de bestemming komt na het opgegeven aantal keren worden doorgestuurd, wordt het pakket verwijderd en wordt de ICMP-echoaanvraag mislukt. Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Een <xref:System.Net.IPAddress>die aangeeft dat de computer die het doel van het bericht van ICMP echo.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Een <xref:System.Int32>waarde waarmee het maximum aantal milliseconden (na het verzenden van het bericht echo) moet worden gewacht op het ICMP-echo-antwoordbericht.</xref:System.Int32>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Een <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> object bevat informatie over het ICMP-echo-antwoordbericht als is ontvangen, of geeft de reden voor het mislukken als er geen bericht is ontvangen."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>is kleiner dan nul."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van <xref:System.Net.NetworkInformation.Ping.SendAsync*>wordt uitgevoerd.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> een IPv6-adres en de lokale computer een besturingssysteem ouder dan Windows 2000 wordt uitgevoerd."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Er is een uitzondering opgetreden tijdens het verzenden of ontvangen van de ICMP-berichten. Zie de binnenste uitzondering voor de exacte uitzondering die is gegenereerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is verwijderd."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  id: Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Pogingen om een Internet Control Message Protocol (ICMP) echo-bericht met de opgegeven computer verzenden en ontvangen van een bijbehorende ICMP echo antwoordbericht vanaf die computer. Deze methode kunt u een time-outwaarde voor de bewerking opgeven."
  remarks: "Als het ICMP-echo-antwoordbericht niet binnen de tijd die is opgegeven ontvangen in de `timeout` parameter, is de ICMP-echo mislukt en de <xref:System.Net.NetworkInformation.PingReply.Status%2A>eigenschap is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Bij het opgeven van zeer kleine getallen voor `timeout`, kunt u de Ping-antwoord ontvangen zelfs als `timeout` milliseconden zijn verstreken.       Deze overbelasting gebruikt de standaardinstellingen voor pakket fragmentatie en doorsturen van pakketten. Het pakket met het ICMP-echo-bericht kan worden gefragmenteerd onderweg als de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de knooppunten routering tussen de lokale en externe computers. Om te voorkomen dat fragmentatie, gebruikt u een van de <xref:System.Net.NetworkInformation.Ping.Send%2A>methoden waarmee een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>eigenschap `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Wanneer <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>is `true` en de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de routing-knooppunten tussen de lokale en externe computers, mislukt de ICMP-echoaanvraag.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Het pakket of pakketfragmenten (als gefragmenteerd) kunnen worden doorgestuurd door Routering knooppunten 128 keer voordat het wordt verwijderd. U kunt deze instelling wijzigen met een <xref:System.Net.NetworkInformation.Ping.Send%2A>overbelasting waarvoor een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>eigenschap in op de gewenste waarde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Als het pakket niet aan de bestemming komt na het opgegeven aantal keren worden doorgestuurd, wordt het pakket verwijderd en wordt de ICMP-echoaanvraag mislukt. Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Een <xref:System.String>die aangeeft dat de computer die het doel van het bericht van ICMP echo.</xref:System.String> De opgegeven waarde voor deze parameter kan niet een hostnaam of een tekenreeksrepresentatie van een IP-adres."
    - id: timeout
      type: System.Int32
      description: "Een <xref:System.Int32>waarde waarmee het maximum aantal milliseconden (na het verzenden van het bericht echo) moet worden gewacht op het ICMP-echo-antwoordbericht.</xref:System.Int32>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Een <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> object bevat informatie over het ICMP-echo-antwoordbericht als is ontvangen, of geeft de reden voor het mislukken als er geen bericht is ontvangen."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>is kleiner dan nul."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van <xref:System.Net.NetworkInformation.Ping.SendAsync*>wordt uitgevoerd.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Er is een uitzondering opgetreden tijdens het verzenden of ontvangen van de ICMP-berichten. Zie de binnenste uitzondering voor de exacte uitzondering die is gegenereerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is verwijderd."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Wil een Internet Control Message Protocol (ICMP) echo-bericht met de opgegeven gegevensbuffer verzenden naar de computer met de opgegeven <xref:System.Net.IPAddress>, en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer.</xref:System.Net.IPAddress> Deze overbelasting kunt u een time-outwaarde voor de bewerking opgeven."
  remarks: "Als het ICMP-echo-antwoordbericht niet binnen de tijd die is opgegeven ontvangen in de `timeout` parameter, is de ICMP-echo mislukt en de <xref:System.Net.NetworkInformation.PingReply.Status%2A>eigenschap is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Bij het opgeven van zeer kleine getallen voor `timeout`, kunt u de Ping-antwoord ontvangen zelfs als `timeout` milliseconden zijn verstreken.       Deze overbelasting gebruikt de standaardinstellingen voor pakket fragmentatie en doorsturen van pakketten. Het pakket met het ICMP-echo-bericht kan worden gefragmenteerd onderweg als de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de knooppunten routering tussen de lokale en externe computers. Om te voorkomen dat fragmentatie, gebruikt u een van de <xref:System.Net.NetworkInformation.Ping.Send%2A>methoden waarmee een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>eigenschap `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Wanneer <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>is `true` en de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de routing-knooppunten tussen de lokale en externe computers, mislukt de ICMP-echoaanvraag.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Het pakket of pakketfragmenten kunnen worden doorgestuurd door Routering knooppunten 128 keer voordat het wordt verwijderd. U kunt deze instelling wijzigen met een <xref:System.Net.NetworkInformation.Ping.Send%2A>overbelasting waarvoor een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>eigenschap in op de gewenste waarde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Als het pakket niet aan de bestemming komt na het opgegeven aantal keren worden doorgestuurd, wordt het pakket verwijderd en wordt de ICMP-echoaanvraag mislukt. Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#6](~/add/codesnippet/csharp/b44ef8f6-ad7e-49c2-8af4-_1.cs)]\n [!code-cpp[NCLPingSampler#6](~/add/codesnippet/cpp/b44ef8f6-ad7e-49c2-8af4-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Een <xref:System.Net.IPAddress>die aangeeft dat de computer die het doel van het bericht van ICMP echo.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Een <xref:System.Int32>waarde waarmee het maximum aantal milliseconden (na het verzenden van het bericht echo) moet worden gewacht op het ICMP-echo-antwoordbericht.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Een <xref:System.Byte>matrix waarin gegevens worden verzonden met het ICMP-echo-bericht en in het ICMP-echo-antwoordbericht geretourneerd.</xref:System.Byte> De matrix kan niet meer dan 65.500 bytes bevatten."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Een <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> object bevat informatie over het antwoordbericht ICMP echo als is ontvangen, of de oorzaak van het probleem geeft als er geen bericht is ontvangen. Retourneert de methode <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> als het pakket de maximale MTU (Transmission Unit overschrijdt)."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De grootte van <code> buffer </code> is groter dan 65500 bytes."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - of - <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, of de <code>buffer</code> is groter dan 65500 bytes."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>is kleiner dan nul."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van <xref:System.Net.NetworkInformation.Ping.SendAsync*>wordt uitgevoerd.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> een IPv6-adres en de lokale computer een besturingssysteem ouder dan Windows 2000 wordt uitgevoerd."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Er is een uitzondering opgetreden tijdens het verzenden of ontvangen van de ICMP-berichten. Zie de binnenste uitzondering voor de exacte uitzondering die is gegenereerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is verwijderd."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  id: Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Pogingen om een Internet Control Message Protocol (ICMP) echo-bericht met de buffer die is opgegeven met de opgegeven computer verzenden en ontvangen van een bijbehorende ICMP echo antwoordbericht vanaf die computer. Deze overbelasting kunt u een time-outwaarde voor de bewerking opgeven."
  remarks: "Als het ICMP-echo-antwoordbericht niet binnen de tijd die is opgegeven ontvangen in de `timeout` parameter, is de ICMP-echo mislukt en de <xref:System.Net.NetworkInformation.PingReply.Status%2A>eigenschap is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Bij het opgeven van zeer kleine getallen voor `timeout`, kunt u de Ping-antwoord ontvangen zelfs als `timeout` milliseconden zijn verstreken.       Deze overbelasting gebruikt de standaardinstellingen voor pakket fragmentatie en doorsturen van pakketten. Het pakket met het ICMP-echo-bericht kan worden gefragmenteerd onderweg als de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de knooppunten routering tussen de lokale en externe computers. Om te voorkomen dat fragmentatie, gebruikt u een van de <xref:System.Net.NetworkInformation.Ping.Send%2A>methoden waarmee een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>eigenschap `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Wanneer <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>is `true` en de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de routing-knooppunten tussen de lokale en externe computers, mislukt de ICMP-echoaanvraag.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Het pakket of pakketfragmenten kunnen worden doorgestuurd door Routering knooppunten 128 keer voordat het wordt verwijderd. U kunt deze instelling wijzigen met een <xref:System.Net.NetworkInformation.Ping.Send%2A>overbelasting waarvoor een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>eigenschap in op de gewenste waarde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Als het pakket niet aan de bestemming komt na het opgegeven aantal keren worden doorgestuurd, wordt het pakket verwijderd en wordt de ICMP-echoaanvraag mislukt. Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Een <xref:System.String>die aangeeft dat de computer die het doel van het bericht van ICMP echo.</xref:System.String> De opgegeven waarde voor deze parameter kan niet een hostnaam of een tekenreeksrepresentatie van een IP-adres."
    - id: timeout
      type: System.Int32
      description: "Een <xref:System.Int32>waarde waarmee het maximum aantal milliseconden (na het verzenden van het bericht echo) moet worden gewacht op het ICMP-echo-antwoordbericht.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Een <xref:System.Byte>matrix waarin gegevens worden verzonden met het ICMP-echo-bericht en in het ICMP-echo-antwoordbericht geretourneerd.</xref:System.Byte> De matrix kan niet meer dan 65.500 bytes bevatten."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Een <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> object bevat informatie over het ICMP-echo-antwoordbericht als is ontvangen, of geeft de reden voor het mislukken als er geen bericht is ontvangen."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De grootte van <code> buffer </code> is groter dan 65500 bytes."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;).       - of - <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, of de <code>buffer</code> is groter dan 65500 bytes."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>is kleiner dan nul."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van <xref:System.Net.NetworkInformation.Ping.SendAsync*>wordt uitgevoerd.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Er is een uitzondering opgetreden tijdens het verzenden of ontvangen van de ICMP-berichten. Zie de binnenste uitzondering voor de exacte uitzondering die is gegenereerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is verwijderd."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Wil een Internet Control Message Protocol (ICMP) echo-bericht met de opgegeven gegevensbuffer verzenden naar de computer met de opgegeven <xref:System.Net.IPAddress>en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer.</xref:System.Net.IPAddress> Deze overbelasting kunt u een time-outwaarde voor de werking en besturingselement fragmentatie en Time-to-Live waarden opgeven voor het pakket ICMP echo-bericht."
  remarks: "Als het ICMP-echo-antwoordbericht niet binnen de tijd die is opgegeven ontvangen door de `timeout` parameter, is de ICMP-echo mislukt en de <xref:System.Net.NetworkInformation.PingReply.Status%2A>eigenschap is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Bij het opgeven van zeer kleine getallen voor `timeout`, kunt u de Ping-antwoord ontvangen zelfs als `timeout` milliseconden zijn verstreken.       Als de <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>eigenschap is `true` en de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de routing-knooppunten tussen de lokale en externe computers, mislukt de ICMP-echoaanvraag.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Gebruik de <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>eigenschap om het maximum aantal keren dat het ICMP-echo-bericht kan worden doorgestuurd voordat de bestemming bereikt.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Als het pakket niet aan de bestemming komt na het opgegeven aantal keren worden doorgestuurd, wordt het pakket verwijderd en wordt de ICMP-echoaanvraag mislukt. Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#5](~/add/codesnippet/csharp/81445dc1-adbd-44fc-b79c-_1.cs)]\n [!code-cpp[NCLPingSampler#5](~/add/codesnippet/cpp/81445dc1-adbd-44fc-b79c-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Een <xref:System.Net.IPAddress>die aangeeft dat de computer die het doel van het bericht van ICMP echo.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Een <xref:System.Int32>waarde waarmee het maximum aantal milliseconden (na het verzenden van het bericht echo) moet worden gewacht op het ICMP-echo-antwoordbericht.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Een <xref:System.Byte>matrix waarin gegevens worden verzonden met het ICMP-echo-bericht en in het ICMP-echo-antwoordbericht geretourneerd.</xref:System.Byte> De matrix kan niet meer dan 65.500 bytes bevatten."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Een <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> object dat wordt gebruikt om te bepalen fragmentatie en Time-to-Live-waarden voor het pakket ICMP echo-bericht."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Een <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> object bevat informatie over het antwoordbericht ICMP echo als is ontvangen, of de oorzaak van het probleem geeft als er geen bericht is ontvangen. Retourneert de methode <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> als het pakket de maximale MTU (Transmission Unit overschrijdt)."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De grootte van <code> buffer </code> is groter dan 65500 bytes."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - of - <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, of de <code>buffer</code> is groter dan 65500 bytes."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>is kleiner dan nul."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van <xref:System.Net.NetworkInformation.Ping.SendAsync*>wordt uitgevoerd.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> een IPv6-adres en de lokale computer een besturingssysteem ouder dan Windows 2000 wordt uitgevoerd."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Er is een uitzondering opgetreden tijdens het verzenden of ontvangen van de ICMP-berichten. Zie de binnenste uitzondering voor de exacte uitzondering die is gegenereerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is verwijderd."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Pogingen om een Internet Control Message Protocol (ICMP) echo-bericht met de buffer die is opgegeven met de opgegeven computer verzenden en ontvangen van een bijbehorende ICMP echo antwoordbericht vanaf die computer. Deze overbelasting kunt u een time-outwaarde voor de werking en besturingselement fragmentatie en Time-to-Live waarden opgeven voor het ICMP-pakket."
  remarks: "Als het ICMP-echo-antwoordbericht niet binnen de tijd die is opgegeven ontvangen door de `timeout` parameter, is de ICMP-echo mislukt en de <xref:System.Net.NetworkInformation.PingReply.Status%2A>eigenschap is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Bij het opgeven van zeer kleine getallen voor `timeout`, kunt u de Ping-antwoord ontvangen zelfs als `timeout` milliseconden zijn verstreken.       Als de <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>eigenschap is `true` en de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de routing-knooppunten tussen de lokale en externe computers, mislukt de ICMP-echoaanvraag.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Gebruik de <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>eigenschap om het maximum aantal keren dat het ICMP-echo-bericht kan worden doorgestuurd voordat de bestemming bereikt.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Als het pakket niet aan de bestemming komt na het opgegeven aantal keren worden doorgestuurd, wordt het pakket verwijderd en wordt de ICMP-echoaanvraag mislukt. Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#4](~/add/codesnippet/csharp/ce144ae4-a1a7-44f3-ac8a-_1.cs)]\n [!code-cpp[NCLPingSampler#4](~/add/codesnippet/cpp/ce144ae4-a1a7-44f3-ac8a-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Een <xref:System.String>die aangeeft dat de computer die het doel van het bericht van ICMP echo.</xref:System.String> De opgegeven waarde voor deze parameter kan niet een hostnaam of een tekenreeksrepresentatie van een IP-adres."
    - id: timeout
      type: System.Int32
      description: "Een <xref:System.Int32>waarde waarmee het maximum aantal milliseconden (na het verzenden van het bericht echo) moet worden gewacht op het ICMP-echo-antwoordbericht.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Een <xref:System.Byte>matrix waarin gegevens worden verzonden met het ICMP-echo-bericht en in het ICMP-echo-antwoordbericht geretourneerd.</xref:System.Byte> De matrix kan niet meer dan 65.500 bytes bevatten."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Een <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> object dat wordt gebruikt om te bepalen fragmentatie en Time-to-Live-waarden voor het pakket ICMP echo-bericht."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Een <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> object bevat informatie over het ICMP-echo-antwoordbericht als is ontvangen, of geeft de reden voor het mislukken als er geen bericht is ontvangen."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De grootte van <code> buffer </code> is groter dan 65500 bytes."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of tekenreekslengte van nul is.       - of - <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, of de <code>buffer</code> is groter dan 65500 bytes."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>is kleiner dan nul."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van <xref:System.Net.NetworkInformation.Ping.SendAsync*>wordt uitgevoerd.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> een IPv6-adres en de lokale computer een besturingssysteem ouder dan Windows 2000 wordt uitgevoerd."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Er is een uitzondering opgetreden tijdens het verzenden of ontvangen van de ICMP-berichten. Zie de binnenste uitzondering voor de exacte uitzondering die is gegenereerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is verwijderd."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynchroon probeert een Internet Control Message Protocol (ICMP) echo-bericht verzenden naar de computer met de opgegeven <xref:System.Net.IPAddress>, en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer.</xref:System.Net.IPAddress>"
  remarks: "De <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methode verzendt het bericht echo asynchroon en wanneer de bewerking is voltooid (geslaagd of mislukt), retourneert u de status voor uw toepassing.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Roep de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methode als uw toepassing moet niet blokkeert.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Elke aanroep van deze methode wordt uitgevoerd in een afzonderlijke thread die automatisch wordt toegewezen vanuit de thread-groep. Wanneer de asynchrone bewerking is voltooid, wordt de <xref:System.Net.NetworkInformation.Ping.PingCompleted>gebeurtenis.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Om op te geven van de methode die wordt aangeroepen wanneer <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wordt gegeven van de gebeurtenis, moet u een <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegeren aan de gebeurtenis voordat u <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> toevoegen</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ontvangt van de gemachtigde-methode een <xref:System.Net.NetworkInformation.PingCompletedEventArgs>object met een <xref:System.Net.NetworkInformation.PingReply>-object dat wordt beschreven wat de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>aanroepen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> De <xref:System.Net.NetworkInformation.PingCompletedEventArgs>object neemt de <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>eigenschap.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Deze eigenschap bevat de `userToken` object doorgegeven aan de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>aanroepen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > Als uw toepassing tijdens het wachten op een antwoord blokkeren moet, gebruikt u een van de <xref:System.Net.NetworkInformation.Ping.Send%2A>methoden; deze methoden zijn synchrone.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Deze methode verzendt een 32 <xref:System.Byte>gegevensbuffer met het ICMP-echo-bericht.</xref:System.Byte> De methode wacht vijf seconden op een ICMP-echo-antwoordbericht. Als deze niet een antwoord in die tijd, de methode retourneert en de <xref:System.Net.NetworkInformation.PingReply.Status%2A>eigenschap is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> ontvangt</xref:System.Net.NetworkInformation.PingReply.Status%2A>       Deze overbelasting gebruikt de standaardinstellingen voor pakket fragmentatie en doorsturen van pakketten. Het pakket met het ICMP-echo-bericht kan worden gefragmenteerd onderweg als de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de knooppunten routering tussen de lokale en externe computers. Om te voorkomen dat fragmentatie, gebruikt u een van de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methoden waarmee een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>eigenschap `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wanneer <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>is `true` en de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de routing-knooppunten tussen de lokale en externe computers, mislukt de ICMP-echoaanvraag.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Het pakket of pakketfragmenten kunnen worden doorgestuurd door Routering knooppunten 128 keer voordat het wordt verwijderd. U kunt deze instelling wijzigen met een <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overbelasting waarvoor een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>eigenschap in op de gewenste waarde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Als het pakket niet aan de bestemming komt na het opgegeven aantal keren worden doorgestuurd, wordt het pakket verwijderd en wordt de ICMP-echoaanvraag mislukt. Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Een <xref:System.Net.IPAddress>die aangeeft dat de computer die het doel van het bericht van ICMP echo.</xref:System.Net.IPAddress>"
    - id: userToken
      type: System.Object
      description: "Een object dat wordt doorgegeven aan de methode die wordt aangeroepen wanneer de asynchrone bewerking is voltooid."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van de <xref:System.Net.NetworkInformation.Ping.SendAsync*>methode wordt uitgevoerd.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> een IPv6-adres en de lokale computer een besturingssysteem ouder dan Windows 2000 wordt uitgevoerd."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Er is een uitzondering opgetreden tijdens het verzenden of ontvangen van de ICMP-berichten. Zie de binnenste uitzondering voor de exacte uitzondering die is gegenereerd."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> is geen geldig IP-adres."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is verwijderd."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  id: SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynchroon probeert te verzenden van een Internet Control Message Protocol (ICMP) echo-bericht met de opgegeven computer en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer."
  remarks: "De methode SendAsync verzendt het bericht echo asynchroon en wanneer de bewerking is voltooid (geslaagd of mislukt), retourneert de status voor uw toepassing. Roep de methode SendAsync wanneer uw toepassing moet niet blokkeren. Elke aanroep van deze methode wordt uitgevoerd in een afzonderlijke thread die automatisch wordt toegewezen vanuit de thread-groep. Wanneer de asynchrone bewerking is voltooid, wordt de <xref:System.Net.NetworkInformation.Ping.PingCompleted>gebeurtenis.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Om op te geven van de methode die wordt aangeroepen wanneer <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wordt gegeven van de gebeurtenis, moet u een <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegeren aan de gebeurtenis voordat u <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> toevoegen</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ontvangt van de gemachtigde-methode een <xref:System.Net.NetworkInformation.PingCompletedEventArgs>object met een <xref:System.Net.NetworkInformation.PingReply>-object dat wordt beschreven wat de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>aanroepen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> De <xref:System.Net.NetworkInformation.PingCompletedEventArgs>object neemt de <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>eigenschap.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Deze eigenschap bevat de `userToken` object doorgegeven aan de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>aanroepen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > Als uw toepassing tijdens het wachten op een antwoord blokkeren moet, gebruikt u de <xref:System.Net.NetworkInformation.Ping.Send%2A>methoden; deze methoden zijn synchrone.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Deze methode verzendt een 32 <xref:System.Byte>gegevensbuffer met het ICMP-echo-bericht.</xref:System.Byte> De methode wacht vijf seconden op een ICMP-echo-antwoordbericht. Als het geen antwoord op dat ontvangen heeft wanneer de methode retourneert en de <xref:System.Net.NetworkInformation.PingReply.Status%2A>eigenschap is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Deze overbelasting gebruikt de standaardinstellingen voor pakket fragmentatie en doorsturen van pakketten. Het pakket met het ICMP-echo-bericht kan worden gefragmenteerd onderweg als de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de knooppunten routering tussen de lokale en externe computers. Om te voorkomen dat fragmentatie, gebruikt u een van de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methoden waarmee een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>eigenschap `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wanneer <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>is `true` en de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de routing-knooppunten tussen de lokale en externe computers, mislukt de ICMP-echoaanvraag.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Het pakket of pakketfragmenten kunnen worden doorgestuurd door Routering knooppunten 128 keer voordat het wordt verwijderd. U kunt deze instelling wijzigen met een <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overbelasting waarvoor een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>eigenschap in op de gewenste waarde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Als het pakket niet aan de bestemming komt na het opgegeven aantal keren worden doorgestuurd, wordt het pakket verwijderd en wordt de ICMP-echoaanvraag mislukt. Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Een <xref:System.String>die aangeeft dat de computer die het doel van het bericht van ICMP echo.</xref:System.String> De opgegeven waarde voor deze parameter kan niet een hostnaam of een tekenreeksrepresentatie van een IP-adres."
    - id: userToken
      type: System.Object
      description: "Een object dat wordt doorgegeven aan de methode die wordt aangeroepen wanneer de asynchrone bewerking is voltooid."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van methode SendAsync wordt uitgevoerd."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> een IPv6-adres en de lokale computer een besturingssysteem ouder dan Windows 2000 wordt uitgevoerd."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Er is een uitzondering opgetreden tijdens het verzenden of ontvangen van de ICMP-berichten. Zie de binnenste uitzondering voor de exacte uitzondering die is gegenereerd."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>kan niet worden omgezet naar een geldig IP-adres."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is verwijderd."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynchroon probeert een Internet Control Message Protocol (ICMP) echo-bericht verzenden naar de computer met de opgegeven <xref:System.Net.IPAddress>, en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer.</xref:System.Net.IPAddress> Deze overbelasting kunt u een time-outwaarde voor de bewerking opgeven."
  remarks: "De <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methode verzendt het bericht Echo asynchroon en wanneer de bewerking is voltooid (geslaagd of mislukt), retourneert u de status voor uw toepassing.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Roep de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methode als uw toepassing moet niet blokkeert.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Elke aanroep wordt uitgevoerd in een afzonderlijke thread die automatisch wordt toegewezen vanuit de thread-groep. Wanneer de asynchrone bewerking is voltooid, wordt de <xref:System.Net.NetworkInformation.Ping.PingCompleted>gebeurtenis.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Toepassingen gebruiken een <xref:System.Net.NetworkInformation.PingCompletedEventHandler>gemachtigde om op te geven van de methode die wordt aangeroepen wanneer <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wordt gegeven van de gebeurtenis.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> U moet ook <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegeren aan de gebeurtenis voordat u <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> toevoegen Ontvangt van de gemachtigde-methode een <xref:System.Net.NetworkInformation.PingCompletedEventArgs>object met een <xref:System.Net.NetworkInformation.PingReply>-object dat wordt beschreven wat de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>aanroepen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> De <xref:System.Net.NetworkInformation.PingCompletedEventArgs>object neemt de <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>eigenschap.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Deze eigenschap bevat de `userToken` object doorgegeven aan de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>aanroepen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Als uw toepassing tijdens het wachten op een antwoord blokkeren moet, gebruikt u de <xref:System.Net.NetworkInformation.Ping.Send%2A>methoden; deze methoden zijn synchrone.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Als het ICMP-echo-antwoordbericht niet binnen de tijd die is opgegeven ontvangen door de `timeout` parameter, is de ICMP-echo mislukt en de <xref:System.Net.NetworkInformation.PingReply.Status%2A>eigenschap is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Bij het opgeven van zeer kleine getallen voor `timeout`, kunt u de Ping-antwoord ontvangen zelfs als `timeout` milliseconden zijn verstreken.       Deze overbelasting gebruikt de standaardinstellingen voor pakket fragmentatie en doorsturen van pakketten. Het pakket met het ICMP-echo-bericht kan worden gefragmenteerd onderweg als de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de knooppunten routering tussen de lokale en externe computers. Om te voorkomen dat fragmentatie, gebruikt u een van de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methoden waarmee een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>eigenschap `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wanneer <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>is `true` en de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de routing-knooppunten tussen de lokale en externe computers, mislukt de ICMP-echoaanvraag.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Het pakket of pakketfragmenten (als gefragmenteerd) kunnen worden doorgestuurd door Routering knooppunten 128 keer voordat het wordt verwijderd. U kunt deze instelling wijzigen met een <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overbelasting waarvoor een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>eigenschap in op de gewenste waarde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Als het pakket niet aan de bestemming komt na het opgegeven aantal keren worden doorgestuurd, wordt het pakket verwijderd en wordt de ICMP-echoaanvraag mislukt. Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Een <xref:System.Net.IPAddress>die aangeeft dat de computer die het doel van het bericht van ICMP echo.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Een <xref:System.Int32>waarde waarmee het maximum aantal milliseconden (na het verzenden van het bericht echo) moet worden gewacht op het ICMP-echo-antwoordbericht.</xref:System.Int32>"
    - id: userToken
      type: System.Object
      description: "Een object dat wordt doorgegeven aan de methode die wordt aangeroepen wanneer de asynchrone bewerking is voltooid."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>is kleiner dan nul."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van <xref:System.Net.NetworkInformation.Ping.SendAsync*>methode wordt uitgevoerd.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> een IPv6-adres en de lokale computer een besturingssysteem ouder dan Windows 2000 wordt uitgevoerd."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Er is een uitzondering opgetreden tijdens het verzenden of ontvangen van de ICMP-berichten. Zie de binnenste uitzondering voor de exacte uitzondering die is gegenereerd."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> is geen geldig IP-adres."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is verwijderd."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  id: SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynchroon probeert te verzenden van een Internet Control Message Protocol (ICMP) echo-bericht met de opgegeven computer en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer. Deze overbelasting kunt u een time-outwaarde voor de bewerking opgeven."
  remarks: "De <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methode verzendt het bericht Echo asynchroon en wanneer de bewerking is voltooid (geslaagd of mislukt), retourneert u de status voor uw toepassing.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Roep de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methode als uw toepassing moet niet blokkeert.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Elke aanroep wordt uitgevoerd in een afzonderlijke thread die automatisch wordt toegewezen vanuit de thread-groep. Wanneer de asynchrone bewerking is voltooid, wordt de <xref:System.Net.NetworkInformation.Ping.PingCompleted>gebeurtenis.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Toepassingen gebruiken een <xref:System.Net.NetworkInformation.PingCompletedEventHandler>gemachtigde om op te geven van de methode die wordt aangeroepen wanneer <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wordt gegeven van de gebeurtenis.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> U moet ook <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegeren aan de gebeurtenis voordat u <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> toevoegen Ontvangt van de gemachtigde-methode een <xref:System.Net.NetworkInformation.PingCompletedEventArgs>object met een <xref:System.Net.NetworkInformation.PingReply>-object dat wordt beschreven wat de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>aanroepen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> De <xref:System.Net.NetworkInformation.PingCompletedEventArgs>object neemt de <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>eigenschap.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Deze eigenschap bevat de `userToken` object doorgegeven aan de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>aanroepen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Als uw toepassing tijdens het wachten op een antwoord blokkeren moet, gebruikt u de <xref:System.Net.NetworkInformation.Ping.Send%2A>methoden; deze methoden zijn synchrone.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Als het ICMP-echo-antwoordbericht niet binnen de tijd die is opgegeven ontvangen door de `timeout` parameter, is de ICMP-echo mislukt en de <xref:System.Net.NetworkInformation.PingReply.Status%2A>eigenschap is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Bij het opgeven van zeer kleine getallen voor `timeout`, kunt u de Ping-antwoord ontvangen zelfs als `timeout` milliseconden zijn verstreken.       Deze overbelasting gebruikt de standaardinstellingen voor pakket fragmentatie en doorsturen van pakketten. Het pakket met het ICMP-echo-bericht kan worden gefragmenteerd onderweg als de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de knooppunten routering tussen de lokale en externe computers. Om te voorkomen dat fragmentatie, gebruikt u een van de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methoden waarmee een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>eigenschap `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wanneer <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>is `true` en de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de routing-knooppunten tussen de lokale en externe computers, mislukt de ICMP-echoaanvraag.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Het pakket of pakketfragmenten (als gefragmenteerd) kunnen worden doorgestuurd door Routering knooppunten 128 keer voordat het wordt verwijderd. U kunt deze instelling wijzigen met een <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overbelasting waarvoor een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>eigenschap in op de gewenste waarde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Als het pakket niet aan de bestemming komt na het opgegeven aantal keren worden doorgestuurd, wordt het pakket verwijderd en wordt de ICMP-echoaanvraag mislukt. Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Een <xref:System.String>die aangeeft dat de computer die het doel van het bericht van ICMP echo.</xref:System.String> De opgegeven waarde voor deze parameter kan niet een hostnaam of een tekenreeksrepresentatie van een IP-adres."
    - id: timeout
      type: System.Int32
      description: "Een <xref:System.Int32>waarde waarmee het maximum aantal milliseconden (na het verzenden van het bericht echo) moet worden gewacht op het ICMP-echo-antwoordbericht.</xref:System.Int32>"
    - id: userToken
      type: System.Object
      description: "Een object dat wordt doorgegeven aan de methode die wordt aangeroepen wanneer de asynchrone bewerking is voltooid."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>is kleiner dan nul."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van <xref:System.Net.NetworkInformation.Ping.SendAsync*>wordt uitgevoerd.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>een IPv6-adres en de lokale computer een besturingssysteem ouder dan Windows 2000 wordt uitgevoerd."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Er is een uitzondering opgetreden tijdens het verzenden of ontvangen van de ICMP-berichten. Zie de binnenste uitzondering voor de exacte uitzondering die is gegenereerd."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>kan niet worden omgezet naar een geldig IP-adres."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is verwijderd."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynchroon probeert een Internet Control Message Protocol (ICMP) echo-bericht met de opgegeven buffer verzenden naar de computer met de opgegeven <xref:System.Net.IPAddress>, en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer.</xref:System.Net.IPAddress> Deze overbelasting kunt u een time-outwaarde voor de bewerking opgeven."
  remarks: "Deze methode verzendt het bericht echo asynchroon en wanneer de bewerking is voltooid (geslaagd of mislukt), retourneert de status voor uw toepassing. Roep de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methode als uw toepassing moet niet blokkeert.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Elke aanroep wordt uitgevoerd in een afzonderlijke thread die automatisch wordt toegewezen vanuit de thread-groep. Wanneer de asynchrone bewerking is voltooid, wordt de <xref:System.Net.NetworkInformation.Ping.PingCompleted>gebeurtenis.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Om op te geven van de methode die wordt aangeroepen wanneer <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wordt gegeven van de gebeurtenis, moet u een <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegeren aan de gebeurtenis voordat u <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> toevoegen</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ontvangt van de gemachtigde-methode een <xref:System.Net.NetworkInformation.PingCompletedEventArgs>object met een <xref:System.Net.NetworkInformation.PingReply>-object dat wordt beschreven wat de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>aanroepen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> De <xref:System.Net.NetworkInformation.PingCompletedEventArgs>object neemt de <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>eigenschap.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Deze eigenschap bevat de `userToken` object doorgegeven aan de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>aanroepen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > Als uw toepassing wordt geblokkeerd tijdens het wachten op een antwoord, gebruikt u de <xref:System.Net.NetworkInformation.Ping.Send%2A>methoden; deze methoden zijn synchrone.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Als het ICMP-echo-antwoordbericht niet binnen de tijd die is opgegeven ontvangen door de `timeout` parameter, is de ICMP-echo mislukt en de <xref:System.Net.NetworkInformation.PingReply.Status%2A>eigenschap is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Bij het opgeven van zeer kleine getallen voor `timeout`, kunt u de Ping-antwoord ontvangen zelfs als `timeout` milliseconden zijn verstreken.       Deze overbelasting gebruikt de standaardinstellingen voor pakket fragmentatie en doorsturen van pakketten. Het pakket met het ICMP-echo-bericht kan worden gefragmenteerd onderweg als de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de knooppunten routering tussen de lokale en externe computers. Om te voorkomen dat fragmentatie, gebruikt u een van de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methoden waarmee een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>eigenschap `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wanneer <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>is `true` en de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de routing-knooppunten tussen de lokale en externe computers, mislukt de ICMP-echoaanvraag.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Het pakket of pakketfragmenten (als gefragmenteerd) kunnen worden doorgestuurd door Routering knooppunten 128 keer voordat het wordt verwijderd. U kunt deze instelling wijzigen met een <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overbelasting waarvoor een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>eigenschap in op de gewenste waarde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Als het pakket niet aan de bestemming komt na het opgegeven aantal keren worden doorgestuurd, wordt het pakket verwijderd en wordt de ICMP-echoaanvraag mislukt. Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Een <xref:System.Net.IPAddress>die aangeeft dat de computer die het doel van het bericht van ICMP echo.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Een <xref:System.Int32>waarde waarmee het maximum aantal milliseconden (na het verzenden van het bericht echo) moet worden gewacht op het ICMP-echo-antwoordbericht.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Een <xref:System.Byte>matrix waarin gegevens worden verzonden met het ICMP-echo-bericht en in het ICMP-echo-antwoordbericht geretourneerd.</xref:System.Byte> De matrix kan niet meer dan 65.500 bytes bevatten."
    - id: userToken
      type: System.Object
      description: "Een object dat wordt doorgegeven aan de methode die wordt aangeroepen wanneer de asynchrone bewerking is voltooid."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>is kleiner dan nul."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van <xref:System.Net.NetworkInformation.Ping.SendAsync*>wordt uitgevoerd.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> een IPv6-adres en de lokale computer een besturingssysteem ouder dan Windows 2000 wordt uitgevoerd."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Er is een uitzondering opgetreden tijdens het verzenden of ontvangen van de ICMP-berichten. Zie de binnenste uitzondering voor de exacte uitzondering die is gegenereerd."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> is geen geldig IP-adres."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is verwijderd."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De grootte van <code> buffer </code> is groter dan 65500 bytes."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynchroon probeert te verzenden van een Internet Control Message Protocol (ICMP) echo-bericht met de opgegeven buffer met de opgegeven computer en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer. Deze overbelasting kunt u een time-outwaarde voor de bewerking opgeven."
  remarks: "De <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methode verzendt het bericht Echo asynchroon en wanneer de bewerking is voltooid (geslaagd of mislukt), retourneert u de status voor uw toepassing.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Roep de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methode als uw toepassing moet niet blokkeert.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Elke aanroep wordt uitgevoerd in een afzonderlijke thread die automatisch wordt toegewezen vanuit de thread-groep. Wanneer de asynchrone bewerking is voltooid, wordt de <xref:System.Net.NetworkInformation.Ping.PingCompleted>gebeurtenis.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Toepassingen gebruiken een <xref:System.Net.NetworkInformation.PingCompletedEventHandler>gemachtigde om op te geven van de methode die wordt aangeroepen wanneer <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wordt gegeven van de gebeurtenis.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> U moet ook <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegeren aan de gebeurtenis voordat u <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> toevoegen De gemachtigde methode ontvangt een <xref:System.Net.NetworkInformation.PingCompletedEventArgs>object bevat een <xref:System.Net.NetworkInformation.PingReply>-object dat wordt beschreven wat de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>aanroepen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> De <xref:System.Net.NetworkInformation.PingCompletedEventArgs>object neemt de <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>eigenschap.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Deze eigenschap bevat de `userToken` object doorgegeven aan de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>aanroepen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Als uw toepassing tijdens het wachten op een antwoord blokkeren moet, gebruikt u de <xref:System.Net.NetworkInformation.Ping.Send%2A>methoden; deze methoden zijn synchrone.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Als het ICMP-echo-antwoordbericht niet binnen de tijd die is opgegeven ontvangen door de `timeout` parameter, is de ICMP-echo mislukt en de <xref:System.Net.NetworkInformation.PingReply.Status%2A>eigenschap is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Bij het opgeven van zeer kleine getallen voor `timeout`, kunt u de Ping-antwoord ontvangen zelfs als `timeout` milliseconden zijn verstreken.       Deze overbelasting gebruikt de standaardinstellingen voor pakket fragmentatie en doorsturen van pakketten. Het pakket met het ICMP-echo-bericht kan worden gefragmenteerd onderweg als de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de knooppunten routering tussen de lokale en externe computers. Om te voorkomen dat fragmentatie, gebruikt u een van de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methoden waarmee een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>eigenschap `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wanneer <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>is `true` en de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de routing-knooppunten tussen de lokale en externe computers, mislukt de ICMP-echoaanvraag.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Het pakket of pakketfragmenten (als gefragmenteerd) kunnen worden doorgestuurd door Routering knooppunten 128 keer voordat het wordt verwijderd. U kunt deze instelling wijzigen met een <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overbelasting waarvoor een `options` parameter en stel de <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>eigenschap in op de gewenste waarde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Als het pakket niet aan de bestemming komt na het opgegeven aantal keren worden doorgestuurd, wordt het pakket verwijderd en wordt de ICMP-echoaanvraag mislukt. Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - The following code example demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Een <xref:System.String>die aangeeft dat de computer die het doel van het bericht van ICMP echo.</xref:System.String> De opgegeven waarde voor deze parameter kan niet een hostnaam of een tekenreeksrepresentatie van een IP-adres."
    - id: timeout
      type: System.Int32
      description: "Een <xref:System.Int32>waarde waarmee het maximum aantal milliseconden (na het verzenden van het bericht echo) moet worden gewacht op het ICMP-echo-antwoordbericht.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Een <xref:System.Byte>matrix waarin gegevens worden verzonden met het ICMP-echo-bericht en in het ICMP-echo-antwoordbericht geretourneerd.</xref:System.Byte> De matrix kan niet meer dan 65.500 bytes bevatten."
    - id: userToken
      type: System.Object
      description: "Een object dat wordt doorgegeven aan de methode die wordt aangeroepen wanneer de asynchrone bewerking is voltooid."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;).       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>is kleiner dan nul."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van <xref:System.Net.NetworkInformation.Ping.SendAsync*>wordt uitgevoerd.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>een IPv6-adres en de lokale computer een besturingssysteem ouder dan Windows 2000 wordt uitgevoerd."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Er is een uitzondering opgetreden tijdens het verzenden of ontvangen van de ICMP-berichten. Zie de binnenste uitzondering voor de exacte uitzondering die is gegenereerd."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>kan niet worden omgezet naar een geldig IP-adres."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is verwijderd."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De grootte van <code> buffer </code> is groter dan 65500 bytes."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynchroon probeert een Internet Control Message Protocol (ICMP) echo-bericht met de opgegeven buffer verzenden naar de computer met de opgegeven <xref:System.Net.IPAddress>, en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer.</xref:System.Net.IPAddress> Deze overbelasting kunt u een time-outwaarde voor de werking en besturingselement fragmentatie en Time-to-Live waarden opgeven voor het pakket ICMP echo-bericht."
  remarks: "De <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methode verzendt het bericht Echo asynchroon en wanneer de bewerking is voltooid (geslaagd of mislukt), retourneert u de status voor uw toepassing.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Roep de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methode als uw toepassing moet niet blokkeert.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Elke aanroep wordt uitgevoerd in een afzonderlijke thread die automatisch wordt toegewezen vanuit de thread-groep. Wanneer de asynchrone bewerking is voltooid, wordt de <xref:System.Net.NetworkInformation.Ping.PingCompleted>gebeurtenis.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Toepassingen gebruiken een <xref:System.Net.NetworkInformation.PingCompletedEventHandler>gemachtigde om op te geven van de methode die wordt aangeroepen wanneer <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wordt gegeven van de gebeurtenis.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> U moet ook <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegeren aan de gebeurtenis voordat u <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> toevoegen Ontvangt van de gemachtigde-methode een <xref:System.Net.NetworkInformation.PingCompletedEventArgs>object met een <xref:System.Net.NetworkInformation.PingReply>-object dat wordt beschreven wat de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>aanroepen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> De <xref:System.Net.NetworkInformation.PingCompletedEventArgs>object neemt de <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>eigenschap.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Deze eigenschap bevat de `userToken` object doorgegeven aan de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>aanroepen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Als uw toepassing wordt geblokkeerd tijdens het wachten op een antwoord, gebruikt u de <xref:System.Net.NetworkInformation.Ping.Send%2A>methoden; deze methoden zijn synchrone.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Als het ICMP-echo-antwoordbericht niet binnen de tijd die is opgegeven ontvangen door de `timeout` parameter, is de ICMP-echo mislukt en de <xref:System.Net.NetworkInformation.PingReply.Status%2A>eigenschap is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Bij het opgeven van zeer kleine getallen voor `timeout`, kunt u de Ping-antwoord ontvangen zelfs als `timeout` milliseconden zijn verstreken.       Als de <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>eigenschap is `true` en de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de routing-knooppunten tussen de lokale en externe computers, mislukt de ICMP-echoaanvraag.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Gebruik de <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>eigenschap om het maximum aantal keren dat het ICMP-echo-bericht kan worden doorgestuurd voordat de bestemming bereikt.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Als het pakket niet aan de bestemming komt na het opgegeven aantal keren worden doorgestuurd, wordt het pakket verwijderd en wordt de ICMP-echoaanvraag mislukt. Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method. For an implementation of the callback method, see the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method overload example section.  \n  \n The following code example requires the following namespaces:  \n  \n [!code-cs[NCLPingSampler#0](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_1.cs)]\n [!code-cpp[NCLPingSampler#0](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_1.cpp)]  \n  \n The following code example sends an ICMP echo message asynchronously.  \n  \n [!code-cs[NCLPingSampler#7](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_2.cs)]\n [!code-cpp[NCLPingSampler#7](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_2.cpp)]"
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Een <xref:System.Net.IPAddress>die aangeeft dat de computer die het doel van het bericht van ICMP echo.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Een <xref:System.Int32>waarde waarmee het maximum aantal milliseconden (na het verzenden van het bericht echo) moet worden gewacht op het ICMP-echo-antwoordbericht.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Een <xref:System.Byte>matrix waarin gegevens worden verzonden met het ICMP-echo-bericht en in het ICMP-echo-antwoordbericht geretourneerd.</xref:System.Byte> De matrix kan niet meer dan 65.500 bytes bevatten."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Een <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> object dat wordt gebruikt om te bepalen fragmentatie en Time-to-Live-waarden voor het pakket ICMP echo-bericht."
    - id: userToken
      type: System.Object
      description: "Een object dat wordt doorgegeven aan de methode die wordt aangeroepen wanneer de asynchrone bewerking is voltooid."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>is kleiner dan nul."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van <xref:System.Net.NetworkInformation.Ping.SendAsync*>wordt uitgevoerd.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> een IPv6-adres en de lokale computer een besturingssysteem ouder dan Windows 2000 wordt uitgevoerd."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Er is een uitzondering opgetreden tijdens het verzenden of ontvangen van de ICMP-berichten. Zie de binnenste uitzondering voor de exacte uitzondering die is gegenereerd."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> is geen geldig IP-adres."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is verwijderd."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De grootte van <code> buffer </code> is groter dan 65500 bytes."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynchroon probeert te verzenden van een Internet Control Message Protocol (ICMP) echo-bericht met de opgegeven buffer met de opgegeven computer en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer. Deze overbelasting kunt u een time-outwaarde voor de werking en besturingselement fragmentatie en Time-to-Live waarden opgeven voor het ICMP-pakket."
  remarks: "De <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methode verzendt het bericht Echo asynchroon en wanneer de bewerking is voltooid (geslaagd of mislukt), retourneert u de status voor uw toepassing.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Roep de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>methode als uw toepassing moet niet blokkeert.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Elke aanroep wordt uitgevoerd in een afzonderlijke thread die automatisch wordt toegewezen vanuit de thread-groep. Wanneer de asynchrone bewerking is voltooid, wordt de <xref:System.Net.NetworkInformation.Ping.PingCompleted>gebeurtenis.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Toepassingen gebruiken een <xref:System.Net.NetworkInformation.PingCompletedEventHandler>gemachtigde om op te geven van de methode die wordt aangeroepen wanneer <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wordt gegeven van de gebeurtenis.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> U moet ook <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegeren aan de gebeurtenis voordat u <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> toevoegen Ontvangt van de gemachtigde-methode een <xref:System.Net.NetworkInformation.PingCompletedEventArgs>object met een <xref:System.Net.NetworkInformation.PingReply>-object dat wordt beschreven wat de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>aanroepen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> De <xref:System.Net.NetworkInformation.PingCompletedEventArgs>object neemt de <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>eigenschap.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Deze eigenschap bevat de `userToken` object doorgegeven aan de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>aanroepen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Als uw toepassing tijdens het wachten op een antwoord blokkeren moet, gebruikt u de <xref:System.Net.NetworkInformation.Ping.Send%2A>methoden; deze methoden zijn synchrone.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Als het ICMP-echo-antwoordbericht niet binnen de tijd die is opgegeven ontvangen door de `timeout` parameter, is de ICMP-echo mislukt en de <xref:System.Net.NetworkInformation.PingReply.Status%2A>eigenschap is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Bij het opgeven van zeer kleine getallen voor `timeout`, kunt u de Ping-antwoord ontvangen zelfs als `timeout` milliseconden zijn verstreken.       Als de <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>eigenschap is `true` en de totale pakketgrootte overschrijdt de maximale pakketgrootte die kan worden overgedragen door een van de routing-knooppunten tussen de lokale en externe computers, mislukt de ICMP-echoaanvraag.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Gebruik de <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>eigenschap om het maximum aantal keren dat het ICMP-echo-bericht kan worden doorgestuurd voordat de bestemming bereikt.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Als het pakket niet aan de bestemming komt na het opgegeven aantal keren worden doorgestuurd, wordt het pakket verwijderd en wordt de ICMP-echoaanvraag mislukt. Wanneer dit het geval is, de <xref:System.Net.NetworkInformation.PingReply.Status%2A>is ingesteld op <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cpp[NCLPingAsync#1](~/add/codesnippet/cpp/56cfcaea-d9d5-4c26-9eea-_1.cpp)]\n [!code-cs[NCLPingAsync#1](~/add/codesnippet/csharp/56cfcaea-d9d5-4c26-9eea-_1.cs)]"
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Een <xref:System.String>die aangeeft dat de computer die het doel van het bericht van ICMP echo.</xref:System.String> De opgegeven waarde voor deze parameter kan niet een hostnaam of een tekenreeksrepresentatie van een IP-adres."
    - id: timeout
      type: System.Int32
      description: "Een <xref:System.Byte>matrix waarin gegevens worden verzonden met het ICMP-echo-bericht en in het ICMP-echo-antwoordbericht geretourneerd.</xref:System.Byte> De matrix kan niet meer dan 65.500 bytes bevatten."
    - id: buffer
      type: System.Byte[]
      description: "Een <xref:System.Int32>waarde waarmee het maximum aantal milliseconden (na het verzenden van het bericht echo) moet worden gewacht op het ICMP-echo-antwoordbericht.</xref:System.Int32>"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Een <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> object dat wordt gebruikt om te bepalen fragmentatie en Time-to-Live-waarden voor het pakket ICMP echo-bericht."
    - id: userToken
      type: System.Object
      description: "Een object dat wordt doorgegeven aan de methode die wordt aangeroepen wanneer de asynchrone bewerking is voltooid."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;).       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>is kleiner dan nul."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van <xref:System.Net.NetworkInformation.Ping.SendAsync*>wordt uitgevoerd.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> een IPv6-adres en de lokale computer een besturingssysteem ouder dan Windows 2000 wordt uitgevoerd."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Er is een uitzondering opgetreden tijdens het verzenden of ontvangen van de ICMP-berichten. Zie de binnenste uitzondering voor de exacte uitzondering die is gegenereerd."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>kan niet worden omgezet naar een geldig IP-adres."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is verwijderd."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De grootte van <code> buffer </code> is groter dan 65500 bytes."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  id: SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Hiermee annuleert u alle wachtende asynchrone aanvragen een Internet Control Message Protocol (ICMP) echo-bericht te verzenden en een bijbehorende ICMP echo-antwoordbericht ontvangt."
  remarks: "Roep deze methode om te beëindigen oproepen aan <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>die nog niet voltooid.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>"
  syntax:
    content: public void SendAsyncCancel ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  id: SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Een Internet Control Message Protocol (ICMP) echo-bericht met de opgegeven gegevensbuffer verzenden naar de computer met de opgegeven <xref:System.Net.IPAddress>, en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer als een asynchrone bewerking.</xref:System.Net.IPAddress>"
  remarks: "Deze bewerking wordt niet geblokkeerd. De geretourneerde <xref:System.Threading.Tasks.Task%601>> object voltooid nadat het ICMP-pakket is verzonden en het antwoord is ontvangen.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Een IP-adres waarmee de computer die het doel van het ICMP-echo-bericht."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Retourneert &lt;xref:System.Threading.Tasks.Task%601&gt;.       Het taakobject dat de asynchrone bewerking vertegenwoordigt."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>wordt uitgevoerd.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Er is een uitzondering opgetreden tijdens het verzenden of ontvangen van de ICMP-berichten. Zie de binnenste uitzondering voor de exacte uitzondering die is gegenereerd."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> is geen geldig IP-adres."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is verwijderd."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  id: SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Verzendt een Internet Control Message Protocol (ICMP) echo-bericht met de opgegeven gegevens buffer met de opgegeven computer en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer als een asynchrone bewerking."
  remarks: "Deze bewerking wordt niet geblokkeerd. De geretourneerde <xref:System.Threading.Tasks.Task%601>> object voltooid nadat het ICMP-pakket is verzonden en het antwoord is ontvangen.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "De computer die het doel van het ICMP-echo-bericht. De opgegeven waarde voor deze parameter kan niet een hostnaam of een tekenreeksrepresentatie van een IP-adres."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Retourneert &lt;xref:System.Threading.Tasks.Task%601&gt;.       Het taakobject dat de asynchrone bewerking vertegenwoordigt."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  id: SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Een Internet Control Message Protocol (ICMP) echo-bericht met de opgegeven gegevensbuffer verzenden naar de computer met de opgegeven <xref:System.Net.IPAddress>, en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer als een asynchrone bewerking.</xref:System.Net.IPAddress> Deze overbelasting kunt u een time-outwaarde voor de bewerking opgeven."
  remarks: "Deze bewerking wordt niet geblokkeerd. De geretourneerde <xref:System.Threading.Tasks.Task%601>> object voltooid nadat het ICMP-pakket is verzonden en het antwoord is ontvangen.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Een IP-adres waarmee de computer die het doel van het ICMP-echo-bericht."
    - id: timeout
      type: System.Int32
      description: "Het maximum aantal milliseconden (na het verzenden van het bericht echo) moet worden gewacht op het ICMP-echo-antwoordbericht."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Retourneert &lt;xref:System.Threading.Tasks.Task%601&gt;.       Het taakobject dat de asynchrone bewerking vertegenwoordigt."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  id: SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Verzendt een Internet Control Message Protocol (ICMP) echo-bericht met de opgegeven gegevens buffer met de opgegeven computer en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer als een asynchrone bewerking. Deze overbelasting kunt u een time-outwaarde voor de bewerking opgeven."
  remarks: "Deze bewerking wordt niet geblokkeerd. De geretourneerde <xref:System.Threading.Tasks.Task%601>> object voltooid nadat het ICMP-pakket is verzonden en het antwoord is ontvangen.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "De computer die het doel van het ICMP-echo-bericht. De opgegeven waarde voor deze parameter kan niet een hostnaam of een tekenreeksrepresentatie van een IP-adres."
    - id: timeout
      type: System.Int32
      description: "Het maximum aantal milliseconden (na het verzenden van het bericht echo) moet worden gewacht op het ICMP-echo-antwoordbericht."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Retourneert &lt;xref:System.Threading.Tasks.Task%601&gt;.       Het taakobject dat de asynchrone bewerking vertegenwoordigt."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Een Internet Control Message Protocol (ICMP) echo-bericht met de opgegeven gegevensbuffer verzenden naar de computer met de opgegeven <xref:System.Net.IPAddress>, en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer als een asynchrone bewerking.</xref:System.Net.IPAddress> Deze overbelasting kunt u opgeven dat een time-outwaarde voor de bewerking als een buffer wilt gebruiken voor verzenden en ontvangen."
  remarks: "Deze bewerking wordt niet geblokkeerd. De geretourneerde <xref:System.Threading.Tasks.Task%601>> object voltooid nadat het ICMP-pakket is verzonden en het antwoord is ontvangen.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Een IP-adres waarmee de computer die het doel van het ICMP-echo-bericht."
    - id: timeout
      type: System.Int32
      description: "Het maximum aantal milliseconden (na het verzenden van het bericht echo) moet worden gewacht op het ICMP-echo-antwoordbericht."
    - id: buffer
      type: System.Byte[]
      description: "Een <xref:System.Byte>matrix waarin gegevens worden verzonden met het ICMP-echo-bericht en in het ICMP-echo-antwoordbericht geretourneerd.</xref:System.Byte> De matrix kan niet meer dan 65.500 bytes bevatten."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Retourneert &lt;xref:System.Threading.Tasks.Task%601&gt;.       Het taakobject dat de asynchrone bewerking vertegenwoordigt."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>is kleiner dan nul."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>wordt uitgevoerd.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Er is een uitzondering opgetreden tijdens het verzenden of ontvangen van de ICMP-berichten. Zie de binnenste uitzondering voor de exacte uitzondering die is gegenereerd."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> is geen geldig IP-adres."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is verwijderd."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De grootte van <code> buffer </code> 65.500 bytes overschrijdt."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  id: SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Verzendt een Internet Control Message Protocol (ICMP) echo-bericht met de opgegeven gegevens buffer met de opgegeven computer en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer als een asynchrone bewerking. Deze overbelasting kunt u opgeven dat een time-outwaarde voor de bewerking als een buffer wilt gebruiken voor verzenden en ontvangen."
  remarks: "Deze bewerking wordt niet geblokkeerd. De geretourneerde <xref:System.Threading.Tasks.Task%601>> object voltooid nadat het ICMP-pakket is verzonden en het antwoord is ontvangen.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "De computer die het doel van het ICMP-echo-bericht. De opgegeven waarde voor deze parameter kan niet een hostnaam of een tekenreeksrepresentatie van een IP-adres."
    - id: timeout
      type: System.Int32
      description: "Het maximum aantal milliseconden (na het verzenden van het bericht echo) moet worden gewacht op het ICMP-echo-antwoordbericht."
    - id: buffer
      type: System.Byte[]
      description: "Een <xref:System.Byte>matrix waarin gegevens worden verzonden met het ICMP-echo-bericht en in het ICMP-echo-antwoordbericht geretourneerd.</xref:System.Byte> De matrix kan niet meer dan 65.500 bytes bevatten."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Retourneert &lt;xref:System.Threading.Tasks.Task%601&gt;.       Het taakobject dat de asynchrone bewerking vertegenwoordigt."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Een Internet Control Message Protocol (ICMP) echo-bericht met de opgegeven gegevensbuffer verzenden naar de computer met de opgegeven <xref:System.Net.IPAddress>, en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer als een asynchrone bewerking.</xref:System.Net.IPAddress> Deze overbelasting kunt u een time-outwaarde voor de bewerking een buffer wilt gebruiken voor verzenden en ontvangen, Geef op en beheer van fragmentatie en Time-to-Live waarden voor de ICMP-echo-bericht-pakket."
  remarks: "Deze bewerking wordt niet geblokkeerd. De geretourneerde <xref:System.Threading.Tasks.Task%601>> object voltooid nadat het ICMP-pakket is verzonden en het antwoord is ontvangen.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Een IP-adres waarmee de computer die het doel van het ICMP-echo-bericht."
    - id: timeout
      type: System.Int32
      description: "Het maximum aantal milliseconden (na het verzenden van het bericht echo) moet worden gewacht op het ICMP-echo-antwoordbericht."
    - id: buffer
      type: System.Byte[]
      description: "Een <xref:System.Byte>matrix waarin gegevens worden verzonden met het ICMP-echo-bericht en in het ICMP-echo-antwoordbericht geretourneerd.</xref:System.Byte> De matrix kan niet meer dan 65.500 bytes bevatten."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Een <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> object dat wordt gebruikt om te bepalen fragmentatie en Time-to-Live-waarden voor het pakket ICMP echo-bericht."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Retourneert &lt;xref:System.Threading.Tasks.Task%601&gt;.       Het taakobject dat de asynchrone bewerking vertegenwoordigt."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>is kleiner dan nul."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>wordt uitgevoerd.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Er is een uitzondering opgetreden tijdens het verzenden of ontvangen van de ICMP-berichten. Zie de binnenste uitzondering voor de exacte uitzondering die is gegenereerd."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> is geen geldig IP-adres."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is verwijderd."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De grootte van <code> buffer </code> 65.500 bytes overschrijdt."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Verzendt een Internet Control Message Protocol (ICMP) echo-bericht met de opgegeven gegevens buffer met de opgegeven computer en een bijbehorende ICMP echo-antwoordbericht ontvangen vanaf die computer als een asynchrone bewerking. Deze overbelasting kunt u een time-outwaarde voor de bewerking een buffer wilt gebruiken voor verzenden en ontvangen, Geef op en beheer van fragmentatie en Time-to-Live waarden voor de ICMP-echo-bericht-pakket."
  remarks: "Deze bewerking wordt niet geblokkeerd. De geretourneerde <xref:System.Threading.Tasks.Task%601>> object voltooid nadat het ICMP-pakket is verzonden en het antwoord is ontvangen.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "De computer die het doel van het ICMP-echo-bericht. De opgegeven waarde voor deze parameter kan niet een hostnaam of een tekenreeksrepresentatie van een IP-adres."
    - id: timeout
      type: System.Int32
      description: "Het maximum aantal milliseconden (na het verzenden van het bericht echo) moet worden gewacht op het ICMP-echo-antwoordbericht."
    - id: buffer
      type: System.Byte[]
      description: "Een <xref:System.Byte>matrix waarin gegevens worden verzonden met het ICMP-echo-bericht en in het ICMP-echo-antwoordbericht geretourneerd.</xref:System.Byte> De matrix kan niet meer dan 65.500 bytes bevatten."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Een <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> object dat wordt gebruikt om te bepalen fragmentatie en Time-to-Live-waarden voor het pakket ICMP echo-bericht."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Retourneert &lt;xref:System.Threading.Tasks.Task%601&gt;.       Het taakobject dat de asynchrone bewerking vertegenwoordigt."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.NetworkInformation.PingException
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingException
  nameWithType: PingException
  fullName: System.Net.NetworkInformation.PingException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.Net.NetworkInformation.Ping.#ctor
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
- uid: System.Net.NetworkInformation.PingCompletedEventArgs
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventArgs
  nameWithType: PingCompletedEventArgs
  fullName: System.Net.NetworkInformation.PingCompletedEventArgs
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
- uid: System.Net.NetworkInformation.PingCompletedEventHandler
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventHandler
  nameWithType: PingCompletedEventHandler
  fullName: System.Net.NetworkInformation.PingCompletedEventHandler
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
- uid: System.Net.NetworkInformation.PingReply
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingReply
  nameWithType: PingReply
  fullName: System.Net.NetworkInformation.PingReply
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.PingOptions
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingOptions
  nameWithType: PingOptions
  fullName: System.Net.NetworkInformation.PingOptions
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
- uid: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<PingReply>
  nameWithType: Task<PingReply>
  fullName: System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Net.NetworkInformation.PingReply>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.NetworkInformation.PingReply
    name: PingReply
    nameWithType: PingReply
    fullName: PingReply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.#ctor*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping
  nameWithType: Ping.Ping
- uid: System.Net.NetworkInformation.Ping.Dispose*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose
  nameWithType: Ping.Dispose
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted
  nameWithType: Ping.OnPingCompleted
- uid: System.Net.NetworkInformation.Ping.Send*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send
  nameWithType: Ping.Send
- uid: System.Net.NetworkInformation.Ping.SendAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync
  nameWithType: Ping.SendAsync
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel
  nameWithType: Ping.SendAsyncCancel
- uid: System.Net.NetworkInformation.Ping.SendPingAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync
  nameWithType: Ping.SendPingAsync
