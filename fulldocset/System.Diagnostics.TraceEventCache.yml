### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceEventCache
  id: TraceEventCache
  children:
  - System.Diagnostics.TraceEventCache.#ctor
  - System.Diagnostics.TraceEventCache.Callstack
  - System.Diagnostics.TraceEventCache.DateTime
  - System.Diagnostics.TraceEventCache.LogicalOperationStack
  - System.Diagnostics.TraceEventCache.ProcessId
  - System.Diagnostics.TraceEventCache.ThreadId
  - System.Diagnostics.TraceEventCache.Timestamp
  langs:
  - csharp
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
  type: Class
  summary: "Biedt de trace-gebeurtenisgegevens die specifiek zijn voor een thread en een proces."
  remarks: "> [!NOTE]> De klasse TraceEventCache ontworpen als een optimalisatie van de prestaties voor trace listener-aanroepen, is van belang zijn alleen voor ontwikkelaars maken van aangepaste traceer-listeners.       De klasse TraceEventCache wordt gebruikt als parameter voor van traceringsmethoden voor de bron van een traceringsgebeurtenis nauwkeurig te identificeren. Voorbeelden van methoden die gebruikmaken van TraceEventCache zijn <xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=fullName>en <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=fullName>.</xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=fullName> </xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=fullName> De <xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A>eigenschap bevat gegevens die kunnen worden gebruikt voor de tracering met gerelateerde traceringen correleren.</xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A>"
  syntax:
    content: public class TraceEventCache
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.#ctor
  id: '#ctor'
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: TraceEventCache()
  nameWithType: TraceEventCache.TraceEventCache()
  fullName: System.Diagnostics.TraceEventCache.TraceEventCache()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> klasse."
  syntax:
    content: public TraceEventCache ();
    parameters: []
  overload: System.Diagnostics.TraceEventCache.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.Callstack
  id: Callstack
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: Callstack
  nameWithType: TraceEventCache.Callstack
  fullName: System.Diagnostics.TraceEventCache.Callstack
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee wordt de aanroepstack voor de huidige thread."
  remarks: "De eigenschap stack de aanroepstack opgehaald uit de <xref:System.Environment.StackTrace%2A>eigenschap van de <xref:System.Environment>klasse.</xref:System.Environment> </xref:System.Environment.StackTrace%2A> De waarde van eigenschap bevat methodeaanroepen in omgekeerde volgorde. Dat wil zeggen, wordt de meest recente methodeaanroep eerst beschreven. Een line-of-stack trace-informatie wordt weergegeven voor elke methodeaanroep op de stack. Zie voor meer informatie <xref:System.Environment.StackTrace%2A>.</xref:System.Environment.StackTrace%2A>"
  syntax:
    content: public string Callstack { get; }
    return:
      type: System.String
      description: "Een tekenreeks met de stack trace-informatie. Deze waarde kan een lege tekenreeks zijn (&quot;&quot;)."
  overload: System.Diagnostics.TraceEventCache.Callstack*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.DateTime
  id: DateTime
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: DateTime
  nameWithType: TraceEventCache.DateTime
  fullName: System.Diagnostics.TraceEventCache.DateTime
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee haalt u de datum en tijd waarop de gebeurtenistracering heeft plaatsgevonden."
  remarks: "De eerste keer dat de eigenschap wordt geopend in een exemplaar van de <xref:System.Diagnostics.TraceEventCache>klasse, de huidige tijd wordt geretourneerd.</xref:System.Diagnostics.TraceEventCache> Volgende aanvragen van deze eigenschap in dat exemplaar retourneren dat dezelfde <xref:System.DateTime>waarde, zodat deze kan worden gebruikt als een tijdstempel.</xref:System.DateTime>"
  syntax:
    content: public DateTime DateTime { get; }
    return:
      type: System.DateTime
      description: "Een <xref:System.DateTime>structuur waarvan de waarde is een datum en tijd uitgedrukt in Coordinated Universal Time (UTC).</xref:System.DateTime>"
  overload: System.Diagnostics.TraceEventCache.DateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.LogicalOperationStack
  id: LogicalOperationStack
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: LogicalOperationStack
  nameWithType: TraceEventCache.LogicalOperationStack
  fullName: System.Diagnostics.TraceEventCache.LogicalOperationStack
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee haalt u de Correlatiegegevens, in een stack."
  remarks: "De Correlatiegegevens worden opgeslagen als een object in de aanroepcontext met de naam &quot;System.Diagnostics.Trace.CorrelationManagerSlot&quot;. De <xref:System.Diagnostics.CorrelationManager>klasse biedt methoden voor het opslaan van de identiteit van een logische-bewerking in de context van een thread is gebonden en label automatisch elke traceringsgebeurtenis die worden gegenereerd door de thread met de identiteit van de opgeslagen.</xref:System.Diagnostics.CorrelationManager> De <xref:System.Diagnostics.CorrelationManager>toegankelijk is via de <xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=fullName>eigenschap.</xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=fullName> </xref:System.Diagnostics.CorrelationManager> Elke aanroep van de <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A>methode pushes een nieuwe logische bewerking-id in de stack te plaatsen.</xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> Elke aanroep van de <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A>methode een logische bewerking-id uit de stack POP &quot;s</xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A>"
  syntax:
    content: public System.Collections.Stack LogicalOperationStack { get; }
    return:
      type: System.Collections.Stack
      description: "Een <xref href=&quot;System.Collections.Stack&quot;> </xref> die Correlatiegegevens bevat."
  overload: System.Diagnostics.TraceEventCache.LogicalOperationStack*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.ProcessId
  id: ProcessId
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: ProcessId
  nameWithType: TraceEventCache.ProcessId
  fullName: System.Diagnostics.TraceEventCache.ProcessId
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee haalt u de unieke id van het huidige proces."
  remarks: "Totdat het proces wordt beÃ«indigd, kunt u de proces-id een unieke identificatie van het proces in het hele systeem."
  syntax:
    content: public int ProcessId { get; }
    return:
      type: System.Int32
      description: "Het systeem gegenereerde unieke id van het huidige proces."
  overload: System.Diagnostics.TraceEventCache.ProcessId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.ThreadId
  id: ThreadId
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: ThreadId
  nameWithType: TraceEventCache.ThreadId
  fullName: System.Diagnostics.TraceEventCache.ThreadId
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee wordt een unieke id voor de huidige beheerde thread."
  remarks: "De thread-id is de waarde van de <xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=fullName>eigenschap opgemaakt als een tekenreeks.</xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=fullName>"
  syntax:
    content: public string ThreadId { get; }
    return:
      type: System.String
      description: "Een tekenreeks met een unieke integer-id voor deze beheerde thread."
  overload: System.Diagnostics.TraceEventCache.ThreadId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.Timestamp
  id: Timestamp
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: Timestamp
  nameWithType: TraceEventCache.Timestamp
  fullName: System.Diagnostics.TraceEventCache.Timestamp
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee haalt het huidige aantal ticks in het mechanisme voor timer."
  remarks: "De accessor get aanroepen de <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=fullName>methode voor het ophalen van de timestamp.</xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=fullName> Als de <xref:System.Diagnostics.Stopwatch>klasse gebruikt een hoge resolutie prestatiemeteritem <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A>retourneert de huidige waarde van dit item.</xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> </xref:System.Diagnostics.Stopwatch> Als de <xref:System.Diagnostics.Stopwatch>klasse wordt gebruikt voor de systeemtimer voor het, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A>wordt de <xref:System.DateTime.Ticks%2A>eigenschap van <xref:System.DateTime.Now%2A?displayProperty=fullName>.</xref:System.DateTime.Now%2A?displayProperty=fullName> </xref:System.DateTime.Ticks%2A> </xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> </xref:System.Diagnostics.Stopwatch>"
  syntax:
    content: public long Timestamp { get; }
    return:
      type: System.Int64
      description: "De itemwaarde maatstreepjes van het onderliggende timer-mechanisme."
  overload: System.Diagnostics.TraceEventCache.Timestamp*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.TraceEventCache.#ctor
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: TraceEventCache()
  nameWithType: TraceEventCache.TraceEventCache()
  fullName: System.Diagnostics.TraceEventCache.TraceEventCache()
- uid: System.Diagnostics.TraceEventCache.Callstack
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: Callstack
  nameWithType: TraceEventCache.Callstack
  fullName: System.Diagnostics.TraceEventCache.Callstack
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceEventCache.DateTime
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: DateTime
  nameWithType: TraceEventCache.DateTime
  fullName: System.Diagnostics.TraceEventCache.DateTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Diagnostics.TraceEventCache.LogicalOperationStack
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: LogicalOperationStack
  nameWithType: TraceEventCache.LogicalOperationStack
  fullName: System.Diagnostics.TraceEventCache.LogicalOperationStack
- uid: System.Collections.Stack
  parent: System.Collections
  isExternal: false
  name: Stack
  nameWithType: Stack
  fullName: System.Collections.Stack
- uid: System.Diagnostics.TraceEventCache.ProcessId
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: ProcessId
  nameWithType: TraceEventCache.ProcessId
  fullName: System.Diagnostics.TraceEventCache.ProcessId
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.TraceEventCache.ThreadId
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: ThreadId
  nameWithType: TraceEventCache.ThreadId
  fullName: System.Diagnostics.TraceEventCache.ThreadId
- uid: System.Diagnostics.TraceEventCache.Timestamp
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: Timestamp
  nameWithType: TraceEventCache.Timestamp
  fullName: System.Diagnostics.TraceEventCache.Timestamp
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.TraceEventCache.#ctor*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache.TraceEventCache
- uid: System.Diagnostics.TraceEventCache.Callstack*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: Callstack
  nameWithType: TraceEventCache.Callstack
- uid: System.Diagnostics.TraceEventCache.DateTime*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: DateTime
  nameWithType: TraceEventCache.DateTime
- uid: System.Diagnostics.TraceEventCache.LogicalOperationStack*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: LogicalOperationStack
  nameWithType: TraceEventCache.LogicalOperationStack
- uid: System.Diagnostics.TraceEventCache.ProcessId*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: ProcessId
  nameWithType: TraceEventCache.ProcessId
- uid: System.Diagnostics.TraceEventCache.ThreadId*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: ThreadId
  nameWithType: TraceEventCache.ThreadId
- uid: System.Diagnostics.TraceEventCache.Timestamp*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: Timestamp
  nameWithType: TraceEventCache.Timestamp
