### YamlMime:ManagedReference
items:
- uid: System.Net.Security.SslStream
  id: SslStream
  children:
  - System.Net.Security.SslStream.#ctor(System.IO.Stream)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.CanRead
  - System.Net.Security.SslStream.CanSeek
  - System.Net.Security.SslStream.CanTimeout
  - System.Net.Security.SslStream.CanWrite
  - System.Net.Security.SslStream.CheckCertRevocationStatus
  - System.Net.Security.SslStream.CipherAlgorithm
  - System.Net.Security.SslStream.CipherStrength
  - System.Net.Security.SslStream.Dispose(System.Boolean)
  - System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  - System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  - System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  - System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  - System.Net.Security.SslStream.Flush
  - System.Net.Security.SslStream.HashAlgorithm
  - System.Net.Security.SslStream.HashStrength
  - System.Net.Security.SslStream.IsAuthenticated
  - System.Net.Security.SslStream.IsEncrypted
  - System.Net.Security.SslStream.IsMutuallyAuthenticated
  - System.Net.Security.SslStream.IsServer
  - System.Net.Security.SslStream.IsSigned
  - System.Net.Security.SslStream.KeyExchangeAlgorithm
  - System.Net.Security.SslStream.KeyExchangeStrength
  - System.Net.Security.SslStream.Length
  - System.Net.Security.SslStream.LocalCertificate
  - System.Net.Security.SslStream.Position
  - System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.ReadTimeout
  - System.Net.Security.SslStream.RemoteCertificate
  - System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Net.Security.SslStream.SetLength(System.Int64)
  - System.Net.Security.SslStream.SslProtocol
  - System.Net.Security.SslStream.TransportContext
  - System.Net.Security.SslStream.Write(System.Byte[])
  - System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.WriteTimeout
  langs:
  - csharp
  name: SslStream
  nameWithType: SslStream
  fullName: System.Net.Security.SslStream
  type: Class
  summary: "Biedt een stroom die wordt gebruikt voor client-servercommunicatie die het beveiligingsprotocol Secure Socket Layer (SSL) gebruikt om de server en eventueel de client te verifiëren."
  remarks: "SSL-protocollen helpen vertrouwelijkheid en integriteitscontrole voor berichten die worden verzonden met een SslStream opgeven. Een SSL-verbinding, zoals opgegeven door SslStream, moet worden gebruikt tijdens de communicatie van vertrouwelijke gegevens tussen een client en server. Met een SslStream kunt voorkomen dat iemand lezen en knoeien met gegevens, terwijl het onderweg op het netwerk.       Een exemplaar SslStream brengt gegevens over met behulp van een stroom die u opgeeft bij het maken van de SslStream. Wanneer u deze onderliggende stroom opgeeft, hebt u de mogelijkheid te geven of sluiten van de SslStream ook Hiermee sluit u de onderliggende stroom. De klasse SslStream wordt normaal gesproken gebruikt met de <xref:System.Net.Sockets.TcpClient>en <xref:System.Net.Sockets.TcpListener>klassen.</xref:System.Net.Sockets.TcpListener> </xref:System.Net.Sockets.TcpClient> De <xref:System.Net.Sockets.TcpClient.GetStream%2A>methode is <xref:System.Net.Sockets.NetworkStream>geschikt voor gebruik met de klasse SslStream.</xref:System.Net.Sockets.NetworkStream> </xref:System.Net.Sockets.TcpClient.GetStream%2A>       Na het maken van een SslStream, moeten de server en eventueel de client worden geverifieerd. De server moet een X509 opgeven certificaat die vaststelt bewijs van de identiteit en dat de client ook doen kan aanvragen. Verificatie moet worden uitgevoerd voordat het verzenden van gegevens met behulp van een SslStream. Clients starten de verificatie met behulp van de synchrone <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>methoden blokkeren totdat de verificatie is voltooid, of de asynchrone <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>methoden, die niet geblokkeerd door de wachttijd voor de verificatie te voltooien.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> Servers initiëren verificatie met behulp van de synchrone <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>of asynchrone <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>methoden.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> Zowel client als server moeten de verificatie initiëren.       De verificatie wordt uitgevoerd door de Provider SSPI (Security Support) channel-provider. De client ontvangt een kans om de validatie van het certificaat van de server beheren door te geven een <xref:System.Net.Security.RemoteCertificateValidationCallback>delegeren bij het maken van een SslStream.</xref:System.Net.Security.RemoteCertificateValidationCallback> De server kunt validatie ook beheren door het opgeven van een <xref:System.Net.Security.RemoteCertificateValidationCallback>delegeren.</xref:System.Net.Security.RemoteCertificateValidationCallback> De methode waarnaar wordt verwezen door de gemachtigde bevat de externe partij certificaat en eventuele fouten opgetreden tijdens het valideren van het certificaat SSPI. Houd er rekening mee dat als de server is opgegeven voor een gemachtigde, van de gemachtigde-methode is aangeroepen ongeacht of de server clientverificatie aangevraagd. Als de server heeft geen clientverificatie aangevraagd, ontvangt de server gemachtigdenmethode een null-certificaat en een lege matrix van certificaatfouten.       Als de server clientverificatie is vereist, moet de client een of meer certificaten voor verificatie opgeven. Als de client meer dan één certificaat heeft, de client kan bieden een <xref:System.Net.Security.LocalCertificateSelectionCallback>gemachtigde van het juiste certificaat voor de server selecteren.</xref:System.Net.Security.LocalCertificateSelectionCallback> Certificaten van de client moeten zich bevinden in de huidige gebruiker &quot;Mijn&quot; certificaatarchief. Clientverificatie via certificaten wordt niet ondersteund voor de <xref:System.Security.Authentication.SslProtocols>(SSL versie 2)-protocol.</xref:System.Security.Authentication.SslProtocols>       Als de verificatie is mislukt, ontvangt u een <xref:System.Security.Authentication.AuthenticationException>, en de SslStream is niet langer bruikbaar.</xref:System.Security.Authentication.AuthenticationException> U moet dit object te sluiten en verwijder alle verwijzingen naar deze zodat deze kan worden verzameld door de garbage collector.       Als het verificatieproces, ook wel bekend als in de SSL-handshake is geslaagd, wordt de identiteit van de server (en eventueel de client) tot stand is gebracht en worden de SslStream kan worden gebruikt door de client en server voor het uitwisselen van berichten. Voordat verzenden of ontvangen informatie, moeten de client en server controleren de beveiligingsservices en geleverd door de SslStream te bepalen of het protocol, algoritmen en sterkte geselecteerd voldoet aan de vereisten voor integriteit en vertrouwelijkheid niveaus. Als de huidige instellingen niet voldoende, kan de stroom moet worden gesloten. U kunt de beveiligingsservices opgegeven met behulp van de SslStream controleren de <xref:System.Net.Security.SslStream.IsEncrypted%2A>en <xref:System.Net.Security.SslStream.IsSigned%2A>Eigenschappen.</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> De volgende tabel bevat de elementen die de cryptografie-instellingen gebruikt voor authenticatie, versleuteling en ondertekening van gegevens te rapporteren.      | Element | Leden |   |-------------|-------------|   | Het beveiligingsprotocol dat wordt gebruikt voor het verifiëren van de server en, desgewenst, de client. | De eigenschap <xref:System.Net.Security.SslStream.SslProtocol%2A>en de bijbehorende <xref:System.Security.Authentication.SslProtocols>-opsomming. |   | De algoritme voor sleuteluitwisseling. | De eigenschap <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A>en de bijbehorende <xref:System.Security.Authentication.ExchangeAlgorithmType>-opsomming. |   | De hash-algoritme van het bericht. | De eigenschap <xref:System.Net.Security.SslStream.HashAlgorithm%2A>en de bijbehorende <xref:System.Security.Authentication.HashAlgorithmType>-opsomming. |   | Het algoritme message vertrouwelijkheid. | De eigenschap <xref:System.Net.Security.SslStream.CipherAlgorithm%2A>en de bijbehorende <xref:System.Security.Authentication.CipherAlgorithmType>-opsomming. |   | De sterkte van de geselecteerde algoritmen. | De <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A> <xref:System.Net.Security.SslStream.HashStrength%2A>, en eigenschappen van <xref:System.Net.Security.SslStream.CipherStrength%2A>. |       Na een geslaagde verificatie kunt u gegevens met behulp van de synchrone verzenden <xref:System.Net.Security.SslStream.Write%2A>of asynchrone <xref:System.Net.Security.SslStream.BeginWrite%2A>methoden.</xref:System.Net.Security.SslStream.BeginWrite%2A> </xref:System.Net.Security.SslStream.Write%2A> </xref:System.Net.Security.SslStream.CipherStrength%2A> </xref:System.Net.Security.SslStream.HashStrength%2A> </xref:System.Net.Security.SslStream.KeyExchangeStrength%2A> </xref:System.Security.Authentication.CipherAlgorithmType> </xref:System.Net.Security.SslStream.CipherAlgorithm%2A> </xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Net.Security.SslStream.HashAlgorithm%2A> </xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> </xref:System.Security.Authentication.SslProtocols> </xref:System.Net.Security.SslStream.SslProtocol%2A> U kunt gegevens met behulp van de synchrone ontvangen <xref:System.Net.Security.SslStream.Read%2A>of asynchrone <xref:System.Net.Security.SslStream.BeginRead%2A>methoden.</xref:System.Net.Security.SslStream.BeginRead%2A> </xref:System.Net.Security.SslStream.Read%2A>       Als u hebt opgegeven voor de <xref:System.Net.Security.SslStream.%23ctor%2A>dat de onderliggende stroom moet worden opengelaten, bent u verantwoordelijk voor het sluiten van deze stroom wanneer u klaar bent met deze</xref:System.Net.Security.SslStream.%23ctor%2A>      > [!NOTE] > Als de toepassing die wordt gemaakt van het object SslStream wordt uitgevoerd met de referenties van een normale gebruiker, de toepassing kan niet worden voor toegang tot de certificaten in het archief van de lokale computer geïnstalleerd, tenzij machtiging expliciet is toegewezen aan de gebruiker om dit te doen.       SslStream wordt ervan uitgegaan dat er is een time-out met eventueel andere <xref:System.IO.IOException>wanneer een van de interne stream wordt gegenereerd, worden behandeld als onherstelbare door de aanroeper.</xref:System.IO.IOException> Een exemplaar SslStream hergebruiken nadat er een time-out garbagecollection wordt geretourneerd. Een toepassing moet <xref:System.IO.Stream.Close%2A>de SslStream en Veroorzaak een uitzondering in dergelijke gevallen.</xref:System.IO.Stream.Close%2A>       De .NET Framework 4.6 bevat een nieuwe beveiligingsfunctie waarmee onbeveiligde versleuteling en hash-algoritmen voor verbindingen wordt geblokkeerd. Toepassingen met behulp van TLS/SSL via API&quot;s zoals HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, enz. en die gericht is op .NET Framework 4.6 ophalen van het gedrag veiligere standaard.       Ontwikkelaars willen dit gedrag afmelden om interoperabiliteit met hun bestaande SSL3 services of TLS met RC4 services peil te houden. [In dit artikel](https://support.microsoft.com/kb/3069494) wordt uitgelegd hoe u uw code te wijzigen zodat het nieuwe gedrag is uitgeschakeld.       .NET Framework 4.6.3 voegt nieuwe overloads voor de methoden die worden geverifieerd SslStreams die een TLS-versie niet opgeeft, maar gebruik in plaats daarvan de TLS-versie die is gedefinieerd als de standaardlijst in [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx). Deze methoden in uw app als een manier om de standaardinstellingen later wijzigen als TLS-versie best practice wijzigingen na verloop van tijd te kunnen gebruiken zonder de noodzaak om te bouwen en implementeren van uw app."
  example:
  - "The following code example demonstrates creating an <xref:System.Net.Sockets.TcpListener> that uses the SslStream class to communicate with clients.  \n  \n [!code-cpp[NclSslServerSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_1.cpp)]\n [!code-cs[NclSslServerSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_1.cs)]  \n  \n The following code example demonstrates creating a <xref:System.Net.Sockets.TcpClient> that uses the SslStream class to communicate with a server.  \n  \n [!code-cpp[NclSslClientSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_2.cpp)]\n [!code-cs[NclSslClientSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_2.cs)]"
  syntax:
    content: 'public class SslStream : System.Net.Security.AuthenticatedStream'
  inheritance:
  - System.IO.Stream
  - System.Net.Security.AuthenticatedStream
  implements: []
  inheritedMembers:
  - System.Net.Security.AuthenticatedStream.InnerStream
  - System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> klasse met behulp van de opgegeven <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Als een waarde niet is opgegeven in het configuratiebestand voor encryptionpolicy, de <xref:System.Net.Security.EncryptionPolicy>wordt standaard ingesteld op <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>voor de <xref:System.Net.Security.SslStream>-exemplaar dat is opgesteld.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Het gebruik van de Null-codering is vereist wanneer het versleutelingsbeleid voor is ingesteld op <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  syntax:
    content: public SslStream (System.IO.Stream innerStream);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Een <xref:System.IO.Stream>object dat wordt gebruikt door de <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> voor het verzenden en ontvangen van gegevens.</xref:System.IO.Stream>"
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>kan niet worden gelezen.       - of - <code>innerStream</code> is niet schrijfbaar."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - of - <code>innerStream</code> gelijk is aan <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Boolean)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> met behulp van de opgegeven klasse <xref:System.IO.Stream>en te streamen sluiting gedrag.</xref:System.IO.Stream>"
  remarks: "Wanneer u opgeeft `true` voor de `leaveStreamOpen` parameter, sluit de <xref:System.Net.Security.SslStream>heeft geen effect op de `innerStream` stream; u moet expliciet sluiten `innerStream` wanneer u deze niet langer hoeft</xref:System.Net.Security.SslStream>       Als een waarde niet is opgegeven in het configuratiebestand voor encryptionpolicy, de <xref:System.Net.Security.EncryptionPolicy>wordt standaard ingesteld op <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>voor de <xref:System.Net.Security.SslStream>-exemplaar dat is opgesteld.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Het gebruik van de Null-codering is vereist wanneer het versleutelingsbeleid voor is ingesteld op <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Een <xref:System.IO.Stream>object dat wordt gebruikt door de <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> voor het verzenden en ontvangen van gegevens.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Een Boolean die aangeeft van de sluiting gedrag van de <xref:System.IO.Stream>object dat wordt gebruikt door de <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> voor het verzenden en ontvangen van gegevens.</xref:System.IO.Stream> Deze parameter geeft u aan als de interne stream open blijft."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>kan niet worden gelezen.       - of - <code>innerStream</code> is niet schrijfbaar."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - of - <code>innerStream</code> gelijk is aan <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> met behulp van de opgegeven klasse <xref:System.IO.Stream>, stream sluiting gedrag en validatie gemachtigde van het certificaat.</xref:System.IO.Stream>"
  remarks: "Wanneer u opgeeft `true` voor de `leaveStreamOpen` parameter, sluit de <xref:System.Net.Security.SslStream>heeft geen effect op de `innerStream` stream; u moet expliciet sluiten `innerStream` wanneer u deze niet langer hoeft</xref:System.Net.Security.SslStream>       De `userCertificateValidationCallback` van gemachtigde `certificateErrors` argument bevat alle Windows-foutcodes die is geretourneerd door het kanaal Security Support Provider Interface (SSPI). De retourwaarde van de methode werd aangeroepen door de `userCertificateValidationCallback` gemachtigde bepaalt of verificatie is geslaagd.       De security-protocol en de cryptografische algoritmen zijn al geselecteerd als de `userCertificateValidationCallback` van de gemachtigde-methode wordt aangeroepen. U kunt de methode gebruiken om te bepalen of de geselecteerde cryptografische algoritmen en sterkte voldoende is voor uw toepassing zijn. Als u niet de methode moet retourneren `false` om te voorkomen dat de <xref:System.Net.Security.SslStream>worden gemaakt.</xref:System.Net.Security.SslStream>       Als een waarde niet is opgegeven in het configuratiebestand voor encryptionpolicy, de <xref:System.Net.Security.EncryptionPolicy>wordt standaard ingesteld op <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>voor de <xref:System.Net.Security.SslStream>-exemplaar dat is opgesteld.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Het gebruik van de Null-codering is vereist wanneer het versleutelingsbeleid voor is ingesteld op <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>      > [!NOTE] > Framework van de SSL-sessies-cache als ze zijn gemaakt en probeert om een sessie in de cache voor een nieuwe aanvraag indien mogelijk opnieuw te gebruiken. Wanneer u probeert een SSL-sessie opnieuw wilt gebruiken, het Framework wordt gebruikt voor het eerste element van <xref:System.Net.HttpWebRequest.ClientCertificates%2A>(als er is een), of probeert een anonieme sessies opnieuw te gebruiken als <xref:System.Net.HttpWebRequest.ClientCertificates%2A>is leeg.</xref:System.Net.HttpWebRequest.ClientCertificates%2A> </xref:System.Net.HttpWebRequest.ClientCertificates%2A>      > [!NOTE] > Clientcertificaten worden niet ondersteund in het SSL-protocol versie 2."
  example:
  - "The following code example creates an <xref:System.Net.Security.SslStream> and initiates the client portion of the authentication.  \n  \n [!code-cpp[NclSslClientSync#4](~/add/codesnippet/cpp/9eaa69b2-6619-41cf-8f97-_1.cpp)]\n [!code-cs[NclSslClientSync#4](~/add/codesnippet/csharp/9eaa69b2-6619-41cf-8f97-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Een <xref:System.IO.Stream>object dat wordt gebruikt door de <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> voor het verzenden en ontvangen van gegevens.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Een Boolean die aangeeft van de sluiting gedrag van de <xref:System.IO.Stream>object dat wordt gebruikt door de <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> voor het verzenden en ontvangen van gegevens.</xref:System.IO.Stream> Deze parameter geeft u aan als de interne stream open blijft."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "Een <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> gemachtigde verantwoordelijk voor het valideren van het certificaat dat is opgegeven door de externe partij."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>kan niet worden gelezen.       - of - <code>innerStream</code> is niet schrijfbaar."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - of - <code>innerStream</code> gelijk is aan <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> met behulp van de opgegeven klasse <xref:System.IO.Stream>, stream sluiting gedrag, certificaat validatie gemachtigde en certificaat selectie gemachtigde.</xref:System.IO.Stream>"
  remarks: "Wanneer u opgeeft `true` voor de `leaveStreamOpen` parameter, sluit de <xref:System.Net.Security.SslStream>heeft geen effect op de `innerStream` stream; u moet expliciet sluiten `innerStream` wanneer u deze niet langer hoeft</xref:System.Net.Security.SslStream>       De `userCertificateValidationCallback` van gemachtigde `certificateErrors` argument bevat alle Windows-foutcodes die is geretourneerd door het kanaal Security Support Provider Interface (SSPI). De retourwaarde van de methode werd aangeroepen door de `userCertificateValidationCallback` gemachtigde bepaalt of verificatie is geslaagd.       De security-protocol en de cryptografische algoritmen zijn al geselecteerd als de `userCertificateValidationCallback` van de gemachtigde-methode wordt aangeroepen. U kunt de methode gebruiken om te bepalen of de geselecteerde cryptografische algoritmen en sterkte voldoende is voor uw toepassing zijn. Als u niet de methode moet retourneren `false` om te voorkomen dat de <xref:System.Net.Security.SslStream>worden gemaakt.</xref:System.Net.Security.SslStream>       De `userCertificateSelectionCallback` gemachtigde is handig als uw toepassing meerdere certificaten heeft en een certificaat dynamisch moet kiezen. Certificaten in de &quot;Mijn&quot;-archief worden doorgegeven aan de methode werd aangeroepen door de gemachtigde.       Als een waarde niet is opgegeven in het configuratiebestand voor encryptionpolicy, de <xref:System.Net.Security.EncryptionPolicy>wordt standaard ingesteld op <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>voor de <xref:System.Net.Security.SslStream>-exemplaar dat is opgesteld.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Het gebruik van de Null-codering is vereist wanneer het versleutelingsbeleid voor is ingesteld op <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>      > [!NOTE] > Framework van de SSL-sessies-cache als ze zijn gemaakt en probeert om een sessie in de cache voor een nieuwe aanvraag indien mogelijk opnieuw te gebruiken. Wanneer u probeert een SSL-sessie opnieuw wilt gebruiken, het Framework wordt gebruikt voor het eerste element van P:System.Net.HttpWebRequest.ClientCertificates (indien aanwezig), of probeert een anonieme sessies hergebruiken als P:System.Net.HttpWebRequest.ClientCertificates is leeg."
  example:
  - "The following code example demonstrates calling this constructor. This example is part of a larger example provided for the <xref:System.Net.Security.SslStream> class.  \n  \n [!code-cpp[NclSslClientAsync#6](~/add/codesnippet/cpp/dc8fc9af-8c2a-4c30-be77-_1.cpp)]\n [!code-cs[NclSslClientAsync#6](~/add/codesnippet/csharp/dc8fc9af-8c2a-4c30-be77-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Een <xref:System.IO.Stream>object dat wordt gebruikt door de <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> voor het verzenden en ontvangen van gegevens.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Een Boolean die aangeeft van de sluiting gedrag van de <xref:System.IO.Stream>object dat wordt gebruikt door de <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> voor het verzenden en ontvangen van gegevens.</xref:System.IO.Stream> Deze parameter geeft u aan als de interne stream open blijft."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "Een <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> gemachtigde verantwoordelijk voor het valideren van het certificaat dat is opgegeven door de externe partij."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "Een <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> gemachtigde die verantwoordelijk is voor het selecteren van het certificaat dat wordt gebruikt voor verificatie."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>kan niet worden gelezen.       - of - <code>innerStream</code> is niet schrijfbaar."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - of - <code>innerStream</code> gelijk is aan <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> met behulp van de opgegeven klasse<xref:System.IO.Stream></xref:System.IO.Stream>"
  remarks: "Het gebruik van de Null-codering is vereist wanneer de `encryptionPolicy` parameter is ingesteld op <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Een <xref:System.IO.Stream>object dat wordt gebruikt door de <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> voor het verzenden en ontvangen van gegevens.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Een Boolean die aangeeft van de sluiting gedrag van de <xref:System.IO.Stream>object dat wordt gebruikt door de <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> voor het verzenden en ontvangen van gegevens.</xref:System.IO.Stream> Deze parameter geeft u aan als de interne stream open blijft."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "Een <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> gemachtigde verantwoordelijk voor het valideren van het certificaat dat is opgegeven door de externe partij."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "Een <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> gemachtigde die verantwoordelijk is voor het selecteren van het certificaat dat wordt gebruikt voor verificatie."
    - id: encryptionPolicy
      type: System.Net.Security.EncryptionPolicy
      description: "The <xref href=&quot;System.Net.Security.EncryptionPolicy&quot;></xref> to use."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>kan niet worden gelezen.       - of - <code>innerStream</code> is niet schrijfbaar.       - of - <code>encryptionPolicy</code> is niet geldig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - of - <code>innerStream</code> gelijk is aan <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  id: AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Aangeroepen door clients om de server te verifiëren en eventueel de client in een client / server-verbinding."
  remarks: "Deze methode wordt geverifieerd met <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Er zijn geen clientcertificaten worden gebruikt in de verificatie. De certificaatintrekkingslijst is niet tijdens de verificatie ingeschakeld. De opgegeven waarde voor `targetHost` moet overeenkomen met de naam op van de server-certificaat.       Als verificatie is geslaagd, moet u de <xref:System.Net.Security.SslStream.IsEncrypted%2A> <xref:System.Net.Security.SslStream.IsSigned%2A>Eigenschappen om te bepalen welke beveiligingsservices worden gebruikt door de <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> en</xref:System.Net.Security.SslStream.IsEncrypted%2A> controleren Controleer de <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>eigenschap om te bepalen of er wederzijdse verificatie is opgetreden.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Als de verificatie is mislukt, ontvangt u een <xref:System.Security.Authentication.AuthenticationException>, en dit <xref:System.Net.Security.SslStream>is niet langer bruikbaar.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> U moet dit object te sluiten en verwijder alle verwijzingen naar deze zodat deze kan worden verzameld door de garbage collector."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "De naam van de server die u dit deelt <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "De verificatie is mislukt en links van dit object in een onbruikbare status."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Verificatie al is gebeurd.       - of - Server-verificatie met behulp van dit <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> is eerder geprobeerd.       - of - verificatie wordt al uitgevoerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is gesloten."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Aangeroepen door clients om de server te verifiëren en eventueel de client in een client / server-verbinding. Het verificatieproces maakt gebruik van het opgegeven certificaat verzamelen en de SSL-protocol."
  remarks: "Als verificatie is geslaagd, moet u de <xref:System.Net.Security.SslStream.IsEncrypted%2A> <xref:System.Net.Security.SslStream.IsSigned%2A>Eigenschappen om te bepalen welke beveiligingsservices worden gebruikt door de <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> en</xref:System.Net.Security.SslStream.IsEncrypted%2A> controleren Controleer de <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>eigenschap om te bepalen of er wederzijdse verificatie is opgetreden.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Als de verificatie is mislukt, ontvangt u een <xref:System.Security.Authentication.AuthenticationException>, en dit <xref:System.Net.Security.SslStream>is niet langer bruikbaar.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> U moet dit object te sluiten en verwijder alle verwijzingen naar deze zodat deze kan worden verzameld door de garbage collector.      > [!NOTE] > Clientcertificaten worden niet ondersteund in het SSL-protocol versie 2."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "De naam van de server die u dit deelt <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "De <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> die clientcertificaten bevat."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "De <xref:System.Security.Authentication.SslProtocols>waarde waarmee het protocol dat wordt gebruikt voor verificatie.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Een <xref:System.Boolean>waarde die aangeeft of de certificaatintrekkingslijst tijdens de verificatie is ingeschakeld.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  id: AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Aangeroepen door clients om de server te verifiëren en eventueel de client in een client / server-verbinding als een asynchrone bewerking."
  remarks: "Deze methode wordt geverifieerd met <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Er zijn geen clientcertificaten worden gebruikt in de verificatie. De certificaatintrekkingslijst is niet tijdens de verificatie ingeschakeld. De opgegeven waarde voor `targetHost` moet overeenkomen met de naam op van de server-certificaat.       Als verificatie is geslaagd, moet u de <xref:System.Net.Security.SslStream.IsEncrypted%2A> <xref:System.Net.Security.SslStream.IsSigned%2A>Eigenschappen om te bepalen welke beveiligingsservices worden gebruikt door de <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> en</xref:System.Net.Security.SslStream.IsEncrypted%2A> controleren Controleer de <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>eigenschap om te bepalen of er wederzijdse verificatie is opgetreden.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Als de verificatie is mislukt, ontvangt u een <xref:System.Security.Authentication.AuthenticationException>, en dit <xref:System.Net.Security.SslStream>is niet langer bruikbaar.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> U moet dit object te sluiten en verwijder alle verwijzingen naar deze zodat deze kan worden verzameld door de garbage collector."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "De naam van de server die u dit deelt <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    return:
      type: System.Threading.Tasks.Task
      description: "Retourneert <xref:System.Threading.Tasks.Task>het taakobject dat de asynchrone bewerking vertegenwoordigt.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "De verificatie is mislukt en links van dit object in een onbruikbare status."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Verificatie al is gebeurd.       - of - Server-verificatie met behulp van dit <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> is eerder geprobeerd.       - of - verificatie wordt al uitgevoerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is gesloten."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Aangeroepen door clients om de server te verifiëren en eventueel de client in een client / server-verbinding als een asynchrone bewerking. Het verificatieproces maakt gebruik van het opgegeven certificaat verzamelen en de SSL-protocol."
  remarks: "Als verificatie is geslaagd, moet u de <xref:System.Net.Security.SslStream.IsEncrypted%2A> <xref:System.Net.Security.SslStream.IsSigned%2A>Eigenschappen om te bepalen welke beveiligingsservices worden gebruikt door de <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> en</xref:System.Net.Security.SslStream.IsEncrypted%2A> controleren Controleer de <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>eigenschap om te bepalen of er wederzijdse verificatie is opgetreden.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Als de verificatie is mislukt, ontvangt u een <xref:System.Security.Authentication.AuthenticationException>, en dit <xref:System.Net.Security.SslStream>is niet langer bruikbaar.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> U moet dit object te sluiten en verwijder alle verwijzingen naar deze zodat deze kan worden verzameld door de garbage collector.      > [!NOTE] > Clientcertificaten worden niet ondersteund in het SSL-protocol versie 2."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "De naam van de server die u dit deelt <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "De <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> die clientcertificaten bevat."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "De <xref:System.Security.Authentication.SslProtocols>waarde waarmee het protocol dat wordt gebruikt voor verificatie.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Een <xref:System.Boolean>waarde die aangeeft of de certificaatintrekkingslijst tijdens de verificatie is ingeschakeld.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "Retourneert <xref:System.Threading.Tasks.Task>het taakobject dat de asynchrone bewerking vertegenwoordigt.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Aangeroepen door servers om de server en eventueel de client in een client / server-verbinding met het opgegeven certificaat te verifiëren."
  remarks: "Deze methode wordt geverifieerd met <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> De certificaatintrekkingslijst is niet tijdens de verificatie ingeschakeld. De client is niet vereist voor het bieden van een certificaat voor verificatie.       Deze methode worden geblokkeerd totdat de bewerking is voltooid. Om te voorkomen dat geblokkeerd tot de bewerking is voltooid, gebruikt u een van de <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>methode overloads.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       Als de verificatie is mislukt, ontvangt u een <xref:System.Security.Authentication.AuthenticationException>, en dit <xref:System.Net.Security.SslStream>is niet langer bruikbaar.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> U moet dit object te sluiten en verwijder alle verwijzingen naar deze zodat deze kan worden verzameld door de garbage collector."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Het certificaat dat wordt gebruikt om de server te verifiëren."
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "De verificatie is mislukt en links van dit object in een onbruikbare status."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Verificatie al is gebeurd.       - of - clientauthenticatie met behulp van dit <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> is eerder geprobeerd.       - of - verificatie wordt al uitgevoerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is gesloten."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "De <xref:System.Net.Security.SslStream.AuthenticateAsServer*>methode wordt niet ondersteund op Windows 95, Windows 98 of Windows ME.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Aangeroepen door servers om de server en eventueel de client in een client / server-verbinding met de opgegeven certificaten, vereisten en beveiligingsprotocol te verifiëren."
  remarks: "Deze methode worden geblokkeerd totdat de bewerking is voltooid. Om te voorkomen dat geblokkeerd tot de bewerking is voltooid, gebruikt u een van de <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>methode overloads.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       Als de verificatie is mislukt, ontvangt u een <xref:System.Security.Authentication.AuthenticationException>, en dit <xref:System.Net.Security.SslStream>is niet langer bruikbaar.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> U moet dit object te sluiten en verwijder alle verwijzingen naar deze zodat deze kan worden verzameld door de garbage collector."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "De X509Certificate gebruikt om de server te verifiëren."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "Een <xref:System.Boolean>waarde die aangeeft of de client om wordt gevraagd een certificaat voor authenticatie.</xref:System.Boolean> Houd er rekening mee dat dit alleen een aanvraag is--indien er geen certificaat opgegeven, wordt de server nog steeds de verbindingsaanvraag accepteert."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "De <xref:System.Security.Authentication.SslProtocols>waarde waarmee het protocol dat wordt gebruikt voor verificatie.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Een <xref:System.Boolean>waarde die aangeeft of de certificaatintrekkingslijst tijdens de verificatie is ingeschakeld.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>is geen geldige <xref:System.Security.Authentication.SslProtocols> waarde."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "De verificatie is mislukt en links van dit object in een onbruikbare status."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Verificatie al is gebeurd.       - of - clientauthenticatie met behulp van dit <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> is eerder geprobeerd.       - of - verificatie wordt al uitgevoerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is gesloten."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "De <xref:System.Net.Security.SslStream.AuthenticateAsServer*>methode wordt niet ondersteund op Windows 95, Windows 98 of Windows ME.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Aangeroepen door servers om de server en eventueel de client in een client / server-verbinding met het opgegeven certificaat als een asynchrone bewerking te verifiëren."
  remarks: "Deze methode wordt geverifieerd met <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> De certificaatintrekkingslijst is niet tijdens de verificatie ingeschakeld. De client is niet vereist voor het bieden van een certificaat voor verificatie.       Als de verificatie is mislukt, ontvangt u een <xref:System.Security.Authentication.AuthenticationException>, en dit <xref:System.Net.Security.SslStream>is niet langer bruikbaar.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> U moet dit object te sluiten en verwijder alle verwijzingen naar deze zodat deze kan worden verzameld door de garbage collector."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Het certificaat dat wordt gebruikt om de server te verifiëren."
    return:
      type: System.Threading.Tasks.Task
      description: "Retourneert <xref:System.Threading.Tasks.Task>het taakobject dat de asynchrone bewerking vertegenwoordigt.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "De verificatie is mislukt en links van dit object in een onbruikbare status."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Verificatie al is gebeurd.       - of - clientauthenticatie met behulp van dit <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> is eerder geprobeerd.       - of - verificatie wordt al uitgevoerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is gesloten."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "De <xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>methode wordt niet ondersteund op Windows 95, Windows 98 of Windows ME.</xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Aangeroepen door servers om de server en eventueel de client in een client / server-verbinding met de opgegeven certificaten, de vereisten en het beveiligingsprotocol als een asynchrone bewerking te verifiëren."
  remarks: "Als de verificatie is mislukt, ontvangt u een <xref:System.Security.Authentication.AuthenticationException>, en dit <xref:System.Net.Security.SslStream>is niet langer bruikbaar.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> U moet dit object te sluiten en verwijder alle verwijzingen naar deze zodat deze kan worden verzameld door de garbage collector."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "De X509Certificate gebruikt om de server te verifiëren."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "Een <xref:System.Boolean>waarde die aangeeft of de client om wordt gevraagd een certificaat voor authenticatie.</xref:System.Boolean> Houd er rekening mee dat dit alleen een aanvraag is--indien er geen certificaat opgegeven, wordt de server nog steeds de verbindingsaanvraag accepteert."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "De <xref:System.Security.Authentication.SslProtocols>waarde waarmee het protocol dat wordt gebruikt voor verificatie.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Een <xref:System.Boolean>waarde die aangeeft of de certificaatintrekkingslijst tijdens de verificatie is ingeschakeld.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "Retourneert <xref:System.Threading.Tasks.Task>het taakobject dat de asynchrone bewerking vertegenwoordigt.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Aangeroepen door clients om te beginnen met een asynchrone bewerking voor de server te verifiëren en eventueel de client."
  remarks: "Deze methode wordt geverifieerd met <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Er zijn geen clientcertificaten worden gebruikt in de verificatie. De certificaatintrekkingslijst is niet tijdens de verificatie ingeschakeld.       De opgegeven waarde voor `targetHost` moet overeenkomen met de naam op van de server-certificaat.       De asynchrone verificatiebewerking moet worden uitgevoerd door het aanroepen van de <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>methode.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Normaal gesproken de methode wordt aangeroepen door de `asyncCallback` delegeren.       Deze methode worden niet geblokkeerd terwijl de bewerking is voltooid. Als u wilt blokkeren totdat de bewerking is voltooid, gebruikt u een van de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>methode overloads.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Zie voor gedetailleerde informatie over het gebruik van de asynchrone programmeermodel [asynchroon synchrone methoden aanroepen](~/add/includes/ajax-current-ext-md.md) als u krijgt een <xref:System.Security.Authentication.AuthenticationException>, deze <xref:System.Net.Security.SslStream>is niet langer bruikbaar.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> U moet dit object te sluiten en verwijder alle verwijzingen naar deze zodat deze kan worden verzameld door de garbage collector."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "De naam van de server die u dit deelt <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Een <xref:System.AsyncCallback>gemachtigde die verwijst naar de methode aan te roepen als de verificatie voltooid is.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Een door de gebruiker gedefinieerde object dat informatie over het opnieuw bevat. Dit object wordt doorgegeven aan de `asyncCallback` delegeren wanneer de bewerking is voltooid."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>-object dat de status van de asynchrone bewerking geeft.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "De verificatie is mislukt en links van dit object in een onbruikbare status."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Verificatie al is gebeurd.       - of - Server-verificatie met behulp van dit <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> is eerder geprobeerd.       - of - verificatie wordt al uitgevoerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is gesloten."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Aangeroepen door clients om te beginnen met een asynchrone bewerking voor de server te verifiëren en eventueel de client met de opgegeven certificaten en security-protocol."
  remarks: "De opgegeven waarde voor `targetHost` moet overeenkomen met de naam op van de server-certificaat.       De asynchrone verificatiebewerking moet worden uitgevoerd door het aanroepen van de <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>methode.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Normaal gesproken de methode wordt aangeroepen door de `asyncCallback` delegeren.       Deze methode worden niet geblokkeerd terwijl de bewerking is voltooid. Als u wilt blokkeren totdat de bewerking is voltooid, gebruikt u een van de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>methode overloads.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Zie voor gedetailleerde informatie over het gebruik van de asynchrone programmeermodel [asynchroon synchrone methoden aanroepen](~/add/includes/ajax-current-ext-md.md) als u krijgt een <xref:System.Security.Authentication.AuthenticationException>, deze <xref:System.Net.Security.SslStream>is niet langer bruikbaar.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> U moet dit object te sluiten en verwijder alle verwijzingen naar deze zodat deze kan worden verzameld door de garbage collector.      > [!NOTE] > Clientcertificaten worden niet ondersteund in het SSL-protocol versie 2."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "De naam van de server die u dit deelt <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "De <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> met clientcertificaten."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "De <xref:System.Security.Authentication.SslProtocols>waarde waarmee het protocol dat wordt gebruikt voor verificatie.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Een <xref:System.Boolean>waarde die aangeeft of de certificaatintrekkingslijst tijdens de verificatie is ingeschakeld.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Een <xref:System.AsyncCallback>gemachtigde die verwijst naar de methode aan te roepen als de verificatie voltooid is.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Een door de gebruiker gedefinieerde object dat informatie over het opnieuw bevat. Dit object wordt doorgegeven aan de `asyncCallback` delegeren wanneer de bewerking is voltooid."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>-object dat de status van de asynchrone bewerking geeft.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>is geen geldige <xref:System.Security.Authentication.SslProtocols> waarde."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "De verificatie is mislukt en links van dit object in een onbruikbare status."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Verificatie al is gebeurd.       - of - Server-verificatie met behulp van dit <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> is eerder geprobeerd.       - of - verificatie wordt al uitgevoerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is gesloten."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Aangeroepen door servers om te beginnen met een asynchrone bewerking om te verifiëren van de client en eventueel op de server in een client / server-verbinding."
  remarks: "Deze methode wordt geverifieerd met <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> De certificaatintrekkingslijst is niet tijdens de verificatie ingeschakeld. De client is niet vereist voor het bieden van een certificaat voor verificatie.       De asynchrone verificatiebewerking moet worden uitgevoerd door het aanroepen van de <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>methode.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Normaal gesproken de methode wordt aangeroepen door de `asyncCallback` delegeren.       Deze methode worden niet geblokkeerd terwijl de bewerking is voltooid. Als u wilt blokkeren totdat de bewerking is voltooid, gebruikt u een van de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>methode overloads.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Zie voor gedetailleerde informatie over het gebruik van de asynchrone programmeermodel [asynchroon synchrone methoden aanroepen](~/add/includes/ajax-current-ext-md.md) als u krijgt een <xref:System.Security.Authentication.AuthenticationException>, deze <xref:System.Net.Security.SslStream>is niet langer bruikbaar.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> U moet dit object te sluiten en verwijder alle verwijzingen naar deze zodat deze kan worden verzameld door de garbage collector."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "De X509Certificate gebruikt om de server te verifiëren."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Een <xref:System.AsyncCallback>gemachtigde die verwijst naar de methode aan te roepen als de verificatie voltooid is.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Een door de gebruiker gedefinieerde object dat informatie over het opnieuw bevat. Dit object wordt doorgegeven aan de `asyncCallback` delegeren wanneer de bewerking is voltooid."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>object met de status van de asynchrone bewerking.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "De verificatie is mislukt en links van dit object in een onbruikbare status."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Verificatie al is gebeurd.       - of - clientauthenticatie met behulp van dit <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> is eerder geprobeerd.       - of - verificatie wordt al uitgevoerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is gesloten."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "De <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>methode wordt niet ondersteund op Windows 95, Windows 98 of Windows ME.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Aangeroepen door servers om te beginnen met een asynchrone bewerking voor de server en eventueel de client met behulp van de opgegeven certificaten, vereisten en het beveiligingsprotocol voor verificatie."
  remarks: "De asynchrone verificatiebewerking moet worden uitgevoerd door het aanroepen van de <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>methode.</xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> Normaal gesproken de methode wordt aangeroepen door de `asyncCallback` delegeren.       Deze methode worden niet geblokkeerd terwijl de bewerking is voltooid. Als u wilt blokkeren totdat de bewerking is voltooid, gebruikt u een van de <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>methode overloads.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>       Zie voor gedetailleerde informatie over het gebruik van de asynchrone programmeermodel [asynchroon synchrone methoden aanroepen](~/add/includes/ajax-current-ext-md.md) als u krijgt een <xref:System.Security.Authentication.AuthenticationException>, deze <xref:System.Net.Security.SslStream>is niet langer bruikbaar.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> U moet dit object te sluiten en verwijder alle verwijzingen naar deze zodat deze kan worden verzameld door de garbage collector."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "De X509Certificate gebruikt om de server te verifiëren."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "Een <xref:System.Boolean>waarde die aangeeft of de client om wordt gevraagd een certificaat voor authenticatie.</xref:System.Boolean> Houd er rekening mee dat dit alleen een aanvraag is--indien er geen certificaat opgegeven, wordt de server nog steeds de verbindingsaanvraag accepteert."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "De <xref:System.Security.Authentication.SslProtocols>waarde waarmee het protocol dat wordt gebruikt voor verificatie.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Een <xref:System.Boolean>waarde die aangeeft of de certificaatintrekkingslijst tijdens de verificatie is ingeschakeld.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Een <xref:System.AsyncCallback>gemachtigde die verwijst naar de methode aan te roepen als de verificatie voltooid is.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Een door de gebruiker gedefinieerde object dat informatie over het opnieuw bevat. Dit object wordt doorgegeven aan de `asyncCallback` delegeren wanneer de bewerking is voltooid."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>-object dat de status van de asynchrone bewerking geeft.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>is geen geldige <xref:System.Security.Authentication.SslProtocols> waarde."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "De verificatie is mislukt en links van dit object in een onbruikbare status."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Verificatie al is gebeurd.       - of - Server-verificatie met behulp van dit <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> is eerder geprobeerd.       - of - verificatie wordt al uitgevoerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is gesloten."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "De <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>methode wordt niet ondersteund op Windows 95, Windows 98 of Windows ME.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Een asynchrone leesbewerking die gegevens leest uit de stroom en slaat ze op in de opgegeven matrix begint."
  remarks: "Als versleuteling en ondertekening zijn ingeschakeld, de leesbewerking leest de gegevens van de onderliggende stroom, controleert de integriteit van de gegevens en/of ontsleuteld. De asynchrone leesbewerking moet worden uitgevoerd door het aanroepen van de <xref:System.Net.Security.SslStream.EndRead%2A>methode.</xref:System.Net.Security.SslStream.EndRead%2A> Normaal gesproken de methode wordt aangeroepen door de `asyncCallback` delegeren.       Deze methode worden niet geblokkeerd terwijl de bewerking is voltooid. Als u wilt blokkeren totdat de bewerking is voltooid, gebruiken de <xref:System.Net.Security.SslStream.Read%2A>methode.</xref:System.Net.Security.SslStream.Read%2A>       Zie voor gedetailleerde informatie over het gebruik van de asynchrone programmeermodel [asynchroon synchrone methoden aanroepen](~/add/includes/ajax-current-ext-md.md) de <xref:System.Net.Security.SslStream>klasse biedt geen ondersteuning voor meerdere gelijktijdige lees-en schrijfopdrachten.</xref:System.Net.Security.SslStream>       U kunt deze methode niet aanroepen totdat u bent geverifieerd. Om te verifiëren van de eerste aanroep van de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, of <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>methoden.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates starting an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#8](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_1.cpp)]\n [!code-cs[NclSslClientAsync#8](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_1.cs)]  \n  \n [!code-cpp[NclSslClientAsync#4](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_2.cpp)]\n [!code-cs[NclSslClientAsync#4](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_2.cs)]  \n  \n The following method is called when the read completes.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_3.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_3.cs)]"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Een <xref:System.Byte>matrix die ontvangt van het aantal bytes uit de stroom lezen.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "De op nul gebaseerde locatie in `buffer` waarop u wilt beginnen met opslaan van de gegevens lezen uit deze stroom."
    - id: count
      type: System.Int32
      description: "Het maximum aantal bytes lezen uit de stroom."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Een <xref:System.AsyncCallback>gemachtigde die verwijst naar de methode aan te roepen wanneer de leesbewerking voltooid is.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Een door de gebruiker gedefinieerde object dat informatie over de leesbewerking bevat. Dit object wordt doorgegeven aan de `asyncCallback` delegeren wanneer de bewerking is voltooid."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>-object dat de status van de asynchrone bewerking geeft.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; de lengte van <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De leesbewerking is mislukt.       - of - versleuteling wordt gebruikt, maar de gegevens kan niet worden ontsleuteld."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Er bestaat al een leesbewerking uitgevoerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is gesloten."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Geen heeft verificatie plaatsgevonden."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Een asynchrone schrijfbewerking die schrijft begint <xref:System.Byte>s uit de opgegeven buffer naar de stroom.</xref:System.Byte>"
  remarks: ''
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NclSslServerAsync#5](~/add/codesnippet/csharp/7192cc61-a256-4249-aafa-_1.cs)]\n [!code-cpp[NclSslServerAsync#5](~/add/codesnippet/cpp/7192cc61-a256-4249-aafa-_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Een <xref:System.Byte>matrix waaruit de bytes te worden geschreven naar de stroom.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "De op nul gebaseerde locatie in `buffer` waarop u wilt beginnen te lezen bytes worden geschreven naar de stroom."
    - id: count
      type: System.Int32
      description: "Een <xref:System.Int32>waarde waarmee het aantal bytes lezen uit `buffer`.</xref:System.Int32>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Een <xref:System.AsyncCallback>gemachtigde die verwijst naar de methode aan te roepen wanneer de write-bewerking voltooid is.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Een door de gebruiker gedefinieerde object dat informatie over de schrijfbewerking bevat. Dit object wordt doorgegeven aan de `asyncCallback` delegeren wanneer de bewerking is voltooid."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>object met de status van de asynchrone bewerking.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; de lengte van <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De schrijfbewerking is mislukt."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Er bestaat al een schrijfbewerking uitgevoerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is gesloten."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Geen heeft verificatie plaatsgevonden."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanRead
  id: CanRead
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of de onderliggende stroom kan worden gelezen.</xref:System.Boolean>"
  remarks: "Als u geslaagde verificatie heeft plaatsgevonden, deze eigenschap de waarde die wordt geretourneerd door aan te roepen <xref:System.IO.Stream.CanRead%2A>op de onderliggende stroom.</xref:System.IO.Stream.CanRead%2A>       De onderliggende stroom is opgegeven bij het maken van een exemplaar van de <xref:System.Net.Security.SslStream>klasse.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_14_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_14_1.cs)]"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als verificatie heeft plaatsgevonden en de onderliggende stroom kan worden gelezen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanSeek
  id: CanSeek
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of de onderliggende stroom kan worden doorzocht.</xref:System.Boolean>"
  remarks: "Probeer niet om in te stellen van de positie van de <xref:System.Net.Security.SslStream>object of de onderliggende stroom.</xref:System.Net.Security.SslStream>       De onderliggende stroom is opgegeven bij het maken van een exemplaar van de <xref:System.Net.Security.SslStream>klasse.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "Deze eigenschap retourneert altijd <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanTimeout
  id: CanTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of de onderliggende stroom time-outs ondersteunt.</xref:System.Boolean>"
  remarks: "Deze eigenschap de waarde die wordt geretourneerd door aan te roepen <xref:System.IO.Stream.CanTimeout%2A>op de onderliggende stroom.</xref:System.IO.Stream.CanTimeout%2A>       De onderliggende stroom is opgegeven bij het maken van een exemplaar van de <xref:System.Net.Security.SslStream>klasse.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_8_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_8_1.cs)]"
  syntax:
    content: public override bool CanTimeout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de onderliggende stroom time-outs ondersteunt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanWrite
  id: CanWrite
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of de onderliggende stroom geschreven worden.</xref:System.Boolean>"
  remarks: "Als u geslaagde verificatie heeft plaatsgevonden, deze eigenschap de waarde die wordt geretourneerd door aan te roepen <xref:System.IO.Stream.CanWrite%2A>op de onderliggende stroom.</xref:System.IO.Stream.CanWrite%2A>       De onderliggende stroom is opgegeven bij het maken van een exemplaar van de <xref:System.Net.Security.SslStream>klasse.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_17_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_17_1.cs)]"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als verificatie heeft plaatsgevonden, en de onderliggende stroom beschrijfbare; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  id: CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of de certificaatintrekkingslijst is ingeschakeld tijdens het validatieproces van het certificaat.</xref:System.Boolean>"
  remarks: "De certificaatintrekkingslijst bevat certificaten die door de verlener is ingetrokken. Controleren van de lijst met een negatieve invloed op prestaties maar verbetert de beveiliging van toepassingen."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public virtual bool CheckCertRevocationStatus { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de certificaatintrekkingslijst is ingeschakeld. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CheckCertRevocationStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherAlgorithm
  id: CipherAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hiermee wordt een waarde waarmee de bulk-versleutelingsalgoritme die wordt gebruikt door dit <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Een waarde van <xref:System.Security.Authentication.CipherAlgorithmType>is vereist voor de eigenschap CipherAlgorithm wanneer de <xref:System.Net.Security.EncryptionPolicy>opsommingswaarde die wordt gebruikt om samen te stellen een <xref:System.Net.Security.SslStream>exemplaar.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy> </xref:System.Security.Authentication.CipherAlgorithmType>       [!INCLUDE[winxpsvr](~/add/includes/winxpsvr-md.md)]en [!INCLUDE[winxp](~/add/includes/winxp-md.md)] bieden geen ondersteuning voor de <xref:System.Security.Authentication.CipherAlgorithmType>waarde.</xref:System.Security.Authentication.CipherAlgorithmType> Dus zelfs als de <xref:System.Security.Authentication.CipherAlgorithmType>waarde wordt gebruikt voor het maken van het <xref:System.Net.Security.SslStream>exemplaar, de <xref:System.Net.Security.EncryptionPolicy>eigenschap worden <xref:System.Security.Authentication.CipherAlgorithmType>.</xref:System.Security.Authentication.CipherAlgorithmType> </xref:System.Net.Security.EncryptionPolicy> </xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.CipherAlgorithmType> De <xref:System.Security.Authentication.CipherAlgorithmType>waarde wordt alleen geretourneerd in Windows Vista en hoger.</xref:System.Security.Authentication.CipherAlgorithmType>"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_10_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_10_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }
    return:
      type: System.Security.Authentication.CipherAlgorithmType
      description: "Een <xref:System.Security.Authentication.CipherAlgorithmType>waarde.</xref:System.Security.Authentication.CipherAlgorithmType>"
  overload: System.Net.Security.SslStream.CipherAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De eigenschap CipherAlgorithm is geopend voordat de voltooiing van het verificatieproces of het verificatieproces is mislukt."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherStrength
  id: CipherStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hiermee wordt een waarde waarmee de sterkte van het cipher-algoritme dat door dit <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "De waarde van deze eigenschap is nul totdat de verificatie vindt plaats.       Deze eigenschap retourneert een van de volgende waarden: - 0 - 40-56-80-128-168-192 - 256"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_6_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_6_1.cs)]"
  syntax:
    content: public virtual int CipherStrength { get; }
    return:
      type: System.Int32
      description: "Een <xref:System.Int32>waarde die de kracht van het algoritme in bits aangeeft.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.CipherStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Heft de niet-beheerde bronnen worden gebruikt door de <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> en eventueel de beheerde bronnen vrij."
  remarks: "Deze methode wordt aangeroepen door het publiek `Dispose()`methode en de <xref:System.Object.Finalize%2A>methode.</xref:System.Object.Finalize%2A> `Dispose()`Hiermee wordt de beveiligde `Dispose(Boolean)` methode met de `disposing` parameter ingesteld op `true`. <xref:System.Object.Finalize%2A>roept `Dispose` met `disposing` ingesteld op `false`.</xref:System.Object.Finalize%2A>       Wanneer de `disposing` parameter is ingesteld op true, wordt deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit <xref:System.Net.Security.SslStream>verwijzingen.</xref:System.Net.Security.SslStream> Deze methode roept de `Dispose()` methode van elk object waarnaar wordt verwezen."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om alleen niet-beheerde bronnen vrij te geven."
  overload: System.Net.Security.SslStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  id: EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Een wachtende asynchrone server-verificatie-bewerking gestart met een eerdere aanroep voor <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*> eindigt"
  remarks: "Als de bewerking is niet voltooid, wordt deze methode blokkeert totdat dit het geval is. Als de verificatie is geslaagd, moet u de <xref:System.Net.Security.SslStream.IsEncrypted%2A> <xref:System.Net.Security.SslStream.IsSigned%2A>Eigenschappen om te bepalen welke beveiligingsservices worden gebruikt door de <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> en</xref:System.Net.Security.SslStream.IsEncrypted%2A> controleren Controleer de <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>eigenschap om te bepalen of er wederzijdse verificatie is opgetreden.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Als de verificatie is mislukt, ontvangt u een <xref:System.Security.Authentication.AuthenticationException>, en dit <xref:System.Net.Security.SslStream>is niet langer bruikbaar.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> U moet dit object te sluiten en verwijder alle verwijzingen naar deze zodat deze kan worden verzameld door de garbage collector.       Om deze bewerking synchroon uitvoeren, gebruikt u een van de <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>methoden.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>exemplaar is geretourneerd door een aanroep naar <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>is niet gemaakt door een aanroep naar <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "De verificatie is mislukt en links van dit object in een onbruikbare status."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is geen in behandeling server-verificatie te voltooien."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  id: EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Een wachtende asynchrone verificatie clientbewerking gestart met een eerdere aanroep voor <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*> eindigt"
  remarks: "Als de bewerking is niet voltooid, wordt deze methode blokkeert totdat dit het geval is. Als de verificatie is geslaagd, moet u de <xref:System.Net.Security.SslStream.IsEncrypted%2A> <xref:System.Net.Security.SslStream.IsSigned%2A>Eigenschappen om te bepalen welke beveiligingsservices worden gebruikt door de <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> en</xref:System.Net.Security.SslStream.IsEncrypted%2A> controleren Controleer de <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>eigenschap om te bepalen of er wederzijdse verificatie is opgetreden.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Als de verificatie is mislukt, ontvangt u een <xref:System.Security.Authentication.AuthenticationException>, en dit <xref:System.Net.Security.SslStream>is niet langer bruikbaar.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> U moet dit object te sluiten en verwijder alle verwijzingen naar deze zodat deze kan worden verzameld door de garbage collector.       Om deze bewerking synchroon uitvoeren, gebruikt u een van de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>methode.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>exemplaar is geretourneerd door een aanroep naar <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>is niet gemaakt door een aanroep naar <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "De verificatie is mislukt en links van dit object in een onbruikbare status."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is geen clientverificatie in behandeling om te voltooien."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Een asynchrone leesbewerking gestart met een eerdere aanroep voor <xref:System.Net.Security.SslStream.BeginRead*>.</xref:System.Net.Security.SslStream.BeginRead*> eindigt"
  remarks: "Als de bewerking is niet voltooid, wordt deze methode blokkeert totdat dit het geval is.       Gebruik voor deze bewerking synchroon uitvoeren, de <xref:System.Net.Security.SslStream.Read%2A>methode.</xref:System.Net.Security.SslStream.Read%2A>       U kunt deze methode niet aanroepen totdat u bent geverifieerd. Om te verifiëren van de eerste aanroep van de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, of <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>methoden.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/m-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/m-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>exemplaar geretourneerd door een aanroep naar <xref:System.Net.Security.SslStream.BeginRead*></xref:System.Net.Security.SslStream.BeginRead*> </xref:System.IAsyncResult>"
    return:
      type: System.Int32
      description: "Een <xref:System.Int32>waarde waarmee het aantal bytes lezen uit de onderliggende stroom.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>is niet gemaakt door een aanroep naar <xref:System.Net.Security.SslStream.BeginRead*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Geen heeft verificatie plaatsgevonden."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De leesbewerking is mislukt."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Een asynchrone schrijfbewerking gestart met een eerdere aanroep voor <xref:System.Net.Security.SslStream.BeginWrite*>.</xref:System.Net.Security.SslStream.BeginWrite*> eindigt"
  remarks: "Als de bewerking is niet voltooid, wordt deze methode blokkeert totdat dit het geval is.       Een toepassing kan deze methode niet aanroepen totdat u bent geverifieerd. Aanroepen om te verifiëren, een van de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, of <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>methoden.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Gebruik voor deze bewerking synchroon uitvoeren, de <xref:System.Net.Security.SslStream.Write%2A>methode.</xref:System.Net.Security.SslStream.Write%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous write operation.  \n  \n [!code-cs[NclSslServerAsync#4](~/add/codesnippet/csharp/m-system.net.security.ss_1_1.cs)]\n [!code-cpp[NclSslServerAsync#4](~/add/codesnippet/cpp/m-system.net.security.ss_1_1.cpp)]"
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>exemplaar geretourneerd door een aanroep naar <xref:System.Net.Security.SslStream.BeginWrite*></xref:System.Net.Security.SslStream.BeginWrite*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>is niet gemaakt door een aanroep naar <xref:System.Net.Security.SslStream.BeginWrite*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Geen heeft verificatie plaatsgevonden."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De schrijfbewerking is mislukt."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Flush
  id: Flush
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Zorgt ervoor dat de gegevens naar de onderliggende apparaat moeten worden geschreven."
  remarks: "Deze methode wordt aangeroepen <xref:System.IO.Stream.Flush%2A>op de onderliggende stroom.</xref:System.IO.Stream.Flush%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cpp[NclSslClientSync#5](~/add/codesnippet/cpp/m-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslClientSync#5](~/add/codesnippet/csharp/m-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Net.Security.SslStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashAlgorithm
  id: HashAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hiermee haalt u de algoritme die wordt gebruikt voor authenticatiecodes genereren bericht (MACs)."
  remarks: "Algoritmen voor berichtauthenticatie genereren berichthashes en handtekeningen die worden gebruikt voor het detecteren van geknoei en kunnen worden vervalst."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_9_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_9_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }
    return:
      type: System.Security.Authentication.HashAlgorithmType
      description: "Een <xref:System.Security.Authentication.HashAlgorithmType>waarde.</xref:System.Security.Authentication.HashAlgorithmType>"
  overload: System.Net.Security.SslStream.HashAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De eigenschap HashAlgorithm is geopend voordat de voltooiing van het verificatieproces of het verificatieproces is mislukt."
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashStrength
  id: HashStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt een waarde die aangeeft van de sterkte van het hashalgoritme dat door dit exemplaar."
  remarks: "De waarde van deze eigenschap is nul totdat de verificatie vindt plaats."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public virtual int HashStrength { get; }
    return:
      type: System.Int32
      description: "Een <xref:System.Int32>waarde waarmee de sterkte van de <xref:System.Security.Authentication.HashAlgorithmType>algoritme in bits.</xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Int32> Geldige waarden zijn 128 of 160."
  overload: System.Net.Security.SslStream.HashStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsAuthenticated
  id: IsAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of verificatie gelukt is.</xref:System.Boolean>"
  remarks: "Clients verifiëren door het aanroepen van de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>of <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>methoden.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> Servers verifiëren door het aanroepen van de <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>of <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>methoden.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public override bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als er geen geslaagde verificatie uitgevoerd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsEncrypted
  id: IsEncrypted
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of dit <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> gegevensversleuteling gebruikt.</xref:System.Boolean>"
  remarks: "Versleuteling helpt om de privacy van de gegevens te beschermen, namelijk nuttig het om ervoor te zorgen dat wanneer gegevens verzonden, deze kan niet worden ontcijferd door derden."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override bool IsEncrypted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als gegevens worden versleuteld voordat het wordt verzonden via het netwerk en ontsleuteld wanneer deze bereikt het externe eindpunt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsEncrypted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  id: IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of server en de client zijn geverifieerd.</xref:System.Boolean>"
  remarks: "Wederzijdse verificatie is opgegeven door de server wanneer de server wil dat de client een certificaat om verificatie te voorzien."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_11_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_11_1.cs)]"
  syntax:
    content: public override bool IsMutuallyAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de server is geverifieerd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsServer
  id: IsServer
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of de lokale kant van de verbinding wordt gebruikt door dit <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> als de server is geverifieerd.</xref:System.Boolean>"
  remarks: "Verificatie is mislukt of is niet uitgevoerd, retourneert deze eigenschap `false`.       Aanroepen om te verifiëren als de server, de <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>of <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>methoden.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_13_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_13_1.cs)]"
  syntax:
    content: public override bool IsServer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het lokale eindpunt is geverifieerd als het servergedeelte van de geverifieerde verbinding; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsServer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsSigned
  id: IsSigned
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of de gegevens die worden verzonden met behulp van deze stroom is ondertekend.</xref:System.Boolean>"
  remarks: "Gegevens ondertekening helpt om de integriteit van de gegevens te beschermen, namelijk helpt het de ontvanger kan zien of de gegevens onderweg is geknoeid."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_19_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_19_1.cs)]"
  syntax:
    content: public override bool IsSigned { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de gegevens is ondertekend voordat het wordt verzonden; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsSigned*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "De algoritme voor sleuteluitwisseling die wordt gebruikt door dit opgehaald <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "De waarde van deze eigenschap is <xref:System.Security.Authentication.ExchangeAlgorithmType>totdat de verificatie vindt plaats.</xref:System.Security.Authentication.ExchangeAlgorithmType>       De algoritme voor sleuteluitwisseling beschermt gegevens gebruikt om gedeelde sleutels te genereren."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_16_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_16_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }
    return:
      type: System.Security.Authentication.ExchangeAlgorithmType
      description: "Een <xref:System.Security.Authentication.ExchangeAlgorithmType>waarde.</xref:System.Security.Authentication.ExchangeAlgorithmType>"
  overload: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  id: KeyExchangeStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt een waarde die aangeeft van de sterkte van de algoritme voor sleuteluitwisseling gebruikt door dit exemplaar."
  remarks: "De waarde van deze eigenschap is nul totdat de verificatie vindt plaats.       In algemene scenario&quot;s, de waarde van deze eigenschap is een van de volgende: - 512 768-1024 2048"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public virtual int KeyExchangeStrength { get; }
    return:
      type: System.Int32
      description: "Een <xref:System.Int32>waarde waarmee de sterkte van de <xref:System.Security.Authentication.ExchangeAlgorithmType>algoritme in bits.</xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Int32>"
  overload: System.Net.Security.SslStream.KeyExchangeStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Length
  id: Length
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hiermee haalt u de lengte van de onderliggende stroom."
  remarks: "Deze eigenschap de waarde die wordt geretourneerd door aan te roepen <xref:System.IO.Stream.Length%2A>op de onderliggende stroom.</xref:System.IO.Stream.Length%2A> Als de onderliggende stroom niet kan worden doorzocht, wordt deze methode doorgaans er een uitzondering gegenereerd. De runtime-type van de onderliggende stroom bepaalt de runtime-type van de uitzondering die is gegenereerd."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       De lengte van de onderliggende stroom."
  overload: System.Net.Security.SslStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De waarde van deze eigenschap wordt niet ondersteund wanneer de onderliggende stroom een <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.LocalCertificate
  id: LocalCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt het certificaat dat wordt gebruikt voor verificatie van het lokale eindpunt."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_1_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_1_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Een X509Certificate-object dat het certificaat dat is opgegeven voor verificatie vertegenwoordigt of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen certificaat is opgegeven."
  overload: System.Net.Security.SslStream.LocalCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Verificatie is mislukt of nog niet heeft plaatsgevonden."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Position
  id: Position
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Opgehaald of ingesteld van de huidige positie in de onderliggende stroom."
  remarks: "Deze eigenschap de waarde die wordt geretourneerd door aan te roepen <xref:System.IO.Stream.Position%2A>op de onderliggende stroom.</xref:System.IO.Stream.Position%2A> Als de onderliggende stroom niet kan worden doorzocht, wordt deze methode doorgaans er een uitzondering gegenereerd. De runtime-type van de onderliggende stroom bepaalt de runtime-type van de uitzondering die is gegenereerd."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       De huidige positie in de onderliggende stroom."
  overload: System.Net.Security.SslStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Als u deze eigenschap wordt niet ondersteund.       - of - ophalen van deze eigenschap de waarde wordt niet ondersteund wanneer de onderliggende stroom een <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Leest de gegevens uit deze stroom en slaat ze op in de opgegeven matrix."
  remarks: "De methode wordt gelezen maximaal `count` bytes uit de stroom en slaat ze op in `buffer` beginnen bij `offset`. U kunt meerdere gelijktijdige leesbewerkingen niet uitvoeren.       U kunt deze methode niet aanroepen totdat u bent geverifieerd. Om te verifiëren van de eerste aanroep van de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, of <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>methoden.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Gebruik voor deze bewerking asynchroon uitvoeren, de <xref:System.Net.Security.SslStream.BeginRead%2A>methode.</xref:System.Net.Security.SslStream.BeginRead%2A>"
  example:
  - "The following code example demonstrates reading from an <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslClientSync#6](~/add/codesnippet/cpp/m-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslClientSync#6](~/add/codesnippet/csharp/m-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Een <xref:System.Byte>matrix die de bytes ontvangt lezen uit deze stroom.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Een <xref:System.Int32>die de op nul gebaseerde locatie in bevat `buffer` waarop u wilt beginnen met opslaan van de gegevens lezen uit deze stroom.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "Een <xref:System.Int32>die het maximum aantal bytes lezen van deze stroom bevat.</xref:System.Int32>"
    return:
      type: System.Int32
      description: "Een <xref:System.Int32>waarde waarmee het aantal bytes dat is gelezen.</xref:System.Int32> Wanneer er geen gegevens meer worden gelezen, resulteert in 0."
  overload: System.Net.Security.SslStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; de lengte van <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De leesbewerking is mislukt. Controleer de binnenste uitzondering, indien aanwezig zijn om te bepalen van de oorzaak van de fout."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Er bestaat al een leesbewerking uitgevoerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is gesloten."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Geen heeft verificatie plaatsgevonden."
  platform:
  - net462
- uid: System.Net.Security.SslStream.ReadTimeout
  id: ReadTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Opgehaald of ingesteld van de hoeveelheid tijd die een leesbewerking wachten op gegevens blokkeert."
  remarks: "Deze eigenschap de waarde die wordt geretourneerd door aan te roepen <xref:System.IO.Stream.ReadTimeout%2A>op de onderliggende stroom.</xref:System.IO.Stream.ReadTimeout%2A> Wanneer u deze eigenschap instellen de <xref:System.IO.Stream.ReadTimeout%2A>waarde van de onderliggende stroom is ingesteld op de opgegeven waarde.</xref:System.IO.Stream.ReadTimeout%2A>       Als de onderliggende stroom een <xref:System.Net.Sockets.NetworkStream>, ReadTimeout in milliseconden en is ingesteld op <xref:System.Threading.Timeout.Infinite>standaard zodat die operations geen time-out wilt lezen.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_18_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_18_1.cs)]"
  syntax:
    content: public override int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: "Een <xref:System.Int32>Hiermee worden de tijdsduur die verstrijkt voordat een synchrone bewerking mislukt leest.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.ReadTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.RemoteCertificate
  id: RemoteCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt het certificaat dat wordt gebruikt voor verificatie van het externe eindpunt."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_15_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_15_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Een X509Certificate-object dat het certificaat dat is opgegeven voor verificatie vertegenwoordigt of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen certificaat is opgegeven."
  overload: System.Net.Security.SslStream.RemoteCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Verificatie is mislukt of nog niet heeft plaatsgevonden."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Genereert een <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "Roep deze methode niet. Deze is overgenomen, maar wordt niet ondersteund door de <xref:System.Net.Security.SslStream>klasse.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Deze waarde wordt genegeerd."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Deze waarde wordt genegeerd."
    return:
      type: System.Int64
      description: "Altijd genereert een <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.Security.SslStream.Seek*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zoeken wordt niet ondersteund door <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> objecten."
  platform:
  - net462
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hiermee stelt u de lengte van de onderliggende stroom."
  remarks: "Deze methode wordt aangeroepen <xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>op de onderliggende stroom opgegeven wanneer dit <xref:System.Net.Security.SslStream>is gemaakt.</xref:System.Net.Security.SslStream> </xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Een <xref:System.Int64>waarde waarmee de lengte van de stroom.</xref:System.Int64>"
  overload: System.Net.Security.SslStream.SetLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.SslProtocol
  id: SslProtocol
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt een waarde die aangeeft van het beveiligingsprotocol dat wordt gebruikt om deze verbinding te verifiëren."
  remarks: "De van ondersteunde beveiligingsprotocollen zijn opgegeven wanneer de <xref:System.Net.Security.SslStream>wordt gemaakt.</xref:System.Net.Security.SslStream> Als geen beveiligingsprotocol is doorgegeven aan de constructor, wordt het exemplaar gemaakt met <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> De werkelijke protocol dat wordt gebruikt voor verificatie is geselecteerd op basis van de protocollen die worden ondersteund door de client en server."
  example:
  - "The following example displays the security properties of the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_7_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_7_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }
    return:
      type: System.Security.Authentication.SslProtocols
      description: "De <xref:System.Security.Authentication.SslProtocols>waarde waarmee het protocol dat wordt gebruikt voor verificatie.</xref:System.Security.Authentication.SslProtocols>"
  overload: System.Net.Security.SslStream.SslProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.TransportContext
  id: TransportContext
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt de <xref:System.Net.TransportContext>gebruikt voor verificatie met behulp van uitgebreide beveiliging.</xref:System.Net.TransportContext>"
  syntax:
    content: public System.Net.TransportContext TransportContext { get; }
    return:
      type: System.Net.TransportContext
      description: "De <xref:System.Net.TransportContext>-object dat de kanaal-binding-token (CBT) gebruikt voor uitgebreide beveiliging bevat.</xref:System.Net.TransportContext>"
  overload: System.Net.Security.SslStream.TransportContext*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  id: Write(System.Byte[])
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "De opgegeven gegevens schrijft naar deze stroom."
  remarks: "Deze methode blokkeert terwijl de bewerking is voltooid. Als u niet blokkeert terwijl de bewerking is voltooid, gebruikt de <xref:System.Net.Security.SslStream.BeginWrite%2A>methode.</xref:System.Net.Security.SslStream.BeginWrite%2A>       U kunt deze methode niet aanroepen totdat u bent geverifieerd. Om te verifiëren van de eerste aanroep van de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, of <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>methoden.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       De <xref:System.Net.Security.SslStream>klasse biedt geen ondersteuning voor meerdere gelijktijdige schrijfbewerkingen.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates writing to an authenticated <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public void Write (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Een <xref:System.Byte>matrix die het aantal bytes geschreven naar de stroom levert.</xref:System.Byte>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De schrijfbewerking is mislukt."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Er bestaat al een schrijfbewerking uitgevoerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is gesloten."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Geen heeft verificatie plaatsgevonden."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Het opgegeven aantal schrijven <xref:System.Byte>s naar de onderliggende stroom met de opgegeven buffer en offset.</xref:System.Byte>"
  remarks: "Deze methode blokkeert terwijl de bewerking is voltooid. Om te voorkomen dat blokkeert terwijl de bewerking is voltooid voor de bewerking is voltooid, gebruikt u de <xref:System.Net.Security.SslStream.BeginWrite%2A>methode.</xref:System.Net.Security.SslStream.BeginWrite%2A>       U kunt deze methode niet aanroepen totdat u bent geverifieerd. Om te verifiëren van de eerste aanroep van de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, of <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>methoden.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       De <xref:System.Net.Security.SslStream>klasse biedt geen ondersteuning voor meerdere gelijktijdige schrijfbewerkingen.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Een <xref:System.Byte>matrix die het aantal bytes geschreven naar de stroom levert.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Een <xref:System.Int32>die de op nul gebaseerde locatie in bevat `buffer` waarop u wilt beginnen te lezen bytes worden geschreven naar de stroom.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "Een <xref:System.Int32>waarin het aantal bytes lezen uit `buffer`.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; de lengte van <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De schrijfbewerking is mislukt."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Er bestaat al een schrijfbewerking uitgevoerd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object is gesloten."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Geen heeft verificatie plaatsgevonden."
  platform:
  - net462
- uid: System.Net.Security.SslStream.WriteTimeout
  id: WriteTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Opgehaald of ingesteld van de hoeveelheid tijd die een schrijfbewerking wachten op gegevens blokkeert."
  remarks: "Deze eigenschap de waarde die wordt geretourneerd door aan te roepen <xref:System.IO.Stream.WriteTimeout%2A>op de onderliggende stroom.</xref:System.IO.Stream.WriteTimeout%2A> Voor set-bewerkingen, de opgegeven waarde bepaalt de <xref:System.IO.Stream.WriteTimeout%2A>waarde van de onderliggende stroom.</xref:System.IO.Stream.WriteTimeout%2A>       Als de onderliggende stroom een <xref:System.Net.Sockets.NetworkStream>, WriteTimeout in milliseconden en is ingesteld op <xref:System.Threading.Timeout.Infinite>standaard zodat die bewerkingen uitvoeren geen time-out schrijven.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_12_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_12_1.cs)]"
  syntax:
    content: public override int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "Een <xref:System.Int32>Hiermee worden de tijdsduur die verstrijkt voordat een synchrone schrijfbewerking is mislukt.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.WriteTimeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: System.Net.Security.AuthenticatedStream
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Authentication.AuthenticationException
  parent: System.Security.Authentication
  isExternal: false
  name: AuthenticationException
  nameWithType: AuthenticationException
  fullName: System.Security.Authentication.AuthenticationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
- uid: System.Net.Security.RemoteCertificateValidationCallback
  parent: System.Net.Security
  isExternal: false
  name: RemoteCertificateValidationCallback
  nameWithType: RemoteCertificateValidationCallback
  fullName: System.Net.Security.RemoteCertificateValidationCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
- uid: System.Net.Security.LocalCertificateSelectionCallback
  parent: System.Net.Security
  isExternal: false
  name: LocalCertificateSelectionCallback
  nameWithType: LocalCertificateSelectionCallback
  fullName: System.Net.Security.LocalCertificateSelectionCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
- uid: System.Net.Security.EncryptionPolicy
  parent: System.Net.Security
  isExternal: false
  name: EncryptionPolicy
  nameWithType: EncryptionPolicy
  fullName: System.Net.Security.EncryptionPolicy
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Security.Authentication.SslProtocols
  parent: System.Security.Authentication
  isExternal: true
  name: SslProtocols
  nameWithType: SslProtocols
  fullName: System.Security.Authentication.SslProtocols
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.CanRead
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
- uid: System.Security.Authentication.CipherAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: CipherAlgorithmType
  nameWithType: CipherAlgorithmType
  fullName: System.Security.Authentication.CipherAlgorithmType
- uid: System.Net.Security.SslStream.CipherStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
- uid: System.Net.Security.SslStream.Flush
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
- uid: System.Net.Security.SslStream.HashAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
- uid: System.Security.Authentication.HashAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: HashAlgorithmType
  nameWithType: HashAlgorithmType
  fullName: System.Security.Authentication.HashAlgorithmType
- uid: System.Net.Security.SslStream.HashStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
- uid: System.Security.Authentication.ExchangeAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: ExchangeAlgorithmType
  nameWithType: ExchangeAlgorithmType
  fullName: System.Security.Authentication.ExchangeAlgorithmType
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Security.SslStream.LocalCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.ReadTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
- uid: System.Net.Security.SslStream.SslProtocol
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.WriteTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
- uid: System.Net.Security.SslStream.#ctor*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream
  nameWithType: SslStream.SslStream
- uid: System.Net.Security.SslStream.AuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient
  nameWithType: SslStream.AuthenticateAsClient
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync
  nameWithType: SslStream.AuthenticateAsClientAsync
- uid: System.Net.Security.SslStream.AuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer
  nameWithType: SslStream.AuthenticateAsServer
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync
  nameWithType: SslStream.AuthenticateAsServerAsync
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient
  nameWithType: SslStream.BeginAuthenticateAsClient
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer
  nameWithType: SslStream.BeginAuthenticateAsServer
- uid: System.Net.Security.SslStream.BeginRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead
  nameWithType: SslStream.BeginRead
- uid: System.Net.Security.SslStream.BeginWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite
  nameWithType: SslStream.BeginWrite
- uid: System.Net.Security.SslStream.CanRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
- uid: System.Net.Security.SslStream.CipherStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose
  nameWithType: SslStream.Dispose
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient
  nameWithType: SslStream.EndAuthenticateAsClient
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer
  nameWithType: SslStream.EndAuthenticateAsServer
- uid: System.Net.Security.SslStream.EndRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead
  nameWithType: SslStream.EndRead
- uid: System.Net.Security.SslStream.EndWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite
  nameWithType: SslStream.EndWrite
- uid: System.Net.Security.SslStream.Flush*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush
  nameWithType: SslStream.Flush
- uid: System.Net.Security.SslStream.HashAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
- uid: System.Net.Security.SslStream.HashStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
- uid: System.Net.Security.SslStream.KeyExchangeStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
- uid: System.Net.Security.SslStream.LocalCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
- uid: System.Net.Security.SslStream.Read*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read
  nameWithType: SslStream.Read
- uid: System.Net.Security.SslStream.ReadTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek
  nameWithType: SslStream.Seek
- uid: System.Net.Security.SslStream.SetLength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength
  nameWithType: SslStream.SetLength
- uid: System.Net.Security.SslStream.SslProtocol*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
- uid: System.Net.Security.SslStream.Write*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write
  nameWithType: SslStream.Write
- uid: System.Net.Security.SslStream.WriteTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
