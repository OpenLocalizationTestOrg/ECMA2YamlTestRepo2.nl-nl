### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  id: FormViewUpdatedEventArgs
  children:
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues
  - System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues
  langs:
  - csharp
  name: FormViewUpdatedEventArgs
  nameWithType: FormViewUpdatedEventArgs
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  type: Class
  summary: "Biedt gegevens voor de <xref href=&quot;System.Web.UI.WebControls.FormView.ItemUpdated&quot;> </xref> gebeurtenis."
  remarks: "De <xref:System.Web.UI.WebControls.FormView>beheren verhoogt de <xref:System.Web.UI.WebControls.FormView.ItemUpdated>-gebeurtenis geactiveerd wanneer een knop bijwerken (een knop met de `CommandName` eigenschap is ingesteld op &quot;Update&quot;) binnen het besturingselement wordt geklikt, maar na de <xref:System.Web.UI.WebControls.FormView>besturingselement record bijwerkt.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemUpdated> </xref:System.Web.UI.WebControls.FormView> Hiermee kunt u voorzien in een gebeurtenisafhandeling-methode die een aangepaste routine, zoals het controleren van de resultaten van een bijwerkbewerking wanneer deze gebeurtenis treedt op uitvoert.       Een object FormViewUpdatedEventArgs is doorgegeven aan de methode verwerking van gebeurtenissen, zodat u kunt bepalen het aantal records dat wordt beïnvloed en eventuele uitzonderingen die hebben plaatsgevonden. Om te bepalen het aantal records dat is beïnvloed door de updatebewerking, gebruikt de <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>eigenschap.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> Gebruik de <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>eigenschap om te bepalen of eventuele uitzonderingen opgetreden.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> U kunt ook aangeven of de uitzondering is afgehandeld in de methode gebeurtenisafhandeling door in te stellen de <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>eigenschap.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> Als u toegang wilt tot de oorspronkelijke sleutelveld waarden voor de bijgewerkte record, gebruikt u de <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A>eigenschap.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> De oorspronkelijke waarden van de niet-sleutelveld toegankelijk zijn via de <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>eigenschap.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> Bijgewerkte waarden (waaronder bijgewerkte sleutelveldwaarden, als u toestaat dat de gebruiker om belangrijke velden te bewerken) zijn toegankelijk via de <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>eigenschap.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>       Standaard de <xref:System.Web.UI.WebControls.FormView>keert terug naar de modus die is opgegeven door de <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>eigenschap na de update-bewerking.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> Wanneer u een uitzondering die is opgetreden tijdens de updatebewerking verwerkt, kunt u de <xref:System.Web.UI.WebControls.FormView>besturingselement in de bewerkingsmodus door in te stellen de <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>eigenschap `true`.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> </xref:System.Web.UI.WebControls.FormView>       Zie voor meer informatie over het verwerken van gebeurtenissen [KROONTJESPEN: gebeurtenissen verbruikt](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Zie voor een lijst met eerste eigenschapswaarden voor een exemplaar van de klasse FormViewUpdatedEventArgs de <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.%23ctor%2A>constructor.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.%23ctor%2A>"
  example:
  - "The following example demonstrates how to use the FormViewUpdatedEventArgs object passed to the event-handling method for the <xref:System.Web.UI.WebControls.FormView.ItemUpdated> event to determine whether an exception occurred during an update operation.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_148_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_148_1.aspx)]"
  syntax:
    content: 'public class FormViewUpdatedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  id: '#ctor(System.Int32,System.Exception)'
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: FormViewUpdatedEventArgs(Int32,Exception)
  nameWithType: FormViewUpdatedEventArgs.FormViewUpdatedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.FormViewUpdatedEventArgs(Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.UI.WebControls.FormViewUpdatedEventArgs&quot;> </xref> klasse."
  remarks: "Deze constructor gebruiken om te initialiseren van een nieuw exemplaar van de <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>klasse.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>       De volgende tabel toont de eerste waarden voor een exemplaar van de <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>klasse.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>      | Eigenschap | Initiële waarde |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>| De waarde van de `affectedRows` parameter. |   | <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>| Het object <xref:System.Exception?displayProperty=fullName>in de `e` parameter. |   | <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>| Ingesteld op `false`. |   | <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>| Ingesteld op `false`. |      > [!NOTE] > Deze constructor wordt hoofdzakelijk gebruikt door besturingselement ontwikkelaars bij het verhogen van gebeurtenissen.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> </xref:System.Exception?displayProperty=fullName> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>"
  syntax:
    content: public FormViewUpdatedEventArgs (int affectedRows, Exception e);
    parameters:
    - id: affectedRows
      type: System.Int32
      description: "Het aantal rijen zijn beïnvloed door de updatebewerking."
    - id: e
      type: System.Exception
      description: "Een <xref:System.Exception>die staat voor de uitzondering die optreedt wanneer de updatebewerking is uitgevoerd.</xref:System.Exception> Als er geen uitzondering wordt gegenereerd, gebruikt u <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> voor deze parameter."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: FormViewUpdatedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hiermee haalt u het aantal rijen zijn beïnvloed door de updatebewerking."
  remarks: "Gebruik de eigenschap AffectedRows om te bepalen het aantal records dat is beïnvloed door de updatebewerking. Deze eigenschap wordt meestal gebruikt om te verifiëren dat het juiste aantal records is bijgewerkt in de volgende situaties:-Controleer of slechts één record is bijgewerkt. Een onjuist geschreven update-instructie kan soms meerdere records bijwerken.      -Controleer of dat er een record is bijgewerkt wanneer er een fout optreedt tijdens de updatebewerking die niet afkomstig van een uitzondering.      -Controleer of dat er een record is bijgewerkt wanneer een besturingselement voor gegevensbronnen die ondersteuning biedt voor conflictdetectie (optimistische gelijktijdigheid van taken controleren), zoals de <xref:System.Web.UI.WebControls.SqlDataSource>en <xref:System.Web.UI.WebControls.ObjectDataSource>besturingselementen, heeft de <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>eigenschap ingesteld op de `ConflictOptions.CompareAllValues` opsommingswaarde.</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> Een record die is gewijzigd door een andere gebruiker gelijktijdig mogelijk onder deze instelling kan niet worden bijgewerkt."
  example:
  - "The following example demonstrates how to use the AffectedRows property to verify that a record was updated.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1281_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1281_1.aspx)]"
  syntax:
    content: public int AffectedRows { get; }
    return:
      type: System.Int32
      description: "Het aantal rijen zijn beïnvloed door de updatebewerking."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: FormViewUpdatedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "De uitzondering opgehaald (indien aanwezig) die is opgetreden tijdens de updatebewerking."
  remarks: "De eigenschap Exception gebruiken om te bepalen van de uitzondering (indien aanwezig) die is opgetreden tijdens de updatebewerking. Als er geen uitzonderingen zijn gegenereerd, retourneert deze eigenschap `null`.      > [!NOTE] > Als een uitzondering opgetreden is en u besluit om af te handelen van de uitzondering in de gebeurtenis-handler, moet u instellen de <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>eigenschap `true`; anders wordt de uitzondering opnieuw door de <xref:System.Web.UI.WebControls.FormView>besturingselement.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>"
  example:
  - "The following example demonstrates how to use the Exception property to determine whether an exception occurred during an update operation.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_564_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_564_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "Een <xref:System.Exception>-object met de uitzondering die is opgetreden tijdens de updatebewerking.</xref:System.Exception>"
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: FormViewUpdatedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of een uitzondering die is opgetreden tijdens de updatebewerking is verwerkt in de gebeurtenisstroom handler."
  remarks: "Wanneer een uitzondering is opgetreden tijdens de updatebewerking, gebruikt u de eigenschap ExceptionHandled om aan te geven of de uitzondering is afgehandeld in de gebeurtenisstroom handler. Als deze eigenschap is ingesteld op `true`, de uitzondering wordt beschouwd als verwerkt en wordt niet gegenereerd opnieuw door de <xref:System.Web.UI.WebControls.FormView>besturingselement.</xref:System.Web.UI.WebControls.FormView> Als deze eigenschap is ingesteld op `false`, de uitzondering opnieuw. Om te bepalen welke uitzondering is gegenereerd, gebruikt de <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>eigenschap.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>"
  example:
  - "The following example demonstrates how to use the ExceptionHandled property to indicate that the exception was handled in the event handler.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_345_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_345_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de uitzondering is afgehandeld in de gebeurtenisstroom handler; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode
  id: KeepInEditMode
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: KeepInEditMode
  nameWithType: FormViewUpdatedEventArgs.KeepInEditMode
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld met een waarde die aangeeft of de <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> besturingselement in de bewerkingsmodus moet blijven na de update-bewerking."
  remarks: "Standaard de <xref:System.Web.UI.WebControls.FormView>keert terug naar de modus die is opgegeven door de <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>eigenschap na de update-bewerking.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> De eigenschap KeepInEditMode gebruiken om op te geven of de <xref:System.Web.UI.WebControls.FormView>besturingselement moet blijven in de bewerkingsmodus.</xref:System.Web.UI.WebControls.FormView> Om de <xref:System.Web.UI.WebControls.FormView>beheren in de bewerkingsmodus, stelt deze eigenschap op `true`.</xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > Deze eigenschap moet worden alleen gebruikt als een situatie (zoals een uitzondering optreedt) waarvoor het besturingselement zich anders gedragen dan normaal. Als de <xref:System.Web.UI.WebControls.FormView>besturingselement moet blijven in de bewerkingsmodus standaard, stelt u de <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>eigenschap in plaats daarvan.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the KeepInEditMode property to keep a <xref:System.Web.UI.WebControls.FormView> control in edit mode when an exception occurs.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1052_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1052_1.aspx)]"
  syntax:
    content: public bool KeepInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om te blijven in de bewerkingsmodus na een updatebewerking. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys
  id: Keys
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: Keys
  nameWithType: FormViewUpdatedEventArgs.Keys
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hiermee haalt u een woordenlijst die de oorspronkelijke sleutelveld naam-waardeparen voor de bijgewerkte record bevat."
  remarks: "De eigenschap sleutels bevat de oorspronkelijke waarden van de sleutelvelden die zijn vermeld in de <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>eigenschap van een <xref:System.Web.UI.WebControls.FormView>besturingselement.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> De eigenschap sleutels gebruiken voor toegang tot de waarden van het sleutelveld voor een bijgewerkte record. Bijvoorbeeld, kunt u deze waarden een logboek met bijgewerkte records bijhouden.      > [!NOTE] > Als u toestaat dat de gebruiker de waarden van de sleutelvelden bijwerken de <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>eigenschap bevat de oorspronkelijke waarden van sleutelveld.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> De bijgewerkte waarden worden opgeslagen in de <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>eigenschap.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>       De eigenschap sleutels retourneert een <xref:System.Collections.Specialized.OrderedDictionary>object waarmee de <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>interface.</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> De <xref:System.Collections.Specialized.OrderedDictionary>object bevat <xref:System.Collections.DictionaryEntry?displayProperty=fullName>objecten die de velden van de bijgewerkte record vertegenwoordigen.</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> Voor toegang tot de veldnamen, gebruikt de <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>eigenschap van de <xref:System.Collections.Specialized.OrderedDictionary>object.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> Op deze manier kunt u de veldwaarden openen door met behulp van de <xref:System.Collections.Specialized.OrderedDictionary.Values%2A>eigenschap.</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      > [!NOTE] > Als een snelkoppeling ook kunt u de indexeerfunctie van de <xref:System.Collections.Specialized.OrderedDictionary>object voor toegang tot het veld waarden rechtstreeks.</xref:System.Collections.Specialized.OrderedDictionary> Besturingselementen die afhankelijk van de volgorde van de velden zijn van de gegevensbron (zoals <xref:System.Web.UI.WebControls.AccessDataSource>) toegang krijgen tot waarden in het veld met de index.</xref:System.Web.UI.WebControls.AccessDataSource>"
  example:
  - "The following example demonstrates how to use the Keys property to access the values of the key field for an updated record.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_531_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_531_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary Keys { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "Een <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> die een dictionary van de oorspronkelijke sleutelveld naam-waardeparen voor de bijgewerkte record bevat."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues
  id: NewValues
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: NewValues
  nameWithType: FormViewUpdatedEventArgs.NewValues
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hiermee haalt u een woordenlijst die het nieuwe veld naam-waardeparen voor de bijgewerkte record bevat."
  remarks: "Gebruik de eigenschap nieuwe waarden voor toegang tot de nieuwe veldwaarden voor de bijgewerkte record. Bijvoorbeeld, kunt u deze waarden een logboek met bijgewerkte records bijhouden.      > [!NOTE] > Als u toestaat dat de gebruiker de waarden van de sleutelvelden bijwerken de <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>eigenschap bevat de oorspronkelijke waarden van sleutelveld.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> De bijgewerkte waarden worden opgeslagen in de <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>eigenschap.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>       De eigenschap nieuwe waarden retourneert een <xref:System.Collections.Specialized.OrderedDictionary>object waarmee de <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>interface.</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> De <xref:System.Collections.Specialized.OrderedDictionary>object bevat <xref:System.Collections.DictionaryEntry?displayProperty=fullName>objecten die de velden van de bijgewerkte record vertegenwoordigen.</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> Voor toegang tot de veldnamen, gebruikt de <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>eigenschap van de <xref:System.Collections.Specialized.OrderedDictionary>object.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> Op deze manier kunt u de veldwaarden openen door met behulp van de <xref:System.Collections.Specialized.OrderedDictionary.Values%2A>eigenschap.</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      > [!NOTE] > Als een snelkoppeling ook kunt u de indexeerfunctie van de <xref:System.Collections.Specialized.OrderedDictionary>object voor toegang tot het veld waarden rechtstreeks.</xref:System.Collections.Specialized.OrderedDictionary> Besturingselementen die afhankelijk van de volgorde van de velden zijn van de gegevensbron (zoals <xref:System.Web.UI.WebControls.AccessDataSource>) toegang krijgen tot waarden in het veld met de index.</xref:System.Web.UI.WebControls.AccessDataSource>"
  example:
  - "The following example demonstrates how to use the NewValues property to access the new values entered by the user for the non-key fields of the updated record.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_253_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_253_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary NewValues { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "Een <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> die een dictionary van het nieuwe veld naam-waardeparen voor de bijgewerkte record bevat."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues
  id: OldValues
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  langs:
  - csharp
  name: OldValues
  nameWithType: FormViewUpdatedEventArgs.OldValues
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hiermee haalt u een woordenlijst die de oorspronkelijke naam/waarde-paren van niet-sleutelveld voor de bijgewerkte record bevat."
  remarks: "Gebruik de eigenschap OldValues voor toegang tot de oorspronkelijke waarden van de niet-sleutelveld voor de bijgewerkte record. Bijvoorbeeld, kunt u deze waarden een logboek met bijgewerkte records bijhouden. Besturingselement voor een gegevensbron die ondersteuning biedt voor conflictdetectie (optimistische gelijktijdigheid van taken controleren), zoals de <xref:System.Web.UI.WebControls.SqlDataSource>en <xref:System.Web.UI.WebControls.ObjectDataSource>besturingselementen, met de <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>eigenschap ingesteld op de `ConflictOptions.CompareAllValues` ook vergelijkt deze originele waarden op basis van de record in de database voordat de update-bewerking wordt uitgevoerd.</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> Als een record is gelijktijdig door een andere gebruiker gewijzigd, wordt de record niet bijgewerkt.      > [!NOTE] > De <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A>eigenschap bevat geen sleutelvelden.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> Als u toestaat dat de gebruiker de waarden van de sleutelvelden die zijn bijgewerkt, de oorspronkelijke sleutelveldwaarden worden opgeslagen in de <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>eigenschap.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> De bijgewerkte waarden worden opgeslagen in de <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>eigenschap.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>       De <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>eigenschap retourneert een <xref:System.Collections.Specialized.OrderedDictionary>object waarmee de <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>interface.</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> De <xref:System.Collections.Specialized.OrderedDictionary>object bevat <xref:System.Collections.DictionaryEntry?displayProperty=fullName>objecten die de velden van de bijgewerkte record vertegenwoordigen.</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> Voor toegang tot de veldnamen, gebruikt de <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>eigenschap van de <xref:System.Collections.Specialized.OrderedDictionary>object.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> Op deze manier kunt u de veldwaarden openen door met behulp van de <xref:System.Collections.Specialized.OrderedDictionary.Values%2A>eigenschap.</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      > [!NOTE] > Als een snelkoppeling ook kunt u de indexeerfunctie van de <xref:System.Collections.Specialized.OrderedDictionary>object voor toegang tot het veld waarden rechtstreeks.</xref:System.Collections.Specialized.OrderedDictionary> Besturingselementen die afhankelijk van de volgorde van de velden zijn van de gegevensbron (zoals <xref:System.Web.UI.WebControls.AccessDataSource>) toegang krijgen tot waarden in het veld met de index.</xref:System.Web.UI.WebControls.AccessDataSource>"
  example:
  - "The following example demonstrates how to use the OldValues property to access the original values of the non-key fields for the updated record.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_164_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_164_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary OldValues { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "Een <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> die een dictionary van de oorspronkelijke naam/waarde-paren van veld voor de bijgewerkte record bevat."
  overload: System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: FormViewUpdatedEventArgs(Int32,Exception)
  nameWithType: FormViewUpdatedEventArgs.FormViewUpdatedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.FormViewUpdatedEventArgs(Int32,Exception)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewUpdatedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewUpdatedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewUpdatedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: KeepInEditMode
  nameWithType: FormViewUpdatedEventArgs.KeepInEditMode
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: Keys
  nameWithType: FormViewUpdatedEventArgs.Keys
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: NewValues
  nameWithType: FormViewUpdatedEventArgs.NewValues
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: OldValues
  nameWithType: FormViewUpdatedEventArgs.OldValues
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: FormViewUpdatedEventArgs
  nameWithType: FormViewUpdatedEventArgs.FormViewUpdatedEventArgs
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewUpdatedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewUpdatedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewUpdatedEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: KeepInEditMode
  nameWithType: FormViewUpdatedEventArgs.KeepInEditMode
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: Keys
  nameWithType: FormViewUpdatedEventArgs.Keys
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: NewValues
  nameWithType: FormViewUpdatedEventArgs.NewValues
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues*
  parent: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  isExternal: false
  name: OldValues
  nameWithType: FormViewUpdatedEventArgs.OldValues
