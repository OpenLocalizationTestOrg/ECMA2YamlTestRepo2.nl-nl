### YamlMime:ManagedReference
items:
- uid: System.Data.Services.QueryInterceptorAttribute
  id: QueryInterceptorAttribute
  children:
  - System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)
  - System.Data.Services.QueryInterceptorAttribute.EntitySetName
  langs:
  - csharp
  name: QueryInterceptorAttribute
  nameWithType: QueryInterceptorAttribute
  fullName: System.Data.Services.QueryInterceptorAttribute
  type: Class
  summary: "De QueryInterceptorAttribute voor een methode annotates deze als een query-interceptor van de opgegeven entiteit ingesteld."
  remarks: "Entiteit set niveau autorisatie en validatie wordt geïmplementeerd door de methoden van aantekeningen voorzien met het QueryInterceptorAttribute. [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]s beveiligingsbeleid niet wordt geïmplementeerd, maar bieden de infrastructuur die vereist zijn voor service-ontwikkelaars kunnen hun eigen beveiligingsregels en zakelijke validatie schrijven.       Entiteit ingesteld toegangsbeheer en validatie wordt ingeschakeld via querybewerkingen met behulp van de query samenstelling. Voor het beheren van toegang op basis van een entiteit, implementeert u een methode-per-entiteit is ingesteld volgens de volgende regels: de methode moet openbaar bereik en aantekeningen worden voorzien met het QueryInterceptorAttribute, de naam van een entiteit is ingesteld als een parameter.       De methode moet geen parameters accepteren.       De methode moet een expressie van het type retourneren `Expression<Func<T, bool>>` dat het filter dat moet worden samengesteld voor de entiteitset."
  example:
  - "The following example controls access to the `Customers` entity set. Each `Customer` can only see `Orders` associated with that `Customer`.  \n  \n```  \n[QueryInterceptor(\"Orders\")]  \npublic Expression<Func<Order, bool>> FilterOrders()   \n{  \n    return o => o.Customer.Name == /* Current principal name. */;  \n}   \n  \n// Insures that the user accessing the customer(s) has the appropriate  \n// rights as defined in the QueryRules object to access the customer  \n// resource(s).  \n  \n[QueryInterceptor (\"Customers\")]  \npublic Expression<Func<Customer, bool>> FilterCustomers()   \n{  \n  return c => c.Name == /* Current principal name. */ &&  \n              this.CurrentDataSource.QueryRules.Contains(  \n                rule => rule.Name == c.Name &&  \n                        rule.CustomerAllowedToQuery == true  \n              );  \n}  \n  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)]

      public sealed class QueryInterceptorAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.Services.QueryInterceptorAttribute
  langs:
  - csharp
  name: QueryInterceptorAttribute(String)
  nameWithType: QueryInterceptorAttribute.QueryInterceptorAttribute(String)
  fullName: System.Data.Services.QueryInterceptorAttribute.QueryInterceptorAttribute(String)
  type: Constructor
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.Services.QueryInterceptorAttribute&quot;> </xref> klasse voor de entiteitset is opgegeven door de <code> entitySetName </code> parameter."
  syntax:
    content: public QueryInterceptorAttribute (string entitySetName);
    parameters:
    - id: entitySetName
      type: System.String
      description: "De naam van de entiteitsset die de entiteit die de interceptor is van toepassing bevat."
  overload: System.Data.Services.QueryInterceptorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.QueryInterceptorAttribute.EntitySetName
  id: EntitySetName
  parent: System.Data.Services.QueryInterceptorAttribute
  langs:
  - csharp
  name: EntitySetName
  nameWithType: QueryInterceptorAttribute.EntitySetName
  fullName: System.Data.Services.QueryInterceptorAttribute.EntitySetName
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "Hiermee haalt u de naam van de entiteitsset die de entiteit die de interceptor is van toepassing bevat."
  syntax:
    content: public string EntitySetName { get; }
    return:
      type: System.String
      description: "Een tekenreeks die geeft de naam van de entiteitsset die de entiteit die de interceptor is van toepassing bevat."
  overload: System.Data.Services.QueryInterceptorAttribute.EntitySetName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)
  parent: System.Data.Services.QueryInterceptorAttribute
  isExternal: false
  name: QueryInterceptorAttribute(String)
  nameWithType: QueryInterceptorAttribute.QueryInterceptorAttribute(String)
  fullName: System.Data.Services.QueryInterceptorAttribute.QueryInterceptorAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Services.QueryInterceptorAttribute.EntitySetName
  parent: System.Data.Services.QueryInterceptorAttribute
  isExternal: false
  name: EntitySetName
  nameWithType: QueryInterceptorAttribute.EntitySetName
  fullName: System.Data.Services.QueryInterceptorAttribute.EntitySetName
- uid: System.Data.Services.QueryInterceptorAttribute.#ctor*
  parent: System.Data.Services.QueryInterceptorAttribute
  isExternal: false
  name: QueryInterceptorAttribute
  nameWithType: QueryInterceptorAttribute.QueryInterceptorAttribute
- uid: System.Data.Services.QueryInterceptorAttribute.EntitySetName*
  parent: System.Data.Services.QueryInterceptorAttribute
  isExternal: false
  name: EntitySetName
  nameWithType: QueryInterceptorAttribute.EntitySetName
