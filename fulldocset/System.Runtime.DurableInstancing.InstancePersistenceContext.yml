### YamlMime:ManagedReference
items:
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext
  id: InstancePersistenceContext
  children:
  - System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(System.Int64)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(System.Guid,System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(System.Int64,System.TimeSpan)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance
  - System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(System.IAsyncResult)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(System.IAsyncResult)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
  - System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
  - System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
  - System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})
  - System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
  - System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})
  - System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})
  - System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
  - System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  langs:
  - csharp
  name: InstancePersistenceContext
  nameWithType: InstancePersistenceContext
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext
  type: Class
  summary: "Geeft informatie over de status van de uitvoering terwijl een persistentie-opdracht wordt uitgevoerd."
  remarks: "Een exemplaar van deze klasse is doorgegeven aan de methode TryCommand van persistentie provider-implementaties. Deze klasse persistentie providers gebruiken om te controleren van de weergave in het geheugen van het exemplaar, evenals de resultaten van bewerkingen op de externe winkel die mogelijk gevolgen hebben voor de weergave of een andere context in het geheugen."
  syntax:
    content: public sealed class InstancePersistenceContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(System.Guid)
  id: AssociatedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: AssociatedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.AssociatedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee wordt aangegeven dat de persistentieprovider een sleutel in de huidige instantie in de exemplaaropslag is gekoppeld. De id van de sleutel die is opgegeven als parameter."
  remarks: "Sleutel van het exemplaar moet niet-gekoppelde. De huidige sessie-ingang moet worden gebonden aan een exemplaar, evenals een vergrendeling op dat exemplaar."
  syntax:
    content: public void AssociatedInstanceKey (Guid key);
    parameters:
    - id: key
      type: System.Guid
      description: "De instantie sleutel-id voor de sleutel die gekoppeld is. Mag geen Guid.Empty."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  nameWithType: InstancePersistenceContext.BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Beginnen met een asynchrone bewerking voor het binden van een bestaande vergrendeling op een exemplaar met de huidige instantie greep. De versie van de bestaande vergrendeling wordt doorgegeven als parameter."
  remarks: "Wanneer u probeert een vergrendeling te verkrijgen, kan de persistentieprovider besluiten het huidige exemplaar is al vergrendeld in het huidige archief. Als het Vergrendelingstoken overeenkomt met de huidige ingang Vergrendelingstoken, kunt de persistentieprovider proberen om de vergrendeling door de versie ervan te bekijken en doorgegeven aan BeginBindReclaimedLock vrij te maken. De persistentieprovider moet geen wijzigingen aanbrengen in het exemplaar totdat de vergrendeling is is vrijgemaakt. Als geen andere ingang is gebonden aan de vergrendeling, klikt u vervolgens de bewerking is geslaagd BeginBindReclaimedLock en de huidige ingang wordt gebonden aan de vergrendeling. Anders, BeginBindReclaimedLock of EndBindReclaimedLock InstanceHandleConflictException genereert. Als de opdrachten worden uitgevoerd op andere ingangen, kan de bewerking niet voltooid tijdens het wachten op het resultaat van deze opdrachten om te bepalen of de vergrendeling kan worden vrijgemaakt.       De huidige sessie-ingang moet worden gebonden aan een exemplaar en de vergrendelingseigenaar van een. Het exemplaar moet niet worden voltooid. De Vergrendelingstoken die is gekoppeld aan de eigenaar van de vergrendeling wordt gebruikt voor het identificeren van de eigenaar van de vergrendeling.       Nadat een vergrendeling is gebonden aan een ingang, blijft deze gebonden gedurende de levensduur van de greep. Het Vergrendelingstoken noch de versie van het exemplaar kan worden gewijzigd."
  syntax:
    content: public IAsyncResult BeginBindReclaimedLock (long instanceVersion, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instanceVersion
      type: System.Int64
      description: "De versie van de vergrendeling op het exemplaar, of nul bewaard als de persistentieprovider vergrendeling versies niet implementeert."
    - id: timeout
      type: System.TimeSpan
      description: "De time-outperiode voor de asynchrone bewerking."
    - id: callback
      type: System.AsyncCallback
      description: "De methode die moet worden aangeroepen wanneer de bewerking is voltooid."
    - id: state
      type: System.Object
      description: "De statusinformatie is gekoppeld aan de asynchrone bewerking."
    return:
      type: System.IAsyncResult
      description: "De status van een asynchrone bewerking."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstancePersistenceContext.BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Begint met een opdracht persistentie asynchroon wordt uitgevoerd."
  remarks: "Een persistentieprovider kunt u deze methode gebruiken voor het onderliggende opdrachten worden uitgevoerd als onderdeel van een opdracht. De onderliggende opdracht wordt uitgevoerd met behulp van BeginTryCommand, vergelijkbaar met opdrachten doorgegeven aan InstanceStore.BeginExecute. Opdrachten kunnen worden genest, maar een opdracht moet niet meer dan één onderliggende opdracht tegelijk worden uitgevoerd."
  syntax:
    content: public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "De opdracht persistentie moet worden uitgevoerd."
    - id: timeout
      type: System.TimeSpan
      description: "De time-outwaarde voor de bewerking."
    - id: callback
      type: System.AsyncCallback
      description: "De gemachtigde die de melding van de asynchrone ontvangt ontvangen dat een aanvraag is voltooid."
    - id: state
      type: System.Object
      description: "De statusinformatie."
    return:
      type: System.IAsyncResult
      description: "De status van een asynchrone bewerking."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(System.Int64)
  id: BindAcquiredLock(System.Int64)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindAcquiredLock(Int64)
  nameWithType: InstancePersistenceContext.BindAcquiredLock(Int64)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(Int64)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Een nieuw verkregen vergrendeling koppelt op een exemplaar met de huidige instantie greep. De versie van de verworven vergrendeling wordt doorgegeven als parameter."
  remarks: "Als een persistentieprovider versienummering implementeert, moet vervolgens elke keer dat een vergrendeling wordt verkregen van het exemplaar, de versie worden met één verhoogd in de externe winkel. De eerste keer dat het exemplaar is vergrendeld, moet de versie 1 zijn. Elke aanschaf vergrendelen op ongeldig de vorige vergrendeling. De huidige sessie-ingang moet worden gebonden aan een exemplaar en de vergrendelingseigenaar van een. Het exemplaar moet niet worden voltooid. De Vergrendelingstoken die is gekoppeld aan de eigenaar van de vergrendeling wordt gebruikt voor het identificeren van de eigenaar van de vergrendeling zodra een vergrendeling is gebonden aan een ingang, blijft deze gebonden gedurende de levensduur van de greep. Het Vergrendelingstoken noch de versie van het exemplaar kan worden gewijzigd."
  syntax:
    content: public void BindAcquiredLock (long instanceVersion);
    parameters:
    - id: instanceVersion
      type: System.Int64
      description: "Versie van de vergrendeling op het exemplaar, of nul als de persistentieprovider vergrendeling versies niet implementeert."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  id: BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindEvent(InstancePersistenceEvent)
  nameWithType: InstancePersistenceContext.BindEvent(InstancePersistenceEvent)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(InstancePersistenceEvent)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Koppelt een <xref href=&quot;System.Runtime.DurableInstancing.InstancePersistenceEvent&quot;> </xref> naar een exemplaar-ingang."
  syntax:
    content: public void BindEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent);
    parameters:
    - id: persistenceEvent
      type: System.Runtime.DurableInstancing.InstancePersistenceEvent
      description: "Een <xref href=&quot;System.Runtime.DurableInstancing.InstancePersistenceEvent&quot;> </xref> object met informatie over de gebeurtenis."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(System.Guid)
  id: BindInstance(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindInstance(Guid)
  nameWithType: InstancePersistenceContext.BindInstance(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Een exemplaar waarvan id als een parameter voor de huidige sessie-ingang is opgegeven, wordt gebonden."
  remarks: "Nadat een exemplaar is gekoppeld aan een ingang, blijft deze gebonden gedurende de levensduur van de greep. Geen enkel ander exemplaar kan nooit worden gebonden aan de ingang."
  syntax:
    content: public void BindInstance (Guid instanceId);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "Een exemplaar-id. Mag geen Guid.Empty."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(System.Guid,System.Guid)
  id: BindInstanceOwner(System.Guid,System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindInstanceOwner(Guid,Guid)
  nameWithType: InstancePersistenceContext.BindInstanceOwner(Guid,Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(Guid,Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Een exemplaareigenaar koppelt aan de huidige sessie-ingang."
  remarks: "Nadat een exemplaareigenaar is gebonden aan een ingang, blijft deze gebonden gedurende de levensduur van de greep. Er zijn geen andere exemplaareigenaar kan ooit worden gebonden aan de ingang."
  syntax:
    content: public void BindInstanceOwner (Guid instanceOwnerId, Guid lockToken);
    parameters:
    - id: instanceOwnerId
      type: System.Guid
      description: "De id voor de exemplaareigenaar van het."
    - id: lockToken
      type: System.Guid
      description: "De Vergrendelingstoken van de exemplaareigenaar van het. Een persistentieprovider kiezen voor een gebruik van dezelfde waarde voor de instantie eigenaar-id en eigenaar van de Vergrendelingstoken."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(System.Int64,System.TimeSpan)
  id: BindReclaimedLock(System.Int64,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindReclaimedLock(Int64,TimeSpan)
  nameWithType: InstancePersistenceContext.BindReclaimedLock(Int64,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(Int64,TimeSpan)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Een bestaande vergrendeling koppelt op een exemplaar met de huidige instantie greep. De versie van de bestaande vergrendeling wordt doorgegeven als parameter."
  remarks: "Wanneer u probeert een vergrendeling te verkrijgen, kan de persistentieprovider besluiten het huidige exemplaar is al vergrendeld in het huidige archief. Als het Vergrendelingstoken overeenkomt met de huidige ingang Vergrendelingstoken, kunt de persistentieprovider proberen om de vergrendeling door de versie ervan te bekijken en doorgegeven aan BindReclaimedLock vrij te maken. De persistentieprovider moet geen wijzigingen aanbrengen in het exemplaar totdat de vergrendeling is is vrijgemaakt. Als geen andere ingang is gebonden aan de vergrendeling, BindReclaimedLock lukt en de huidige ingang wordt gebonden aan de vergrendeling. Anders genereert BindReclaimedLock InstanceHandleConflictException. Als de opdrachten worden uitgevoerd op andere ingangen, blokkeren BindReclaimedLock wachten op het resultaat van deze opdrachten voordat u besluit of de vergrendeling kan worden vrijgemaakt.       De huidige sessie-ingang moet worden gebonden aan een exemplaar en de vergrendelingseigenaar van een. Het exemplaar moet niet worden voltooid. De Vergrendelingstoken die is gekoppeld aan de eigenaar van de vergrendeling wordt gebruikt voor het identificeren van de eigenaar van de vergrendeling.       Nadat een vergrendeling is gebonden aan een ingang, blijft deze gebonden gedurende de levensduur van de greep. Het Vergrendelingstoken noch de versie van het exemplaar kan worden gewijzigd."
  syntax:
    content: public void BindReclaimedLock (long instanceVersion, TimeSpan timeout);
    parameters:
    - id: instanceVersion
      type: System.Int64
      description: "Versie van de vergrendeling op het exemplaar, of nul bewaard als de persistentieprovider vergrendeling versies niet implementeert."
    - id: timeout
      type: System.TimeSpan
      description: "De time-outwaarde voor de bewerking."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance
  id: CompletedInstance
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: CompletedInstance()
  nameWithType: InstancePersistenceContext.CompletedInstance()
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance()
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee wordt aangegeven dat de persistentieprovider het huidige exemplaar als voltooid in de exemplaaropslag is gemarkeerd."
  remarks: "De huidige sessie-ingang moet worden gebonden aan een exemplaar, evenals een vergrendeling op dat exemplaar. De instantie moet worden geïnitialiseerd en niet worden voltooid. (Een exemplaar is geïnitialiseerd als een reeks exemplaargegevens is ooit persistent is gemaakt voor het.) Alle sleutels die zijn gekoppeld aan het exemplaar moeten worden uitgevoerd."
  syntax:
    content: public void CompletedInstance ();
    parameters: []
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(System.Guid)
  id: CompletedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: CompletedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.CompletedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee wordt aangegeven dat de persistentieprovider een sleutel als voltooid in de externe opslag is gemarkeerd. De id van de sleutel die is opgegeven als parameter."
  remarks: "De huidige sessie-ingang moet worden gebonden aan een exemplaar, evenals een vergrendeling op dat exemplaar. Sleutel van het exemplaar moet zijn gekoppeld aan het huidige exemplaar en niet worden voltooid."
  syntax:
    content: public void CompletedInstanceKey (Guid key);
    parameters:
    - id: key
      type: System.Guid
      description: "De instantie sleutel-id voor de sleutel die is voltooid. Mag geen Guid.Empty."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)
  id: CreateBindReclaimedLockException(System.Int64)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: CreateBindReclaimedLockException(Int64)
  nameWithType: InstancePersistenceContext.CreateBindReclaimedLockException(Int64)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(Int64)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Maakt een exemplaar van een uitzondering die kan worden gegenereerd met TryCommand om BindReclaimedLock gedrag te activeren."
  remarks: "Voorbeeld van code:```      protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)   {       throw context.CreateBindReclaimedLockException(5);   }   is equivalent to   protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)   {       context.BindReclaimedLock(5, timeout);       throw new OperationCanceledException();   }      ```"
  syntax:
    content: public Exception CreateBindReclaimedLockException (long instanceVersion);
    parameters:
    - id: instanceVersion
      type: System.Int64
      description: "De versie van de vergrendeling op het exemplaar, of nul bewaard als de persistentieprovider vergrendeling versies niet implementeert."
    return:
      type: System.Exception
      description: "Een uitzondering."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(System.IAsyncResult)
  id: EndBindReclaimedLock(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: EndBindReclaimedLock(IAsyncResult)
  nameWithType: InstancePersistenceContext.EndBindReclaimedLock(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(IAsyncResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Eindigt de asynchrone bewerking gestart door de <xref:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock*>methode.</xref:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock*>"
  syntax:
    content: public void EndBindReclaimedLock (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Het resultaat van de asynchrone bewerking."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(System.IAsyncResult)
  id: EndExecute(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: EndExecute(IAsyncResult)
  nameWithType: InstancePersistenceContext.EndExecute(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(IAsyncResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "De asynchrone bewerking wordt beëindigd."
  syntax:
    content: public void EndExecute (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "De status van een asynchrone bewerking."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  id: Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: Execute(InstancePersistenceCommand,TimeSpan)
  nameWithType: InstancePersistenceContext.Execute(InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(InstancePersistenceCommand,TimeSpan)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Een opdracht persistentie uitvoert."
  remarks: "Een persistentieprovider kunt u deze methode gebruiken voor het onderliggende opdrachten worden uitgevoerd als onderdeel van een opdracht. De onderliggende opdracht wordt uitgevoerd met TryCommand, vergelijkbaar met opdrachten doorgegeven aan InstanceStore.Execute. Opdrachten kunnen worden genest, maar een opdracht moet niet meer dan één onderliggende opdracht tegelijk worden uitgevoerd."
  syntax:
    content: public void Execute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);
    parameters:
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "De opdracht persistentie moet worden uitgevoerd."
    - id: timeout
      type: System.TimeSpan
      description: "De time-outwaarde voor de bewerking."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
  id: InstanceHandle
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: InstanceHandle
  nameWithType: InstancePersistenceContext.InstanceHandle
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee haalt u de huidige sessie-ingang."
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceHandle InstanceHandle { get; }
    return:
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "De ingang van het huidige exemplaar."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
  id: InstanceVersion
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: InstanceVersion
  nameWithType: InstancePersistenceContext.InstanceVersion
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee haalt u de versie van de vergrendeling op het huidige exemplaar van de door de huidige sessie-ingang bewaard."
  remarks: "De persistentieprovider moet deze waarde ten opzichte van de vergrendeling-versie van de vergrendeling op een exemplaar in de exemplaaropslag bewaard wanneer er een bewerking waarvoor een vergrendeling (zoals persistent maken exemplaargegevens) met behulp van een greep aan de vergrendeling gebonden te controleren. Als de versie van de vergrendeling niet overeenkomen, wordt de opdracht zou moeten mislukken met InstanceLockLostException."
  syntax:
    content: public long InstanceVersion { get; }
    return:
      type: System.Int64
      description: "De versie van de vergrendeling voor exemplaar gebonden aan de huidige sessie-ingang is of -1 als de ingang is niet aan een vergrendeling gebonden."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
  id: InstanceView
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: InstanceView
  nameWithType: InstancePersistenceContext.InstanceView
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee haalt u het exemplaar weergave-object waarmee de status in het geheugen van het huidige exemplaar. Deze weergave weerspiegelt updates zoals ze zijn gemaakt door de opdracht wordt uitgevoerd."
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceView InstanceView { get; }
    return:
      type: System.Runtime.DurableInstancing.InstanceView
      description: "Het exemplaar view-object."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})
  id: LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  nameWithType: InstancePersistenceContext.LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee wordt aangegeven dat de persistentieprovider heeft de huidige instantie is opgehaald uit de exemplaaropslag."
  remarks: "De huidige sessie-ingang moet worden gebonden aan een exemplaar. Als de sessie-ingang is gebonden aan een vergrendeling of het geladen exemplaar is gemarkeerd als voltooid, de geladen gegevens wordt beschouwd als consistent; anders wordt deze beschouwd als twijfelachtig gedeclareerd."
  syntax:
    content: public void LoadedInstance (System.Runtime.DurableInstancing.InstanceState state, System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> instanceData, System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> instanceMetadata, System.Collections.Generic.IDictionary<Guid,System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>> associatedInstanceKeyMetadata, System.Collections.Generic.IDictionary<Guid,System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>> completedInstanceKeyMetadata);
    parameters:
    - id: state
      type: System.Runtime.DurableInstancing.InstanceState
      description: "De exemplaar-statusinformatie."
    - id: instanceData
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "De instantiegegevens als een dictionary van <xref:System.Xml.Linq.XName>en <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> objecten.</xref:System.Xml.Linq.XName>"
    - id: instanceMetadata
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "Metagegevens van het exemplaar als een verzameling <xref:System.Xml.Linq.XName>en <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> objecten.</xref:System.Xml.Linq.XName>"
    - id: associatedInstanceKeyMetadata
      type: System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}}
      description: "Belangrijke metagegevens van het exemplaar dat is gekoppeld als een woordenlijst van het exemplaar-id en sleutel metagegevens van het exemplaar, dit is een dictionary van <xref:System.Xml.Linq.XName>en <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> objecten.</xref:System.Xml.Linq.XName>"
    - id: completedInstanceKeyMetadata
      type: System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}}
      description: "Metagegevens van het exemplaar voltooid als een woordenlijst van het exemplaar-id en sleutel metagegevens van het exemplaar, dit is een dictionary van <xref:System.Xml.Linq.XName>en <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> objecten.</xref:System.Xml.Linq.XName>"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
  id: LockToken
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: LockToken
  nameWithType: InstancePersistenceContext.LockToken
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee haalt de vergrendeling token van de exemplaareigenaar van het gebonden aan de huidige sessie-ingang."
  remarks: "De persistentieprovider moet deze waarde ten opzichte van het Vergrendelingstoken van de vergrendeling op een exemplaar in de exemplaaropslag bewaard wanneer er een bewerking waarvoor een vergrendeling (zoals persistent maken exemplaargegevens) met behulp van een greep aan de vergrendeling gebonden te controleren. Als het Vergrendelingstoken niet overeenkomen, wordt de opdracht zou moeten mislukken met InstanceLockLostException.       De persistentieprovider moet deze waarde als het Vergrendelingstoken van de gebruiken bij het ophalen van een nieuwe vergrendeling op een exemplaar (zoals vastleggen van exemplaargegevens met behulp van een greep niet al is gebonden aan een vergrendeling). Als het exemplaar is al vergrendeld in de exemplaaropslag en het Vergrendelingstoken overeenkomt met dit Vergrendelingstoken, worden de persistentieprovider kunt proberen om het exemplaar met behulp van BindReclaimedLock vrij te maken."
  syntax:
    content: public Guid LockToken { get; }
    return:
      type: System.Guid
      description: "Het Vergrendelingstoken gebonden aan de huidige sessie-ingang of Guid.Empty als de ingang is niet aan een exemplaareigenaar gebonden."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})
  id: PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: PersistedInstance(IDictionary<XName,InstanceValue>)
  nameWithType: InstancePersistenceContext.PersistedInstance(IDictionary<XName,InstanceValue>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(IDictionary<XName,InstanceValue>)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee wordt aangegeven dat de persistentieprovider is een reeks exemplaargegevens voor de exemplaaropslag heeft gehandhaafd. Dit heeft het effect van het initialiseren van het exemplaar als deze niet al is."
  remarks: "De huidige sessie-ingang moet worden gebonden aan een exemplaar, evenals een vergrendeling op dat exemplaar. Elke reeks exemplaargegevens Hiermee vervangt u de voorgaande set. De gegevensset van exemplaar mag null zijn: dit is hetzelfde als leeg. De bestaande set exemplaargegevens persistent maken van een set null exemplaargegevens worden verwijderd. (Het persistent maken van een reeks exemplaargegevens heeft geen effect op de metagegevens van het exemplaar.)"
  syntax:
    content: public void PersistedInstance (System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> data);
    parameters:
    - id: data
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "Exemplaar van de gegevens als een dictionary van <xref:System.Xml.Linq.XName>en <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> objecten.</xref:System.Xml.Linq.XName>"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)
  id: QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: QueriedInstanceStore(InstanceStoreQueryResult)
  nameWithType: InstancePersistenceContext.QueriedInstanceStore(InstanceStoreQueryResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(InstanceStoreQueryResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Voegt de <xref href=&quot;System.Runtime.DurableInstancing.InstanceStoreQueryResult&quot;> </xref> doorgegeven als parameter aan een lijst met <xref href=&quot;System.Runtime.DurableInstancing.InstanceStoreQueryResult&quot;> </xref> objecten in een <xref href=&quot;System.Runtime.DurableInstancing.InstanceView&quot;> </xref>."
  syntax:
    content: public void QueriedInstanceStore (System.Runtime.DurableInstancing.InstanceStoreQueryResult queryResult);
    parameters:
    - id: queryResult
      type: System.Runtime.DurableInstancing.InstanceStoreQueryResult
      description: "De resultaten van een query op een exemplaar-store."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  id: ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee wordt aangegeven dat de persistentieprovider een aantal belangrijke metagegevens van het exemplaar voor een sleutel die is gekoppeld aan het huidige exemplaar van de exemplaaropslag is gelezen."
  remarks: "De huidige sessie-ingang moet worden gebonden aan een exemplaar. Als de sessie-ingang is gebonden aan een vergrendeling of het huidige exemplaar is gemarkeerd als voltooid, de metagegevens wordt beschouwd als consistent; anders wordt deze beschouwd als twijfelachtig gedeclareerd."
  syntax:
    content: public void ReadInstanceKeyMetadata (Guid key, System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> metadata, bool complete);
    parameters:
    - id: key
      type: System.Guid
      description: "De instantie sleutel-id voor de sleutel met metagegevens is gelezen. Mag geen Guid.Empty."
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "De metagegevens als een dictionary van <xref:System.Xml.Linq.XName>en <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> objecten.</xref:System.Xml.Linq.XName>"
    - id: complete
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Als de metagegevens alle metagegevens die anders is gekoppeld aan de sleutel van het exemplaar van vertegenwoordigt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  id: ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee wordt aangegeven dat de persistentieprovider heeft enkele metagegevens voor het huidige exemplaar van het exemplaar is gelezen uit de exemplaaropslag."
  syntax:
    content: public void ReadInstanceMetadata (System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> metadata, bool complete);
    parameters:
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "De metagegevens als een dictionary van <xref:System.Xml.Linq.XName>en <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> objecten.</xref:System.Xml.Linq.XName>"
    - id: complete
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Als de metagegevens alle metagegevens die anders zijn gekoppeld aan het exemplaar van vertegenwoordigt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  id: ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee stelt u de gegevens in de parameter worden doorgegeven met metagegevens voor de eigenaar van het exemplaar."
  remarks: "De huidige sessie-ingang moet worden gebonden aan een exemplaar. Als de sessie-ingang is gebonden aan een vergrendeling of het huidige exemplaar is gemarkeerd als voltooid, de metagegevens wordt beschouwd als consistent; anders wordt deze beschouwd als twijfelachtig gedeclareerd."
  syntax:
    content: public void ReadInstanceOwnerMetadata (System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> metadata, bool complete);
    parameters:
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "De woordenlijst van <xref:System.Xml.Linq.XName>en <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> objecten.</xref:System.Xml.Linq.XName>"
    - id: complete
      type: System.Boolean
      description: "De waarde op te geven of de consistentiecontrole moet worden ingesteld op <xref href=&quot;System.Runtime.DurableInstancing.InstanceValueConsistency&quot;> </xref> of <xref href=&quot;System.Runtime.DurableInstancing.InstanceValueConsistency&quot;> </xref>."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})
  id: SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: SetCancellationHandler(Action<InstancePersistenceContext>)
  nameWithType: InstancePersistenceContext.SetCancellationHandler(Action<InstancePersistenceContext>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(Action<InstancePersistenceContext>)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee stelt u de annulerings-handler moet worden aangeroepen wanneer het annuleren van een bewerking wordt aangevraagd."
  remarks: "Als de annulerings-handler wordt aangeroepen, wordt dit door de persistentieprovider Annuleer alle bewerkingen in behandeling en OperationCanceledException genereert met TryCommand om aan te geven dat de opdracht persistentie werd onderbroken voordat deze kon worden voltooid."
  syntax:
    content: public void SetCancellationHandler (Action<System.Runtime.DurableInstancing.InstancePersistenceContext> cancellationHandler);
    parameters:
    - id: cancellationHandler
      type: System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext}
      description: "De verwijzing naar een functie moet worden aangeroepen."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(System.Guid)
  id: UnassociatedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: UnassociatedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.UnassociatedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee wordt aangegeven dat de persistentieprovider is een sleutel van het huidige exemplaar in de exemplaaropslag is ontkoppeld. De id van de sleutel die is opgegeven als parameter."
  remarks: "De huidige sessie-ingang moet worden gebonden aan een exemplaar, evenals een vergrendeling op dat exemplaar. Sleutel van het exemplaar moet zijn gekoppeld aan het huidige exemplaar en moet worden als voltooid gemarkeerd. Het huidige exemplaar moet niet voltooid worden gemarkeerd."
  syntax:
    content: public void UnassociatedInstanceKey (Guid key);
    parameters:
    - id: key
      type: System.Guid
      description: "De instantie sleutel-id voor de sleutel die niet-gekoppelde is. Mag geen Guid.Empty."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
  id: UserContext
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: UserContext
  nameWithType: InstancePersistenceContext.UserContext
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee haalt u de gebruikersinformatie context gekoppeld aan de huidige sessie-ingang."
  remarks: "Het object is die is geretourneerd door de InstanceStore.OnNewInstanceHandle voor de huidige sessie-ingang."
  syntax:
    content: public object UserContext { get; }
    return:
      type: System.Object
      description: "De gebruikersinformatie context."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  id: WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee wordt aangegeven dat de persistentieprovider heeft een metagegevenswaarde voor een sleutel die is gekoppeld aan het huidige exemplaar voor de exemplaaropslag geschreven"
  remarks: "De huidige sessie-ingang moet worden gebonden aan een exemplaar, evenals een vergrendeling op dat exemplaar. Sleutel van het exemplaar moet worden gekoppeld aan het huidige exemplaar en moet niet worden voltooid."
  syntax:
    content: public void WroteInstanceKeyMetadataValue (Guid key, System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);
    parameters:
    - id: key
      type: System.Guid
      description: "De instantie sleutel-id voor de sleutel. Mag geen Guid.Empty."
    - id: name
      type: System.Xml.Linq.XName
      description: "De naam van de metagegevenseigenschap."
    - id: value
      type: System.Runtime.DurableInstancing.InstanceValue
      description: "De waarde van de metagegevenseigenschap."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  id: WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: WroteInstanceMetadataValue(XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceMetadataValue(XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(XName,InstanceValue)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Geeft aan dat de persistentieprovider is een metagegevenswaarde voor het huidige exemplaar is geschreven naar de externe instance store."
  remarks: "De huidige sessie-ingang moet zijn gebonden aan een exemplaar evenals dat exemplaar heeft vergrendeld. Het exemplaar moet niet worden voltooid."
  syntax:
    content: public void WroteInstanceMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "De naam van de metagegevenseigenschap."
    - id: value
      type: System.Runtime.DurableInstancing.InstanceValue
      description: "De waarde van de metagegevenseigenschap."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  id: WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee wordt aangegeven dat de persistentieprovider is geschreven een metagegevenswaarde voor de exemplaareigenaar van het huidige voor de exemplaaropslag."
  remarks: "De huidige sessie-ingang moet worden gebonden aan een exemplaareigenaar."
  syntax:
    content: public void WroteInstanceOwnerMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "De naam van de metagegevenseigenschap."
    - id: value
      type: System.Runtime.DurableInstancing.InstanceValue
      description: "De waarde van de metagegevenseigenschap."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: AssociatedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.AssociatedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  nameWithType: InstancePersistenceContext.BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstancePersistenceContext.BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
- uid: System.Runtime.DurableInstancing.InstancePersistenceCommand
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceCommand
  nameWithType: InstancePersistenceCommand
  fullName: System.Runtime.DurableInstancing.InstancePersistenceCommand
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(System.Int64)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindAcquiredLock(Int64)
  nameWithType: InstancePersistenceContext.BindAcquiredLock(Int64)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(Int64)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindEvent(InstancePersistenceEvent)
  nameWithType: InstancePersistenceContext.BindEvent(InstancePersistenceEvent)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(InstancePersistenceEvent)
- uid: System.Runtime.DurableInstancing.InstancePersistenceEvent
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceEvent
  nameWithType: InstancePersistenceEvent
  fullName: System.Runtime.DurableInstancing.InstancePersistenceEvent
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindInstance(Guid)
  nameWithType: InstancePersistenceContext.BindInstance(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(Guid)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(System.Guid,System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindInstanceOwner(Guid,Guid)
  nameWithType: InstancePersistenceContext.BindInstanceOwner(Guid,Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(Guid,Guid)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(System.Int64,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindReclaimedLock(Int64,TimeSpan)
  nameWithType: InstancePersistenceContext.BindReclaimedLock(Int64,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(Int64,TimeSpan)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CompletedInstance()
  nameWithType: InstancePersistenceContext.CompletedInstance()
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance()
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CompletedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.CompletedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(Guid)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CreateBindReclaimedLockException(Int64)
  nameWithType: InstancePersistenceContext.CreateBindReclaimedLockException(Int64)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(Int64)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: EndBindReclaimedLock(IAsyncResult)
  nameWithType: InstancePersistenceContext.EndBindReclaimedLock(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(IAsyncResult)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: EndExecute(IAsyncResult)
  nameWithType: InstancePersistenceContext.EndExecute(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(IAsyncResult)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: Execute(InstancePersistenceCommand,TimeSpan)
  nameWithType: InstancePersistenceContext.Execute(InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(InstancePersistenceCommand,TimeSpan)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceHandle
  nameWithType: InstancePersistenceContext.InstanceHandle
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
- uid: System.Runtime.DurableInstancing.InstanceHandle
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceHandle
  nameWithType: InstanceHandle
  fullName: System.Runtime.DurableInstancing.InstanceHandle
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceVersion
  nameWithType: InstancePersistenceContext.InstanceVersion
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceView
  nameWithType: InstancePersistenceContext.InstanceView
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
- uid: System.Runtime.DurableInstancing.InstanceView
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceView
  nameWithType: InstanceView
  fullName: System.Runtime.DurableInstancing.InstanceView
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  nameWithType: InstancePersistenceContext.LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
- uid: System.Runtime.DurableInstancing.InstanceState
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceState
  nameWithType: InstanceState
  fullName: System.Runtime.DurableInstancing.InstanceState
- uid: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<XName,InstanceValue>
  nameWithType: IDictionary<XName,InstanceValue>
  fullName: System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XName
    name: XName
    nameWithType: XName
    fullName: XName
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Runtime.DurableInstancing.InstanceValue
    name: InstanceValue
    nameWithType: InstanceValue
    fullName: InstanceValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<Guid,IDictionary<XName,InstanceValue>>
  nameWithType: IDictionary<Guid,IDictionary<XName,InstanceValue>>
  fullName: System.Collections.Generic.IDictionary<System.Guid,System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Guid,System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XName
    name: XName
    nameWithType: XName
    fullName: XName
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Runtime.DurableInstancing.InstanceValue
    name: InstanceValue
    nameWithType: InstanceValue
    fullName: InstanceValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: LockToken
  nameWithType: InstancePersistenceContext.LockToken
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: PersistedInstance(IDictionary<XName,InstanceValue>)
  nameWithType: InstancePersistenceContext.PersistedInstance(IDictionary<XName,InstanceValue>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(IDictionary<XName,InstanceValue>)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: QueriedInstanceStore(InstanceStoreQueryResult)
  nameWithType: InstancePersistenceContext.QueriedInstanceStore(InstanceStoreQueryResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(InstanceStoreQueryResult)
- uid: System.Runtime.DurableInstancing.InstanceStoreQueryResult
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceStoreQueryResult
  nameWithType: InstanceStoreQueryResult
  fullName: System.Runtime.DurableInstancing.InstanceStoreQueryResult
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: SetCancellationHandler(Action<InstancePersistenceContext>)
  nameWithType: InstancePersistenceContext.SetCancellationHandler(Action<InstancePersistenceContext>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(Action<InstancePersistenceContext>)
- uid: System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext}
  parent: System
  isExternal: true
  name: Action<InstancePersistenceContext>
  nameWithType: Action<InstancePersistenceContext>
  fullName: System.Action<System.Runtime.DurableInstancing.InstancePersistenceContext>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Runtime.DurableInstancing.InstancePersistenceContext>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Runtime.DurableInstancing.InstancePersistenceContext
    name: InstancePersistenceContext
    nameWithType: InstancePersistenceContext
    fullName: InstancePersistenceContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: UnassociatedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.UnassociatedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(Guid)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: UserContext
  nameWithType: InstancePersistenceContext.UserContext
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
- uid: System.Xml.Linq.XName
  parent: System.Xml.Linq
  isExternal: true
  name: XName
  nameWithType: XName
  fullName: System.Xml.Linq.XName
- uid: System.Runtime.DurableInstancing.InstanceValue
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceValue
  nameWithType: InstanceValue
  fullName: System.Runtime.DurableInstancing.InstanceValue
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceMetadataValue(XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceMetadataValue(XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(XName,InstanceValue)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(XName,InstanceValue)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: AssociatedInstanceKey
  nameWithType: InstancePersistenceContext.AssociatedInstanceKey
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BeginBindReclaimedLock
  nameWithType: InstancePersistenceContext.BeginBindReclaimedLock
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BeginExecute
  nameWithType: InstancePersistenceContext.BeginExecute
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindAcquiredLock
  nameWithType: InstancePersistenceContext.BindAcquiredLock
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindEvent
  nameWithType: InstancePersistenceContext.BindEvent
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindInstance
  nameWithType: InstancePersistenceContext.BindInstance
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindInstanceOwner
  nameWithType: InstancePersistenceContext.BindInstanceOwner
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindReclaimedLock
  nameWithType: InstancePersistenceContext.BindReclaimedLock
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CompletedInstance
  nameWithType: InstancePersistenceContext.CompletedInstance
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CompletedInstanceKey
  nameWithType: InstancePersistenceContext.CompletedInstanceKey
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CreateBindReclaimedLockException
  nameWithType: InstancePersistenceContext.CreateBindReclaimedLockException
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: EndBindReclaimedLock
  nameWithType: InstancePersistenceContext.EndBindReclaimedLock
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: EndExecute
  nameWithType: InstancePersistenceContext.EndExecute
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: Execute
  nameWithType: InstancePersistenceContext.Execute
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceHandle
  nameWithType: InstancePersistenceContext.InstanceHandle
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceVersion
  nameWithType: InstancePersistenceContext.InstanceVersion
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceView
  nameWithType: InstancePersistenceContext.InstanceView
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: LoadedInstance
  nameWithType: InstancePersistenceContext.LoadedInstance
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: LockToken
  nameWithType: InstancePersistenceContext.LockToken
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: PersistedInstance
  nameWithType: InstancePersistenceContext.PersistedInstance
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: QueriedInstanceStore
  nameWithType: InstancePersistenceContext.QueriedInstanceStore
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceKeyMetadata
  nameWithType: InstancePersistenceContext.ReadInstanceKeyMetadata
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceMetadata
  nameWithType: InstancePersistenceContext.ReadInstanceMetadata
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceOwnerMetadata
  nameWithType: InstancePersistenceContext.ReadInstanceOwnerMetadata
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: SetCancellationHandler
  nameWithType: InstancePersistenceContext.SetCancellationHandler
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: UnassociatedInstanceKey
  nameWithType: InstancePersistenceContext.UnassociatedInstanceKey
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: UserContext
  nameWithType: InstancePersistenceContext.UserContext
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceKeyMetadataValue
  nameWithType: InstancePersistenceContext.WroteInstanceKeyMetadataValue
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceMetadataValue
  nameWithType: InstancePersistenceContext.WroteInstanceMetadataValue
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceOwnerMetadataValue
  nameWithType: InstancePersistenceContext.WroteInstanceOwnerMetadataValue
