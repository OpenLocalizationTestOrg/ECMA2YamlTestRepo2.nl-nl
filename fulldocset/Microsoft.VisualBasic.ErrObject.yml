### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ErrObject
  id: ErrObject
  children:
  - Microsoft.VisualBasic.ErrObject.Clear
  - Microsoft.VisualBasic.ErrObject.Description
  - Microsoft.VisualBasic.ErrObject.Erl
  - Microsoft.VisualBasic.ErrObject.GetException
  - Microsoft.VisualBasic.ErrObject.HelpContext
  - Microsoft.VisualBasic.ErrObject.HelpFile
  - Microsoft.VisualBasic.ErrObject.LastDllError
  - Microsoft.VisualBasic.ErrObject.Number
  - Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)
  - Microsoft.VisualBasic.ErrObject.Source
  langs:
  - csharp
  name: ErrObject
  nameWithType: ErrObject
  fullName: Microsoft.VisualBasic.ErrObject
  type: Class
  summary: "De <xref uid=&quot;langword_csharp_ErrObject&quot; name=&quot;ErrObject&quot; href=&quot;&quot;> </xref> -module bevat eigenschappen en procedures voor het identificeren en verwerken van de runtime-fouten met de <xref uid=&quot;langword_csharp_Err&quot; name=&quot;Err&quot; href=&quot;&quot;> </xref> object."
  remarks: "De `ErrObject` module biedt ondersteuning voor de `Err` object. Zie voor meer informatie <xref:Microsoft.VisualBasic.Information.Err%2A>.</xref:Microsoft.VisualBasic.Information.Err%2A>"
  example:
  - "This example uses the properties of the `Err` object in constructing an error-message dialog box. Notice what happens when you use the `Clear` method first: When you then generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.  \n  \n```  \nDim Msg As String  \n' If an error occurs, construct an error message.  \nOn Error Resume Next   ' Defer error handling.  \nErr.Clear  \nErr.Raise(6)   ' Generate an \"Overflow\" error.  \n' Check for error, then show message.  \nIf Err.Number <> 0 Then  \n    Msg = \"Error # \" & Str(Err.Number) & \" was generated by \" _  \n        & Err.Source & ControlChars.CrLf & Err.Description  \n    MsgBox(Msg, MsgBoxStyle.Information, \"Error\")  \nEnd If  \n```"
  syntax:
    content: public sealed class ErrObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Clear
  id: Clear
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Clear()
  nameWithType: ErrObject.Clear()
  fullName: Microsoft.VisualBasic.ErrObject.Clear()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Hiermee wist u alle instellingen van de eigenschappen van de <xref uid=&quot;langword_csharp_Err&quot; name=&quot;Err&quot; href=&quot;&quot;> </xref> object."
  remarks: "Gebruik `Clear` expliciet wissen de `Err` object nadat een fout is afgehandeld, zoals wanneer u uitgestelde foutafhandeling met gebruiken `On Error Resume Next`. De `Clear` methode automatisch wordt aangeroepen wanneer een van de volgende instructies wordt uitgevoerd:-elk type `Resume` statement - `Exit Sub`, `Exit Function`, of `Exit Property` - eventuele `On Error` instructie - eventuele `Try...Catch...Finally` instructie > [!NOTE] > de `On Error Resume Next` constructie wellicht beter `On Error GoTo` bij het verwerken van fouten gegenereerd tijdens toegang tot andere objecten. Controleren van `Err` nadat elke interactie met een object verwijdert verwarring over welke object is geopend door de code: U kunt bepalen of welk object geplaatst de foutcode in `Err.Number`, evenals welk object fout is gegenereerd (het opgegeven object in `Err.Source`)."
  example:
  - "This example uses the `Err` object's `Clear` method to reset the numeric properties of the `Err` object to zero and its string properties to zero-length strings. Without the call to `Clear`, the second call to `MsgBox` would display the same error message.  \n  \n [!code-vb[VbVbalrErrorHandling#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._141_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: Microsoft.VisualBasic.ErrObject.Clear*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Description
  id: Description
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Description
  nameWithType: ErrObject.Description
  fullName: Microsoft.VisualBasic.ErrObject.Description
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert of stelt een <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> expressie met een beschrijvende tekenreeks die is gekoppeld aan een fout. Lezen/schrijven."
  remarks: "De `Description` instelling van de eigenschap bestaat uit een korte beschrijving van de fout. Gebruik deze eigenschap de gebruiker op een fout die u niet kunt of niet wilt verwerken. Bij het genereren van een gebruiker gedefinieerde fout toewijzen een korte beschrijving van de fout die naar de `Description` eigenschap. Als de `Description` eigenschap niet is ingevuld, en de waarde van de <xref:Microsoft.VisualBasic.ErrObject.Number%2A>eigenschap komt overeen met een Visual Basic-runtime-fout, en vervolgens de tekenreeks die wordt geretourneerd door de <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A>functie is ingesteld in de `Description` eigenschap wanneer de fout wordt gegenereerd.</xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> </xref:Microsoft.VisualBasic.ErrObject.Number%2A>"
  example:
  - "This example assigns a user-defined message to the `Description` property of the `Err` object.  \n  \n [!code-vb[VbVbalrErrorHandling#5](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._68_1.vb)]"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "Retourneert of stelt een <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> expressie met een beschrijvende tekenreeks die is gekoppeld aan een fout. Lezen/schrijven."
  overload: Microsoft.VisualBasic.ErrObject.Description*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Erl
  id: Erl
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Erl
  nameWithType: ErrObject.Erl
  fullName: Microsoft.VisualBasic.ErrObject.Erl
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert een geheel getal dat aangeeft van het regelnummer van de laatste instructie uitgevoerd. Alleen-lezen."
  remarks: "Als Visual Basic geen regelnummers tegenkomt, wordt 0 geretourneerd."
  example:
  - "This example uses the `Erl` property to indicate the line number.  \n  \n```  \n10:     On Error Resume Next  \n20:     Err.Raise(60000)  \n' Returns 20.  \n30:     MsgBox(Erl())  \n```"
  syntax:
    content: public int Erl { get; }
    return:
      type: System.Int32
      description: "Retourneert een geheel getal dat aangeeft van het regelnummer van de laatste instructie uitgevoerd. Alleen-lezen."
  overload: Microsoft.VisualBasic.ErrObject.Erl*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.GetException
  id: GetException
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: GetException()
  nameWithType: ErrObject.GetException()
  fullName: Microsoft.VisualBasic.ErrObject.GetException()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert de uitzondering voor de volgende fout is opgetreden."
  remarks: "De `GetException` functie is alleen beschikbaar via de `Err` objectklasse. Dit proces werkt met de `Exception` eigenschap van de `Err` object om weer te geven van de volgende fout is opgetreden."
  example:
  - "The following code displays the message assigned to the exception in the `Err` object:  \n  \n [!code-vb[VbVbalrCatRef#66](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._226_1.vb)]"
  syntax:
    content: public Exception GetException ();
    parameters: []
    return:
      type: System.Exception
      description: "Retourneert de uitzondering voor de volgende fout is opgetreden."
  overload: Microsoft.VisualBasic.ErrObject.GetException*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.HelpContext
  id: HelpContext
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: HelpContext
  nameWithType: ErrObject.HelpContext
  fullName: Microsoft.VisualBasic.ErrObject.HelpContext
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert of stelt een <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> met context-ID voor een onderwerp in een Help-bestand. Lezen/schrijven."
  remarks: "De `HelpContext` eigenschap wordt gebruikt om contextgevoelige Help weergeven voor een toepassing. Als een Help-bestand is opgegeven in `HelpFile`, wordt de `HelpContext` eigenschap wordt gebruikt om het Help-bestand dat automatisch wordt weergegeven. Als zowel de `HelpFile` en `HelpContext` eigenschappen zijn leeg is, wordt de waarde van de <xref:Microsoft.VisualBasic.ErrObject.Number%2A>eigenschap is ingeschakeld.</xref:Microsoft.VisualBasic.ErrObject.Number%2A> Als de waarde van de `Number` eigenschap komt overeen met een waarde van de runtime-fout Visual Basic en Visual Basic Help context-ID voor de fout die wordt gebruikt. Als de waarde van de `Number` eigenschap komt niet overeen met een Visual Basic-fout, wordt het scherm van de inhoud voor het Visual Basic Help-bestand weergegeven.      > [!NOTE] > Moet u routines in uw toepassing typische fouten worden verwerkt. Bij het programmeren met een object, kunt u de Help-bestand van het object kunt gebruiken voor het verbeteren van de kwaliteit van uw foutafhandeling of een zinvolle bericht weer aan de gebruiker als de fout kan niet worden hersteld."
  example:
  - "This example uses the `HelpContext` property of the `Err` object to show the Visual Basic Help topic for the `Overflow` error.  \n  \n [!code-vb[VbVbalrErrorHandling#7](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._34_1.vb)]"
  syntax:
    content: public int HelpContext { get; set; }
    return:
      type: System.Int32
      description: "Retourneert of stelt een <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> met context-ID voor een onderwerp in een Help-bestand. Lezen/schrijven."
  overload: Microsoft.VisualBasic.ErrObject.HelpContext*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.HelpFile
  id: HelpFile
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: HelpFile
  nameWithType: ErrObject.HelpFile
  fullName: Microsoft.VisualBasic.ErrObject.HelpFile
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert of stelt een <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> expressie met de volledig gekwalificeerde pad naar een Help-bestand. Lezen/schrijven."
  remarks: "Als een Help-bestand is opgegeven door de `HelpFile` -eigenschap automatisch wel wanneer de gebruiker op de Help-sleutel (of op F1 drukt) in het dialoogvenster met het foutbericht. Als de `HelpContext` eigenschap bevat een geldige context-ID voor het opgegeven bestand, dat onderwerp automatisch wordt weergegeven. Als er geen `HelpFile` wordt opgegeven, wordt het Visual Basic Help-bestand weergegeven.      > [!NOTE] > Moet u routines in uw toepassing typische fouten worden verwerkt. Bij het programmeren met een object, kunt u de Help-bestand van het object kunt gebruiken voor het verbeteren van de kwaliteit van uw foutafhandeling of een zinvolle bericht weer aan de gebruiker als de fout kan niet worden hersteld."
  example:
  - "This example uses the `HelpFile` property of the `Err` object to start the Help system. By default, the `HelpFile` property contains the name of the Visual Basic Help file.  \n  \n [!code-vb[VbVbalrErrorHandling#7](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._70_1.vb)]"
  syntax:
    content: public string HelpFile { get; set; }
    return:
      type: System.String
      description: "Retourneert of stelt een <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> expressie met de volledig gekwalificeerde pad naar een Help-bestand. Lezen/schrijven."
  overload: Microsoft.VisualBasic.ErrObject.HelpFile*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.LastDllError
  id: LastDllError
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: LastDllError
  nameWithType: ErrObject.LastDllError
  fullName: Microsoft.VisualBasic.ErrObject.LastDllError
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert een foutcode die wordt geproduceerd door een aanroep van een dynamic-link library (DLL). Alleen-lezen."
  remarks: "De eigenschap LastDllError geldt alleen voor DLL-aanroepen vanuit Visual Basic-code. Wanneer deze oproep wordt gedaan, de aangeroepen functie retourneert meestal een code die aangeeft of geslaagd of mislukt en de eigenschap LastDllError is gevuld. Raadpleeg de documentatie voor de DLL-functies om te bepalen van de retourwaarden die wijzen op slagen of mislukken. Wanneer de foutcode is geretourneerd, moet de eigenschap LastDllError onmiddellijk controleren in de Visual Basic-toepassing. Er is geen uitzondering wordt geactiveerd wanneer de eigenschap LastDllError is ingesteld.      > [!NOTE] > LastDllError voor de eigenschap is beveiligd door <xref:System.Security.Permissions.SecurityAction>, waarmee wordt voorkomen dat het niet-vertrouwde code wordt geopend.</xref:System.Security.Permissions.SecurityAction> Echter <xref:System.Security.Permissions.SecurityAction>vereist alleen de onmiddellijke aanroeper hebben <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A>machtiging.</xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> </xref:System.Security.Permissions.SecurityAction> Als uw code kan worden aangeroepen door gedeeltelijk vertrouwde code, is die de waarde van LastDllError zonder validatie een beveiligingsrisico.   >> Voor belangrijke beperkingen over het gebruik van de <xref:System.Security.Permissions.SecurityAction>lid, Zie [vraag versus</xref:System.Security.Permissions.SecurityAction> LinkDemand](http://msdn.microsoft.com/en-us/1ab877f2-70f4-4e0d-8116-943999dfe8f5). Zie voor meer informatie over machtigingen <xref:System.Security.Permissions.SecurityPermission>en [Code toegangsmachtigingen](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>       Houd er rekening mee voor smart-apparaten dat deze eigenschap retourneert altijd nul."
  example:
  - "The following example shows how you can use the `LastDllError` property after calling a function in the Windows API. The `PrintWindowCoordinates` procedure takes a handle to a window and calls the `GetWindowRect` function. `GetWindowRect` fills the RECT data structure with the lengths of the sides of the rectangle that make up the window. If you pass an invalid handle, an error occurs, and the error number is available through the `LastDllError` property.  \n  \n [!code-vb[VbVbalrErrorHandling#8](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._45_1.vb)]  \n[!code-vb[VbVbalrErrorHandling#9](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._45_2.vb)]  \n[!code-vb[VbVbalrErrorHandling#10](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._45_3.vb)]  \n  \n [!code-vb[VbVbalrErrorHandling#11](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._45_4.vb)]"
  syntax:
    content: public int LastDllError { get; }
    return:
      type: System.Int32
      description: "Retourneert een foutcode die wordt geproduceerd door een aanroep van een dynamic-link library (DLL). Alleen-lezen."
  overload: Microsoft.VisualBasic.ErrObject.LastDllError*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Number
  id: Number
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Number
  nameWithType: ErrObject.Number
  fullName: Microsoft.VisualBasic.ErrObject.Number
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert of stelt een numerieke waarde opgeven van een fout opgetreden. Lezen/schrijven."
  remarks: "Alle van de `Raise` argumenten behalve `Number` zijn optioneel. Als u geen waarde optionele argumenten en de instellingen van de eigenschappen van opgeeft de `Err` object bevatten waarden die niet zijn gewist, die waarden fungeren als de waarden voor de fout.       Omdat de `Err` object geeft uitgebreidere informatie dan wanneer het genereren van fouten met de `Error` -instructie `Raise` is handig voor het genereren van fouten bij het schrijven van klassemodules. Bijvoorbeeld, met de `Raise` methode, de bron die de fout gegenereerd kan worden opgegeven in de `Source` eigenschap online-Help voor de fout kan worden verwezen, enzovoort.       Wanneer een gebruiker gedefinieerde fout van een object wordt geretourneerd, ingesteld `Err.Number` door het aantal toe te voegen die u hebt geselecteerd als een foutcode voor de `VbObjectError` constante. Bijvoorbeeld, u de volgende code gebruiken om te retourneren van het getal 1051 als een foutcode: [!code-vb [VbVbalrErrorHandling #13](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._83_1.vb)]"
  example:
  - "This example illustrates a typical use of the `Number` property in an error-handling routine.  \n  \n [!code-vb[VbVbalrErrorHandling#12](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._83_2.vb)]  \n  \n This example uses the `Err` object's `Raise` method to generate an original error within a function written in Visual Basic. The calling function can catch the error and report it to the user. Notice that procedure `CallingProcedure` contrasts the type of information that you can derive from an `Err` object with the information that you can derive from an `Exception` object.  \n  \n [!code-vb[VbVbalrErrorHandling#14](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._83_3.vb)]"
  syntax:
    content: public int Number { get; set; }
    return:
      type: System.Int32
      description: "Retourneert of stelt een numerieke waarde opgeven van een fout opgetreden. Lezen/schrijven."
  overload: Microsoft.VisualBasic.ErrObject.Number*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Number</code>is groter dan 65535."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)
  id: Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Raise(Int32,Object,Object,Object,Object)
  nameWithType: ErrObject.Raise(Int32,Object,Object,Object,Object)
  fullName: Microsoft.VisualBasic.ErrObject.Raise(Int32,Object,Object,Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Genereert een uitvoeringsfout; kan worden gebruikt in plaats van de <xref uid=&quot;langword_csharp_Error&quot; name=&quot;Error&quot; href=&quot;&quot;> </xref> instructie."
  remarks: "Alle van de `Raise` argumenten behalve `Number` zijn optioneel. Als u geen waarde optionele argumenten en de instellingen van de eigenschappen van opgeeft de `Err` object bevatten waarden die niet zijn gewist, die waarden fungeren als de waarden voor de fout.       Omdat de `Err` object geeft uitgebreidere informatie dan wanneer het genereren van fouten met de `Error` -instructie `Raise` is handig voor het genereren van fouten bij het schrijven van klassemodules. Bijvoorbeeld, met de `Raise` methode, de bron die de fout gegenereerd kan worden opgegeven in de `Source` eigenschap online-Help voor de fout kan worden verwezen, enzovoort."
  example:
  - "This example uses the `Err` object's `Raise` method to generate an error within a function written in Visual Basic. The calling function can catch the error and report it to the user with a message box.  \n  \n [!code-vb[VbVbalrErrorHandling#14](~/add/codesnippet/visualbasic/b1f4ec6f-36d3-4787-9987-_1.vb)]"
  syntax:
    content: public void Raise (int Number, object Source = null, object Description = null, object HelpFile = null, object HelpContext = null);
    parameters:
    - id: Number
      type: System.Int32
      description: "Vereist. <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>geheel getal waarmee de aard van de fout. Visual Basic-fouten worden in het bereik 0-65535; het bereik 0 – 512 is gereserveerd voor fouten in het bestandssysteem; het bereik 513 – 65535 is beschikbaar voor de gebruiker gedefinieerde fouten. Bij het instellen van de <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> wanneer u uw Foutcodenummer aan uw eigen foutcode in een klassenmodule-eigenschap toevoegen de <xref uid=&quot;langword_csharp_vbObjectError&quot; name=&quot;vbObjectError&quot; href=&quot;&quot;> </xref> constante. Bijvoorbeeld voor het genereren van het foutnummer 513 toewijzen `vbObjectError + 513` naar de <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> eigenschap."
    - id: Source
      type: System.Object
      description: "Optioneel. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>de expressie naamgeving van het object of de toepassing die de fout is gegenereerd. Wanneer u deze eigenschap voor een object, gebruikt u het formulier `project`.`class`. Als `Source` niet is opgegeven, de proces-ID van het huidige Visual Basic-project wordt gebruikt."
    - id: Description
      type: System.Object
      description: "Optioneel. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>een expressie met een beschrijving van de fout. Als u niets opgeeft, wordt de waarde in de <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> eigenschap wordt onderzocht. Als deze kan worden toegewezen aan een Visual Basic-runtime-fout code, de tekenreeks die wordt geretourneerd door de <xref uid=&quot;langword_csharp_Error&quot; name=&quot;Error&quot; href=&quot;&quot;> </xref> functie wordt gebruikt als de <xref uid=&quot;langword_csharp_Description&quot; name=&quot;Description&quot; href=&quot;&quot;> </xref> eigenschap. Als er geen Visual Basic-fout die overeenkomt met de <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> eigenschap, het foutbericht &quot;toepassing of door het object gedefinieerde &quot; wordt gebruikt."
    - id: HelpFile
      type: System.Object
      description: "Optioneel. Het volledig gekwalificeerde pad naar het Help-bestand waarin Help-informatie over deze fout kan worden gevonden. Als u niets opgeeft, wordt Visual Basic wordt het volledig gekwalificeerde station, pad en bestandsnaam van de Visual Basic Help-bestand."
    - id: HelpContext
      type: System.Object
      description: "Optioneel. De context-ID voor het identificeren van een onderwerp binnen `HelpFile` dat ondersteuning biedt voor de fout. Als u dit weglaat, wordt de Visual Basic-Help-bestand context-ID voor de fout die overeenkomt met de <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> eigenschap wordt gebruikt, als deze bestaat."
  overload: Microsoft.VisualBasic.ErrObject.Raise*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Source
  id: Source
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Source
  nameWithType: ErrObject.Source
  fullName: Microsoft.VisualBasic.ErrObject.Source
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert of stelt een <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> expressie die aangeeft dat de naam van het object of de toepassing die de fout is gegenereerd. Lezen/schrijven."
  remarks: "De `Source` eigenschap geeft u een `String` expressie die aangeeft voor het object dat de fout is gegenereerd; de expressie is meestal de klassenaam van het object of de proces-ID. Gebruik de `Source` eigenschap om informatie te geven wanneer de code niet kan verwerken van een fout gegenereerd in een geopende object. Bijvoorbeeld, als u toegang tot Microsoft Excel en genereert een `Division by zero` fout is opgetreden in Microsoft Excel ingesteld `Err.Number` de foutcode voor deze fout- en sets `Source` naar &quot;Excel.Application&quot;.       Wanneer de toepassing is een fout wordt gegenereerd vanuit code, `Source` is programma-id van uw toepassing. Binnen een klasse, `Source` moet een naam die het formulier bevatten *project*.* klasse*. Wanneer er een onverwachte fout optreedt in uw code de `Source` eigenschap wordt automatisch ingevuld. Fouten in een module `Source` bevat de naam van het project."
  example:
  - "This example demonstrates the use of the `Source` property in a typical error-handling routine. When an error is raised from `Class1`, the string `\"Class1\"` is assigned to the `Source` property of the `Err` object. This string is then displayed in an informative message indicating the source and number of the error.  \n  \n [!code-vb[VbVbalrErrorHandling#15](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._39_1.vb)]"
  syntax:
    content: public string Source { get; set; }
    return:
      type: System.String
      description: "Retourneert of stelt een <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> expressie die aangeeft dat de naam van het object of de toepassing die de fout is gegenereerd. Lezen/schrijven."
  overload: Microsoft.VisualBasic.ErrObject.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.VisualBasic.ErrObject.Clear
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Clear()
  nameWithType: ErrObject.Clear()
  fullName: Microsoft.VisualBasic.ErrObject.Clear()
- uid: Microsoft.VisualBasic.ErrObject.Description
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Description
  nameWithType: ErrObject.Description
  fullName: Microsoft.VisualBasic.ErrObject.Description
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.ErrObject.Erl
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Erl
  nameWithType: ErrObject.Erl
  fullName: Microsoft.VisualBasic.ErrObject.Erl
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.ErrObject.GetException
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: GetException()
  nameWithType: ErrObject.GetException()
  fullName: Microsoft.VisualBasic.ErrObject.GetException()
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.VisualBasic.ErrObject.HelpContext
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: HelpContext
  nameWithType: ErrObject.HelpContext
  fullName: Microsoft.VisualBasic.ErrObject.HelpContext
- uid: Microsoft.VisualBasic.ErrObject.HelpFile
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: HelpFile
  nameWithType: ErrObject.HelpFile
  fullName: Microsoft.VisualBasic.ErrObject.HelpFile
- uid: Microsoft.VisualBasic.ErrObject.LastDllError
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: LastDllError
  nameWithType: ErrObject.LastDllError
  fullName: Microsoft.VisualBasic.ErrObject.LastDllError
- uid: Microsoft.VisualBasic.ErrObject.Number
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Number
  nameWithType: ErrObject.Number
  fullName: Microsoft.VisualBasic.ErrObject.Number
- uid: Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Raise(Int32,Object,Object,Object,Object)
  nameWithType: ErrObject.Raise(Int32,Object,Object,Object,Object)
  fullName: Microsoft.VisualBasic.ErrObject.Raise(Int32,Object,Object,Object,Object)
- uid: Microsoft.VisualBasic.ErrObject.Source
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Source
  nameWithType: ErrObject.Source
  fullName: Microsoft.VisualBasic.ErrObject.Source
- uid: Microsoft.VisualBasic.ErrObject.Clear*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Clear
  nameWithType: ErrObject.Clear
- uid: Microsoft.VisualBasic.ErrObject.Description*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Description
  nameWithType: ErrObject.Description
- uid: Microsoft.VisualBasic.ErrObject.Erl*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Erl
  nameWithType: ErrObject.Erl
- uid: Microsoft.VisualBasic.ErrObject.GetException*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: GetException
  nameWithType: ErrObject.GetException
- uid: Microsoft.VisualBasic.ErrObject.HelpContext*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: HelpContext
  nameWithType: ErrObject.HelpContext
- uid: Microsoft.VisualBasic.ErrObject.HelpFile*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: HelpFile
  nameWithType: ErrObject.HelpFile
- uid: Microsoft.VisualBasic.ErrObject.LastDllError*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: LastDllError
  nameWithType: ErrObject.LastDllError
- uid: Microsoft.VisualBasic.ErrObject.Number*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Number
  nameWithType: ErrObject.Number
- uid: Microsoft.VisualBasic.ErrObject.Raise*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Raise
  nameWithType: ErrObject.Raise
- uid: Microsoft.VisualBasic.ErrObject.Source*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Source
  nameWithType: ErrObject.Source
