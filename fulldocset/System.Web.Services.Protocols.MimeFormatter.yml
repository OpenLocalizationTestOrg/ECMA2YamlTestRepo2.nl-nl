### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.MimeFormatter
  id: MimeFormatter
  children:
  - System.Web.Services.Protocols.MimeFormatter.#ctor
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  langs:
  - csharp
  name: MimeFormatter
  nameWithType: MimeFormatter
  fullName: System.Web.Services.Protocols.MimeFormatter
  type: Class
  summary: "Biedt een abstracte basisklasse voor alle en schrijfprogramma voor Web-services en clients die zijn ge√Ømplementeerd met behulp van HTTP, maar zonder SOAP."
  remarks: "Web service schrijvers en lezers serialiseren en deserialiseren, respectievelijk tussen de objecten parameter of retourtype van webmethoden en de HTTP-aanvraag of antwoord stromen. De klasse MimeFormatter stelt u een algemene interface en functionaliteit voor de lezer en -schrijver klassen, in zowel client als aan servicezijde.       De klasse MimeFormatter biedt ondersteuning voor .NET Framework-implementaties van Web-services via de HTTP GET- en HTTP POST-bewerkingen. In de HTTP GET-bewerkingen worden aanvraagparameters gecodeerd in de HTTP-aanvraag Uniform Resource Locator (URL). Aanvraagparameters zijn HTTP POST-bewerkingen gecodeerd in de HTTP-aanvraag, net als bij een HTML-formulier. Met beide implementaties weergegeven de geretourneerde waarde in de HTTP-antwoordtekst als een niet - SOAP-XML-document.       Een ontwikkelaar doorgaans hoeft niet te MimeFormatter of de afgeleide klassen rechtstreeks gebruiken. In plaats daarvan wanneer het hulpprogramma Wsdl.exe proxy clientcode volgens de HTTP GET- of HTTP POST-implementaties genereert, geldt deze de <xref:System.Web.Services.Protocols.HttpMethodAttribute>naar elke webmethode en stelt het kenmerk <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>en <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>Eigenschappen aan het juiste type is afgeleid van de klasse MimeFormatter</xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> </xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> </xref:System.Web.Services.Protocols.HttpMethodAttribute> Op de server, worden de juiste afgeleide typen gebruikt volgens de instellingen in een ASP.NET-configuratiebestand (Web.config). Op de client worden de juiste afgeleide typen van de WSDL bepaald."
  syntax:
    content: public abstract class MimeFormatter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: MimeFormatter()
  nameWithType: MimeFormatter.MimeFormatter()
  fullName: System.Web.Services.Protocols.MimeFormatter.MimeFormatter()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref> klasse."
  syntax:
    content: protected MimeFormatter ();
    parameters: []
  overload: System.Web.Services.Protocols.MimeFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  id: CreateInstance(System.Type,System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: CreateInstance(Type,Object)
  nameWithType: MimeFormatter.CreateInstance(Type,Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.CreateInstance(Type,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Maakt en initialiseert een exemplaar van een concrete klasse is afgeleid van <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>."
  remarks: "De methode CreateInstance maakt een exemplaar van de afgeleide klasse en implementatie van de samenvatting van de afgeleide klasse roept <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>methode.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> De methode CreateInstance is geactiveerd op het moment dat een aanvraag of antwoord wordt verwerkt.       Een initialisatiefunctie is een object dat is doorgegeven als een parameter voor de <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>methode.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> De doorgegeven als parameter aan de methode CreateInstance initialisatiefunctie van een ander exemplaar van de afgeleide klasse wordt verkregen door het aanroepen van de <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>methode tijdens de initialisatie van de client of service.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);
    parameters:
    - id: type
      type: System.Type
      description: "Het Type afgeleid van <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>, waarvan een exemplaar te maken."
    - id: initializer
      type: System.Object
      description: "Een object dat wordt gebruikt voor het initialiseren van het exemplaar eerder hebt verkregen via de uitvoering van de afgeleide klasse van de <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer*>methode.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer*>"
    return:
      type: System.Web.Services.Protocols.MimeFormatter
      description: "A <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;></xref> object."
  overload: System.Web.Services.Protocols.MimeFormatter.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Wanneer in een afgeleide klasse genegeerd, retourneert een initialisatiefunctie voor de opgegeven methode."
  remarks: "Een initialisatiefunctie is een object dat is doorgegeven als een parameter voor de <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>methode.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       Implementatie van een afgeleide klasse van de exemplaarmethode GetInitializer wordt aangeroepen tijdens de initialisatie van de client of service. Later, op het moment dat een aanvraag of antwoord wordt verwerkt, de initialisatiefunctie-object doorgegeven aan de statische <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>methode, waarbij automatisch een exemplaar van een ander object van de afgeleide klasse en vervolgens naar de <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>methode voor het initialiseren van deze</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> </xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> Het andere object voert de werkelijke lezen of schrijven."
  syntax:
    content: public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "Een <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> Hiermee worden de webmethode waarvoor de initialisatiefunctie wordt verkregen."
    return:
      type: System.Object
      description: "Een <xref:System.Object>die de initialisatiefunctie voor de opgegeven methode bevat.</xref:System.Object>"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializer(Type,LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Retourneert een initialisatiefunctie voor de opgegeven methode."
  remarks: "Een initialisatiefunctie is een object dat is doorgegeven als een parameter voor de <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>methode.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       De statische methode van GetInitializer roept de afgeleide klasse- <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>methode, impliciet maken van een exemplaar van de afgeleide klasse.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Op het moment dat een aanvraag of antwoord wordt verwerkt, wordt de initialisatiefunctie-object doorgegeven aan de <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>methode van een ander exemplaar van de afgeleide klasse.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Het laatste object voert de werkelijke lezen of schrijven."
  syntax:
    content: public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: type
      type: System.Type
      description: "Het Type afgeleid van <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>, - voor een initialisatiefunctie is verkregen."
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "Een <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> Hiermee worden de webmethode waarvoor de initialisatiefunctie wordt verkregen."
    return:
      type: System.Object
      description: "Een <xref:System.Object>-object dat de initialisatiefunctie voor de opgegeven methode bevat.</xref:System.Object>"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  id: GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializers(LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(LogicalMethodInfo[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Overschreven in een afgeleide klasse, retourneert een matrix van initialisatiefunctie voor objecten die overeenkomt met een invoer matrix van methode-definities."
  remarks: "Een initialisatiefunctie is een object dat is doorgegeven als een parameter voor de <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>methode.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       De exemplaarmethode GetInitializers roept de <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>exemplaarmethode voor elke Web invoermethode.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Dit betekent dat een exemplaar van een klasse die is afgeleid van <xref:System.Web.Services.Protocols.MimeFormatter>al is gemaakt.</xref:System.Web.Services.Protocols.MimeFormatter> Op het moment dat een aanvraag of antwoord wordt verwerkt, is de initialisatiefunctie doorgegeven aan de <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>methode van een ander exemplaar van de afgeleide klasse.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Het laatste object voert de werkelijke lezen of schrijven."
  syntax:
    content: public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);
    parameters:
    - id: methodInfos
      type: System.Web.Services.Protocols.LogicalMethodInfo[]
      description: "Een matrix met webmethoden waar het object van de bijbehorende index in de matrix geretourneerde initialisatiefunctie voor elke methode wordt opgehaald."
    return:
      type: System.Object[]
      description: "Een matrix van initialisatiefunctie voor objecten die overeenkomt met de invoermatrix van methode-definities."
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  id: GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializers(Type,LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Retourneert een matrix van de initialisatiefunctie voor objecten die overeenkomt met een invoer matrix van methode-definities voor een opgegeven klasse is afgeleid van <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>."
  remarks: "Een initialisatiefunctie is een object dat is doorgegeven als een parameter voor de <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>methode.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       De statische GetInitializersmethod zorgt ervoor dat het aanroepen van de <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>methode die horen bij de afgeleide klasse die is opgegeven door de `type` parameter.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);
    parameters:
    - id: type
      type: System.Type
      description: "Het Type afgeleid van <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>, voor welke initializers worden verkregen."
    - id: methodInfos
      type: System.Web.Services.Protocols.LogicalMethodInfo[]
      description: "Een matrix van het type <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> Hiermee worden de Web-methoden waarvoor de initalisatiefuncties worden verkregen."
    return:
      type: System.Object[]
      description: "Een matrix van de initialisatiefunctie voor objecten die overeenkomt met de invoermatrix van methode-definities voor een opgegeven klasse is afgeleid van <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>."
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: MimeFormatter.Initialize(Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.Initialize(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Wanneer in een afgeleide klasse genegeerd, initialiseert een exemplaar."
  remarks: "De methode Initialize is aangeroepen op het moment dat een aanvraag of antwoord wordt verwerkt; echter, de initialisatiefunctie wordt verkregen door het aanroepen van de <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>methode op een ander exemplaar tijdens de initialisatie van de client of service.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public abstract void Initialize (object initializer);
    parameters:
    - id: initializer
      type: System.Object
      description: "Een object van een type dat geschikt is voor de specifieke klasse die de methode implementeert."
  overload: System.Web.Services.Protocols.MimeFormatter.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: MimeFormatter()
  nameWithType: MimeFormatter.MimeFormatter()
  fullName: System.Web.Services.Protocols.MimeFormatter.MimeFormatter()
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: CreateInstance(Type,Object)
  nameWithType: MimeFormatter.CreateInstance(Type,Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.CreateInstance(Type,Object)
- uid: System.Web.Services.Protocols.MimeFormatter
  parent: System.Web.Services.Protocols
  isExternal: false
  name: MimeFormatter
  nameWithType: MimeFormatter
  fullName: System.Web.Services.Protocols.MimeFormatter
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(LogicalMethodInfo)
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer(Type,LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers(LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(LogicalMethodInfo[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.LogicalMethodInfo[]
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo[]
  spec.csharp:
  - uid: System.Web.Services.Protocols.LogicalMethodInfo
    name: LogicalMethodInfo
    nameWithType: LogicalMethodInfo
    fullName: LogicalMethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers(Type,LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: Initialize(Object)
  nameWithType: MimeFormatter.Initialize(Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.Initialize(Object)
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: MimeFormatter
  nameWithType: MimeFormatter.MimeFormatter
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: CreateInstance
  nameWithType: MimeFormatter.CreateInstance
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer
  nameWithType: MimeFormatter.GetInitializer
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers
  nameWithType: MimeFormatter.GetInitializers
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: Initialize
  nameWithType: MimeFormatter.Initialize
