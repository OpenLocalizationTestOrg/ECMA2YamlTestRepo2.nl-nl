### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlDocumentType
  id: XmlDocumentType
  children:
  - System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)
  - System.Xml.XmlDocumentType.CloneNode(System.Boolean)
  - System.Xml.XmlDocumentType.Entities
  - System.Xml.XmlDocumentType.InternalSubset
  - System.Xml.XmlDocumentType.IsReadOnly
  - System.Xml.XmlDocumentType.LocalName
  - System.Xml.XmlDocumentType.Name
  - System.Xml.XmlDocumentType.NodeType
  - System.Xml.XmlDocumentType.Notations
  - System.Xml.XmlDocumentType.PublicId
  - System.Xml.XmlDocumentType.SystemId
  - System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  name: XmlDocumentType
  nameWithType: XmlDocumentType
  fullName: System.Xml.XmlDocumentType
  type: Class
  summary: "Hiermee geeft u de declaratie van het type document."
  remarks: "De klasse XmlDocumentType kan worden gebruikt om informatie over een declaratie van het type document te retourneren. Gebruik de <xref:System.Xml.XmlDocument.CreateDocumentType%2A?displayProperty=fullName>methode voor het maken van een object XmlDocumentType.</xref:System.Xml.XmlDocument.CreateDocumentType%2A?displayProperty=fullName>"
  syntax:
    content: 'public class XmlDocumentType : System.Xml.XmlLinkedNode'
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  - System.Xml.XmlLinkedNode
  implements: []
  inheritedMembers:
  - System.Xml.XmlLinkedNode.NextSibling
  - System.Xml.XmlLinkedNode.PreviousSibling
  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.BaseURI
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.Clone
  - System.Xml.XmlNode.CreateNavigator
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.InnerText
  - System.Xml.XmlNode.InnerXml
  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.NamespaceURI
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.OwnerDocument
  - System.Xml.XmlNode.ParentNode
  - System.Xml.XmlNode.Prefix
  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.SchemaInfo
  - System.Xml.XmlNode.SelectNodes(System.String)
  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.SelectSingleNode(System.String)
  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  - System.Xml.XmlNode.System#ICloneable#Clone
  - System.Xml.XmlNode.Value
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)
  id: '#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)'
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: XmlDocumentType(String,String,String,String,XmlDocument)
  nameWithType: XmlDocumentType.XmlDocumentType(String,String,String,String,XmlDocument)
  fullName: System.Xml.XmlDocumentType.XmlDocumentType(String,String,String,String,XmlDocument)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Xml.XmlDocumentType&quot;> </xref> klasse."
  remarks: "Kan geen exemplaar maken van een <xref:System.Xml.XmlDocumentType>rechtstreeks; in plaats daarvan gebruikt u leden zoals <xref:System.Xml.XmlDocument.DocumentType%2A>een ophalen.</xref:System.Xml.XmlDocument.DocumentType%2A> </xref:System.Xml.XmlDocumentType>"
  syntax:
    content: protected XmlDocumentType (string name, string publicId, string systemId, string internalSubset, System.Xml.XmlDocument doc);
    parameters:
    - id: name
      type: System.String
      description: "De gekwalificeerde naam; Zie de <xref:System.Xml.XmlDocumentType.Name*>eigenschap.</xref:System.Xml.XmlDocumentType.Name*>"
    - id: publicId
      type: System.String
      description: "De openbare-id. Zie de <xref:System.Xml.XmlDocumentType.PublicId*>eigenschap.</xref:System.Xml.XmlDocumentType.PublicId*>"
    - id: systemId
      type: System.String
      description: "De systeemidentificatie; Zie de <xref:System.Xml.XmlDocumentType.SystemId*>eigenschap.</xref:System.Xml.XmlDocumentType.SystemId*>"
    - id: internalSubset
      type: System.String
      description: "De interne DTD-subset; Zie de <xref:System.Xml.XmlDocumentType.InternalSubset*>eigenschap.</xref:System.Xml.XmlDocumentType.InternalSubset*>"
    - id: doc
      type: System.Xml.XmlDocument
      description: "Het bovenliggende document."
  overload: System.Xml.XmlDocumentType.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: CloneNode(Boolean)
  nameWithType: XmlDocumentType.CloneNode(Boolean)
  fullName: System.Xml.XmlDocumentType.CloneNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Maakt een kopie van dit knooppunt."
  remarks: "Deze methode fungeert als een exemplaar-constructor voor knooppunten. Het gekloonde knooppunt heeft geen bovenliggend element (<xref:System.Xml.XmlNode.ParentNode%2A> retourneert `null`).</xref:System.Xml.XmlNode.ParentNode%2A>       De werking van deze methode met andere knooppunttypen Zie <xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=fullName>.</xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=fullName>"
  syntax:
    content: public override System.Xml.XmlNode CloneNode (bool deep);
    parameters:
    - id: deep
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om recursief te klonen de substructuur onder het opgegeven knooppunt. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> alleen knooppunt zichzelf klonen. Voor type documentknooppunten bevat het gekloonde knooppunt altijd de substructuur, ongeacht de parameterinstelling."
    return:
      type: System.Xml.XmlNode
      description: "Het gekloonde knooppunt."
  overload: System.Xml.XmlDocumentType.CloneNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.Entities
  id: Entities
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: Entities
  nameWithType: XmlDocumentType.Entities
  fullName: System.Xml.XmlDocumentType.Entities
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee wordt de verzameling <xref href=&quot;System.Xml.XmlEntity&quot;> </xref> knooppunten die zijn gedeclareerd in de declaratie van het type document."
  remarks: "De volgorde waarin de entiteiten worden geretourneerd, is niet gebaseerd op de volgorde waarin deze items in het document kunnen worden weergegeven. De volgorde is ook niet gegarandeerd dezelfde tussen vergelijkbare documenten of tussen verschillende implementaties of versies van de klasse."
  example:
  - "The following example displays information about the entities declared in the XML document.  \n  \n [!code-cs[XmlEntity#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_1_1.cs)]\n [!code-cpp[XmlEntity#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_1_1.cpp)]\n [!code-vb[XmlEntity#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_1_1.vb)]  \n  \n The example uses the file `doment.xml` as input.  \n  \n [!code-xml[XmlEntity#2](~/add/codesnippet/xml/p-system.xml.xmldocument_1_2.xml)]"
  syntax:
    content: public System.Xml.XmlNamedNodeMap Entities { get; }
    return:
      type: System.Xml.XmlNamedNodeMap
      description: "Een <xref href=&quot;System.Xml.XmlNamedNodeMap&quot;> </xref> met de <xref uid=&quot;langword_csharp_XmlEntity&quot; name=&quot;XmlEntity&quot; href=&quot;&quot;> </xref> knooppunten. De geretourneerde <xref uid=&quot;langword_csharp_XmlNamedNodeMap&quot; name=&quot;XmlNamedNodeMap&quot; href=&quot;&quot;> </xref> is alleen-lezen."
  overload: System.Xml.XmlDocumentType.Entities*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.InternalSubset
  id: InternalSubset
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: InternalSubset
  nameWithType: XmlDocumentType.InternalSubset
  fullName: System.Xml.XmlDocumentType.InternalSubset
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee wordt de waarde van het document type definition (DTD) interne subset opgehaald op de DOCTYPE-declaratie."
  remarks: ''
  example:
  - "The following example displays information about the DocumentType node.  \n  \n [!code-cpp[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_3_1.cpp)]\n [!code-cs[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_3_1.cs)]\n [!code-vb[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_3_1.vb)]"
  syntax:
    content: public string InternalSubset { get; }
    return:
      type: System.String
      description: "De DTD interne subset van het DOCUMENTTYPE. Als er geen interne DTD-subset, wordt String.Empty geretourneerd."
  overload: System.Xml.XmlDocumentType.InternalSubset*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.IsReadOnly
  id: IsReadOnly
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: XmlDocumentType.IsReadOnly
  fullName: System.Xml.XmlDocumentType.IsReadOnly
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee wordt een waarde die aangeeft of het knooppunt alleen-lezen is."
  remarks: "Een alleen-lezen-knooppunt is een waarvan eigenschappen, kenmerken of onderliggende elementen kan niet worden gewijzigd. U kunt echter een alleen-lezen knooppunt verwijderen uit de structuur en voeg deze ergens anders.       Kunt u een `XmlDocumentType` uit een document en weer in het document, zolang het document heeft geen een elementknooppunt opnieuw plaatsen. Wanneer een document een hoofdelement heeft de `XmlDocumentType` kan niet worden gewijzigd.       Deze eigenschap is een Microsoft-extensie aan het Document Object Model (DOM)."
  example:
  - "The following example displays information about the DocumentType node.  \n  \n [!code-cpp[Classic WebData XmlDocumentType.IsReadOnly Example#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_12_1.cpp)]\n [!code-vb[Classic WebData XmlDocumentType.IsReadOnly Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_12_1.vb)]\n [!code-cs[Classic WebData XmlDocumentType.IsReadOnly Example#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_12_1.cs)]"
  syntax:
    content: public override bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het knooppunt alleen-lezen is. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       Omdat DocumentType knooppunten alleen-lezen zijn, retourneert deze eigenschap altijd <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlDocumentType.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.LocalName
  id: LocalName
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: LocalName
  nameWithType: XmlDocumentType.LocalName
  fullName: System.Xml.XmlDocumentType.LocalName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee haalt u de lokale naam van het knooppunt."
  syntax:
    content: public override string LocalName { get; }
    return:
      type: System.String
      description: "Deze eigenschap retourneert voor DocumentType knooppunten, de naam van het documenttype."
  overload: System.Xml.XmlDocumentType.LocalName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.Name
  id: Name
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: Name
  nameWithType: XmlDocumentType.Name
  fullName: System.Xml.XmlDocumentType.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee haalt u de gekwalificeerde naam van het knooppunt."
  remarks: ''
  example:
  - "The following example displays information about the DocumentType node.  \n  \n [!code-cpp[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_5_1.cpp)]\n [!code-cs[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_5_1.cs)]\n [!code-vb[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_5_1.vb)]"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "Deze eigenschap retourneert voor DocumentType knooppunten, de naam van het documenttype."
  overload: System.Xml.XmlDocumentType.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.NodeType
  id: NodeType
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: NodeType
  nameWithType: XmlDocumentType.NodeType
  fullName: System.Xml.XmlDocumentType.NodeType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee wordt het type van het huidige knooppunt."
  syntax:
    content: public override System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: "Deze waarde is voor knooppunten DocumentType XmlNodeType.DocumentType."
  overload: System.Xml.XmlDocumentType.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.Notations
  id: Notations
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: Notations
  nameWithType: XmlDocumentType.Notations
  fullName: System.Xml.XmlDocumentType.Notations
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee wordt de verzameling <xref href=&quot;System.Xml.XmlNotation&quot;> </xref> typedeclaratie knooppunten aanwezig in het document."
  remarks: "De volgorde waarin de notaties worden geretourneerd, is niet gebaseerd op de volgorde waarin deze items in het document kunnen worden weergegeven. De volgorde is ook niet gegarandeerd dezelfde tussen vergelijkbare documenten of tussen verschillende implementaties of versies van de klasse."
  example:
  - "The following example displays information about the notations declared in the XML document.  \n  \n [!code-cs[XmlNotation#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_0_1.cs)]\n [!code-cpp[XmlNotation#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_0_1.cpp)]\n [!code-vb[XmlNotation#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_0_1.vb)]  \n  \n The example uses the file `doment.xml` as input.  \n  \n [!code-xml[XmlNotation#2](~/add/codesnippet/xml/p-system.xml.xmldocument_0_2.xml)]"
  syntax:
    content: public System.Xml.XmlNamedNodeMap Notations { get; }
    return:
      type: System.Xml.XmlNamedNodeMap
      description: "Een <xref href=&quot;System.Xml.XmlNamedNodeMap&quot;> </xref> met de <xref uid=&quot;langword_csharp_XmlNotation&quot; name=&quot;XmlNotation&quot; href=&quot;&quot;> </xref> knooppunten. De geretourneerde <xref uid=&quot;langword_csharp_XmlNamedNodeMap&quot; name=&quot;XmlNamedNodeMap&quot; href=&quot;&quot;> </xref> is alleen-lezen."
  overload: System.Xml.XmlDocumentType.Notations*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.PublicId
  id: PublicId
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: PublicId
  nameWithType: XmlDocumentType.PublicId
  fullName: System.Xml.XmlDocumentType.PublicId
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee wordt de waarde van de publieke id opgehaald op de DOCTYPE-declaratie."
  syntax:
    content: public string PublicId { get; }
    return:
      type: System.String
      description: "De openbare-id van het DOCUMENTTYPE. Als er geen openbare id <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> wordt geretourneerd."
  overload: System.Xml.XmlDocumentType.PublicId*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.SystemId
  id: SystemId
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: SystemId
  nameWithType: XmlDocumentType.SystemId
  fullName: System.Xml.XmlDocumentType.SystemId
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee haalt de waarde van de systeemidentificatie op de DOCTYPE-declaratie."
  syntax:
    content: public string SystemId { get; }
    return:
      type: System.String
      description: "De systeem-id van het DOCUMENTTYPE. Als er geen systeemidentificatie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> wordt geretourneerd."
  overload: System.Xml.XmlDocumentType.SystemId*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlDocumentType.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlDocumentType.WriteContentTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Alle onderliggende elementen van het knooppunt naar de opgegeven <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> opgeslagen Voor <xref uid=&quot;langword_csharp_XmlDocumentType&quot; name=&quot;XmlDocumentType&quot; href=&quot;&quot;> </xref> knooppunten, deze methode heeft geen effect."
  syntax:
    content: public override void WriteContentTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "De <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> waarop u wilt opslaan."
  overload: System.Xml.XmlDocumentType.WriteContentTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: WriteTo(XmlWriter)
  nameWithType: XmlDocumentType.WriteTo(XmlWriter)
  fullName: System.Xml.XmlDocumentType.WriteTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee slaat u het knooppunt aan de opgegeven <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  syntax:
    content: public override void WriteTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "De <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> waarop u wilt opslaan."
  overload: System.Xml.XmlDocumentType.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XmlLinkedNode
  isExternal: false
  name: System.Xml.XmlLinkedNode
- uid: System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: XmlDocumentType(String,String,String,String,XmlDocument)
  nameWithType: XmlDocumentType.XmlDocumentType(String,String,String,String,XmlDocument)
  fullName: System.Xml.XmlDocumentType.XmlDocumentType(String,String,String,String,XmlDocument)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.XmlDocumentType.CloneNode(System.Boolean)
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: CloneNode(Boolean)
  nameWithType: XmlDocumentType.CloneNode(Boolean)
  fullName: System.Xml.XmlDocumentType.CloneNode(Boolean)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlDocumentType.Entities
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: Entities
  nameWithType: XmlDocumentType.Entities
  fullName: System.Xml.XmlDocumentType.Entities
- uid: System.Xml.XmlNamedNodeMap
  parent: System.Xml
  isExternal: false
  name: XmlNamedNodeMap
  nameWithType: XmlNamedNodeMap
  fullName: System.Xml.XmlNamedNodeMap
- uid: System.Xml.XmlDocumentType.InternalSubset
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: InternalSubset
  nameWithType: XmlDocumentType.InternalSubset
  fullName: System.Xml.XmlDocumentType.InternalSubset
- uid: System.Xml.XmlDocumentType.IsReadOnly
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: IsReadOnly
  nameWithType: XmlDocumentType.IsReadOnly
  fullName: System.Xml.XmlDocumentType.IsReadOnly
- uid: System.Xml.XmlDocumentType.LocalName
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: LocalName
  nameWithType: XmlDocumentType.LocalName
  fullName: System.Xml.XmlDocumentType.LocalName
- uid: System.Xml.XmlDocumentType.Name
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: Name
  nameWithType: XmlDocumentType.Name
  fullName: System.Xml.XmlDocumentType.Name
- uid: System.Xml.XmlDocumentType.NodeType
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: NodeType
  nameWithType: XmlDocumentType.NodeType
  fullName: System.Xml.XmlDocumentType.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: true
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlDocumentType.Notations
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: Notations
  nameWithType: XmlDocumentType.Notations
  fullName: System.Xml.XmlDocumentType.Notations
- uid: System.Xml.XmlDocumentType.PublicId
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: PublicId
  nameWithType: XmlDocumentType.PublicId
  fullName: System.Xml.XmlDocumentType.PublicId
- uid: System.Xml.XmlDocumentType.SystemId
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: SystemId
  nameWithType: XmlDocumentType.SystemId
  fullName: System.Xml.XmlDocumentType.SystemId
- uid: System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlDocumentType.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlDocumentType.WriteContentTo(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: WriteTo(XmlWriter)
  nameWithType: XmlDocumentType.WriteTo(XmlWriter)
  fullName: System.Xml.XmlDocumentType.WriteTo(XmlWriter)
- uid: System.Xml.XmlDocumentType.#ctor*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: XmlDocumentType
  nameWithType: XmlDocumentType.XmlDocumentType
- uid: System.Xml.XmlDocumentType.CloneNode*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: CloneNode
  nameWithType: XmlDocumentType.CloneNode
- uid: System.Xml.XmlDocumentType.Entities*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: Entities
  nameWithType: XmlDocumentType.Entities
- uid: System.Xml.XmlDocumentType.InternalSubset*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: InternalSubset
  nameWithType: XmlDocumentType.InternalSubset
- uid: System.Xml.XmlDocumentType.IsReadOnly*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: IsReadOnly
  nameWithType: XmlDocumentType.IsReadOnly
- uid: System.Xml.XmlDocumentType.LocalName*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: LocalName
  nameWithType: XmlDocumentType.LocalName
- uid: System.Xml.XmlDocumentType.Name*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: Name
  nameWithType: XmlDocumentType.Name
- uid: System.Xml.XmlDocumentType.NodeType*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: NodeType
  nameWithType: XmlDocumentType.NodeType
- uid: System.Xml.XmlDocumentType.Notations*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: Notations
  nameWithType: XmlDocumentType.Notations
- uid: System.Xml.XmlDocumentType.PublicId*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: PublicId
  nameWithType: XmlDocumentType.PublicId
- uid: System.Xml.XmlDocumentType.SystemId*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: SystemId
  nameWithType: XmlDocumentType.SystemId
- uid: System.Xml.XmlDocumentType.WriteContentTo*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: WriteContentTo
  nameWithType: XmlDocumentType.WriteContentTo
- uid: System.Xml.XmlDocumentType.WriteTo*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: WriteTo
  nameWithType: XmlDocumentType.WriteTo
