### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.DependencyPropertyDescriptor
  id: DependencyPropertyDescriptor
  children:
  - System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  - System.ComponentModel.DependencyPropertyDescriptor.Attributes
  - System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.Category
  - System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  - System.ComponentModel.DependencyPropertyDescriptor.Converter
  - System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  - System.ComponentModel.DependencyPropertyDescriptor.Description
  - System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  - System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  - System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  - System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)
  - System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)
  - System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)
  - System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  - System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)
  - System.ComponentModel.DependencyPropertyDescriptor.GetHashCode
  - System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  - System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  - System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  - System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  - System.ComponentModel.DependencyPropertyDescriptor.Metadata
  - System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  - System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  - System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  - System.ComponentModel.DependencyPropertyDescriptor.ToString
  langs:
  - csharp
  name: DependencyPropertyDescriptor
  nameWithType: DependencyPropertyDescriptor
  fullName: System.ComponentModel.DependencyPropertyDescriptor
  type: Class
  summary: "Biedt een uitbreiding van <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> die accounts voor de eigenschap extra kenmerken van een afhankelijkheidseigenschap."
  remarks: "Deze klasse wordt voornamelijk gebruikt door toepassingen ontwerpen. Deze toepassingen wellicht de kenmerken van de eigenschap afhankelijkheid via de eigenschap windows of andere hulpprogramma&quot;s gebruikt voor het bewerken van eigenschapswaarden rapporteren.       Om te controleren van een bepaalde eigenschap om te bepalen of er DependencyPropertyDescriptor beschikbaar om te fungeren als een <xref:System.ComponentModel.PropertyDescriptor>, ofwel aanroepen <xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=fullName>, of <xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=fullName>.</xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=fullName> </xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=fullName> </xref:System.ComponentModel.PropertyDescriptor> Als de methode retourneert `null`, en vervolgens de eigenschap niet een afhankelijkheidseigenschap is. Als de methode een geldige DependencyPropertyDescriptor retourneert, is de eigenschap een afhankelijkheidseigenschap."
  syntax:
    content: 'public sealed class DependencyPropertyDescriptor : System.ComponentModel.PropertyDescriptor'
  inheritance:
  - System.Object
  - System.ComponentModel.MemberDescriptor
  - System.ComponentModel.PropertyDescriptor
  implements: []
  inheritedMembers:
  - System.ComponentModel.MemberDescriptor.AttributeArray
  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  - System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  - System.ComponentModel.MemberDescriptor.Name
  - System.ComponentModel.MemberDescriptor.NameHashCode
  - System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)
  - System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)
  - System.ComponentModel.PropertyDescriptor.GetChildProperties
  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])
  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)
  - System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)
  - System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)
  - System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)
  - System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)
  - System.ComponentModel.PropertyDescriptor.SerializationVisibility
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  id: AddValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: AddValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Kunnen andere objecten wilt worden gewaarschuwd als deze eigenschap wordt gewijzigd."
  syntax:
    content: public override void AddValueChanged (object component, EventHandler handler);
    parameters:
    - id: component
      type: System.Object
      description: "Het onderdeel de handler voor toevoegen."
    - id: handler
      type: System.EventHandler
      description: "De gemachtigde om toe te voegen als een listener."
  overload: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Attributes
  id: Attributes
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Attributes
  nameWithType: DependencyPropertyDescriptor.Attributes
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Attributes
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Hiermee wordt de verzameling van kenmerken voor dit lid."
  syntax:
    content: public override System.ComponentModel.AttributeCollection Attributes { get; }
    return:
      type: System.ComponentModel.AttributeCollection
      description: "De <xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> verzameling kenmerken."
  overload: System.ComponentModel.DependencyPropertyDescriptor.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)
  id: CanResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: CanResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.CanResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Retourneert of opnieuw instellen van een object de waarde ervan verandert."
  remarks: "Deze methode is afhankelijk van de onderliggende <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool CanResetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Het onderdeel voor het testen voor opnieuw instellen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het opnieuw instellen van het onderdeel verandert de waarde ervan; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Category
  id: Category
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Category
  nameWithType: DependencyPropertyDescriptor.Category
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Category
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Hiermee wordt de naam van de categorie die het lid behoort, zoals opgegeven in de <xref href=&quot;System.ComponentModel.CategoryAttribute&quot;> </xref>."
  remarks: "Deze eigenschap is afhankelijk van de onderliggende <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override string Category { get; }
    return:
      type: System.String
      description: "De naam van de categorie waarvan het lid deel uitmaakt. Als er geen <xref href=&quot;System.ComponentModel.CategoryAttribute&quot;> </xref>, de categorienaam is ingesteld op de standaardcategorie <xref uid=&quot;langword_csharp_Misc&quot; name=&quot;Misc&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.Category*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  id: ComponentType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ComponentType
  nameWithType: DependencyPropertyDescriptor.ComponentType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Hiermee wordt het type van het onderdeel dat deze eigenschap is gebonden aan."
  remarks: "Deze eigenschap is afhankelijk van de onderliggende <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override Type ComponentType { get; }
    return:
      type: System.Type
      description: "Een <xref:System.Type>dat het type van deze eigenschap is gebonden aan onderdeel vertegenwoordigt.</xref:System.Type> Wanneer <> </> *> of <> </> *> worden aangeroepen, het opgegeven object is mogelijk een exemplaar van dit type."
  overload: System.ComponentModel.DependencyPropertyDescriptor.ComponentType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Converter
  id: Converter
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Converter
  nameWithType: DependencyPropertyDescriptor.Converter
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Converter
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Hiermee wordt de type-conversieprogramma voor deze eigenschap."
  remarks: "Deze eigenschap is mogelijk `null` in gevallen waar de attributed <xref:System.ComponentModel.TypeConverter>is niet een openbare klasse.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public override System.ComponentModel.TypeConverter Converter { get; }
    return:
      type: System.ComponentModel.TypeConverter
      description: "Een <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> die wordt gebruikt om te converteren de <xref:System.Type>van deze eigenschap.</xref:System.Type>"
  overload: System.ComponentModel.DependencyPropertyDescriptor.Converter*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  id: DependencyProperty
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DependencyProperty
  nameWithType: DependencyPropertyDescriptor.DependencyProperty
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Retourneert de id van de eigenschap afhankelijkheid."
  remarks: "Deze eigenschap is mogelijk `null` als een <xref:System.ComponentModel.DependencyPropertyDescriptor>exemplaar is gemaakt voor een eigenschap die is niet een afhankelijkheidseigenschap.</xref:System.ComponentModel.DependencyPropertyDescriptor>"
  syntax:
    content: public System.Windows.DependencyProperty DependencyProperty { get; }
    return:
      type: System.Windows.DependencyProperty
      description: "De afhankelijkheid eigenschaps-id."
  overload: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Description
  id: Description
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Description
  nameWithType: DependencyPropertyDescriptor.Description
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Description
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Wordt de beschrijving van het lid, zoals opgegeven in de <xref href=&quot;System.ComponentModel.DescriptionAttribute&quot;> </xref>."
  remarks: "Deze eigenschap is afhankelijk van de onderliggende <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override string Description { get; }
    return:
      type: System.String
      description: "De beschrijving van het lid. Als er geen <xref href=&quot;System.ComponentModel.DescriptionAttribute&quot;> </xref>, waarde van de eigenschap is ingesteld op de standaardwaarde een lege tekenreeks is (&quot;&quot;)."
  overload: System.ComponentModel.DependencyPropertyDescriptor.Description*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  id: DesignerCoerceValueCallback
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DesignerCoerceValueCallback
  nameWithType: DependencyPropertyDescriptor.DesignerCoerceValueCallback
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Opgehaald of ingesteld van een callback die ontwerpers gebruiken om te wijzigen van de effectieve waarde van een afhankelijkheidseigenschap voordat u de waarde van de eigenschap afhankelijkheid wordt opgeslagen in de engine van de eigenschap afhankelijkheid."
  syntax:
    content: public System.Windows.CoerceValueCallback DesignerCoerceValueCallback { get; set; }
    return:
      type: System.Windows.CoerceValueCallback
      description: "Een retouraanroep waarmee ontwerpers de effectieve waarde van een afhankelijkheidseigenschap wijzigen voordat u de waarde van de eigenschap afhankelijkheid wordt opgeslagen in de engine van de eigenschap afhankelijkheid."
  overload: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  id: DesignTimeOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DesignTimeOnly
  nameWithType: DependencyPropertyDescriptor.DesignTimeOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Hiermee wordt opgehaald of dit lid moet worden ingesteld alleen tijdens ontwerptijd, zoals opgegeven in de <xref href=&quot;System.ComponentModel.DesignOnlyAttribute&quot;> </xref>."
  remarks: "Deze eigenschap is afhankelijk van de onderliggende <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool DesignTimeOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u dit lid moet worden ingesteld alleen tijdens de ontwerpfase; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als het lid kan worden ingesteld tijdens runtime. Als er geen <xref href=&quot;System.ComponentModel.DesignOnlyAttribute&quot;> </xref>, de geretourneerde waarde is de standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  id: DisplayName
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DisplayName
  nameWithType: DependencyPropertyDescriptor.DisplayName
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Hiermee haalt u de naam die in een venster, zoals een venster met eigenschappen kan worden weergegeven."
  remarks: "Deze eigenschap is afhankelijk van de onderliggende <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override string DisplayName { get; }
    return:
      type: System.String
      description: "De naam moet worden weergegeven voor de eigenschap."
  overload: System.ComponentModel.DependencyPropertyDescriptor.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DependencyPropertyDescriptor.Equals(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Vergelijkt twee <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> exemplaren voor gelijkheid."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "De <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> moeten worden vergeleken met het huidige exemplaar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarden equivalent zijn; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)
  id: FromName(System.String,System.Type,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromName(String,Type,Type)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Retourneert een <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> voor een opgegeven eigenschapsnaam."
  remarks: "De `name` kunnen verwijzen naar een afhankelijkheidseigenschap of een gekoppelde eigenschap en is de `name` parameter als wordt doorgegeven aan de <xref:System.Windows.DependencyProperty.Register%2A>of <xref:System.Windows.DependencyProperty.RegisterAttached%2A>aanroep die de desbetreffende eigenschap gedefinieerd.</xref:System.Windows.DependencyProperty.RegisterAttached%2A> </xref:System.Windows.DependencyProperty.Register%2A> `ownerType`het type object die eigenaar is de eigenschap opnieuw als van doorgegeven aan <xref:System.Windows.DependencyProperty.Register%2A>of <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</xref:System.Windows.DependencyProperty.RegisterAttached%2A> </xref:System.Windows.DependencyProperty.Register%2A> `targetType`is het type object die u wilt dat de eigenschap voor te stellen. Voor afhankelijkheidseigenschappen, `ownerType` en `targetType` hetzelfde type zijn. Voor de bijgevoegde eigenschappen die meestal verschillen."
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType);
    parameters:
    - id: name
      type: System.String
      description: "De geregistreerde naam van de afhankelijkheidseigenschap van een of een gekoppelde eigenschap."
    - id: ownerType
      type: System.Type
      description: "De <xref:System.Type>van het object dat eigenaar is van de definitie van de eigenschap.</xref:System.Type>"
    - id: targetType
      type: System.Type
      description: "De <xref:System.Type>van het object dat u wilt de for. eigenschap instellen</xref:System.Type>"
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "De gevraagde <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)
  id: FromName(System.String,System.Type,System.Type,System.Boolean)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromName(String,Type,Type,Boolean)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Retourneert een <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> voor een opgegeven eigenschapsnaam."
  remarks: "De `name` kunnen verwijzen naar een afhankelijkheidseigenschap of een gekoppelde eigenschap en is de `name` parameter als wordt doorgegeven aan de <xref:System.Windows.DependencyProperty.Register%2A>of <xref:System.Windows.DependencyProperty.RegisterAttached%2A>aanroep die de desbetreffende eigenschap gedefinieerd.</xref:System.Windows.DependencyProperty.RegisterAttached%2A> </xref:System.Windows.DependencyProperty.Register%2A> `ownerType`het type object die eigenaar is de eigenschap opnieuw als van doorgegeven aan <xref:System.Windows.DependencyProperty.Register%2A>of <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</xref:System.Windows.DependencyProperty.RegisterAttached%2A> </xref:System.Windows.DependencyProperty.Register%2A> `targetType`is het type object die u wilt dat de eigenschap voor te stellen. Voor afhankelijkheidseigenschappen, `ownerType` en `targetType` hetzelfde type zijn. Voor de bijgevoegde eigenschappen die meestal verschillen."
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType, bool ignorePropertyType);
    parameters:
    - id: name
      type: System.String
      description: "De geregistreerde naam van de afhankelijkheidseigenschap van een of een gekoppelde eigenschap."
    - id: ownerType
      type: System.Type
      description: "De <xref:System.Type>van het object dat eigenaar is van de definitie van de eigenschap.</xref:System.Type>"
    - id: targetType
      type: System.Type
      description: "De <xref:System.Type>van het object dat u wilt de for. eigenschap instellen</xref:System.Type>"
    - id: ignorePropertyType
      type: System.Boolean
      description: "Hiermee geeft u het eigenschapstype wordt genegeerd."
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "De gevraagde <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)
  id: FromProperty(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromProperty(PropertyDescriptor)
  nameWithType: DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Retourneert een <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> voor een opgegeven <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>."
  remarks: "Dit is de primaire methode gebruikt door toepassingen ontwerpen voor een <xref:System.ComponentModel.DependencyPropertyDescriptor>op basis van alle eigenschappen voor een <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> controleren</xref:System.ComponentModel.DependencyPropertyDescriptor>"
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "De <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> om te controleren."
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "Als de eigenschap beschreven door <code> property </code> een afhankelijkheidseigenschap is, retourneert een geldige <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>. Anders retourneert een <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)
  id: FromProperty(System.Windows.DependencyProperty,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromProperty(DependencyProperty,Type)
  nameWithType: DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Retourneert een <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> voor een opgegeven afhankelijkheid eigenschap en het doel."
  remarks: "De `dependencyProperty` kunnen verwijzen naar een afhankelijkheidseigenschap of een gekoppelde eigenschap. `targetType`is het type object die u wilt dat de eigenschap voor te stellen. Voor afhankelijkheidseigenschappen die type gelijk is aan de <xref:System.Windows.DependencyProperty.OwnerType%2A>voor de `dependencyProperty`.</xref:System.Windows.DependencyProperty.OwnerType%2A> Voor de bijgevoegde eigenschappen de `targetType` is meestal een andere <xref:System.Windows.DependencyObject>type.</xref:System.Windows.DependencyObject>"
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.Windows.DependencyProperty dependencyProperty, Type targetType);
    parameters:
    - id: dependencyProperty
      type: System.Windows.DependencyProperty
      description: "De id voor een afhankelijkheidseigenschap."
    - id: targetType
      type: System.Type
      description: "Het type van het object waarvan de eigenschap is ingesteld."
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "Een <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> voor de opgegeven afhankelijkheidseigenschap."
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  id: GetChildProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetChildProperties(Object,Attribute[])
  nameWithType: DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Retourneert een <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>."
  remarks: "Deze methode is afhankelijk van de onderliggende <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);
    parameters:
    - id: instance
      type: System.Object
      description: "Een onderdeel van de eigenschappen voor ophalen."
    - id: filter
      type: System.Attribute[]
      description: "Een matrix van het type <xref:System.Attribute>moet worden gebruikt als een filter.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Een <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> met de eigenschappen die overeenkomen met de opgegeven kenmerken voor het opgegeven onderdeel."
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)
  id: GetEditor(System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetEditor(Type)
  nameWithType: DependencyPropertyDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Hiermee haalt u een editor van het opgegeven type."
  remarks: "Deze methode is afhankelijk van de onderliggende <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override object GetEditor (Type editorBaseType);
    parameters:
    - id: editorBaseType
      type: System.Type
      description: "Het basistype van editor, die wordt gebruikt voor het onderscheid maken tussen meerdere editors die ondersteuning biedt voor een eigenschap."
    return:
      type: System.Object
      description: "Een exemplaar van het type aangevraagde editor of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als een editor kan niet worden gevonden."
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetEditor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DependencyPropertyDescriptor.GetHashCode()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Retourneert de hash-code voor deze <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>."
  remarks: "De hash-code voor <xref:System.ComponentModel.DependencyPropertyDescriptor>is gebaseerd op de id voor een afhankelijkheidseigenschap zowel op het type waarop deze is ingesteld.</xref:System.ComponentModel.DependencyPropertyDescriptor> Deze implementatie zorgt ervoor dat een <xref:System.ComponentModel.DependencyPropertyDescriptor>onjuist retourneert geen dezelfde hashcode voor eigenschappen die zijn overgenomen door de vele mogelijke afgeleide klassen of eigenschappen die anders opnieuw worden toegewezen via de eigenschap systeem.</xref:System.ComponentModel.DependencyPropertyDescriptor>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Een 32-bits geheel getal met teken hash-code."
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)
  id: GetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetValue(Object)
  nameWithType: DependencyPropertyDescriptor.GetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "De huidige waarde van de eigenschap van een onderdeel Resturns."
  remarks: "Deze methode is afhankelijk van de onderliggende <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override object GetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Het exemplaar van het onderdeel."
    return:
      type: System.Object
      description: "De aangevraagde waarde."
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  id: IsAttached
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsAttached
  nameWithType: DependencyPropertyDescriptor.IsAttached
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Haalt een waarde die aangeeft of de eigenschap is geregistreerd als een gekoppelde eigenschap en via het gebruik van een gekoppelde wordt gebruikt."
  syntax:
    content: public bool IsAttached { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de eigenschap een gekoppelde eigenschap is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsAttached*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  id: IsBrowsable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsBrowsable
  nameWithType: DependencyPropertyDescriptor.IsBrowsable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Hiermee wordt een waarde die aangeeft van de waarde van de <xref href=&quot;System.ComponentModel.BrowsableAttribute&quot;> </xref> in de eigenschap."
  remarks: "Deze eigenschap is afhankelijk van de onderliggende <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool IsBrowsable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.ComponentModel.BrowsableAttribute&quot;> </xref> is opgegeven in de eigenschap, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  id: IsLocalizable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsLocalizable
  nameWithType: DependencyPropertyDescriptor.IsLocalizable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Hiermee wordt een waarde die aangeeft of moet deze eigenschap worden gelokaliseerd, zoals opgegeven in de <xref href=&quot;System.ComponentModel.LocalizableAttribute&quot;> </xref>."
  remarks: "Deze eigenschap is afhankelijk van de onderliggende <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool IsLocalizable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het lid is gemarkeerd met de <xref href=&quot;System.ComponentModel.LocalizableAttribute&quot;> </xref> constructor van de waarde true; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  id: IsReadOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: DependencyPropertyDescriptor.IsReadOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Hiermee wordt een waarde die aangeeft of deze eigenschap alleen-lezen is."
  remarks: "Deze eigenschap is afhankelijk van de onderliggende <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>       Afhankelijkheidseigenschappen zijn geregistreerd als alleen-lezen met behulp van bepaalde methodeaanroepen en conventie de [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] wrapper-eigenschappen die weergegeven door het reflectie en de descriptors eigenschappen worden moeten ook alleen-lezen. Echter omdat dit een overeenkomst en geen vereiste voor het compileren van is, kan u dubbele de afhankelijkheid eigenschap-id alleen-lezen status controleren. U doet dit door de id ophalen (<xref:System.Windows.DependencyProperty>) waarde voor deze <xref:System.ComponentModel.DependencyPropertyDescriptor>en controleer vervolgens de waarde van <xref:System.Windows.DependencyProperty.ReadOnly%2A>.</xref:System.Windows.DependencyProperty.ReadOnly%2A> </xref:System.ComponentModel.DependencyPropertyDescriptor> </xref:System.Windows.DependencyProperty> Houd er rekening mee dat de <xref:System.Windows.DependencyProperty.ReadOnly%2A>is van de id zelf, niet-metagegevens.</xref:System.Windows.DependencyProperty.ReadOnly%2A>"
  syntax:
    content: public override bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de eigenschap alleen-lezen is. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Metadata
  id: Metadata
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Metadata
  nameWithType: DependencyPropertyDescriptor.Metadata
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Metadata
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Haalt de metagegevens gekoppeld aan de afhankelijkheidseigenschap."
  remarks: "De waarde kan zijn `null` als er geen metagegevens of als de eigenschap niet een afhankelijkheidseigenschap is.       Metagegevens die concepten in bijbehorende [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] kenmerken wordt opnieuw weergegeven als kenmerken in de <xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A>verzameling.</xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A>"
  syntax:
    content: public System.Windows.PropertyMetadata Metadata { get; }
    return:
      type: System.Windows.PropertyMetadata
      description: "De metagegevens van de eigenschap afhankelijkheid."
  overload: System.ComponentModel.DependencyPropertyDescriptor.Metadata*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  id: PropertyType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: PropertyType
  nameWithType: DependencyPropertyDescriptor.PropertyType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Haalt de vertegenwoordigde <xref:System.Type>van de afhankelijkheidseigenschap.</xref:System.Type>"
  remarks: "Deze eigenschap geeft de <xref:System.Type>die de afhankelijkheidseigenschap is geregistreerd bij.</xref:System.Type>"
  syntax:
    content: public override Type PropertyType { get; }
    return:
      type: System.Type
      description: "De <xref:System.Type>van de afhankelijkheidseigenschap.</xref:System.Type>"
  overload: System.ComponentModel.DependencyPropertyDescriptor.PropertyType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  id: RemoveValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: RemoveValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Kunnen andere objecten wilt worden gewaarschuwd als deze eigenschap wordt gewijzigd."
  remarks: "Deze methode is afhankelijk van de onderliggende <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override void RemoveValueChanged (object component, EventHandler handler);
    parameters:
    - id: component
      type: System.Object
      description: "Het onderdeel de handler voor toevoegen."
    - id: handler
      type: System.EventHandler
      description: "De gemachtigde om toe te voegen als een listener."
  overload: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)
  id: ResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.ResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Hiermee stelt de waarde voor deze eigenschap van het onderdeel op de standaardwaarde."
  remarks: "Deze methode is afhankelijk van de onderliggende <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override void ResetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Het onderdeel met de waarde van de eigenschap die moet worden ingesteld op de standaardwaarde."
  overload: System.ComponentModel.DependencyPropertyDescriptor.ResetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)
  id: SetValue(System.Object,System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: SetValue(Object,Object)
  nameWithType: DependencyPropertyDescriptor.SetValue(Object,Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SetValue(Object,Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Hiermee stelt de waarde van het onderdeel op een andere waarde."
  remarks: "Deze methode is afhankelijk van de onderliggende <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override void SetValue (object component, object value);
    parameters:
    - id: component
      type: System.Object
      description: "Het onderdeel met de waarde van de eigenschap die moet worden ingesteld."
    - id: value
      type: System.Object
      description: "De nieuwe waarde."
  overload: System.ComponentModel.DependencyPropertyDescriptor.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)
  id: ShouldSerializeValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ShouldSerializeValue(Object)
  nameWithType: DependencyPropertyDescriptor.ShouldSerializeValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Hiermee wordt aangegeven of de waarde van deze eigenschap moet worden vastgehouden door processen van serialisatie."
  syntax:
    content: public override bool ShouldSerializeValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Het onderdeel met de eigenschap voor persistentie worden onderzocht."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de eigenschap moet worden vastgehouden; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  id: SupportsChangeEvents
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: SupportsChangeEvents
  nameWithType: DependencyPropertyDescriptor.SupportsChangeEvents
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Hiermee wordt aangegeven of de wijzigingsmeldingen waarde voor deze eigenschap kunnen afkomstig zijn van buiten de eigenschapsdescriptor zoals van het onderdeel zelf, of of meldingen wordt alleen afkomstig zijn van directe oproepen naar <xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>.</xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>"
  remarks: "Bijvoorbeeld: voor de `true` geval het onderdeel worden geïmplementeerd de <xref:System.ComponentModel.INotifyPropertyChanged>interface of beschikt niet over een expliciete `propertyName``Changed` gebeurtenis voor deze eigenschap.</xref:System.ComponentModel.INotifyPropertyChanged>       Deze eigenschap is afhankelijk van de onderliggende <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool SupportsChangeEvents { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u meldingen voor deze eigenschap kunnen afkomstig zijn van buiten de eigenschapsdescriptor zoals van het onderdeel zelf. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Als u meldingen wordt alleen afkomstig zijn direct oproepen naar <xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>.</xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>"
  overload: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ToString
  id: ToString
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ToString()
  nameWithType: DependencyPropertyDescriptor.ToString()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "De waarde van dit exemplaar wordt omgezet in de equivalente tekenreeksvoorstelling."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Retourneert de <xref:System.ComponentModel.MemberDescriptor.Name*>waarde.</xref:System.ComponentModel.MemberDescriptor.Name*>"
  overload: System.ComponentModel.DependencyPropertyDescriptor.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: AddValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.DependencyPropertyDescriptor.Attributes
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Attributes
  nameWithType: DependencyPropertyDescriptor.Attributes
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Attributes
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: CanResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.CanResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.DependencyPropertyDescriptor.Category
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Category
  nameWithType: DependencyPropertyDescriptor.Category
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Category
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: DependencyPropertyDescriptor.ComponentType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.DependencyPropertyDescriptor.Converter
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Converter
  nameWithType: DependencyPropertyDescriptor.Converter
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Converter
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyPropertyDescriptor.DependencyProperty
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.ComponentModel.DependencyPropertyDescriptor.Description
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Description
  nameWithType: DependencyPropertyDescriptor.Description
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Description
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignerCoerceValueCallback
  nameWithType: DependencyPropertyDescriptor.DesignerCoerceValueCallback
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
- uid: System.Windows.CoerceValueCallback
  parent: System.Windows
  isExternal: false
  name: CoerceValueCallback
  nameWithType: CoerceValueCallback
  fullName: System.Windows.CoerceValueCallback
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignTimeOnly
  nameWithType: DependencyPropertyDescriptor.DesignTimeOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: DependencyPropertyDescriptor.DisplayName
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
- uid: System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Equals(Object)
  nameWithType: DependencyPropertyDescriptor.Equals(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Equals(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromName(String,Type,Type)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type)
- uid: System.ComponentModel.DependencyPropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: DependencyPropertyDescriptor
  nameWithType: DependencyPropertyDescriptor
  fullName: System.ComponentModel.DependencyPropertyDescriptor
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromName(String,Type,Type,Boolean)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromProperty(PropertyDescriptor)
  nameWithType: DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromProperty(DependencyProperty,Type)
  nameWithType: DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetChildProperties(Object,Attribute[])
  nameWithType: DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetEditor(Type)
  nameWithType: DependencyPropertyDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(Type)
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetHashCode()
  nameWithType: DependencyPropertyDescriptor.GetHashCode()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetValue(Object)
  nameWithType: DependencyPropertyDescriptor.GetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetValue(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsAttached
  nameWithType: DependencyPropertyDescriptor.IsAttached
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsBrowsable
  nameWithType: DependencyPropertyDescriptor.IsBrowsable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsLocalizable
  nameWithType: DependencyPropertyDescriptor.IsLocalizable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsReadOnly
  nameWithType: DependencyPropertyDescriptor.IsReadOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.Metadata
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Metadata
  nameWithType: DependencyPropertyDescriptor.Metadata
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Metadata
- uid: System.Windows.PropertyMetadata
  parent: System.Windows
  isExternal: false
  name: PropertyMetadata
  nameWithType: PropertyMetadata
  fullName: System.Windows.PropertyMetadata
- uid: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: PropertyType
  nameWithType: DependencyPropertyDescriptor.PropertyType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
- uid: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: RemoveValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
- uid: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.ResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SetValue(Object,Object)
  nameWithType: DependencyPropertyDescriptor.SetValue(Object,Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SetValue(Object,Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ShouldSerializeValue(Object)
  nameWithType: DependencyPropertyDescriptor.ShouldSerializeValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SupportsChangeEvents
  nameWithType: DependencyPropertyDescriptor.SupportsChangeEvents
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
- uid: System.ComponentModel.DependencyPropertyDescriptor.ToString
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ToString()
  nameWithType: DependencyPropertyDescriptor.ToString()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ToString()
- uid: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: AddValueChanged
  nameWithType: DependencyPropertyDescriptor.AddValueChanged
- uid: System.ComponentModel.DependencyPropertyDescriptor.Attributes*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Attributes
  nameWithType: DependencyPropertyDescriptor.Attributes
- uid: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: CanResetValue
  nameWithType: DependencyPropertyDescriptor.CanResetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.Category*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Category
  nameWithType: DependencyPropertyDescriptor.Category
- uid: System.ComponentModel.DependencyPropertyDescriptor.ComponentType*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: DependencyPropertyDescriptor.ComponentType
- uid: System.ComponentModel.DependencyPropertyDescriptor.Converter*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Converter
  nameWithType: DependencyPropertyDescriptor.Converter
- uid: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyPropertyDescriptor.DependencyProperty
- uid: System.ComponentModel.DependencyPropertyDescriptor.Description*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Description
  nameWithType: DependencyPropertyDescriptor.Description
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignerCoerceValueCallback
  nameWithType: DependencyPropertyDescriptor.DesignerCoerceValueCallback
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignTimeOnly
  nameWithType: DependencyPropertyDescriptor.DesignTimeOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.DisplayName*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: DependencyPropertyDescriptor.DisplayName
- uid: System.ComponentModel.DependencyPropertyDescriptor.Equals*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Equals
  nameWithType: DependencyPropertyDescriptor.Equals
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromName
  nameWithType: DependencyPropertyDescriptor.FromName
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromProperty
  nameWithType: DependencyPropertyDescriptor.FromProperty
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetChildProperties
  nameWithType: DependencyPropertyDescriptor.GetChildProperties
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetEditor*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetEditor
  nameWithType: DependencyPropertyDescriptor.GetEditor
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetHashCode
  nameWithType: DependencyPropertyDescriptor.GetHashCode
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetValue
  nameWithType: DependencyPropertyDescriptor.GetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsAttached*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsAttached
  nameWithType: DependencyPropertyDescriptor.IsAttached
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsBrowsable
  nameWithType: DependencyPropertyDescriptor.IsBrowsable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsLocalizable
  nameWithType: DependencyPropertyDescriptor.IsLocalizable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsReadOnly
  nameWithType: DependencyPropertyDescriptor.IsReadOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.Metadata*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Metadata
  nameWithType: DependencyPropertyDescriptor.Metadata
- uid: System.ComponentModel.DependencyPropertyDescriptor.PropertyType*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: PropertyType
  nameWithType: DependencyPropertyDescriptor.PropertyType
- uid: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: RemoveValueChanged
  nameWithType: DependencyPropertyDescriptor.RemoveValueChanged
- uid: System.ComponentModel.DependencyPropertyDescriptor.ResetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ResetValue
  nameWithType: DependencyPropertyDescriptor.ResetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.SetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SetValue
  nameWithType: DependencyPropertyDescriptor.SetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ShouldSerializeValue
  nameWithType: DependencyPropertyDescriptor.ShouldSerializeValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SupportsChangeEvents
  nameWithType: DependencyPropertyDescriptor.SupportsChangeEvents
- uid: System.ComponentModel.DependencyPropertyDescriptor.ToString*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ToString
  nameWithType: DependencyPropertyDescriptor.ToString
