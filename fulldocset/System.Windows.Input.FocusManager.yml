### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.FocusManager
  id: FocusManager
  children:
  - System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.FocusedElementProperty
  - System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)
  - System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)
  - System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)
  - System.Windows.Input.FocusManager.GotFocusEvent
  - System.Windows.Input.FocusManager.IsFocusScopeProperty
  - System.Windows.Input.FocusManager.LostFocusEvent
  - System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  - System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  langs:
  - csharp
  name: FocusManager
  nameWithType: FocusManager
  fullName: System.Windows.Input.FocusManager
  type: Class
  summary: "Bevat een reeks statische methoden, de bijgevoegde eigenschappen en gebeurtenissen voor het vaststellen en instellen van focus scopes en voor het instellen van het element gerichte binnen het bereik."
  remarks: "In [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] er zijn twee concepten over focus: focus en logische focus toetsenbord.       Toetsenbordfocus heeft betrekking op het element waarmee toetsenbordinvoer momenteel ontvangt.  Er mag slechts één element met de toetsenbordfocus.  Dit element met de toetsenbordfocus heeft <xref:System.Windows.IInputElement.IsKeyboardFocused%2A>ingesteld op `true`.</xref:System.Windows.IInputElement.IsKeyboardFocused%2A>  <xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=fullName>het element met de toetsenbordfocus retourneert.</xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=fullName>       Logische focus heeft betrekking op de <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>binnen het bereik van een specifieke focus.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>       Een scope focus is een containerelement dat houdt de <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>binnen het bereik valt.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Standaard de <xref:System.Windows.Window>klasse is een bereik focus omdat de <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, en <xref:System.Windows.Controls.ToolBar>klassen.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Een element dat een bereik van de focus heeft <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>ingesteld op `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Er kunnen zich meerdere elementen met logische focus, maar er kan niet meer dan één element met logische focus binnen een bereik van één focus.  Een element met logische focus hoeft niet de toetsenbordfocus, maar een element met de toetsenbordfocus wordt logische focus hebben.  Het is mogelijk om een bereik focus binnen een scope focus te definiëren.  In dit geval zijn zowel de focus bovenliggend bereik en het onderliggende focus bereik een <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>       De volgende scenario wordt beschreven hoe toetsenbordfocus en logische focus wijzigen een [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] toepassing waarvoor een <xref:System.Windows.Window>met een <xref:System.Windows.Controls.TextBox>en een <xref:System.Windows.Controls.Menu>heeft een <xref:System.Windows.Controls.MenuItem>.</xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Window>  Wanneer de toetsenbordfocus wordt gewijzigd van de <xref:System.Windows.Controls.TextBox>naar de <xref:System.Windows.Controls.MenuItem>, wordt de <xref:System.Windows.Controls.TextBox>verliezen toetsenbordfocus maar behoudt logische focus voor de <xref:System.Windows.Window>bereik ligt de nadruk.</xref:System.Windows.Window> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.TextBox>  De <xref:System.Windows.Controls.MenuItem>toetsenbordfocus verkrijgt en verkrijgt logische focus voor de <xref:System.Windows.Controls.Menu>bereik ligt de nadruk.</xref:System.Windows.Controls.Menu> </xref:System.Windows.Controls.MenuItem>  Wanneer toetsenbord teruggegaan naar de hoofdmap <xref:System.Windows.Window>het element in het <xref:System.Windows.Window>bereik van de focus met logische focus toetsenbordfocus, die in dit geval de <xref:System.Windows.Controls.TextBox>.</xref:System.Windows.Controls.TextBox> wordt zal krijgen</xref:System.Windows.Window> </xref:System.Windows.Window>  De <xref:System.Windows.Controls.TextBox>heeft nu toetsenbordfocus en logische focus.</xref:System.Windows.Controls.TextBox>  De <xref:System.Windows.Controls.MenuItem>toetsenbordfocus verliest, maar behoudt logische focus voor de <xref:System.Windows.Controls.Menu>bereik ligt de nadruk.</xref:System.Windows.Controls.Menu> </xref:System.Windows.Controls.MenuItem>       De standaardwaarde van <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>op een <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, en <xref:System.Windows.Controls.ContextMenu>is `true`.</xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Zie voor meer informatie over focus de [invoer overzicht](~/add/includes/ajax-current-ext-md.md) en de [Focus overzicht](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static class FocusManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Voegt een handler voor de <xref:System.Windows.Input.FocusManager.GotFocus>gebeurtenis gekoppeld.</xref:System.Windows.Input.FocusManager.GotFocus>"
  syntax:
    content: public static void AddGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "De <xref href=&quot;System.Windows.UIElement&quot;> </xref> of <xref href=&quot;System.Windows.ContentElement&quot;> </xref> die aan deze gebeurtenis wordt geluisterd."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "De gebeurtenis-handler moet worden toegevoegd."
  overload: System.Windows.Input.FocusManager.AddGotFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Voegt een handler voor de <xref:System.Windows.Input.FocusManager.LostFocus>gebeurtenis gekoppeld.</xref:System.Windows.Input.FocusManager.LostFocus>"
  syntax:
    content: public static void AddLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "De <xref href=&quot;System.Windows.UIElement&quot;> </xref> of <xref href=&quot;System.Windows.ContentElement&quot;> </xref> die aan deze gebeurtenis wordt geluisterd."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "De gebeurtenis-handler moet worden toegevoegd."
  overload: System.Windows.Input.FocusManager.AddLostFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.FocusedElementProperty
  id: FocusedElementProperty
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: FocusedElementProperty
  nameWithType: FocusManager.FocusedElementProperty
  fullName: System.Windows.Input.FocusManager.FocusedElementProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identificeert de <xref:System.Windows.Input.FocusManager.FocusedElement*>die eigenschap zijn gekoppeld.</xref:System.Windows.Input.FocusManager.FocusedElement*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FocusedElementProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)
  id: GetFocusedElement(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GetFocusedElement(DependencyObject)
  nameWithType: FocusManager.GetFocusedElement(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusedElement(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Het element met de logische focus binnen het bereik opgegeven focus opgehaald."
  remarks: "De <xref:System.Windows.Input.FocusManager.FocusedElement%2A>is van het element dat de logische focus voor een scope specifieke focus heeft.</xref:System.Windows.Input.FocusManager.FocusedElement%2A>  Dit object mogelijk wel of geen toetsenbordfocus.  Toetsenbordfocus verwijst naar het element dat toetsenbordinvoer ontvangt.  Zie voor meer informatie over focus toetsenbordfocus en logische focus de [invoer overzicht](~/add/includes/ajax-current-ext-md.md).       Als `element` is geen focus bereik, resulteert deze methode `null`.       Gebruik <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, om op te geven van het element met logische focus binnen een bereik opgegeven focus.</xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>"
  example:
  - "The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the GetFocusedElement.  \n  \n [!code-cs[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/csharp/FocusSnippets/Window1.xaml.cs#focusgetsetfocusedelement)]\n [!code-vb[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/visualbasic/focussnippets/window1.xaml.vb#focusgetsetfocusedelement)]"
  syntax:
    content: public static System.Windows.IInputElement GetFocusedElement (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Het element met de logische focus in het bereik opgegeven focus."
    return:
      type: System.Windows.IInputElement
      description: "Het element in het bereik opgegeven focus met logische focus."
  overload: System.Windows.Input.FocusManager.GetFocusedElement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)
  id: GetFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GetFocusScope(DependencyObject)
  nameWithType: FocusManager.GetFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusScope(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Bepaalt het dichtstbijzijnde bovenliggende element van het opgegeven element met <xref:System.Windows.Input.FocusManager.IsFocusScope*>ingesteld op <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Input.FocusManager.IsFocusScope*>"
  remarks: "De standaardwaarde van <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>op een <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu>is `true`.</xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Een scope focus is een containerelement dat houdt de <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>binnen het bereik valt.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Standaard de <xref:System.Windows.Window>klasse is een bereik focus omdat de <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, en <xref:System.Windows.Controls.ToolBar>klassen.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Een element dat een bereik van de focus heeft <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>ingesteld op `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Zie voor meer informatie over focus toetsenbordfocus en logische focus de [invoer overzicht](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Windows.DependencyObject GetFocusScope (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Element op het dichtstbijzijnde focus bereik voor ophalen."
    return:
      type: System.Windows.DependencyObject
      description: "Het bereik van de focus voor het opgegeven element."
  overload: System.Windows.Input.FocusManager.GetFocusScope*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)
  id: GetIsFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GetIsFocusScope(DependencyObject)
  nameWithType: FocusManager.GetIsFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetIsFocusScope(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hiermee wordt bepaald of de opgegeven <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> is een bereik focus."
  remarks: "Een scope focus is een containerelement dat houdt de <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>binnen het bereik valt.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Standaard de <xref:System.Windows.Window>klasse is een bereik focus omdat de <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, en <xref:System.Windows.Controls.ToolBar>klassen.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Een element dat een bereik van de focus heeft <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>ingesteld op `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Zie voor meer informatie over focus toetsenbordfocus en logische focus de [invoer overzicht](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static bool GetIsFocusScope (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Het element om te lezen van de gekoppelde eigenschap."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <xref:System.Windows.Input.FocusManager.IsFocusScope*>is ingesteld op <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> voor het opgegeven element; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Input.FocusManager.IsFocusScope*>"
  overload: System.Windows.Input.FocusManager.GetIsFocusScope*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GotFocusEvent
  id: GotFocusEvent
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GotFocusEvent
  nameWithType: FocusManager.GotFocusEvent
  fullName: System.Windows.Input.FocusManager.GotFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identificeert de <xref:System.Windows.Input.FocusManager.GotFocus>gebeurtenis gekoppeld.</xref:System.Windows.Input.FocusManager.GotFocus>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.IsFocusScopeProperty
  id: IsFocusScopeProperty
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: IsFocusScopeProperty
  nameWithType: FocusManager.IsFocusScopeProperty
  fullName: System.Windows.Input.FocusManager.IsFocusScopeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identificeert de <xref:System.Windows.Input.FocusManager.IsFocusScope*>die eigenschap zijn gekoppeld.</xref:System.Windows.Input.FocusManager.IsFocusScope*>"
  remarks: "De standaardwaarde van <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>op een <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu>is `true`.</xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Een scope focus is een containerelement dat houdt de <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>binnen het bereik valt.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Standaard de <xref:System.Windows.Window>klasse is een bereik focus omdat de <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, en <xref:System.Windows.Controls.ToolBar>klassen.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Een element dat een bereik van de focus heeft <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>ingesteld op `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Zie voor meer informatie over focus toetsenbordfocus en logische focus de [invoer overzicht](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsFocusScopeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.LostFocusEvent
  id: LostFocusEvent
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: LostFocusEvent
  nameWithType: FocusManager.LostFocusEvent
  fullName: System.Windows.Input.FocusManager.LostFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identificeert de <xref:System.Windows.Input.FocusManager.LostFocus>gebeurtenis gekoppeld.</xref:System.Windows.Input.FocusManager.LostFocus>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hiermee verwijdert u een handler voor de <xref:System.Windows.Input.FocusManager.GotFocus>gebeurtenis gekoppeld.</xref:System.Windows.Input.FocusManager.GotFocus>"
  syntax:
    content: public static void RemoveGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "De <xref href=&quot;System.Windows.UIElement&quot;> </xref> of <xref href=&quot;System.Windows.ContentElement&quot;> </xref> die aan deze gebeurtenis wordt geluisterd."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "De gebeurtenis-handler moet worden verwijderd."
  overload: System.Windows.Input.FocusManager.RemoveGotFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hiermee verwijdert u een handler voor de <xref:System.Windows.Input.FocusManager.LostFocus>gebeurtenis gekoppeld.</xref:System.Windows.Input.FocusManager.LostFocus>"
  syntax:
    content: public static void RemoveLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "De <xref href=&quot;System.Windows.UIElement&quot;> </xref> of <xref href=&quot;System.Windows.ContentElement&quot;> </xref> die aan deze gebeurtenis wordt geluisterd."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "De gebeurtenis-handler moet worden verwijderd."
  overload: System.Windows.Input.FocusManager.RemoveLostFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  id: SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: SetFocusedElement(DependencyObject,IInputElement)
  nameWithType: FocusManager.SetFocusedElement(DependencyObject,IInputElement)
  fullName: System.Windows.Input.FocusManager.SetFocusedElement(DependencyObject,IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Sets logische zich richten op het opgegeven element."
  remarks: "De <xref:System.Windows.Input.FocusManager.FocusedElement%2A>is van het element dat de logische focus voor de scope specifieke focus heeft.</xref:System.Windows.Input.FocusManager.FocusedElement%2A>  Dit object mogelijk wel of geen toetsenbordfocus.  Toetsenbordfocus verwijst naar het element dat toetsenbordinvoer ontvangt.  Zie voor meer informatie over focus toetsenbordfocus en logische focus de [invoer overzicht](~/add/includes/ajax-current-ext-md.md).       Het is mogelijk een focus-bereik dat een bovenliggend element van het bereik focus is dat het element opgeven.  Bijvoorbeeld, als een <xref:System.Windows.Controls.StackPanel>is een bereik met focus en de bovenliggende <xref:System.Windows.Window>is een bereik focus een <xref:System.Windows.Controls.TextBox>onderliggend element van de <xref:System.Windows.Controls.StackPanel>kunt opgeven de <xref:System.Windows.Window>Als het bereik van de focus bij het aanroepen van SetFocusedElement.</xref:System.Windows.Window> </xref:System.Windows.Controls.StackPanel> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Window> </xref:System.Windows.Controls.StackPanel>  De <xref:System.Windows.Controls.TextBox>is vervolgens <xref:System.Windows.Input.FocusManager.FocusedElement%2A>voor zowel de <xref:System.Windows.Window>richten bereik en de <xref:System.Windows.Controls.StackPanel>bereik ligt de nadruk.</xref:System.Windows.Controls.StackPanel> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.FocusedElement%2A> </xref:System.Windows.Controls.TextBox>       SetFocusedElement de logische focus opgegeven element in het bereik opgegeven focus krijgt en zal proberen de toetsenbordfocus element geven."
  example:
  - "The following example sets the element with logical focus by using the SetFocusedElement and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.  \n  \n [!code-cs[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/csharp/FocusSnippets/Window1.xaml.cs#focusgetsetfocusedelement)]\n [!code-vb[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/visualbasic/focussnippets/window1.xaml.vb#focusgetsetfocusedelement)]"
  syntax:
    content: public static void SetFocusedElement (System.Windows.DependencyObject element, System.Windows.IInputElement value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "De focus scope in het opgegeven element de <xref:System.Windows.Input.FocusManager.FocusedElement*>.</xref:System.Windows.Input.FocusManager.FocusedElement*> maken"
    - id: value
      type: System.Windows.IInputElement
      description: "Het element om de logische focus naar."
  overload: System.Windows.Input.FocusManager.SetFocusedElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  id: SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: SetIsFocusScope(DependencyObject,Boolean)
  nameWithType: FocusManager.SetIsFocusScope(DependencyObject,Boolean)
  fullName: System.Windows.Input.FocusManager.SetIsFocusScope(DependencyObject,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hiermee stelt u de opgegeven <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> als focus bereik."
  remarks: "Een scope focus is een containerelement dat houdt de <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>binnen het bereik valt.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Standaard de <xref:System.Windows.Window>klasse is een bereik focus omdat de <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, en <xref:System.Windows.Controls.ToolBar>klassen.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Een element dat een bereik van de focus heeft <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>ingesteld op `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Zie voor meer informatie over focus toetsenbordfocus en logische focus de [invoer overzicht](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The follow example makes an element a focus scope by using SetIsFocusScope.  \n  \n [!code-cs[focussnippets#FocusSetIsFocusScope](~/add/codesnippet/csharp/FocusSnippets/Window1.xaml.cs#focussetisfocusscope)]\n [!code-vb[focussnippets#FocusSetIsFocusScope](~/add/codesnippet/visualbasic/focussnippets/window1.xaml.vb#focussetisfocusscope)]"
  syntax:
    content: public static void SetIsFocusScope (System.Windows.DependencyObject element, bool value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Het element waarmee een scope focus."
    - id: value
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als `element` is een bereik focus; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Input.FocusManager.SetIsFocusScope*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.RoutedEventHandler
  parent: System.Windows
  isExternal: false
  name: RoutedEventHandler
  nameWithType: RoutedEventHandler
  fullName: System.Windows.RoutedEventHandler
- uid: System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.Input.FocusManager.FocusedElementProperty
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: FocusedElementProperty
  nameWithType: FocusManager.FocusedElementProperty
  fullName: System.Windows.Input.FocusManager.FocusedElementProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusedElement(DependencyObject)
  nameWithType: FocusManager.GetFocusedElement(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusedElement(DependencyObject)
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusScope(DependencyObject)
  nameWithType: FocusManager.GetFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusScope(DependencyObject)
- uid: System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetIsFocusScope(DependencyObject)
  nameWithType: FocusManager.GetIsFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetIsFocusScope(DependencyObject)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.FocusManager.GotFocusEvent
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GotFocusEvent
  nameWithType: FocusManager.GotFocusEvent
  fullName: System.Windows.Input.FocusManager.GotFocusEvent
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.Input.FocusManager.IsFocusScopeProperty
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: IsFocusScopeProperty
  nameWithType: FocusManager.IsFocusScopeProperty
  fullName: System.Windows.Input.FocusManager.IsFocusScopeProperty
- uid: System.Windows.Input.FocusManager.LostFocusEvent
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: LostFocusEvent
  nameWithType: FocusManager.LostFocusEvent
  fullName: System.Windows.Input.FocusManager.LostFocusEvent
- uid: System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetFocusedElement(DependencyObject,IInputElement)
  nameWithType: FocusManager.SetFocusedElement(DependencyObject,IInputElement)
  fullName: System.Windows.Input.FocusManager.SetFocusedElement(DependencyObject,IInputElement)
- uid: System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetIsFocusScope(DependencyObject,Boolean)
  nameWithType: FocusManager.SetIsFocusScope(DependencyObject,Boolean)
  fullName: System.Windows.Input.FocusManager.SetIsFocusScope(DependencyObject,Boolean)
- uid: System.Windows.Input.FocusManager.AddGotFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddGotFocusHandler
  nameWithType: FocusManager.AddGotFocusHandler
- uid: System.Windows.Input.FocusManager.AddLostFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddLostFocusHandler
  nameWithType: FocusManager.AddLostFocusHandler
- uid: System.Windows.Input.FocusManager.GetFocusedElement*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusedElement
  nameWithType: FocusManager.GetFocusedElement
- uid: System.Windows.Input.FocusManager.GetFocusScope*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusScope
  nameWithType: FocusManager.GetFocusScope
- uid: System.Windows.Input.FocusManager.GetIsFocusScope*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetIsFocusScope
  nameWithType: FocusManager.GetIsFocusScope
- uid: System.Windows.Input.FocusManager.RemoveGotFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveGotFocusHandler
  nameWithType: FocusManager.RemoveGotFocusHandler
- uid: System.Windows.Input.FocusManager.RemoveLostFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveLostFocusHandler
  nameWithType: FocusManager.RemoveLostFocusHandler
- uid: System.Windows.Input.FocusManager.SetFocusedElement*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetFocusedElement
  nameWithType: FocusManager.SetFocusedElement
- uid: System.Windows.Input.FocusManager.SetIsFocusScope*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetIsFocusScope
  nameWithType: FocusManager.SetIsFocusScope
