### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.PerformanceData.CounterData
  id: CounterData
  children:
  - System.Diagnostics.PerformanceData.CounterData.Decrement
  - System.Diagnostics.PerformanceData.CounterData.Increment
  - System.Diagnostics.PerformanceData.CounterData.IncrementBy(System.Int64)
  - System.Diagnostics.PerformanceData.CounterData.RawValue
  - System.Diagnostics.PerformanceData.CounterData.Value
  langs:
  - csharp
  name: CounterData
  nameWithType: CounterData
  fullName: System.Diagnostics.PerformanceData.CounterData
  type: Class
  summary: "De onbewerkte gegevens voor een item bevat."
  remarks: "De <xref:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item%2A?displayProperty=fullName>eigenschap retourneert een exemplaar van deze klasse.</xref:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item%2A?displayProperty=fullName>       Deze klasse biedt methoden voor het lezen en schrijven van gegevens van de teller thread-safe."
  syntax:
    content: public sealed class CounterData
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterData.Decrement
  id: Decrement
  parent: System.Diagnostics.PerformanceData.CounterData
  langs:
  - csharp
  name: Decrement()
  nameWithType: CounterData.Decrement()
  fullName: System.Diagnostics.PerformanceData.CounterData.Decrement()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Vermindert de teller waarde van 1."
  remarks: "Deze methode veilig verlaagt de waarden van de teller voor toepassingen met meerdere threads.       Aanroepen om de waarde door een specifieke waarde verlagen, de <xref:System.Diagnostics.PerformanceData.CounterData.IncrementBy%2A>methode en stel de `value` -parameter voor een negatief getal.</xref:System.Diagnostics.PerformanceData.CounterData.IncrementBy%2A>       U kunt de itemwaarde instellen met de <xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>eigenschap.</xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>"
  syntax:
    content: public void Decrement ();
    parameters: []
  overload: System.Diagnostics.PerformanceData.CounterData.Decrement*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterData.Increment
  id: Increment
  parent: System.Diagnostics.PerformanceData.CounterData
  langs:
  - csharp
  name: Increment()
  nameWithType: CounterData.Increment()
  fullName: System.Diagnostics.PerformanceData.CounterData.Increment()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "De itemwaarde verhoogd met 1."
  remarks: "Deze methode verhoogd veilig de itemwaarde voor toepassingen met meerdere threads.       U kunt de itemwaarde instellen met de <xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>eigenschap.</xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>       Roep de itemwaarde door een specifieke waarde steeds wordt verhoogd, de <xref:System.Diagnostics.PerformanceData.CounterData.IncrementBy%2A>methode.</xref:System.Diagnostics.PerformanceData.CounterData.IncrementBy%2A>"
  syntax:
    content: public void Increment ();
    parameters: []
  overload: System.Diagnostics.PerformanceData.CounterData.Increment*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterData.IncrementBy(System.Int64)
  id: IncrementBy(System.Int64)
  parent: System.Diagnostics.PerformanceData.CounterData
  langs:
  - csharp
  name: IncrementBy(Int64)
  nameWithType: CounterData.IncrementBy(Int64)
  fullName: System.Diagnostics.PerformanceData.CounterData.IncrementBy(Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "De waarde van de teller verhoogd met de opgegeven hoeveelheid."
  remarks: "Deze methode verhoogd veilig de itemwaarde voor toepassingen met meerdere threads.       U kunt de itemwaarde instellen met de <xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>eigenschap.</xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>       Roep de itemwaarde steeds wordt verhoogd met 1, de <xref:System.Diagnostics.PerformanceData.CounterData.Increment%2A>methode.</xref:System.Diagnostics.PerformanceData.CounterData.Increment%2A>"
  syntax:
    content: public void IncrementBy (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "De hoeveelheid waarmee de waarde van de teller verhoogd. De increment-waarde kan positief of negatief zijn."
  overload: System.Diagnostics.PerformanceData.CounterData.IncrementBy*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterData.RawValue
  id: RawValue
  parent: System.Diagnostics.PerformanceData.CounterData
  langs:
  - csharp
  name: RawValue
  nameWithType: CounterData.RawValue
  fullName: System.Diagnostics.PerformanceData.CounterData.RawValue
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Met deze eigenschap de onbewerkte tellergegevens opgehaald of ingesteld."
  remarks: "Deze eigenschap is niet thread-safe en is alleen voor toegang tot één thread. Voor met meerdere threads toegang tot de gegevens van prestatiemeteritems gebruiken de <xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>eigenschap.</xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>"
  syntax:
    content: public long RawValue { get; set; }
    return:
      type: System.Int64
      description: "De onbewerkte tellergegevens."
  overload: System.Diagnostics.PerformanceData.CounterData.RawValue*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterData.Value
  id: Value
  parent: System.Diagnostics.PerformanceData.CounterData
  langs:
  - csharp
  name: Value
  nameWithType: CounterData.Value
  fullName: System.Diagnostics.PerformanceData.CounterData.Value
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Hiermee wordt opgehaald of de gegevens van prestatiemeteritems."
  remarks: "Deze eigenschap bevat een veilige toegang tot de gegevens van de prestatiemeteritems voor toepassingen met meerdere threads. Als de prestaties van het belangrijkste aandachtspunt is, gebruikt u de <xref:System.Diagnostics.PerformanceData.CounterData.RawValue%2A>eigenschap, maar de <xref:System.Diagnostics.PerformanceData.CounterData.RawValue%2A>eigenschap is niet thread-veilig.</xref:System.Diagnostics.PerformanceData.CounterData.RawValue%2A> </xref:System.Diagnostics.PerformanceData.CounterData.RawValue%2A>       Houd er rekening mee dat de eigenschap Value niet thread-veilig in .NET Framework 3.5 is.       De itemwaarde steeds wordt verhoogd, kunt u overwegen de <xref:System.Diagnostics.PerformanceData.CounterData.Increment%2A>of <xref:System.Diagnostics.PerformanceData.CounterData.IncrementBy%2A>methode.</xref:System.Diagnostics.PerformanceData.CounterData.IncrementBy%2A> </xref:System.Diagnostics.PerformanceData.CounterData.Increment%2A>"
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: public long Value { get; set; }
    return:
      type: System.Int64
      description: "De gegevens van prestatiemeteritems."
  overload: System.Diagnostics.PerformanceData.CounterData.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.PerformanceData.CounterData.Decrement
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: Decrement()
  nameWithType: CounterData.Decrement()
  fullName: System.Diagnostics.PerformanceData.CounterData.Decrement()
- uid: System.Diagnostics.PerformanceData.CounterData.Increment
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: Increment()
  nameWithType: CounterData.Increment()
  fullName: System.Diagnostics.PerformanceData.CounterData.Increment()
- uid: System.Diagnostics.PerformanceData.CounterData.IncrementBy(System.Int64)
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: IncrementBy(Int64)
  nameWithType: CounterData.IncrementBy(Int64)
  fullName: System.Diagnostics.PerformanceData.CounterData.IncrementBy(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.PerformanceData.CounterData.RawValue
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: RawValue
  nameWithType: CounterData.RawValue
  fullName: System.Diagnostics.PerformanceData.CounterData.RawValue
- uid: System.Diagnostics.PerformanceData.CounterData.Value
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: Value
  nameWithType: CounterData.Value
  fullName: System.Diagnostics.PerformanceData.CounterData.Value
- uid: System.Diagnostics.PerformanceData.CounterData.Decrement*
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: Decrement
  nameWithType: CounterData.Decrement
- uid: System.Diagnostics.PerformanceData.CounterData.Increment*
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: Increment
  nameWithType: CounterData.Increment
- uid: System.Diagnostics.PerformanceData.CounterData.IncrementBy*
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: IncrementBy
  nameWithType: CounterData.IncrementBy
- uid: System.Diagnostics.PerformanceData.CounterData.RawValue*
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: RawValue
  nameWithType: CounterData.RawValue
- uid: System.Diagnostics.PerformanceData.CounterData.Value*
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: Value
  nameWithType: CounterData.Value
