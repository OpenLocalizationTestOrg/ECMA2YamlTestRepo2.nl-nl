### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.AlternationConverter
  id: AlternationConverter
  children:
  - System.Windows.Controls.AlternationConverter.#ctor
  - System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - System.Windows.Controls.AlternationConverter.Values
  langs:
  - csharp
  name: AlternationConverter
  nameWithType: AlternationConverter
  fullName: System.Windows.Controls.AlternationConverter
  type: Class
  summary: "Converteert een geheel getal en naar een object door toepassing van het gehele getal als een index op een lijst met objecten."
  remarks: "U kunt de AlternationConverter gebruiken voor de eigenschap binding afwisselende waarden. Bijvoorbeeld, als u wilt dat items in een <xref:System.Windows.Controls.ListBox>als afwisselende blauw en lichte blauwe achtergrond, u het volgende doen: - een AlternationConverter maken en toevoegen van een blauwe <xref:System.Windows.Media.SolidColorBrush>en een lichte blauw <xref:System.Windows.Media.SolidColorBrush>naar de <xref:System.Windows.Controls.AlternationConverter.Values%2A>eigenschap.</xref:System.Windows.Controls.AlternationConverter.Values%2A> </xref:System.Windows.Media.SolidColorBrush> </xref:System.Windows.Media.SolidColorBrush> </xref:System.Windows.Controls.ListBox>      -In een <xref:System.Windows.Style>voor <xref:System.Windows.Controls.ListBoxItem>, binden de <xref:System.Windows.Controls.Control.Background%2A>eigenschap <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>en wijs de omzetter voor u naar gemaakt de <xref:System.Windows.Data.Binding.Converter%2A?displayProperty=fullName>eigenschap.</xref:System.Windows.Data.Binding.Converter%2A?displayProperty=fullName> </xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> </xref:System.Windows.Controls.Control.Background%2A> </xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.Style>"
  example:
  - "The following example creates a <xref:System.Windows.Controls.ListBox> and uses two AlternationConverter objects to alternate the <xref:System.Windows.Controls.Control.Background%2A> and <xref:System.Windows.Controls.Control.FontStyle%2A> of the items.  \n  \n [!code-xml[AlternationIndexSnippets#4](~/add/codesnippet/xaml/AltnerationIndexSnippets/Window1.xaml#4)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Values")]

      public class AlternationConverter : System.Windows.Data.IValueConverter
  inheritance:
  - System.Object
  implements:
  - System.Windows.Data.IValueConverter
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Controls.AlternationConverter.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.AlternationConverter
  langs:
  - csharp
  name: AlternationConverter()
  nameWithType: AlternationConverter.AlternationConverter()
  fullName: System.Windows.Controls.AlternationConverter.AlternationConverter()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Controls.AlternationConverter&quot;> </xref> klasse."
  syntax:
    content: public AlternationConverter ();
    parameters: []
  overload: System.Windows.Controls.AlternationConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.AlternationConverter
  langs:
  - csharp
  name: Convert(Object,Type,Object,CultureInfo)
  nameWithType: AlternationConverter.Convert(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Controls.AlternationConverter.Convert(Object,Type,Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Een geheel getal converteert naar een object in de <xref:System.Windows.Controls.AlternationConverter.Values*>lijst.</xref:System.Windows.Controls.AlternationConverter.Values*>"
  syntax:
    content: public object Convert (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: o
      type: System.Object
      description: "Het gehele getal met zoeken naar een object in de <xref:System.Windows.Controls.AlternationConverter.Values*>eigenschap.</xref:System.Windows.Controls.AlternationConverter.Values*>"
    - id: targetType
      type: System.Type
      description: "Het type van de eigenschap target is binding."
    - id: parameter
      type: System.Object
      description: "De parameter converter te gebruiken."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "De cultuur moet worden gebruikt in de converter."
    return:
      type: System.Object
      description: "Het object dat zich in de positie van <code> o </code> modulo het aantal items in <xref:System.Windows.Controls.AlternationConverter.Values*>.</xref:System.Windows.Controls.AlternationConverter.Values*>"
  overload: System.Windows.Controls.AlternationConverter.Convert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.AlternationConverter
  langs:
  - csharp
  name: ConvertBack(Object,Type,Object,CultureInfo)
  nameWithType: AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Controls.AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Converteert een object in de <xref:System.Windows.Controls.AlternationConverter.Values*>lijst in een geheel getal.</xref:System.Windows.Controls.AlternationConverter.Values*>"
  syntax:
    content: public object ConvertBack (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: o
      type: System.Object
      description: "Het object te vinden de <xref:System.Windows.Controls.AlternationConverter.Values*>eigenschap.</xref:System.Windows.Controls.AlternationConverter.Values*>"
    - id: targetType
      type: System.Type
      description: "Het type van de eigenschap target is binding."
    - id: parameter
      type: System.Object
      description: "De parameter converter te gebruiken."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "De cultuur moet worden gebruikt in de converter."
    return:
      type: System.Object
      description: "De index van <code> o </code> als het zich in <> </> *>, of -1 als o bestaat niet in <> </> *>."
  overload: System.Windows.Controls.AlternationConverter.ConvertBack*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AlternationConverter.Values
  id: Values
  parent: System.Windows.Controls.AlternationConverter
  langs:
  - csharp
  name: Values
  nameWithType: AlternationConverter.Values
  fullName: System.Windows.Controls.AlternationConverter.Values
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Hiermee haalt u een lijst van objecten die de <xref href=&quot;System.Windows.Controls.AlternationConverter&quot;> </xref> retourneert als een geheel getal wordt doorgegeven aan de <xref:System.Windows.Controls.AlternationConverter.Convert*>methode.</xref:System.Windows.Controls.AlternationConverter.Convert*>"
  remarks: "Wanneer u gebruikt de <xref:System.Windows.Controls.AlternationConverter>om u te maken van een eigenschap afwisselende waarden, de eigenschap waarden bevat de objecten die zijn toegewezen aan de eigenschap.</xref:System.Windows.Controls.AlternationConverter>  Bijvoorbeeld, als u wilt dat items in een <xref:System.Windows.Controls.ListBox>als afwisselende blauw en lichte blauwe achtergrond, u een blauwe toevoegen <xref:System.Windows.Media.SolidColorBrush>en een lichte blauw <xref:System.Windows.Media.SolidColorBrush>naar waarden.</xref:System.Windows.Media.SolidColorBrush> </xref:System.Windows.Media.SolidColorBrush> </xref:System.Windows.Controls.ListBox>"
  example:
  - "The following example creates a <xref:System.Windows.Controls.ListBox> and uses two <xref:System.Windows.Controls.AlternationConverter> objects to alternate the <xref:System.Windows.Controls.Control.Background%2A> and <xref:System.Windows.Controls.Control.FontStyle%2A> of the items.  \n  \n [!code-xml[AlternationIndexSnippets#4](~/add/codesnippet/xaml/AltnerationIndexSnippets/Window1.xaml#4)]"
  syntax:
    content: public System.Collections.IList Values { get; }
    return:
      type: System.Collections.IList
      description: "Een lijst met objecten die de <xref href=&quot;System.Windows.Controls.AlternationConverter&quot;> </xref> retourneert als een geheel getal wordt doorgegeven aan de <xref:System.Windows.Controls.AlternationConverter.Convert*>methode.</xref:System.Windows.Controls.AlternationConverter.Convert*>"
  overload: System.Windows.Controls.AlternationConverter.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Controls.AlternationConverter.#ctor
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: AlternationConverter()
  nameWithType: AlternationConverter.AlternationConverter()
  fullName: System.Windows.Controls.AlternationConverter.AlternationConverter()
- uid: System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: Convert(Object,Type,Object,CultureInfo)
  nameWithType: AlternationConverter.Convert(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Controls.AlternationConverter.Convert(Object,Type,Object,CultureInfo)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: ConvertBack(Object,Type,Object,CultureInfo)
  nameWithType: AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Controls.AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)
- uid: System.Windows.Controls.AlternationConverter.Values
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: Values
  nameWithType: AlternationConverter.Values
  fullName: System.Windows.Controls.AlternationConverter.Values
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Controls.AlternationConverter.#ctor*
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: AlternationConverter
  nameWithType: AlternationConverter.AlternationConverter
- uid: System.Windows.Controls.AlternationConverter.Convert*
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: Convert
  nameWithType: AlternationConverter.Convert
- uid: System.Windows.Controls.AlternationConverter.ConvertBack*
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: ConvertBack
  nameWithType: AlternationConverter.ConvertBack
- uid: System.Windows.Controls.AlternationConverter.Values*
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: Values
  nameWithType: AlternationConverter.Values
