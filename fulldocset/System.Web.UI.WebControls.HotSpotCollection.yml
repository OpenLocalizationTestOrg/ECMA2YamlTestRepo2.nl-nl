### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.HotSpotCollection
  id: HotSpotCollection
  children:
  - System.Web.UI.WebControls.HotSpotCollection.#ctor
  - System.Web.UI.WebControls.HotSpotCollection.Add(System.Web.UI.WebControls.HotSpot)
  - System.Web.UI.WebControls.HotSpotCollection.CreateKnownType(System.Int32)
  - System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes
  - System.Web.UI.WebControls.HotSpotCollection.Insert(System.Int32,System.Web.UI.WebControls.HotSpot)
  - System.Web.UI.WebControls.HotSpotCollection.Item(System.Int32)
  - System.Web.UI.WebControls.HotSpotCollection.OnValidate(System.Object)
  - System.Web.UI.WebControls.HotSpotCollection.Remove(System.Web.UI.WebControls.HotSpot)
  - System.Web.UI.WebControls.HotSpotCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject(System.Object)
  langs:
  - csharp
  name: HotSpotCollection
  nameWithType: HotSpotCollection
  fullName: System.Web.UI.WebControls.HotSpotCollection
  type: Class
  summary: "Vertegenwoordigt een verzameling <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> objecten binnen een <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;> </xref> besturingselement. Deze klasse kan niet worden overgenomen."
  remarks: "De klasse HotSpotCollection vertegenwoordigt een verzameling waarmee een <xref:System.Web.UI.WebControls.ImageMap>beheer om een lijst bijhouden van de <xref:System.Web.UI.WebControls.HotSpot>objecten bevat.</xref:System.Web.UI.WebControls.HotSpot> </xref:System.Web.UI.WebControls.ImageMap>       Gebruik de <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A>methode voor het toevoegen van een opgegeven <xref:System.Web.UI.WebControls.HotSpot>object aan de verzameling aan het einde van een matrix rangtelwoord index.</xref:System.Web.UI.WebControls.HotSpot> </xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> Gebruik de <xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A>om toe te voegen een <xref:System.Web.UI.WebControls.HotSpot>object aan de verzameling op een locatie voor de opgegeven index.</xref:System.Web.UI.WebControls.HotSpot> </xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A> Gebruik de <xref:System.Web.UI.WebControls.HotSpotCollection.Item%2A>indexeerfunctie rechtstreeks toegang krijgen tot een <xref:System.Web.UI.WebControls.HotSpot>object in de verzameling op een opgegeven index, met behulp van eenvoudige matrix notatie.</xref:System.Web.UI.WebControls.HotSpot> </xref:System.Web.UI.WebControls.HotSpotCollection.Item%2A>       Gebruik de <xref:System.Web.UI.WebControls.HotSpotCollection.Remove%2A>methode verwijderen van een <xref:System.Web.UI.WebControls.HotSpot>object vanaf het einde van de verzameling.</xref:System.Web.UI.WebControls.HotSpot> </xref:System.Web.UI.WebControls.HotSpotCollection.Remove%2A> Gebruik de <xref:System.Web.UI.WebControls.HotSpotCollection.RemoveAt%2A>methode verwijderen van een <xref:System.Web.UI.WebControls.HotSpot>object vanaf een locatie voor de opgegeven index.</xref:System.Web.UI.WebControls.HotSpot> </xref:System.Web.UI.WebControls.HotSpotCollection.RemoveAt%2A>"
  example:
  - "The following code example demonstrates how to programmatically create an <xref:System.Web.UI.WebControls.ImageMap> control and add two <xref:System.Web.UI.WebControls.CircleHotSpot> objects to it. The <xref:System.Web.UI.WebControls.ImageMap.HotSpots%2A> property is used to access the HotSpotCollection collection for the <xref:System.Web.UI.WebControls.ImageMap> control and add the <xref:System.Web.UI.WebControls.CircleHotSpot> objects to it. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[ImageMap.Cstr#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_294_1.aspx)]\n [!code-cs[ImageMap.Cstr#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_294_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Web.UI.Design.WebControls.HotSpotCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      public sealed class HotSpotCollection : System.Web.UI.StateManagedCollection
  inheritance:
  - System.Object
  - System.Web.UI.StateManagedCollection
  implements: []
  inheritedMembers:
  - System.Web.UI.StateManagedCollection.Clear
  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.StateManagedCollection.Count
  - System.Web.UI.StateManagedCollection.GetEnumerator
  - System.Web.UI.StateManagedCollection.OnClear
  - System.Web.UI.StateManagedCollection.OnClearComplete
  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.SetDirty
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: HotSpotCollection()
  nameWithType: HotSpotCollection.HotSpotCollection()
  fullName: System.Web.UI.WebControls.HotSpotCollection.HotSpotCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.UI.WebControls.HotSpotCollection&quot;> </xref> klasse."
  remarks: "Wanneer in een afgeleide klasse genegeerd, initialiseert deze constructor een nieuw exemplaar van de <xref:System.Web.UI.WebControls.HotSpotCollection>klasse.</xref:System.Web.UI.WebControls.HotSpotCollection>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.CircleHotSpot.%23ctor%2A> constructor to programmatically create two <xref:System.Web.UI.WebControls.CircleHotSpot> objects and add them to an <xref:System.Web.UI.WebControls.ImageMap> control. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[ImageMap.Cstr#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_107_1.aspx)]\n [!code-cs[ImageMap.Cstr#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_107_1.aspx)]"
  syntax:
    content: public HotSpotCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.HotSpotCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.Add(System.Web.UI.WebControls.HotSpot)
  id: Add(System.Web.UI.WebControls.HotSpot)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: Add(HotSpot)
  nameWithType: HotSpotCollection.Add(HotSpot)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Add(HotSpot)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Voegt een opgegeven <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> object aan het einde van de <xref href=&quot;System.Web.UI.WebControls.HotSpotCollection&quot;> </xref> verzameling."
  remarks: "De methode Add voegt de opgegeven <xref:System.Web.UI.WebControls.HotSpot>object aan het einde van de verzameling.</xref:System.Web.UI.WebControls.HotSpot> Om toe te voegen een <xref:System.Web.UI.WebControls.HotSpot>object aan de verzameling op een specifieke indexlocatie, gebruik de <xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A>methode.</xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A> </xref:System.Web.UI.WebControls.HotSpot>"
  example:
  - "The following code example demonstrates how to programmatically create an <xref:System.Web.UI.WebControls.ImageMap> control and add two <xref:System.Web.UI.WebControls.CircleHotSpot> objects to it. The <xref:System.Web.UI.WebControls.ImageMap.HotSpots%2A> property is used to access the <xref:System.Web.UI.WebControls.HotSpotCollection> collection for the <xref:System.Web.UI.WebControls.ImageMap> control and add the <xref:System.Web.UI.WebControls.CircleHotSpot> objects to it. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[ImageMap.Cstr#1](~/add/codesnippet/visualbasic/52b9e3b0-728a-4dc5-99eb-_1.aspx)]\n [!code-cs[ImageMap.Cstr#1](~/add/codesnippet/csharp/52b9e3b0-728a-4dc5-99eb-_1.aspx)]"
  syntax:
    content: public int Add (System.Web.UI.WebControls.HotSpot spot);
    parameters:
    - id: spot
      type: System.Web.UI.WebControls.HotSpot
      description: "De <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> object toe te voegen aan de verzameling."
    return:
      type: System.Int32
      description: "De index waarop het object is toegevoegd aan de verzameling."
  overload: System.Web.UI.WebControls.HotSpotCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.CreateKnownType(System.Int32)
  id: CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: CreateKnownType(Int32)
  nameWithType: HotSpotCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.HotSpotCollection.CreateKnownType(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override object CreateKnownType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Moet worden toegevoegd."
    return:
      type: System.Object
      description: "Moet worden toegevoegd."
  overload: System.Web.UI.WebControls.HotSpotCollection.CreateKnownType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes
  id: GetKnownTypes
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: GetKnownTypes()
  nameWithType: HotSpotCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override Type[] GetKnownTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "Moet worden toegevoegd."
  overload: System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.Insert(System.Int32,System.Web.UI.WebControls.HotSpot)
  id: Insert(System.Int32,System.Web.UI.WebControls.HotSpot)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: Insert(Int32,HotSpot)
  nameWithType: HotSpotCollection.Insert(Int32,HotSpot)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Insert(Int32,HotSpot)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Voegt een opgegeven <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> -object in de <xref href=&quot;System.Web.UI.WebControls.HotSpotCollection&quot;> </xref> verzameling op de locatie van de opgegeven index."
  remarks: "De methode invoegen voegt de opgegeven <xref:System.Web.UI.WebControls.HotSpot>object aan de verzameling op de locatie van de opgegeven index.</xref:System.Web.UI.WebControls.HotSpot> Toe te voegen een <xref:System.Web.UI.WebControls.HotSpot>object aan het einde van de collectie, moet u de <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A>methode.</xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> </xref:System.Web.UI.WebControls.HotSpot>"
  example:
  - "The following code example demonstrates how to programmatically add two <xref:System.Web.UI.WebControls.CircleHotSpot> objects to an <xref:System.Web.UI.WebControls.ImageMap> control. The <xref:System.Web.UI.WebControls.ImageMap.HotSpots%2A> property is used to access the <xref:System.Web.UI.WebControls.HotSpotCollection> collection. The <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> method adds `Circle2` to the collection. The Insert method adds `Circle1` to the collection at the first element, in front of `Circle2`. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[HotSpotCollection.Insert#1](~/add/codesnippet/visualbasic/ab7caf40-b2de-4bb2-b23a-_1.aspx)]\n [!code-cs[HotSpotCollection.Insert#1](~/add/codesnippet/csharp/ab7caf40-b2de-4bb2-b23a-_1.aspx)]"
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.HotSpot spot);
    parameters:
    - id: index
      type: System.Int32
      description: "De matrixindex waarop u wilt toevoegen de <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> object."
    - id: spot
      type: System.Web.UI.WebControls.HotSpot
      description: "De <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> object toevoegen aan de verzameling."
  overload: System.Web.UI.WebControls.HotSpotCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: HotSpotCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Wordt een verwijzing naar de <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> object op de opgegeven index in de <xref href=&quot;System.Web.UI.WebControls.HotSpotCollection&quot;> </xref> verzameling."
  remarks: "Deze indexeerfunctie gebruiken voor toegang tot een <xref:System.Web.UI.WebControls.HotSpot>object in de verzameling met de opgegeven index, met de notatie van de matrix.</xref:System.Web.UI.WebControls.HotSpot> De indexeerfunctie kunt u wijzigen of vervangen door een <xref:System.Web.UI.WebControls.HotSpot>object in de collectie direct.</xref:System.Web.UI.WebControls.HotSpot>"
  example:
  - "The following code example demonstrates how to use the Item property to directly access the <xref:System.Web.UI.WebControls.HotSpot> objects contained in the <xref:System.Web.UI.WebControls.ImageMap> control's <xref:System.Web.UI.WebControls.HotSpotCollection> collection and display the value of each object's <xref:System.Web.UI.WebControls.HotSpot.AlternateText%2A> property in a label on the page. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[HotSpotCollection.Item#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_688_1.aspx)]\n [!code-cs[HotSpotCollection.Item#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_688_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.HotSpot this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Het rangtelwoord indexwaarde die de locatie van de <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> object in de verzameling."
    return:
      type: System.Web.UI.WebControls.HotSpot
      description: "De <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> object op de opgegeven index in de <xref href=&quot;System.Web.UI.WebControls.HotSpotCollection&quot;> </xref> verzameling."
  overload: System.Web.UI.WebControls.HotSpotCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: HotSpotCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.HotSpotCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnValidate (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Moet worden toegevoegd."
  overload: System.Web.UI.WebControls.HotSpotCollection.OnValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.Remove(System.Web.UI.WebControls.HotSpot)
  id: Remove(System.Web.UI.WebControls.HotSpot)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: Remove(HotSpot)
  nameWithType: HotSpotCollection.Remove(HotSpot)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Remove(HotSpot)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Verwijdert de opgegeven <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> object uit de <xref href=&quot;System.Web.UI.WebControls.HotSpotCollection&quot;> </xref> verzameling."
  remarks: "De Remove-methode verwijdert de opgegeven <xref:System.Web.UI.WebControls.HotSpot>object uit de verzameling.</xref:System.Web.UI.WebControls.HotSpot> Verwijderen van een <xref:System.Web.UI.WebControls.HotSpot>object uit de verzameling op een opgegeven index voor de locatie en gebruik de <xref:System.Web.UI.WebControls.HotSpotCollection.RemoveAt%2A>methode.</xref:System.Web.UI.WebControls.HotSpotCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.HotSpot>       Toevoegen van nieuwe <xref:System.Web.UI.WebControls.HotSpot>objecten aan de verzameling, gebruiken de <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A>of de <xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A>methode.</xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A> </xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> </xref:System.Web.UI.WebControls.HotSpot>"
  example:
  - "The following code example demonstrates how to programmatically add two <xref:System.Web.UI.WebControls.CircleHotSpot> objects to an <xref:System.Web.UI.WebControls.ImageMap> control. After the two <xref:System.Web.UI.WebControls.CircleHotSpot> objects are added to the <xref:System.Web.UI.WebControls.HotSpotCollection> collection, the Remove method is used to delete `Circle1` from the collection. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-cs[HotSpotCollection.Remove#1](~/add/codesnippet/csharp/f9b25fff-b2da-4484-9775-_1.aspx)]\n [!code-vb[HotSpotCollection.Remove#1](~/add/codesnippet/visualbasic/f9b25fff-b2da-4484-9775-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.HotSpot spot);
    parameters:
    - id: spot
      type: System.Web.UI.WebControls.HotSpot
      description: "De <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> object om te verwijderen uit de verzameling."
  overload: System.Web.UI.WebControls.HotSpotCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: HotSpotCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.HotSpotCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hiermee verwijdert u de <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> object op de opgegeven index voor de locatie van de verzameling."
  remarks: "De methode RemoveAt verwijdert u de <xref:System.Web.UI.WebControls.HotSpot>object op de opgegeven index voor de locatie van de verzameling.</xref:System.Web.UI.WebControls.HotSpot> Verwijderen van een specifieke <xref:System.Web.UI.WebControls.HotSpot>object uit de verzameling met de naam, gebruik de <xref:System.Web.UI.WebControls.HotSpotCollection.Remove%2A>methode.</xref:System.Web.UI.WebControls.HotSpotCollection.Remove%2A> </xref:System.Web.UI.WebControls.HotSpot>       Toevoegen van nieuwe <xref:System.Web.UI.WebControls.HotSpot>objecten aan de verzameling, gebruiken de <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A>of de <xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A>methode.</xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A> </xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> </xref:System.Web.UI.WebControls.HotSpot>"
  example:
  - "The following code example demonstrates how to programmatically add two <xref:System.Web.UI.WebControls.CircleHotSpot> objects to an <xref:System.Web.UI.WebControls.ImageMap> control. After the two <xref:System.Web.UI.WebControls.CircleHotSpot> objects are added to the <xref:System.Web.UI.WebControls.HotSpotCollection> collection, the RemoveAt method is used to delete the object located at the first index in the collection. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[HotSpotCollection.RemoveAt#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_136_1.aspx)]\n [!code-cs[HotSpotCollection.RemoveAt#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_136_1.aspx)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "De matrixindex waaruit het verwijderen van de <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> object."
  overload: System.Web.UI.WebControls.HotSpotCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject(System.Object)
  id: SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: SetDirtyObject(Object)
  nameWithType: HotSpotCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void SetDirtyObject (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Moet worden toegevoegd."
  overload: System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.StateManagedCollection
- uid: System.Web.UI.WebControls.HotSpotCollection.#ctor
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: HotSpotCollection()
  nameWithType: HotSpotCollection.HotSpotCollection()
  fullName: System.Web.UI.WebControls.HotSpotCollection.HotSpotCollection()
- uid: System.Web.UI.WebControls.HotSpotCollection.Add(System.Web.UI.WebControls.HotSpot)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Add(HotSpot)
  nameWithType: HotSpotCollection.Add(HotSpot)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Add(HotSpot)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.HotSpot
  parent: System.Web.UI.WebControls
  isExternal: false
  name: HotSpot
  nameWithType: HotSpot
  fullName: System.Web.UI.WebControls.HotSpot
- uid: System.Web.UI.WebControls.HotSpotCollection.CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: CreateKnownType(Int32)
  nameWithType: HotSpotCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.HotSpotCollection.CreateKnownType(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: GetKnownTypes()
  nameWithType: HotSpotCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.HotSpotCollection.Insert(System.Int32,System.Web.UI.WebControls.HotSpot)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Insert(Int32,HotSpot)
  nameWithType: HotSpotCollection.Insert(Int32,HotSpot)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Insert(Int32,HotSpot)
- uid: System.Web.UI.WebControls.HotSpotCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: HotSpotCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Item(Int32)
- uid: System.Web.UI.WebControls.HotSpotCollection.OnValidate(System.Object)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: HotSpotCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.HotSpotCollection.OnValidate(Object)
- uid: System.Web.UI.WebControls.HotSpotCollection.Remove(System.Web.UI.WebControls.HotSpot)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Remove(HotSpot)
  nameWithType: HotSpotCollection.Remove(HotSpot)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Remove(HotSpot)
- uid: System.Web.UI.WebControls.HotSpotCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: HotSpotCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.HotSpotCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: SetDirtyObject(Object)
  nameWithType: HotSpotCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject(Object)
- uid: System.Web.UI.WebControls.HotSpotCollection.#ctor*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: HotSpotCollection
  nameWithType: HotSpotCollection.HotSpotCollection
- uid: System.Web.UI.WebControls.HotSpotCollection.Add*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Add
  nameWithType: HotSpotCollection.Add
- uid: System.Web.UI.WebControls.HotSpotCollection.CreateKnownType*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: CreateKnownType
  nameWithType: HotSpotCollection.CreateKnownType
- uid: System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: GetKnownTypes
  nameWithType: HotSpotCollection.GetKnownTypes
- uid: System.Web.UI.WebControls.HotSpotCollection.Insert*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Insert
  nameWithType: HotSpotCollection.Insert
- uid: System.Web.UI.WebControls.HotSpotCollection.Item*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Item
  nameWithType: HotSpotCollection.Item
- uid: System.Web.UI.WebControls.HotSpotCollection.OnValidate*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: OnValidate
  nameWithType: HotSpotCollection.OnValidate
- uid: System.Web.UI.WebControls.HotSpotCollection.Remove*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Remove
  nameWithType: HotSpotCollection.Remove
- uid: System.Web.UI.WebControls.HotSpotCollection.RemoveAt*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: RemoveAt
  nameWithType: HotSpotCollection.RemoveAt
- uid: System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: SetDirtyObject
  nameWithType: HotSpotCollection.SetDirtyObject
