### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Trace
  id: Trace
  children:
  - System.Diagnostics.Trace.Assert(System.Boolean)
  - System.Diagnostics.Trace.Assert(System.Boolean,System.String)
  - System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)
  - System.Diagnostics.Trace.AutoFlush
  - System.Diagnostics.Trace.Close
  - System.Diagnostics.Trace.CorrelationManager
  - System.Diagnostics.Trace.Fail(System.String)
  - System.Diagnostics.Trace.Fail(System.String,System.String)
  - System.Diagnostics.Trace.Flush
  - System.Diagnostics.Trace.Indent
  - System.Diagnostics.Trace.IndentLevel
  - System.Diagnostics.Trace.IndentSize
  - System.Diagnostics.Trace.Listeners
  - System.Diagnostics.Trace.Refresh
  - System.Diagnostics.Trace.TraceError(System.String)
  - System.Diagnostics.Trace.TraceError(System.String,System.Object[])
  - System.Diagnostics.Trace.TraceInformation(System.String)
  - System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])
  - System.Diagnostics.Trace.TraceWarning(System.String)
  - System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])
  - System.Diagnostics.Trace.Unindent
  - System.Diagnostics.Trace.UseGlobalLock
  - System.Diagnostics.Trace.Write(System.Object)
  - System.Diagnostics.Trace.Write(System.String)
  - System.Diagnostics.Trace.Write(System.Object,System.String)
  - System.Diagnostics.Trace.Write(System.String,System.String)
  - System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)
  - System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)
  - System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)
  - System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)
  - System.Diagnostics.Trace.WriteLine(System.Object)
  - System.Diagnostics.Trace.WriteLine(System.String)
  - System.Diagnostics.Trace.WriteLine(System.Object,System.String)
  - System.Diagnostics.Trace.WriteLine(System.String,System.String)
  - System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)
  - System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)
  - System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)
  - System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)
  langs:
  - csharp
  name: Trace
  nameWithType: Trace
  fullName: System.Diagnostics.Trace
  type: Class
  summary: "Biedt een aantal methoden en eigenschappen die u helpen bij het uitvoeren van uw code traceren. Deze klasse kan niet worden overgenomen."
  remarks: "U kunt de eigenschappen en methoden in de klasse Trace instrument release builds. Instrumentation kunt u de status van uw toepassing die wordt uitgevoerd in de praktijk-instellingen. Tracering helpt u isoleren van problemen en los ze zonder een actief systeem verstoren.       Deze klasse biedt methoden om weer te geven een <xref:System.Diagnostics.Trace.Assert%2A>in het dialoogvenster en een bewering die altijd verzenden <xref:System.Diagnostics.Trace.Fail%2A>.</xref:System.Diagnostics.Trace.Fail%2A> </xref:System.Diagnostics.Trace.Assert%2A> Deze klasse biedt methoden schrijven in de volgende verschillen: <xref:System.Diagnostics.Trace.Write%2A>, <xref:System.Diagnostics.Trace.WriteLine%2A>, <xref:System.Diagnostics.Trace.WriteIf%2A>, en <xref:System.Diagnostics.Trace.WriteLineIf%2A>.</xref:System.Diagnostics.Trace.WriteLineIf%2A> </xref:System.Diagnostics.Trace.WriteIf%2A> </xref:System.Diagnostics.Trace.WriteLine%2A> </xref:System.Diagnostics.Trace.Write%2A>       De <xref:System.Diagnostics.BooleanSwitch>en <xref:System.Diagnostics.TraceSwitch>klassen leveren betekent dat de traceringsuitvoer van de dynamisch kunt bepalen.</xref:System.Diagnostics.TraceSwitch> </xref:System.Diagnostics.BooleanSwitch> U kunt de waarden van deze schakelopties wijzigen zonder opnieuw te compileren van uw toepassing. Zie voor meer informatie over het gebruik van het configuratiebestand voor het instellen van een switch de <xref:System.Diagnostics.Switch>klasse en de [hoe: maken, initialiseren en tracering Switches configureren](~/add/includes/ajax-current-ext-md.md) onderwerp.</xref:System.Diagnostics.Switch>       U kunt de traceringsuitvoer doel aanpassen door toe te voegen <xref:System.Diagnostics.TraceListener>exemplaren aan of verwijderen van exemplaren van de <xref:System.Diagnostics.Trace.Listeners%2A>verzameling.</xref:System.Diagnostics.Trace.Listeners%2A> </xref:System.Diagnostics.TraceListener> De <xref:System.Diagnostics.Trace.Listeners%2A>verzameling wordt gedeeld door zowel de <xref:System.Diagnostics.Debug>en de Trace-klassen; voegt de listener een traceringslistener toevoegen aan een klasse toe op beide.</xref:System.Diagnostics.Debug> </xref:System.Diagnostics.Trace.Listeners%2A> Standaard wordt trace-uitvoer verzonden met behulp van de <xref:System.Diagnostics.DefaultTraceListener>klasse.</xref:System.Diagnostics.DefaultTraceListener>      > [!NOTE] > Toevoegen van een traceringslistener naar de <xref:System.Diagnostics.Trace.Listeners%2A>verzameling kan ertoe leiden dat een uitzondering gegenereerd tijdens het tracering in, als een resource die wordt gebruikt door de traceringslistener niet beschikbaar is.</xref:System.Diagnostics.Trace.Listeners%2A> De voorwaarden en de uitzondering afhankelijk zijn van de traceringslistener en kunnen niet worden opgesomd in dit onderwerp. Het mogelijk handig om te bellen naar de Trace-methoden in `try` / `catch` blokken om te detecteren en eventuele uitzonderingen van traceer-listeners verwerken.      > [!NOTE] > Als u traceer-listeners aan gedeeltelijk vertrouwde code toevoegen, krijgt u een <xref:System.Security.SecurityException>uitzondering, omdat het toevoegen van trace-listeners vereist <xref:System.Security.Permissions.SecurityPermissionFlag>machtiging.</xref:System.Security.Permissions.SecurityPermissionFlag> </xref:System.Security.SecurityException> Als u wilt traceren gedeeltelijk vertrouwde code die wordt uitgevoerd in een sandbox in Visual Studio, voeg traceer-listeners geen. Weergeven in plaats daarvan de tracering en <xref:System.Diagnostics.Debug>berichten in de **uitvoer** venster.</xref:System.Diagnostics.Debug>       De Trace-klasse biedt de eigenschappen ophalen of instellen van het niveau van <xref:System.Diagnostics.Trace.Indent%2A>, wordt de <xref:System.Diagnostics.Trace.IndentSize%2A>, en of <xref:System.Diagnostics.Trace.AutoFlush%2A>na elke schrijfbewerking.</xref:System.Diagnostics.Trace.AutoFlush%2A> </xref:System.Diagnostics.Trace.IndentSize%2A> </xref:System.Diagnostics.Trace.Indent%2A>       Om in te stellen de <xref:System.Diagnostics.Trace.AutoFlush%2A>en <xref:System.Diagnostics.Trace.IndentSize%2A>voor tracering, kunt u het configuratiebestand dat overeenkomt met de naam van uw toepassing.</xref:System.Diagnostics.Trace.IndentSize%2A> </xref:System.Diagnostics.Trace.AutoFlush%2A> Het configuratiebestand moet worden opgemaakt als in het volgende voorbeeld: ```   <configuration>     <system.diagnostics>       <trace autoflush=&quot;false&quot; indentsize=&quot;3&quot; />     </system.diagnostics>   </configuration>   ``` de <xref:System.Diagnostics.ConditionalAttribute>kenmerk wordt toegepast op de methoden van Trace.</xref:System.Diagnostics.ConditionalAttribute> Compilers die ondersteuning bieden voor <xref:System.Diagnostics.ConditionalAttribute>aanroepen naar deze methoden negeren als &quot;TRACE&quot; is gedefinieerd als een symbool voorwaardelijke compilatie.</xref:System.Diagnostics.ConditionalAttribute> Raadpleeg de documentatie voor een compiler om te bepalen of <xref:System.Diagnostics.ConditionalAttribute>wordt ondersteund en de syntaxis voor het definiëren van een symbool voorwaardelijke compilatie.</xref:System.Diagnostics.ConditionalAttribute>      > [!NOTE] > In Visual Studio-projecten, standaard de &quot; &quot; voorwaardelijke compilatie foutopsporingssymbool is gedefinieerd voor builds voor foutopsporing en het symbool &quot;TRACE&quot; is gedefinieerd voor beide opsporen en release bouwt. Zie voor informatie over het uitschakelen van dit gedrag, de documentatie bij Visual Studio.       Voor het definiëren van het symbool &quot;TRACE&quot;-voorwaardelijke compilatie in C#, voeg de `/d:TRACE` aan de opdrachtregel voor de compiler optie wanneer u uw code via een opdrachtregel compileert of toe te voegen `#define TRACE` boven aan het bestand. In Visual Basic, voegt u de `/d:TRACE=True` optie voor de compiler-opdrachtregel of Voeg `#Const TRACE=True` naar het bestand.       <xref:System.Diagnostics.ConditionalAttribute>wordt niet ondersteund door de C++-compiler.</xref:System.Diagnostics.ConditionalAttribute> Gelijkwaardige functionaliteit bieden, moet u tussen aanroepen van de methoden van tracering in een `#if defined(TRACE) ... #endif` blokkeren en voeg de `/DTRACE` optie voor de compiler-opdrachtregel of Voeg `#define TRACE` naar het bestand."
  example:
  - "The following example uses Trace to indicate the beginning and the end of a program's execution. The example also uses the <xref:System.Diagnostics.Trace.Indent%2A?displayProperty=fullName> and <xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=fullName> methods to distinguish the tracing output. For a more complete example of the use of Trace, see [How to: Add Trace Statements to Application Code](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[Classic Trace Example#1](~/add/codesnippet/cpp/t-system.diagnostics.trace_1.cpp)]\n [!code-cs[Classic Trace Example#1](~/add/codesnippet/csharp/t-system.diagnostics.trace_1.cs)]\n [!code-vb[Classic Trace Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.trace_1.vb)]"
  syntax:
    content: public sealed class Trace
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.Assert(System.Boolean)
  id: Assert(System.Boolean)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: Assert(Boolean)
  nameWithType: Trace.Assert(Boolean)
  fullName: System.Diagnostics.Trace.Assert(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Controleert of er een voorwaarde; Als de voorwaarde <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, wordt een berichtvenster waarin de aanroepstack weergegeven."
  remarks: "Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName> method if you want to do assertions in release builds. The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName> method works only in debug builds. For more information, see [Assertions in Managed Code](~/add/includes/ajax-current-ext-md.md).  \n  \n Typically, the Assert method is used to identify logic errors during program development. Assert evaluates the condition. If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection. You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.  \n  \n When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: **Abort**, **Retry**, and **Ignore**. Clicking the **Abort** button terminates the application. Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking **Ignore** continues with the next instruction in the code.  \n  \n> [!NOTE]\n>  The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](../Topic/%3Cclear%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md), the [\\&lt;remove\\&gt;](../Topic/%3Cremove%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).  \n  \n You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property. The configuration file should be formatted as follows:  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <switches>  \n      <add name=\"mySwitch\" value=\"4\"/>  \n    </switches>  \n    <trace autoflush=\"false\" indentsize=\"4\"/>  \n    <assert assertuienabled=\"true\" logfilename=\".\\TraceLog.txt\"/>  \n  </system.diagnostics>  \n</configuration>  \n```"
  example:
  - "The following example creates an index for an array. Then some action is performed that sets the value of the index. Next the code calls Assert to verify the index value is valid. If it is not valid, the Assert outputs the call stack.  \n  \n [!code-cs[Classic Trace.Assert Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_23_1.cs)]\n [!code-cpp[Classic Trace.Assert Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_23_1.cpp)]\n [!code-vb[Classic Trace.Assert Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_23_1.vb)]"
  syntax:
    content: public static void Assert (bool condition);
    parameters:
    - id: condition
      type: System.Boolean
      description: "De conditionele expressie om te evalueren. Als de voorwaarde <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, een foutbericht wordt niet verzonden en wordt het bericht niet weergegeven."
  overload: System.Diagnostics.Trace.Assert*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.Assert(System.Boolean,System.String)
  id: Assert(System.Boolean,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: Assert(Boolean,String)
  nameWithType: Trace.Assert(Boolean,String)
  fullName: System.Diagnostics.Trace.Assert(Boolean,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Controleert of er een voorwaarde; Als de voorwaarde <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, levert een opgegeven bericht en Hiermee wordt een bericht weergegeven waarin de aanroepstack."
  remarks: "Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName> method if you want to do assertions in release builds. The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName> method works only in debug builds. For more information, see [Assertions in Managed Code](~/add/includes/ajax-current-ext-md.md).  \n  \n Typically, the Assert method is used to identify logic errors during program development. Assert evaluates the condition. If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection. You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.  \n  \n When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: **Abort**, **Retry**, and **Ignore**. Clicking the **Abort** button terminates the application. Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking **Ignore** continues with the next instruction in the code.  \n  \n> [!NOTE]\n>  The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](../Topic/%3Cclear%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md), the [\\&lt;remove\\&gt;](../Topic/%3Cremove%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).  \n  \n You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property. The configuration file should be formatted as follows:  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <switches>  \n      <add name=\"mySwitch\" value=\"4\"/>  \n    </switches>  \n    <trace autoflush=\"false\" indentsize=\"4\"/>  \n    <assert assertuienabled=\"true\" logfilename=\".\\TraceLog.txt\"/>  \n  </system.diagnostics>  \n</configuration>  \n```"
  example:
  - "The following example checks to see that the `type` parameter is valid. If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.  \n  \n [!code-cs[Classic Trace.Assert1 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_20_1.cs)]\n [!code-cpp[Classic Trace.Assert1 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_20_1.cpp)]\n [!code-vb[Classic Trace.Assert1 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_20_1.vb)]"
  syntax:
    content: public static void Assert (bool condition, string message);
    parameters:
    - id: condition
      type: System.Boolean
      description: "De conditionele expressie om te evalueren. Als de voorwaarde <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, het opgegeven bericht is niet verzonden en wordt het bericht niet weergegeven."
    - id: message
      type: System.String
      description: "Het bericht te verzenden naar de <xref:System.Diagnostics.Trace.Listeners*>verzameling.</xref:System.Diagnostics.Trace.Listeners*>"
  overload: System.Diagnostics.Trace.Assert*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)
  id: Assert(System.Boolean,System.String,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: Assert(Boolean,String,String)
  nameWithType: Trace.Assert(Boolean,String,String)
  fullName: System.Diagnostics.Trace.Assert(Boolean,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Controleert of er een voorwaarde; Als de voorwaarde <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, levert twee opgegeven berichten en wordt een berichtvenster waarin de aanroepstack weergegeven."
  remarks: "Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName> method if you want to do assertions in release builds. The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName> method works only in debug builds. For more information, see [Assertions in Managed Code](~/add/includes/ajax-current-ext-md.md).  \n  \n Typically, the Assert method is used to identify logic errors during program development. Assert evaluates the condition. If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection. You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.  \n  \n When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: **Abort**, **Retry**, and **Ignore**. Clicking the **Abort** button terminates the application. Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking **Ignore** continues with the next instruction in the code.  \n  \n> [!NOTE]\n>  The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](../Topic/%3Cclear%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md), the [\\&lt;remove\\&gt;](../Topic/%3Cremove%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).  \n  \n You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property. The configuration file should be formatted as follows:  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <switches>  \n      <add name=\"mySwitch\" value=\"4\"/>  \n    </switches>  \n    <trace autoflush=\"false\" indentsize=\"4\"/>  \n    <assert assertuienabled=\"true\" logfilename=\".\\TraceLog.txt\"/>  \n  </system.diagnostics>  \n</configuration>  \n```"
  example:
  - "The following example checks to see that the `type` parameter is valid. If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.  \n  \n [!code-cs[Classic Trace.Assert2 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_24_1.cs)]\n [!code-vb[Classic Trace.Assert2 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_24_1.vb)]\n [!code-cpp[Classic Trace.Assert2 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_24_1.cpp)]"
  syntax:
    content: public static void Assert (bool condition, string message, string detailMessage);
    parameters:
    - id: condition
      type: System.Boolean
      description: "De conditionele expressie om te evalueren. Als de voorwaarde <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, niet door de opgegeven berichten worden verzonden en wordt het bericht niet weergegeven."
    - id: message
      type: System.String
      description: "Het bericht te verzenden naar de <xref:System.Diagnostics.Trace.Listeners*>verzameling.</xref:System.Diagnostics.Trace.Listeners*>"
    - id: detailMessage
      type: System.String
      description: "Het gedetailleerde bericht verzenden naar de <xref:System.Diagnostics.Trace.Listeners*>verzameling.</xref:System.Diagnostics.Trace.Listeners*>"
  overload: System.Diagnostics.Trace.Assert*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.AutoFlush
  id: AutoFlush
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: AutoFlush
  nameWithType: Trace.AutoFlush
  fullName: System.Diagnostics.Trace.AutoFlush
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Opgehaald of ingesteld of <> </> *> moet worden aangeroepen voor de <> </> *> na elke schrijfbewerking."
  remarks: "De standaardwaarde is `false`.       Leegmaken van de stroom worden de onderliggende codering niet leegmaken tenzij u expliciet <xref:System.Diagnostics.Trace.Flush%2A>of <xref:System.Diagnostics.Trace.Close%2A>.</xref:System.Diagnostics.Trace.Close%2A> </xref:System.Diagnostics.Trace.Flush%2A> aanroepen Als u AutoFlush op `true` betekent dat gegevens uit de buffer wordt leeggemaakt naar de stroom, maar niet de status van de codering wordt leeggemaakt. Hiermee kunt het coderingsprogramma behouden (gedeeltelijke tekens) zodat deze het volgende codeblok tekens correct kunt coderen. Dit scenario is van invloed op UTF8 en UTF7 waarin bepaalde tekens kunnen alleen worden gecodeerd nadat het coderingsprogramma de aangrenzende teken of tekens ontvangt.       Instellen van de AutoFlush en <xref:System.Diagnostics.Trace.IndentSize%2A>voor <xref:System.Diagnostics.Trace>, u kunt ook het configuratiebestand dat overeenkomt met de naam van uw toepassing bewerken.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Trace.IndentSize%2A> Het configuratiebestand moet worden opgemaakt als in het volgende voorbeeld:```   <configuration>     <system.diagnostics>       <trace autoflush=&quot;false&quot; indentsize=&quot;3&quot; />     </system.diagnostics>   </configuration>   ```"
  syntax:
    content: public static bool AutoFlush { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <> </> *> is aangeroepen voor de <> </> *> na elke schrijfbewerking; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.Trace.AutoFlush*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.Close
  id: Close
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: Close()
  nameWithType: Trace.Close()
  fullName: System.Diagnostics.Trace.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "De uitvoerbuffer leegmaakacties en sluit ook de <xref:System.Diagnostics.Trace.Listeners*>.</xref:System.Diagnostics.Trace.Listeners*>"
  remarks: "Gebruik deze methode wanneer u de uitvoer gaat naar een bestand, zoals de <xref:System.Diagnostics.TextWriterTraceListener>.</xref:System.Diagnostics.TextWriterTraceListener>       Leegmaken van de stroom wordt niet leegmaken van de onderliggende encoder tenzij u expliciet aanroepen <xref:System.Diagnostics.Trace.Flush%2A>of sluiten.</xref:System.Diagnostics.Trace.Flush%2A> Instelling <xref:System.Diagnostics.Trace.AutoFlush%2A>naar `true` betekent dat gegevens uit de buffer wordt leeggemaakt naar de stroom, maar niet de status van de codering wordt leeggemaakt.</xref:System.Diagnostics.Trace.AutoFlush%2A> Hiermee kunt het coderingsprogramma behouden (gedeeltelijke tekens) zodat deze het volgende codeblok tekens correct kunt coderen. Dit scenario is van invloed op UTF8 en UTF7 waarin bepaalde tekens kunnen alleen worden gecodeerd nadat het coderingsprogramma de aangrenzende teken of tekens ontvangt."
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`. `myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.  \n  \n [!code-cs[Classic Trace.Flush Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_9_1.cs)]\n [!code-cpp[Classic Trace.Flush Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_9_1.cpp)]\n [!code-vb[Classic Trace.Flush Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_9_1.vb)]"
  syntax:
    content: public static void Close ();
    parameters: []
  overload: System.Diagnostics.Trace.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.CorrelationManager
  id: CorrelationManager
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: CorrelationManager
  nameWithType: Trace.CorrelationManager
  fullName: System.Diagnostics.Trace.CorrelationManager
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee wordt de correlatie-manager voor de thread voor deze tracering."
  remarks: "> [!NOTE]> Dit is een geavanceerde eigenschap die de meeste toepassingen mag geen gelegenheid om te gebruiken.       De <xref:System.Diagnostics.CorrelationManager>klasse biedt methoden voor het opslaan van de identiteit van een logische-bewerking in de context van een thread is gebonden en label automatisch elke traceringsgebeurtenis die worden gegenereerd door de thread met de identiteit van de opgeslagen.</xref:System.Diagnostics.CorrelationManager>"
  syntax:
    content: public static System.Diagnostics.CorrelationManager CorrelationManager { get; }
    return:
      type: System.Diagnostics.CorrelationManager
      description: "De <xref href=&quot;System.Diagnostics.CorrelationManager&quot;> </xref> object dat is gekoppeld aan de thread voor deze tracering."
  overload: System.Diagnostics.Trace.CorrelationManager*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.Fail(System.String)
  id: Fail(System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: Fail(String)
  nameWithType: Trace.Fail(String)
  fullName: System.Diagnostics.Trace.Fail(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Verzendt het bericht opgegeven fout."
  remarks: "The default behavior for the default trace listener is to output the `message` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.  \n  \n> [!NOTE]\n>  The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](../Topic/%3Cclear%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md), the [\\&lt;remove\\&gt;](../Topic/%3Cremove%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).  \n  \n You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection."
  example:
  - "The following example uses the Fail method to print a message during exception handling.  \n  \n [!code-cs[Classic Trace.Fail Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_1_1.cs)]\n [!code-cpp[Classic Trace.Fail Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_1_1.cpp)]\n [!code-vb[Classic Trace.Fail Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_1_1.vb)]  \n  \n You can also use the Fail method in a switch statement.  \n  \n [!code-cs[Classic Trace.Fail Example#2](~/add/codesnippet/csharp/m-system.diagnostics.tra_1_2.cs)]\n [!code-cpp[Classic Trace.Fail Example#2](~/add/codesnippet/cpp/m-system.diagnostics.tra_1_2.cpp)]\n [!code-vb[Classic Trace.Fail Example#2](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_1_2.vb)]"
  syntax:
    content: public static void Fail (string message);
    parameters:
    - id: message
      type: System.String
      description: "Een bericht te verzenden."
  overload: System.Diagnostics.Trace.Fail*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.Fail(System.String,System.String)
  id: Fail(System.String,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: Fail(String,String)
  nameWithType: Trace.Fail(String,String)
  fullName: System.Diagnostics.Trace.Fail(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Verzendt een foutbericht weergegeven en een gedetailleerd foutbericht."
  remarks: "The default behavior is for the default trace listener to output the `message` parameter and the `detailedMessage` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.  \n  \n> [!NOTE]\n>  The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](../Topic/%3Cclear%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md), the [\\&lt;remove\\&gt;](../Topic/%3Cremove%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).  \n  \n You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection."
  example:
  - "The following example uses the <xref:System.Diagnostics.Trace.Fail%2A> method to print a message during exception handling.  \n  \n [!code-cs[Classic Trace.Fail1 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_13_1.cs)]\n [!code-cpp[Classic Trace.Fail1 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_13_1.cpp)]\n [!code-vb[Classic Trace.Fail1 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_13_1.vb)]  \n  \n You can also use the <xref:System.Diagnostics.Trace.Fail%2A> method in a switch statement.  \n  \n [!code-cs[Classic Trace.Fail1 Example#2](~/add/codesnippet/csharp/m-system.diagnostics.tra_13_2.cs)]\n [!code-cpp[Classic Trace.Fail1 Example#2](~/add/codesnippet/cpp/m-system.diagnostics.tra_13_2.cpp)]\n [!code-vb[Classic Trace.Fail1 Example#2](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_13_2.vb)]"
  syntax:
    content: public static void Fail (string message, string detailMessage);
    parameters:
    - id: message
      type: System.String
      description: "Een bericht te verzenden."
    - id: detailMessage
      type: System.String
      description: "Een gedetailleerd bericht te verzenden."
  overload: System.Diagnostics.Trace.Fail*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.Flush
  id: Flush
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: Flush()
  nameWithType: Trace.Flush()
  fullName: System.Diagnostics.Trace.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "De uitvoerbuffer leegmaakacties en zorgt ervoor dat de buffer opgeslagen gegevens naar de <xref:System.Diagnostics.Trace.Listeners*>.</xref:System.Diagnostics.Trace.Listeners*> moeten worden geschreven"
  remarks: "Leegmaken van de stroom wordt niet leegmaken van de onderliggende encoder tenzij u expliciet Flush of <xref:System.Diagnostics.Trace.Close%2A>.</xref:System.Diagnostics.Trace.Close%2A> aanroepen Instelling <xref:System.Diagnostics.Trace.AutoFlush%2A>naar `true` betekent dat gegevens uit de buffer wordt leeggemaakt naar de stroom, maar niet de status van de codering wordt leeggemaakt.</xref:System.Diagnostics.Trace.AutoFlush%2A> Hiermee kunt het coderingsprogramma behouden (gedeeltelijke tekens) zodat deze het volgende codeblok tekens correct kunt coderen. Dit scenario is van invloed op UTF8 en UTF7 waarin bepaalde tekens kunnen alleen worden gecodeerd nadat het coderingsprogramma de aangrenzende teken of tekens ontvangt."
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`. `myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.  \n  \n [!code-cs[Classic Trace.Flush Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_17_1.cs)]\n [!code-cpp[Classic Trace.Flush Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_17_1.cpp)]\n [!code-vb[Classic Trace.Flush Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_17_1.vb)]"
  syntax:
    content: public static void Flush ();
    parameters: []
  overload: System.Diagnostics.Trace.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.Indent
  id: Indent
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: Indent()
  nameWithType: Trace.Indent()
  fullName: System.Diagnostics.Trace.Indent()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "De huidige verhoogt <xref:System.Diagnostics.Trace.IndentLevel*>met één.</xref:System.Diagnostics.Trace.IndentLevel*>"
  remarks: ''
  example:
  - "The following example increments and decrements the indent level and emits tracing messages.  \n  \n [!code-cpp[Classic Trace.IndentLevel Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_6_1.cpp)]\n [!code-cs[Classic Trace.IndentLevel Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_6_1.cs)]\n [!code-vb[Classic Trace.IndentLevel Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_6_1.vb)]  \n  \n This example produces the following output:  \n  \n```  \nList of errors:  \n     Error 1: File not found  \n     Error 2: Directory not found  \nEnd of list of errors  \n```"
  syntax:
    content: public static void Indent ();
    parameters: []
  overload: System.Diagnostics.Trace.Indent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.IndentLevel
  id: IndentLevel
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: IndentLevel
  nameWithType: Trace.IndentLevel
  fullName: System.Diagnostics.Trace.IndentLevel
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Opgehaald of ingesteld van het inspringingsniveau."
  remarks: "De eigenschap IndentLevel geeft het aantal keren dat de inspringing van de grootte van <xref:System.Diagnostics.Trace.IndentSize%2A>wordt toegepast.</xref:System.Diagnostics.Trace.IndentSize%2A> Deze eigenschap wordt opgeslagen op basis van per-thread/per aanvraag."
  example:
  - "The following example increments and decrements the indent level and emits tracing messages.  \n  \n [!code-cpp[Classic Trace.IndentLevel Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_10_1.cpp)]\n [!code-cs[Classic Trace.IndentLevel Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_10_1.cs)]\n [!code-vb[Classic Trace.IndentLevel Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_10_1.vb)]  \n  \n This example produces the following output:  \n  \n```  \n  \nList of errors:  \n     Error 1: File not found  \n     Error 2: Directory not found  \nEnd of list of errors  \n  \n```"
  syntax:
    content: public static int IndentLevel { get; set; }
    return:
      type: System.Int32
      description: "Het inspringingsniveau. De standaardwaarde is nul."
  overload: System.Diagnostics.Trace.IndentLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.IndentSize
  id: IndentSize
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: IndentSize
  nameWithType: Trace.IndentSize
  fullName: System.Diagnostics.Trace.IndentSize
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Opgehaald of ingesteld van het aantal spaties in een streepje."
  remarks: "Een <xref:System.Diagnostics.TextWriterTraceListener>Dit getal interpreteert als spaties.</xref:System.Diagnostics.TextWriterTraceListener> Een <xref:System.Diagnostics.EventLogTraceListener>Deze waarde wordt genegeerd.</xref:System.Diagnostics.EventLogTraceListener>       Deze eigenschap wordt opgeslagen op basis van per-thread/per aanvraag.       Om in te stellen de <xref:System.Diagnostics.Trace.AutoFlush%2A>en IndentSize kan voor <xref:System.Diagnostics.Trace>, u kunt ook het configuratiebestand dat overeenkomt met de naam van uw toepassing bewerken.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Trace.AutoFlush%2A> Het configuratiebestand moet worden opgemaakt als in het volgende voorbeeld:```   <configuration>     <system.diagnostics>       <trace autoflush=&quot;false&quot; indentsize=&quot;3&quot; />     </system.diagnostics>   </configuration>   ```"
  syntax:
    content: public static int IndentSize { get; set; }
    return:
      type: System.Int32
      description: "Het aantal spaties in een streepje. De standaardwaarde is vier."
  overload: System.Diagnostics.Trace.IndentSize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.Listeners
  id: Listeners
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: Listeners
  nameWithType: Trace.Listeners
  fullName: System.Diagnostics.Trace.Listeners
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee haalt u de verzameling van listeners die wordt bewaakt door de trace-uitvoer."
  remarks: "De listeners produceert opgemaakte uitvoer van de trace-uitvoer. De verzameling bevat standaard een exemplaar van de <xref:System.Diagnostics.DefaultTraceListener>klasse.</xref:System.Diagnostics.DefaultTraceListener> Als u verwijderen van de standaard-listener wilt, roept de <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>methode, en geef dit door het exemplaar van de <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener> </xref:System.Diagnostics.TraceListenerCollection.Remove%2A> Uitvoer wilt omleiden naar het consolevenster, Voeg een exemplaar van de <xref:System.Diagnostics.ConsoleTraceListener>klasse.</xref:System.Diagnostics.ConsoleTraceListener>      > [!NOTE] > De Listeners verzameling wordt gedeeld door zowel de <xref:System.Diagnostics.Debug>en de <xref:System.Diagnostics.Trace>klassen; toe te voegen een traceringslistener aan beide klasse voegt de listener op beide.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  example:
  - "The following example creates a <xref:System.Diagnostics.ConsoleTraceListener> that outputs to the console screen. The code then adds the new listener to the Listeners.  \n  \n [!code-cs[Classic Trace.Listeners Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_2_1.cs)]\n [!code-vb[Classic Trace.Listeners Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_2_1.vb)]\n [!code-cpp[Classic Trace.Listeners Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_2_1.cpp)]"
  syntax:
    content: public static System.Diagnostics.TraceListenerCollection Listeners { get; }
    return:
      type: System.Diagnostics.TraceListenerCollection
      description: "Een <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> die staat voor een verzameling van het type <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> bewaking van de trace-uitvoer."
  overload: System.Diagnostics.Trace.Listeners*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.Refresh
  id: Refresh
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: Refresh()
  nameWithType: Trace.Refresh()
  fullName: System.Diagnostics.Trace.Refresh()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee vernieuwt de configuratiegegevens voor de tracering."
  remarks: "Configuratie traceergegevens wordt vastgelegd wanneer de toepassing wordt gestart. Als de configuratiegegevens is gewijzigd nadat de toepassing wordt gestart, roept u de methode vernieuwen voor het bijwerken van de configuratiegegevens voor de tracering."
  syntax:
    content: public static void Refresh ();
    parameters: []
  overload: System.Diagnostics.Trace.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.TraceError(System.String)
  id: TraceError(System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: TraceError(String)
  nameWithType: Trace.TraceError(String)
  fullName: System.Diagnostics.Trace.TraceError(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijft u een foutbericht weergegeven in de traceer-listeners in de <xref:System.Diagnostics.Trace.Listeners*>verzameling op basis van het opgegeven bericht.</xref:System.Diagnostics.Trace.Listeners*>"
  remarks: "TraceError aanroepen de `TraceEvent` methode voor elke traceringslistener met het type van de gebeurtenis trace <xref:System.Diagnostics.TraceEventType>, waarbij het informatieve bericht als de tekenreeks wordt doorgegeven.</xref:System.Diagnostics.TraceEventType>"
  syntax:
    content: public static void TraceError (string message);
    parameters:
    - id: message
      type: System.String
      description: "Het informatieve bericht schrijven."
  overload: System.Diagnostics.Trace.TraceError*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.TraceError(System.String,System.Object[])
  id: TraceError(System.String,System.Object[])
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: TraceError(String,Object[])
  nameWithType: Trace.TraceError(String,Object[])
  fullName: System.Diagnostics.Trace.TraceError(String,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijft u een foutbericht weergegeven in de traceer-listeners in de <xref:System.Diagnostics.Trace.Listeners*>verzameling met behulp van de opgegeven matrix met objecten en opmaak.</xref:System.Diagnostics.Trace.Listeners*>"
  remarks: "TraceError aanroepen de `TraceEvent` methoden in de traceer-listeners met het type van de gebeurtenis trace <xref:System.Diagnostics.TraceEventType>, inhoud van het bericht wordt doorgegeven als een objectmatrix met opmaak.</xref:System.Diagnostics.TraceEventType> Zie de <xref:System.String.Format%2A>methode voor meer informatie over de `format` en `args` parameters.</xref:System.String.Format%2A>"
  syntax:
    content: public static void TraceError (string format, object[] args);
    parameters:
    - id: format
      type: System.String
      description: "Een tekenreeks met nul of meer indeling items, die overeenkomen met de objecten in de `args` matrix."
    - id: args
      type: System.Object[]
      description: "Een <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref> matrix met nul of meer objecten om te formatteren."
  overload: System.Diagnostics.Trace.TraceError*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.TraceInformation(System.String)
  id: TraceInformation(System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: TraceInformation(String)
  nameWithType: Trace.TraceInformation(String)
  fullName: System.Diagnostics.Trace.TraceInformation(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een informatief bericht schrijft naar de traceer-listeners in de <xref:System.Diagnostics.Trace.Listeners*>verzameling op basis van het opgegeven bericht.</xref:System.Diagnostics.Trace.Listeners*>"
  remarks: "TraceInformation aanroepen de `TraceEvent` methode voor elke traceringslistener met het type van de gebeurtenis trace <xref:System.Diagnostics.TraceEventType>, waarbij het informatieve bericht als de tekenreeks doorgegeven.</xref:System.Diagnostics.TraceEventType>"
  syntax:
    content: public static void TraceInformation (string message);
    parameters:
    - id: message
      type: System.String
      description: "Het informatieve bericht schrijven."
  overload: System.Diagnostics.Trace.TraceInformation*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])
  id: TraceInformation(System.String,System.Object[])
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: TraceInformation(String,Object[])
  nameWithType: Trace.TraceInformation(String,Object[])
  fullName: System.Diagnostics.Trace.TraceInformation(String,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een informatief bericht schrijft naar de traceer-listeners in de <xref:System.Diagnostics.Trace.Listeners*>verzameling met behulp van de opgegeven matrix met objecten en opmaak.</xref:System.Diagnostics.Trace.Listeners*>"
  remarks: "TraceInformation aanroepen de `TraceEvent` methoden in de traceer-listeners met het type van de gebeurtenis trace <xref:System.Diagnostics.TraceEventType>, inhoud van het bericht wordt doorgegeven als een objectmatrix met opmaak.</xref:System.Diagnostics.TraceEventType> Zie de <xref:System.String.Format%2A>methode voor meer informatie over de `format` en `args` parameters.</xref:System.String.Format%2A>"
  syntax:
    content: public static void TraceInformation (string format, object[] args);
    parameters:
    - id: format
      type: System.String
      description: "Een tekenreeks met nul of meer indeling items, die overeenkomen met de objecten in de `args` matrix."
    - id: args
      type: System.Object[]
      description: "Een <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref> matrix met nul of meer objecten om te formatteren."
  overload: System.Diagnostics.Trace.TraceInformation*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.TraceWarning(System.String)
  id: TraceWarning(System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: TraceWarning(String)
  nameWithType: Trace.TraceWarning(String)
  fullName: System.Diagnostics.Trace.TraceWarning(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een waarschuwingsbericht schrijft naar de traceer-listeners in de <xref:System.Diagnostics.Trace.Listeners*>verzameling op basis van het opgegeven bericht.</xref:System.Diagnostics.Trace.Listeners*>"
  remarks: "TraceWarning aanroepen de `TraceEvent` methode voor elke traceringslistener met het type van de gebeurtenis trace <xref:System.Diagnostics.TraceEventType>, waarbij het informatieve bericht als de tekenreeks wordt doorgegeven.</xref:System.Diagnostics.TraceEventType>"
  syntax:
    content: public static void TraceWarning (string message);
    parameters:
    - id: message
      type: System.String
      description: "Het informatieve bericht schrijven."
  overload: System.Diagnostics.Trace.TraceWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])
  id: TraceWarning(System.String,System.Object[])
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: TraceWarning(String,Object[])
  nameWithType: Trace.TraceWarning(String,Object[])
  fullName: System.Diagnostics.Trace.TraceWarning(String,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een waarschuwingsbericht schrijft naar de traceer-listeners in de <xref:System.Diagnostics.Trace.Listeners*>verzameling met behulp van de opgegeven matrix met objecten en opmaak.</xref:System.Diagnostics.Trace.Listeners*>"
  remarks: "TraceWarning aanroepen de `TraceEvent` methoden in de traceer-listeners met het type van de gebeurtenis trace <xref:System.Diagnostics.TraceEventType>, inhoud van het bericht wordt doorgegeven als een objectmatrix met opmaak.</xref:System.Diagnostics.TraceEventType> Zie de <xref:System.String.Format%2A>methode voor meer informatie over de `format` en `args` parameters.</xref:System.String.Format%2A>"
  syntax:
    content: public static void TraceWarning (string format, object[] args);
    parameters:
    - id: format
      type: System.String
      description: "Een tekenreeks met nul of meer indeling items, die overeenkomen met de objecten in de `args` matrix."
    - id: args
      type: System.Object[]
      description: "Een <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref> matrix met nul of meer objecten om te formatteren."
  overload: System.Diagnostics.Trace.TraceWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.Unindent
  id: Unindent
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: Unindent()
  nameWithType: Trace.Unindent()
  fullName: System.Diagnostics.Trace.Unindent()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Verkleint u de huidige <xref:System.Diagnostics.Trace.IndentLevel*>met één.</xref:System.Diagnostics.Trace.IndentLevel*>"
  remarks: ''
  example:
  - "The following example increments and decrements the indent level and emits tracing messages.  \n  \n [!code-cpp[Classic Trace.IndentLevel Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_14_1.cpp)]\n [!code-cs[Classic Trace.IndentLevel Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_14_1.cs)]\n [!code-vb[Classic Trace.IndentLevel Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_14_1.vb)]  \n  \n This example produces the following output:  \n  \n```  \n  \nList of errors:  \n     Error 1: File not found  \n     Error 2: Directory not found  \nEnd of list of errors  \n  \n```"
  syntax:
    content: public static void Unindent ();
    parameters: []
  overload: System.Diagnostics.Trace.Unindent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.UseGlobalLock
  id: UseGlobalLock
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: UseGlobalLock
  nameWithType: Trace.UseGlobalLock
  fullName: System.Diagnostics.Trace.UseGlobalLock
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de globale vergrendeling moet worden gebruikt."
  remarks: "De globale vergrendeling wordt altijd gebruikt als de traceringslistener niet thread-veilig, ongeacht de waarde van UseGlobalLock. De <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A>eigenschap wordt gebruikt om te bepalen of de listener thread-veilig.</xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> De globale vergrendeling wordt niet alleen gebruikt als de waarde van UseGlobalLock is `false` en de waarde van <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A>is `true`.</xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> Het standaardgedrag is het gebruik van de globale vergrendeling.       Instellen van de UseGlobalLock voor <xref:System.Diagnostics.Trace>, u kunt ook het configuratiebestand dat overeenkomt met de naam van uw toepassing bewerken.</xref:System.Diagnostics.Trace> Het configuratiebestand moet worden opgemaakt als in het volgende voorbeeld:```   <configuration>     <system.diagnostics>       <trace useGlobalLock=&quot;false&quot; />     </system.diagnostics>   </configuration>   ```"
  syntax:
    content: public static bool UseGlobalLock { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de globale vergrendeling moet worden gebruikt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.Trace.UseGlobalLock*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.Write(System.Object)
  id: Write(System.Object)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: Write(Object)
  nameWithType: Trace.Write(Object)
  fullName: System.Diagnostics.Trace.Write(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "De waarde van het object schrijft <> </> *> methode voor de traceer-listeners in de <> </> *> verzameling."
  remarks: "Standaard wordt de uitvoer geschreven naar een exemplaar van <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener>       Deze methode roept de <xref:System.Diagnostics.TraceListener.Write%2A>methode van de traceringslistener.</xref:System.Diagnostics.TraceListener.Write%2A>      > [!NOTE] > ASP.NET levert traceringsfunctie speciaal afgestemd op webpagina&quot;s. Traceringsberichten worden geschreven in ASP.NET-pagina&quot;s, gebruiken de <xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName>eigenschap.</xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName>       Standaard worden in de code die is gekoppeld aan een ASP.NET-webpagina, de instructie `Trace.Write(&quot;...&quot;)` is een aanroep naar de <xref:System.Web.TraceContext.Write%2A>methode van de <xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName>eigenschap.</xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName> </xref:System.Web.TraceContext.Write%2A> Gebruik de <xref:System.Diagnostics.Trace?displayProperty=fullName>klasse in webpagina&quot;s, moet u de naamruimte, bijvoorbeeld opnemen `System.Diagnostics.Trace.Write(&quot;...&quot;)`.</xref:System.Diagnostics.Trace?displayProperty=fullName>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside the code sample.  \n  \n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the `value` parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \n  \n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message. The second message is followed by a line terminator.  \n  \n [!code-cpp[Classic Trace.Write1 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_26_1.cpp)]\n [!code-vb[Classic Trace.Write1 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_26_1.vb)]\n [!code-cs[Classic Trace.Write1 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_26_1.cs)]"
  syntax:
    content: public static void Write (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Een <xref:System.Object>waarvan de naam wordt verzonden naar de <xref:System.Diagnostics.Trace.Listeners*>.</xref:System.Diagnostics.Trace.Listeners*> </xref:System.Object>"
  overload: System.Diagnostics.Trace.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: Write(String)
  nameWithType: Trace.Write(String)
  fullName: System.Diagnostics.Trace.Write(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijft u een bericht naar de traceer-listeners in de <xref:System.Diagnostics.Trace.Listeners*>verzameling.</xref:System.Diagnostics.Trace.Listeners*>"
  remarks: "Standaard wordt de uitvoer geschreven naar een exemplaar van <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener>       Deze methode roept de <xref:System.Diagnostics.TraceListener.Write%2A>methode van de traceringslistener.</xref:System.Diagnostics.TraceListener.Write%2A>      > [!NOTE] > ASP.NET levert traceringsfunctie speciaal afgestemd op webpagina&quot;s. Traceringsberichten worden geschreven in ASP.NET-pagina&quot;s, gebruiken de <xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName>eigenschap.</xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName>       Standaard worden in de code die is gekoppeld aan een ASP.NET-webpagina, de instructie `Trace.Write(&quot;...&quot;)` is een aanroep naar de <xref:System.Web.TraceContext.Write%2A>methode van de <xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName>eigenschap.</xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName> </xref:System.Web.TraceContext.Write%2A> Gebruik de <xref:System.Diagnostics.Trace?displayProperty=fullName>klasse in webpagina&quot;s, moet u de naamruimte, bijvoorbeeld opnemen `System.Diagnostics.Trace.Write(&quot;...&quot;)`.</xref:System.Diagnostics.Trace?displayProperty=fullName>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside the code sample.  \n  \n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \n  \n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message. A line terminator follows the second message.  \n  \n [!code-cpp[Classic Trace.Write Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_12_1.cpp)]\n [!code-cs[Classic Trace.Write Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_12_1.cs)]\n [!code-vb[Classic Trace.Write Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_12_1.vb)]"
  syntax:
    content: public static void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "Een bericht te schrijven."
  overload: System.Diagnostics.Trace.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.Write(System.Object,System.String)
  id: Write(System.Object,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: Write(Object,String)
  nameWithType: Trace.Write(Object,String)
  fullName: System.Diagnostics.Trace.Write(Object,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "De naam van een categorie en de waarde van het object schrijft <> </> *> methode voor de traceer-listeners in de <> </> *> verzameling."
  remarks: "Standaard wordt de uitvoer geschreven naar een exemplaar van <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener>       De `category` parameter kan worden gebruikt voor het groeperen van uitvoerberichten.       Deze methode roept de <xref:System.Diagnostics.TraceListener.Write%2A>methode van de traceringslistener.</xref:System.Diagnostics.TraceListener.Write%2A>      > [!NOTE] > ASP.NET levert traceringsfunctie speciaal afgestemd op webpagina&quot;s. Traceringsberichten worden geschreven in ASP.NET-pagina&quot;s, gebruiken de <xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName>eigenschap.</xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName>       Standaard worden in de code die is gekoppeld aan een ASP.NET-webpagina, de instructie `Trace.Write(&quot;...&quot;)` is een aanroep naar de <xref:System.Web.TraceContext.Write%2A>methode van de <xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName>eigenschap.</xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName> </xref:System.Web.TraceContext.Write%2A> Gebruik de <xref:System.Diagnostics.Trace?displayProperty=fullName>klasse in webpagina&quot;s, moet u de naamruimte, bijvoorbeeld opnemen `System.Diagnostics.Trace.Write(&quot;...&quot;)`.</xref:System.Diagnostics.Trace?displayProperty=fullName>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside the code sample.  \n  \n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \n  \n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.  \n  \n [!code-cpp[Classic Trace.Write3 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_16_1.cpp)]\n [!code-cs[Classic Trace.Write3 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_16_1.cs)]\n [!code-vb[Classic Trace.Write3 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_16_1.vb)]"
  syntax:
    content: public static void Write (object value, string category);
    parameters:
    - id: value
      type: System.Object
      description: "Een <xref:System.Object>naam wordt verzonden naar de <xref:System.Diagnostics.Trace.Listeners*>.</xref:System.Diagnostics.Trace.Listeners*> </xref:System.Object>"
    - id: category
      type: System.String
      description: "Een categorienaam gebruikt voor het organiseren van de uitvoer."
  overload: System.Diagnostics.Trace.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.Write(System.String,System.String)
  id: Write(System.String,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: Write(String,String)
  nameWithType: Trace.Write(String,String)
  fullName: System.Diagnostics.Trace.Write(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "De naam van een categorie en een bericht schrijft naar de traceer-listeners in de <xref:System.Diagnostics.Trace.Listeners*>verzameling.</xref:System.Diagnostics.Trace.Listeners*>"
  remarks: "Standaard wordt de uitvoer geschreven naar een exemplaar van <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener>       De `category` parameter kan worden gebruikt voor het groeperen van uitvoerberichten.       Deze methode roept de <xref:System.Diagnostics.TraceListener.Write%2A>methode van de traceringslistener.</xref:System.Diagnostics.TraceListener.Write%2A>      > [!NOTE] > ASP.NET levert traceringsfunctie speciaal afgestemd op webpagina&quot;s. Traceringsberichten worden geschreven in ASP.NET-pagina&quot;s, gebruiken de <xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName>eigenschap.</xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName>       Standaard worden in de code die is gekoppeld aan een ASP.NET-webpagina, de instructie `Trace.Write(&quot;...&quot;)` is een aanroep naar de <xref:System.Web.TraceContext.Write%2A>methode van de <xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName>eigenschap.</xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName> </xref:System.Web.TraceContext.Write%2A> Gebruik de <xref:System.Diagnostics.Trace?displayProperty=fullName>klasse in webpagina&quot;s, moet u de naamruimte, bijvoorbeeld opnemen `System.Diagnostics.Trace.Write(&quot;...&quot;)`.</xref:System.Diagnostics.Trace?displayProperty=fullName>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside the code sample.  \n  \n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \n  \n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.  \n  \n [!code-cpp[Classic Trace.Write2 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_4_1.cpp)]\n [!code-vb[Classic Trace.Write2 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_4_1.vb)]\n [!code-cs[Classic Trace.Write2 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_4_1.cs)]"
  syntax:
    content: public static void Write (string message, string category);
    parameters:
    - id: message
      type: System.String
      description: "Een bericht te schrijven."
    - id: category
      type: System.String
      description: "Een categorienaam gebruikt voor het organiseren van de uitvoer."
  overload: System.Diagnostics.Trace.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)
  id: WriteIf(System.Boolean,System.Object)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: WriteIf(Boolean,Object)
  nameWithType: Trace.WriteIf(Boolean,Object)
  fullName: System.Diagnostics.Trace.WriteIf(Boolean,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "De waarde van het object schrijft <> </> *> methode voor de traceer-listeners in de <> </> *> verzameling als een voorwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  remarks: "Standaard wordt de uitvoer geschreven naar een exemplaar van <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener>       Deze methode roept de <xref:System.Diagnostics.TraceListener.Write%2A>methode van de traceringslistener.</xref:System.Diagnostics.TraceListener.Write%2A>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside the code sample.  \n  \n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \n  \n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message. The second message is followed by a line terminator.  \n  \n [!code-cpp[Classic Trace.WriteIf1 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_2_1.cpp)]\n [!code-vb[Classic Trace.WriteIf1 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_2_1.vb)]\n [!code-cs[Classic Trace.WriteIf1 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_2_1.cs)]"
  syntax:
    content: public static void WriteIf (bool condition, object value);
    parameters:
    - id: condition
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>leiden dat een bericht moeten worden geschreven; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: value
      type: System.Object
      description: "Een <xref:System.Object>waarvan de naam wordt verzonden naar de <xref:System.Diagnostics.Trace.Listeners*>.</xref:System.Diagnostics.Trace.Listeners*> </xref:System.Object>"
  overload: System.Diagnostics.Trace.WriteIf*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)
  id: WriteIf(System.Boolean,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: WriteIf(Boolean,String)
  nameWithType: Trace.WriteIf(Boolean,String)
  fullName: System.Diagnostics.Trace.WriteIf(Boolean,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijft u een bericht naar de traceer-listeners in de <xref:System.Diagnostics.Trace.Listeners*>verzameling als een voorwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Diagnostics.Trace.Listeners*>"
  remarks: "Standaard wordt de uitvoer geschreven naar een exemplaar van <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener>       Deze methode roept de <xref:System.Diagnostics.TraceListener.Write%2A>methode van de traceringslistener.</xref:System.Diagnostics.TraceListener.Write%2A>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside the code sample.  \n  \n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \n  \n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.  \n  \n [!code-cs[Classic Trace.WriteIf Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_10_1.cs)]\n [!code-cpp[Classic Trace.WriteIf Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_10_1.cpp)]\n [!code-vb[Classic Trace.WriteIf Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_10_1.vb)]"
  syntax:
    content: public static void WriteIf (bool condition, string message);
    parameters:
    - id: condition
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>leiden dat een bericht moeten worden geschreven; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: message
      type: System.String
      description: "Een bericht te schrijven."
  overload: System.Diagnostics.Trace.WriteIf*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)
  id: WriteIf(System.Boolean,System.Object,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: WriteIf(Boolean,Object,String)
  nameWithType: Trace.WriteIf(Boolean,Object,String)
  fullName: System.Diagnostics.Trace.WriteIf(Boolean,Object,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijft een categorienaam en de waarde van het object <> </> *> methode voor de traceer-listeners in de <> </> *> verzameling als een voorwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  remarks: "Standaard wordt de uitvoer geschreven naar een exemplaar van <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener>       De `category` parameter kan worden gebruikt voor het groeperen van uitvoerberichten.       Deze methode roept de <xref:System.Diagnostics.TraceListener.Write%2A>methode van de traceringslistener.</xref:System.Diagnostics.TraceListener.Write%2A>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside the code sample.  \n  \n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \n  \n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.  \n  \n [!code-cs[Classic Trace.WriteIf3 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_8_1.cs)]\n [!code-vb[Classic Trace.WriteIf3 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_8_1.vb)]\n [!code-cpp[Classic Trace.WriteIf3 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_8_1.cpp)]"
  syntax:
    content: public static void WriteIf (bool condition, object value, string category);
    parameters:
    - id: condition
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>leiden dat een bericht moeten worden geschreven; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: value
      type: System.Object
      description: "Een <xref:System.Object>waarvan de naam wordt verzonden naar de <xref:System.Diagnostics.Trace.Listeners*>.</xref:System.Diagnostics.Trace.Listeners*> </xref:System.Object>"
    - id: category
      type: System.String
      description: "Een categorienaam gebruikt voor het organiseren van de uitvoer."
  overload: System.Diagnostics.Trace.WriteIf*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)
  id: WriteIf(System.Boolean,System.String,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: WriteIf(Boolean,String,String)
  nameWithType: Trace.WriteIf(Boolean,String,String)
  fullName: System.Diagnostics.Trace.WriteIf(Boolean,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijft u een naam en categorie-bericht naar de traceer-listeners in de <xref:System.Diagnostics.Trace.Listeners*>verzameling als een voorwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Diagnostics.Trace.Listeners*>"
  remarks: "Standaard wordt de uitvoer geschreven naar een exemplaar van <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener>       De `category` parameter kan worden gebruikt voor het groeperen van uitvoerberichten.       Deze methode roept de <xref:System.Diagnostics.TraceListener.Write%2A>methode van de traceringslistener.</xref:System.Diagnostics.TraceListener.Write%2A>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside the code sample.  \n  \n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \n  \n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.  \n  \n [!code-cs[Classic Trace.WriteIf2 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_7_1.cs)]\n [!code-cpp[Classic Trace.WriteIf2 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_7_1.cpp)]\n [!code-vb[Classic Trace.WriteIf2 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_7_1.vb)]"
  syntax:
    content: public static void WriteIf (bool condition, string message, string category);
    parameters:
    - id: condition
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>leiden dat een bericht moeten worden geschreven; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: message
      type: System.String
      description: "Een bericht te schrijven."
    - id: category
      type: System.String
      description: "Een categorienaam gebruikt voor het organiseren van de uitvoer."
  overload: System.Diagnostics.Trace.WriteIf*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.WriteLine(System.Object)
  id: WriteLine(System.Object)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: WriteLine(Object)
  nameWithType: Trace.WriteLine(Object)
  fullName: System.Diagnostics.Trace.WriteLine(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "De waarde van het object schrijft <> </> *> methode voor de traceer-listeners in de <> </> *> verzameling."
  remarks: "Standaard wordt de uitvoer geschreven naar een exemplaar van <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener>       Deze methode roept de <xref:System.Diagnostics.TraceListener.WriteLine%2A>methode van de traceringslistener.</xref:System.Diagnostics.TraceListener.WriteLine%2A>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside the code sample.  \n  \n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \n  \n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message. The second message is followed by a line terminator.  \n  \n [!code-cpp[Classic Trace.WriteLine1 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_18_1.cpp)]\n [!code-cs[Classic Trace.WriteLine1 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_18_1.cs)]\n [!code-vb[Classic Trace.WriteLine1 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_18_1.vb)]"
  syntax:
    content: public static void WriteLine (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Een <xref:System.Object>waarvan de naam wordt verzonden naar de <xref:System.Diagnostics.Trace.Listeners*>.</xref:System.Diagnostics.Trace.Listeners*> </xref:System.Object>"
  overload: System.Diagnostics.Trace.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: Trace.WriteLine(String)
  fullName: System.Diagnostics.Trace.WriteLine(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijft u een bericht naar de traceer-listeners in de <xref:System.Diagnostics.Trace.Listeners*>verzameling.</xref:System.Diagnostics.Trace.Listeners*>"
  remarks: "Standaard wordt de uitvoer geschreven naar een exemplaar van <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener>       Deze methode roept de <xref:System.Diagnostics.TraceListener.WriteLine%2A>methode van de traceringslistener.</xref:System.Diagnostics.TraceListener.WriteLine%2A>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside the code sample.  \n  \n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \n  \n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.  \n  \n [!code-cpp[Classic Trace.Write Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_3_1.cpp)]\n [!code-cs[Classic Trace.Write Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_3_1.cs)]\n [!code-vb[Classic Trace.Write Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_3_1.vb)]"
  syntax:
    content: public static void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "Een bericht te schrijven."
  overload: System.Diagnostics.Trace.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.WriteLine(System.Object,System.String)
  id: WriteLine(System.Object,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: WriteLine(Object,String)
  nameWithType: Trace.WriteLine(Object,String)
  fullName: System.Diagnostics.Trace.WriteLine(Object,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "De naam van een categorie en de waarde van het object schrijft <> </> *> methode voor de traceer-listeners in de <> </> *> verzameling."
  remarks: "Standaard wordt de uitvoer geschreven naar een exemplaar van <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener>       De `category` parameter kan worden gebruikt voor het groeperen van uitvoerberichten.       Deze methode roept de <xref:System.Diagnostics.TraceListener.WriteLine%2A>methode van de traceringslistener.</xref:System.Diagnostics.TraceListener.WriteLine%2A>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside the code sample.  \n  \n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \n  \n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.  \n  \n [!code-cpp[Classic Trace.WriteLine3 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_19_1.cpp)]\n [!code-vb[Classic Trace.WriteLine3 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_19_1.vb)]\n [!code-cs[Classic Trace.WriteLine3 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_19_1.cs)]"
  syntax:
    content: public static void WriteLine (object value, string category);
    parameters:
    - id: value
      type: System.Object
      description: "Een <xref:System.Object>waarvan de naam wordt verzonden naar de <xref:System.Diagnostics.Trace.Listeners*>.</xref:System.Diagnostics.Trace.Listeners*> </xref:System.Object>"
    - id: category
      type: System.String
      description: "Een categorienaam gebruikt voor het organiseren van de uitvoer."
  overload: System.Diagnostics.Trace.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.WriteLine(System.String,System.String)
  id: WriteLine(System.String,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: WriteLine(String,String)
  nameWithType: Trace.WriteLine(String,String)
  fullName: System.Diagnostics.Trace.WriteLine(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijft u een naam en categorie-bericht naar de traceer-listeners in de <xref:System.Diagnostics.Trace.Listeners*>verzameling.</xref:System.Diagnostics.Trace.Listeners*>"
  remarks: "Standaard wordt de uitvoer geschreven naar een exemplaar van <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener>       De `category` parameter kan worden gebruikt voor het groeperen van uitvoerberichten.       Deze methode roept de <xref:System.Diagnostics.TraceListener.WriteLine%2A>methode van de traceringslistener.</xref:System.Diagnostics.TraceListener.WriteLine%2A>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside the code sample.  \n  \n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \n  \n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message. The second message is followed by a line terminator.  \n  \n [!code-cpp[Classic Trace.WriteLine2 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_25_1.cpp)]\n [!code-vb[Classic Trace.WriteLine2 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_25_1.vb)]\n [!code-cs[Classic Trace.WriteLine2 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_25_1.cs)]"
  syntax:
    content: public static void WriteLine (string message, string category);
    parameters:
    - id: message
      type: System.String
      description: "Een bericht te schrijven."
    - id: category
      type: System.String
      description: "Een categorienaam gebruikt voor het organiseren van de uitvoer."
  overload: System.Diagnostics.Trace.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)
  id: WriteLineIf(System.Boolean,System.Object)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: WriteLineIf(Boolean,Object)
  nameWithType: Trace.WriteLineIf(Boolean,Object)
  fullName: System.Diagnostics.Trace.WriteLineIf(Boolean,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "De waarde van het object schrijft <> </> *> methode voor de traceer-listeners in de <> </> *> verzameling als een voorwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  remarks: "Standaard wordt de uitvoer geschreven naar een exemplaar van <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener>       Deze methode roept de <xref:System.Diagnostics.TraceListener.WriteLine%2A>methode van de traceringslistener.</xref:System.Diagnostics.TraceListener.WriteLine%2A>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside the code sample.  \n  \n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \n  \n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message. The second message is followed by a line terminator.  \n  \n [!code-cpp[Classic Trace.WriteLineIf1 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_5_1.cpp)]\n [!code-vb[Classic Trace.WriteLineIf1 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_5_1.vb)]\n [!code-cs[Classic Trace.WriteLineIf1 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_5_1.cs)]"
  syntax:
    content: public static void WriteLineIf (bool condition, object value);
    parameters:
    - id: condition
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>leiden dat een bericht moeten worden geschreven; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: value
      type: System.Object
      description: "Een <xref:System.Object>waarvan de naam wordt verzonden naar de <xref:System.Diagnostics.Trace.Listeners*>.</xref:System.Diagnostics.Trace.Listeners*> </xref:System.Object>"
  overload: System.Diagnostics.Trace.WriteLineIf*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)
  id: WriteLineIf(System.Boolean,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: WriteLineIf(Boolean,String)
  nameWithType: Trace.WriteLineIf(Boolean,String)
  fullName: System.Diagnostics.Trace.WriteLineIf(Boolean,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijft u een bericht naar de traceer-listeners in de <xref:System.Diagnostics.Trace.Listeners*>verzameling als een voorwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Diagnostics.Trace.Listeners*>"
  remarks: "Standaard wordt de uitvoer geschreven naar een exemplaar van <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener>       Deze methode roept de <xref:System.Diagnostics.TraceListener.WriteLine%2A>methode van de traceringslistener.</xref:System.Diagnostics.TraceListener.WriteLine%2A>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside the code sample.  \n  \n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \n  \n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.  \n  \n [!code-cs[Classic Trace.WriteIf Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_11_1.cs)]\n [!code-cpp[Classic Trace.WriteIf Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_11_1.cpp)]\n [!code-vb[Classic Trace.WriteIf Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_11_1.vb)]"
  syntax:
    content: public static void WriteLineIf (bool condition, string message);
    parameters:
    - id: condition
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>leiden dat een bericht moeten worden geschreven; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: message
      type: System.String
      description: "Een bericht te schrijven."
  overload: System.Diagnostics.Trace.WriteLineIf*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)
  id: WriteLineIf(System.Boolean,System.Object,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: WriteLineIf(Boolean,Object,String)
  nameWithType: Trace.WriteLineIf(Boolean,Object,String)
  fullName: System.Diagnostics.Trace.WriteLineIf(Boolean,Object,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijft een categorienaam en de waarde van het object <> </> *> methode voor de traceer-listeners in de <> </> *> verzameling als een voorwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  remarks: "Standaard wordt de uitvoer geschreven naar een exemplaar van <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener>       De `category` parameter kan worden gebruikt voor het groeperen van uitvoerberichten.       Deze methode roept de <xref:System.Diagnostics.TraceListener.WriteLine%2A>methode van de traceringslistener.</xref:System.Diagnostics.TraceListener.WriteLine%2A>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside the code sample.  \n  \n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \n  \n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.  \n  \n [!code-cs[Classic Trace.WriteLineIf3 Example#1](~/add/codesnippet/csharp/96a954ed-2f0b-4ec7-91f9-_1.cs)]\n [!code-vb[Classic Trace.WriteLineIf3 Example#1](~/add/codesnippet/visualbasic/96a954ed-2f0b-4ec7-91f9-_1.vb)]\n [!code-cpp[Classic Trace.WriteLineIf3 Example#1](~/add/codesnippet/cpp/96a954ed-2f0b-4ec7-91f9-_1.cpp)]"
  syntax:
    content: public static void WriteLineIf (bool condition, object value, string category);
    parameters:
    - id: condition
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>leiden dat een bericht moeten worden geschreven; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: value
      type: System.Object
      description: "Een <xref:System.Object>waarvan de naam wordt verzonden naar de <xref:System.Diagnostics.Trace.Listeners*>.</xref:System.Diagnostics.Trace.Listeners*> </xref:System.Object>"
    - id: category
      type: System.String
      description: "Een categorienaam gebruikt voor het organiseren van de uitvoer."
  overload: System.Diagnostics.Trace.WriteLineIf*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)
  id: WriteLineIf(System.Boolean,System.String,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  name: WriteLineIf(Boolean,String,String)
  nameWithType: Trace.WriteLineIf(Boolean,String,String)
  fullName: System.Diagnostics.Trace.WriteLineIf(Boolean,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijft u een naam en categorie-bericht naar de traceer-listeners in de <xref:System.Diagnostics.Trace.Listeners*>verzameling als een voorwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Diagnostics.Trace.Listeners*>"
  remarks: "Standaard wordt de uitvoer geschreven naar een exemplaar van <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener>       De `category` parameter kan worden gebruikt voor het groeperen van uitvoerberichten.       Deze methode roept de <xref:System.Diagnostics.TraceListener.WriteLine%2A>methode van de traceringslistener.</xref:System.Diagnostics.TraceListener.WriteLine%2A>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside the code sample.  \n  \n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \n  \n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message. The second message is followed by a line terminator.  \n  \n [!code-vb[Classic Trace.WriteLineIf2 Example#1](~/add/codesnippet/visualbasic/7f54460b-5f74-4be1-a3dd-_1.vb)]\n [!code-cs[Classic Trace.WriteLineIf2 Example#1](~/add/codesnippet/csharp/7f54460b-5f74-4be1-a3dd-_1.cs)]\n [!code-cpp[Classic Trace.WriteLineIf2 Example#1](~/add/codesnippet/cpp/7f54460b-5f74-4be1-a3dd-_1.cpp)]"
  syntax:
    content: public static void WriteLineIf (bool condition, string message, string category);
    parameters:
    - id: condition
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>leiden dat een bericht moeten worden geschreven; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: message
      type: System.String
      description: "Een bericht te schrijven."
    - id: category
      type: System.String
      description: "Een categorienaam gebruikt voor het organiseren van de uitvoer."
  overload: System.Diagnostics.Trace.WriteLineIf*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.Trace.Assert(System.Boolean)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Assert(Boolean)
  nameWithType: Trace.Assert(Boolean)
  fullName: System.Diagnostics.Trace.Assert(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Trace.Assert(System.Boolean,System.String)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Assert(Boolean,String)
  nameWithType: Trace.Assert(Boolean,String)
  fullName: System.Diagnostics.Trace.Assert(Boolean,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Assert(Boolean,String,String)
  nameWithType: Trace.Assert(Boolean,String,String)
  fullName: System.Diagnostics.Trace.Assert(Boolean,String,String)
- uid: System.Diagnostics.Trace.AutoFlush
  parent: System.Diagnostics.Trace
  isExternal: false
  name: AutoFlush
  nameWithType: Trace.AutoFlush
  fullName: System.Diagnostics.Trace.AutoFlush
- uid: System.Diagnostics.Trace.Close
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Close()
  nameWithType: Trace.Close()
  fullName: System.Diagnostics.Trace.Close()
- uid: System.Diagnostics.Trace.CorrelationManager
  parent: System.Diagnostics.Trace
  isExternal: false
  name: CorrelationManager
  nameWithType: Trace.CorrelationManager
  fullName: System.Diagnostics.Trace.CorrelationManager
- uid: System.Diagnostics.CorrelationManager
  parent: System.Diagnostics
  isExternal: false
  name: CorrelationManager
  nameWithType: CorrelationManager
  fullName: System.Diagnostics.CorrelationManager
- uid: System.Diagnostics.Trace.Fail(System.String)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Fail(String)
  nameWithType: Trace.Fail(String)
  fullName: System.Diagnostics.Trace.Fail(String)
- uid: System.Diagnostics.Trace.Fail(System.String,System.String)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Fail(String,String)
  nameWithType: Trace.Fail(String,String)
  fullName: System.Diagnostics.Trace.Fail(String,String)
- uid: System.Diagnostics.Trace.Flush
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Flush()
  nameWithType: Trace.Flush()
  fullName: System.Diagnostics.Trace.Flush()
- uid: System.Diagnostics.Trace.Indent
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Indent()
  nameWithType: Trace.Indent()
  fullName: System.Diagnostics.Trace.Indent()
- uid: System.Diagnostics.Trace.IndentLevel
  parent: System.Diagnostics.Trace
  isExternal: false
  name: IndentLevel
  nameWithType: Trace.IndentLevel
  fullName: System.Diagnostics.Trace.IndentLevel
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.Trace.IndentSize
  parent: System.Diagnostics.Trace
  isExternal: false
  name: IndentSize
  nameWithType: Trace.IndentSize
  fullName: System.Diagnostics.Trace.IndentSize
- uid: System.Diagnostics.Trace.Listeners
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Listeners
  nameWithType: Trace.Listeners
  fullName: System.Diagnostics.Trace.Listeners
- uid: System.Diagnostics.TraceListenerCollection
  parent: System.Diagnostics
  isExternal: false
  name: TraceListenerCollection
  nameWithType: TraceListenerCollection
  fullName: System.Diagnostics.TraceListenerCollection
- uid: System.Diagnostics.Trace.Refresh
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Refresh()
  nameWithType: Trace.Refresh()
  fullName: System.Diagnostics.Trace.Refresh()
- uid: System.Diagnostics.Trace.TraceError(System.String)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: TraceError(String)
  nameWithType: Trace.TraceError(String)
  fullName: System.Diagnostics.Trace.TraceError(String)
- uid: System.Diagnostics.Trace.TraceError(System.String,System.Object[])
  parent: System.Diagnostics.Trace
  isExternal: false
  name: TraceError(String,Object[])
  nameWithType: Trace.TraceError(String,Object[])
  fullName: System.Diagnostics.Trace.TraceError(String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.Trace.TraceInformation(System.String)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: TraceInformation(String)
  nameWithType: Trace.TraceInformation(String)
  fullName: System.Diagnostics.Trace.TraceInformation(String)
- uid: System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])
  parent: System.Diagnostics.Trace
  isExternal: false
  name: TraceInformation(String,Object[])
  nameWithType: Trace.TraceInformation(String,Object[])
  fullName: System.Diagnostics.Trace.TraceInformation(String,Object[])
- uid: System.Diagnostics.Trace.TraceWarning(System.String)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: TraceWarning(String)
  nameWithType: Trace.TraceWarning(String)
  fullName: System.Diagnostics.Trace.TraceWarning(String)
- uid: System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])
  parent: System.Diagnostics.Trace
  isExternal: false
  name: TraceWarning(String,Object[])
  nameWithType: Trace.TraceWarning(String,Object[])
  fullName: System.Diagnostics.Trace.TraceWarning(String,Object[])
- uid: System.Diagnostics.Trace.Unindent
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Unindent()
  nameWithType: Trace.Unindent()
  fullName: System.Diagnostics.Trace.Unindent()
- uid: System.Diagnostics.Trace.UseGlobalLock
  parent: System.Diagnostics.Trace
  isExternal: false
  name: UseGlobalLock
  nameWithType: Trace.UseGlobalLock
  fullName: System.Diagnostics.Trace.UseGlobalLock
- uid: System.Diagnostics.Trace.Write(System.Object)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Write(Object)
  nameWithType: Trace.Write(Object)
  fullName: System.Diagnostics.Trace.Write(Object)
- uid: System.Diagnostics.Trace.Write(System.String)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Write(String)
  nameWithType: Trace.Write(String)
  fullName: System.Diagnostics.Trace.Write(String)
- uid: System.Diagnostics.Trace.Write(System.Object,System.String)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Write(Object,String)
  nameWithType: Trace.Write(Object,String)
  fullName: System.Diagnostics.Trace.Write(Object,String)
- uid: System.Diagnostics.Trace.Write(System.String,System.String)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Write(String,String)
  nameWithType: Trace.Write(String,String)
  fullName: System.Diagnostics.Trace.Write(String,String)
- uid: System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: WriteIf(Boolean,Object)
  nameWithType: Trace.WriteIf(Boolean,Object)
  fullName: System.Diagnostics.Trace.WriteIf(Boolean,Object)
- uid: System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: WriteIf(Boolean,String)
  nameWithType: Trace.WriteIf(Boolean,String)
  fullName: System.Diagnostics.Trace.WriteIf(Boolean,String)
- uid: System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: WriteIf(Boolean,Object,String)
  nameWithType: Trace.WriteIf(Boolean,Object,String)
  fullName: System.Diagnostics.Trace.WriteIf(Boolean,Object,String)
- uid: System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: WriteIf(Boolean,String,String)
  nameWithType: Trace.WriteIf(Boolean,String,String)
  fullName: System.Diagnostics.Trace.WriteIf(Boolean,String,String)
- uid: System.Diagnostics.Trace.WriteLine(System.Object)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: WriteLine(Object)
  nameWithType: Trace.WriteLine(Object)
  fullName: System.Diagnostics.Trace.WriteLine(Object)
- uid: System.Diagnostics.Trace.WriteLine(System.String)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: WriteLine(String)
  nameWithType: Trace.WriteLine(String)
  fullName: System.Diagnostics.Trace.WriteLine(String)
- uid: System.Diagnostics.Trace.WriteLine(System.Object,System.String)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: WriteLine(Object,String)
  nameWithType: Trace.WriteLine(Object,String)
  fullName: System.Diagnostics.Trace.WriteLine(Object,String)
- uid: System.Diagnostics.Trace.WriteLine(System.String,System.String)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: WriteLine(String,String)
  nameWithType: Trace.WriteLine(String,String)
  fullName: System.Diagnostics.Trace.WriteLine(String,String)
- uid: System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: WriteLineIf(Boolean,Object)
  nameWithType: Trace.WriteLineIf(Boolean,Object)
  fullName: System.Diagnostics.Trace.WriteLineIf(Boolean,Object)
- uid: System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: WriteLineIf(Boolean,String)
  nameWithType: Trace.WriteLineIf(Boolean,String)
  fullName: System.Diagnostics.Trace.WriteLineIf(Boolean,String)
- uid: System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: WriteLineIf(Boolean,Object,String)
  nameWithType: Trace.WriteLineIf(Boolean,Object,String)
  fullName: System.Diagnostics.Trace.WriteLineIf(Boolean,Object,String)
- uid: System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)
  parent: System.Diagnostics.Trace
  isExternal: false
  name: WriteLineIf(Boolean,String,String)
  nameWithType: Trace.WriteLineIf(Boolean,String,String)
  fullName: System.Diagnostics.Trace.WriteLineIf(Boolean,String,String)
- uid: System.Diagnostics.Trace.Assert*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Assert
  nameWithType: Trace.Assert
- uid: System.Diagnostics.Trace.AutoFlush*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: AutoFlush
  nameWithType: Trace.AutoFlush
- uid: System.Diagnostics.Trace.Close*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Close
  nameWithType: Trace.Close
- uid: System.Diagnostics.Trace.CorrelationManager*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: CorrelationManager
  nameWithType: Trace.CorrelationManager
- uid: System.Diagnostics.Trace.Fail*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Fail
  nameWithType: Trace.Fail
- uid: System.Diagnostics.Trace.Flush*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Flush
  nameWithType: Trace.Flush
- uid: System.Diagnostics.Trace.Indent*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Indent
  nameWithType: Trace.Indent
- uid: System.Diagnostics.Trace.IndentLevel*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: IndentLevel
  nameWithType: Trace.IndentLevel
- uid: System.Diagnostics.Trace.IndentSize*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: IndentSize
  nameWithType: Trace.IndentSize
- uid: System.Diagnostics.Trace.Listeners*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Listeners
  nameWithType: Trace.Listeners
- uid: System.Diagnostics.Trace.Refresh*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Refresh
  nameWithType: Trace.Refresh
- uid: System.Diagnostics.Trace.TraceError*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: TraceError
  nameWithType: Trace.TraceError
- uid: System.Diagnostics.Trace.TraceInformation*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: TraceInformation
  nameWithType: Trace.TraceInformation
- uid: System.Diagnostics.Trace.TraceWarning*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: TraceWarning
  nameWithType: Trace.TraceWarning
- uid: System.Diagnostics.Trace.Unindent*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Unindent
  nameWithType: Trace.Unindent
- uid: System.Diagnostics.Trace.UseGlobalLock*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: UseGlobalLock
  nameWithType: Trace.UseGlobalLock
- uid: System.Diagnostics.Trace.Write*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: Write
  nameWithType: Trace.Write
- uid: System.Diagnostics.Trace.WriteIf*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: WriteIf
  nameWithType: Trace.WriteIf
- uid: System.Diagnostics.Trace.WriteLine*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: WriteLine
  nameWithType: Trace.WriteLine
- uid: System.Diagnostics.Trace.WriteLineIf*
  parent: System.Diagnostics.Trace
  isExternal: false
  name: WriteLineIf
  nameWithType: Trace.WriteLineIf
