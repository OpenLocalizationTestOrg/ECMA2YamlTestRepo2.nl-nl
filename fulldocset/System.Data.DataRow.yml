### YamlMime:ManagedReference
items:
- uid: System.Data.DataRow
  id: DataRow
  children:
  - System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  - System.Data.DataRow.AcceptChanges
  - System.Data.DataRow.BeginEdit
  - System.Data.DataRow.CancelEdit
  - System.Data.DataRow.ClearErrors
  - System.Data.DataRow.Delete
  - System.Data.DataRow.EndEdit
  - System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  - System.Data.DataRow.GetChildRows(System.String)
  - System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  - System.Data.DataRow.GetColumnError(System.Int32)
  - System.Data.DataRow.GetColumnError(System.String)
  - System.Data.DataRow.GetColumnsInError
  - System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  - System.Data.DataRow.GetParentRow(System.String)
  - System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  - System.Data.DataRow.GetParentRows(System.String)
  - System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.HasErrors
  - System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  - System.Data.DataRow.IsNull(System.Data.DataColumn)
  - System.Data.DataRow.IsNull(System.Int32)
  - System.Data.DataRow.IsNull(System.String)
  - System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.Data.DataColumn)
  - System.Data.DataRow.Item(System.Int32)
  - System.Data.DataRow.Item(System.String)
  - System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.ItemArray
  - System.Data.DataRow.RejectChanges
  - System.Data.DataRow.RowError
  - System.Data.DataRow.RowState
  - System.Data.DataRow.SetAdded
  - System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  - System.Data.DataRow.SetColumnError(System.Int32,System.String)
  - System.Data.DataRow.SetColumnError(System.String,System.String)
  - System.Data.DataRow.SetModified
  - System.Data.DataRow.SetNull(System.Data.DataColumn)
  - System.Data.DataRow.SetParentRow(System.Data.DataRow)
  - System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  - System.Data.DataRow.Table
  langs:
  - csharp
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
  type: Class
  summary: "Hiermee geeft u een rij gegevens in een <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "De DataRow en <xref:System.Data.DataColumn>objecten zijn primaire onderdelen van een <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataColumn> Gebruik van de DataRow-object en de eigenschappen en methoden op te halen en te evalueren; invoegen, verwijderen en de waarden in de <xref:System.Data.DataTable>.</xref:System.Data.DataTable> bijwerken De <xref:System.Data.DataRowCollection>vertegenwoordigt de werkelijke DataRow-objecten in de <xref:System.Data.DataTable>, en het <xref:System.Data.DataColumnCollection>bevat de <xref:System.Data.DataColumn>objecten die worden beschreven het schema van de <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataColumn> </xref:System.Data.DataColumnCollection> </xref:System.Data.DataTable> </xref:System.Data.DataRowCollection> Gebruik de overbelaste <xref:System.Data.DataRow.Item%2A>eigenschap retourneren of stel de waarde van een <xref:System.Data.DataColumn>.</xref:System.Data.DataColumn> </xref:System.Data.DataRow.Item%2A>       Gebruik de <xref:System.Data.DataRow.HasVersion%2A>en <xref:System.Data.DataRow.IsNull%2A>Eigenschappen om te bepalen van de status van de waarde van een bepaalde rij, en de <xref:System.Data.DataRow.RowState%2A>eigenschap in op de status van de rij ten opzichte van de bovenliggende <xref:System.Data.DataTable>.</xref:System.Data.DataTable> bepalen</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.IsNull%2A> </xref:System.Data.DataRow.HasVersion%2A>       Gebruik voor het maken van een nieuwe DataRow de <xref:System.Data.DataTable.NewRow%2A>methode van de <xref:System.Data.DataTable>object.</xref:System.Data.DataTable> </xref:System.Data.DataTable.NewRow%2A> Nadat een nieuwe DataRow is gemaakt, gebruikt u de <xref:System.Data.DataRowCollection.Add%2A>methode voor het toevoegen van de nieuwe DataRow naar de <xref:System.Data.DataRowCollection>.</xref:System.Data.DataRowCollection> </xref:System.Data.DataRowCollection.Add%2A> Tenslotte roept de <xref:System.Data.DataRow.AcceptChanges%2A>methode van de <xref:System.Data.DataTable>object om te bevestigen dat de toevoeging.</xref:System.Data.DataTable> </xref:System.Data.DataRow.AcceptChanges%2A> Voor meer informatie over het toevoegen van gegevens naar een <xref:System.Data.DataTable>, Zie [gegevens toe te voegen aan een DataTable](~/add/includes/ajax-current-ext-md.md).</xref:System.Data.DataTable>       U kunt een DataRow van verwijderen de <xref:System.Data.DataRowCollection>door het aanroepen van de <xref:System.Data.DataRowCollection.Remove%2A>methode van de <xref:System.Data.DataRowCollection>, of door het aanroepen van de <xref:System.Data.DataRow.Delete%2A>methode van de DataRow-object.</xref:System.Data.DataRow.Delete%2A> </xref:System.Data.DataRowCollection> </xref:System.Data.DataRowCollection.Remove%2A> </xref:System.Data.DataRowCollection> De <xref:System.Data.DataRowCollection.Remove%2A>methode verwijdert de rij uit de verzameling.</xref:System.Data.DataRowCollection.Remove%2A> Daarentegen <xref:System.Data.DataRow.Delete%2A>markeert de DataRow voor verwijdering.</xref:System.Data.DataRow.Delete%2A> De werkelijke verwijdering treedt op wanneer u aanroepen <xref:System.Data.DataRow.AcceptChanges%2A>methode.</xref:System.Data.DataRow.AcceptChanges%2A> Door het aanroepen van <xref:System.Data.DataRow.Delete%2A>, u programmatisch kunt controleren welke rijen zijn gemarkeerd voor verwijdering voordat deze werkelijk worden verwijderd.</xref:System.Data.DataRow.Delete%2A> Zie voor meer informatie [DataRow verwijdering](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a new DataRow by calling the <xref:System.Data.DataTable.NewRow%2A> method of the <xref:System.Data.DataTable> object.  \n  \n [!code-vb[Classic WebData DataRow Example#1](~/add/codesnippet/visualbasic/t-system.data.datarow_1.vb)]\n [!code-cs[Classic WebData DataRow Example#1](~/add/codesnippet/csharp/t-system.data.datarow_1.cs)]"
  syntax:
    content: public class DataRow
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  id: '#ctor(System.Data.DataRowBuilder)'
  parent: System.Data.DataRow
  langs:
  - csharp
  name: DataRow(DataRowBuilder)
  nameWithType: DataRow.DataRow(DataRowBuilder)
  fullName: System.Data.DataRow.DataRow(DataRowBuilder)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Initialiseert een nieuw exemplaar van de DataRow. Hiermee wordt een rij uit de opbouwfunctie voor. Alleen voor intern gebruik..."
  syntax:
    content: protected DataRow (System.Data.DataRowBuilder builder);
    parameters:
    - id: builder
      type: System.Data.DataRowBuilder
      description: "Builder"
  overload: System.Data.DataRow.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.AcceptChanges
  id: AcceptChanges
  parent: System.Data.DataRow
  langs:
  - csharp
  name: AcceptChanges()
  nameWithType: DataRow.AcceptChanges()
  fullName: System.Data.DataRow.AcceptChanges()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Voert de wijzigingen die zijn aangebracht in deze rij sinds de laatste keer die AcceptChanges is aangeroepen."
  remarks: "Bij het aanroepen van AcceptChanges, de <xref:System.Data.DataRow.EndEdit%2A>methode impliciet wordt aangeroepen om te beÃ«indigen alle bewerkingen.</xref:System.Data.DataRow.EndEdit%2A> Als de <xref:System.Data.DataRow.RowState%2A>van de rij is toegevoegd of gewijzigd en de <xref:System.Data.DataRow.RowState%2A>wordt ongewijzigd.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.RowState%2A> Als de <xref:System.Data.DataRow.RowState%2A>is verwijderd, de rij is verwijderd.</xref:System.Data.DataRow.RowState%2A>       Zie de <xref:System.Data.DataRow.BeginEdit%2A>methode voor meer informatie.</xref:System.Data.DataRow.BeginEdit%2A>       De <xref:System.Data.DataTable>klasse heeft ook een <xref:System.Data.DataTable.AcceptChanges%2A>methode die van invloed op wijzigingen in de hele tabel.</xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataTable> Zie voor meer informatie en een codevoorbeeld van een die laat zien hoe u accepteren en weigeren van wijzigingen in afzonderlijke gegevensrijen [AcceptChanges en RejectChanges](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example first creates a new <xref:System.Data.DataTable> with one column, and then creates a single <xref:System.Data.DataRow>. As the <xref:System.Data.DataRow> is created, added, modified, and deleted, its <xref:System.Data.DataRow.RowState%2A> is printed.  \n  \n [!code-cs[Classic WebData DataRow.AcceptChanges Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ac_1.cs)]\n [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ac_1.vb)]"
  syntax:
    content: public void AcceptChanges ();
    parameters: []
  overload: System.Data.DataRow.AcceptChanges*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "De rij behoort niet tot de tabel."
  platform:
  - net462
- uid: System.Data.DataRow.BeginEdit
  id: BeginEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: BeginEdit()
  nameWithType: DataRow.BeginEdit()
  fullName: System.Data.DataRow.BeginEdit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Een bewerking begint op een <xref href=&quot;System.Data.DataRow&quot;> </xref> object."
  remarks: "Gebruik de methode BeginEdit te plaatsen een <xref:System.Data.DataRow>in de bewerkingsmodus.</xref:System.Data.DataRow> In deze modus gebeurtenissen zijn tijdelijk niet beschikbaar, zodat de gebruiker wijzigingen aanbrengen in meer dan een rij zonder activering validatieregels. Als u moet zorg ervoor dat de waarde van de kolom voor een totaal bedrag gelijk aan de waarden voor de incasso is en kolommen in een rij credit, kunt u elke rij plaatsen in de bewerkingsmodus voor de validatie van de rijwaarden blokkeren totdat de gebruiker probeert om door te voeren van de waarden.       De methode BeginEdit wordt impliciet aangeroepen wanneer de gebruiker de waarde van een gegevensgebonden besturingselement wijzigt; de <xref:System.Data.DataRow.EndEdit%2A>methode impliciet wordt aangeroepen wanneer u aanroept de <xref:System.Data.DataTable.AcceptChanges%2A>methode voor de <xref:System.Data.DataTable>object.</xref:System.Data.DataTable> </xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataRow.EndEdit%2A> In deze bewerkingsmodus de <xref:System.Data.DataRow>slaat weergaven van de oorspronkelijke en nieuwe waarden voorgestelde.</xref:System.Data.DataRow> Daarom, zolang de <xref:System.Data.DataRow.EndEdit%2A>methode is niet aangeroepen, kunt u de oorspronkelijke of de voorgestelde versie ophalen door het doorgeven van een `DataRowVersion.Original` of `DataRowVersion.Proposed` voor de `version` parameter van de <xref:System.Data.DataRow.Item%2A>eigenschap.</xref:System.Data.DataRow.Item%2A> </xref:System.Data.DataRow.EndEdit%2A> U kunt ook alle bewerkingen op dit moment annuleren door aan te roepen de <xref:System.Data.DataRow.CancelEdit%2A>methode.</xref:System.Data.DataRow.CancelEdit%2A>       Aanroepen om te zien als de rij een oorspronkelijke of voorgestelde waarde bevat, de <xref:System.Data.DataRow.HasVersion%2A>methode.</xref:System.Data.DataRow.HasVersion%2A>      > [!NOTE] > De BeginEdit methode voor het tijdelijk wordt onderbroken <xref:System.Data.DataTable.RowChanging>gebeurtenissen, maar de `delete` bewerking niet.</xref:System.Data.DataTable.RowChanging>"
  example:
  - "The example creates a simple <xref:System.Data.DataTable> with one <xref:System.Data.DataColumn> and five <xref:System.Data.DataRow> objects, and a <xref:System.Data.UniqueConstraint>. A <xref:System.Data.DataTable.RowChanged> event handler is also added to monitor when the row's value is changing. After invoking BeginEdit on the existing rows, the constraint and event are temporarily disabled and the original and proposed values are printed. The BeginEdit is again invoked to set two rows to the same value. When <xref:System.Data.DataRow.EndEdit%2A> is called, the <xref:System.Data.UniqueConstraint> is enforced on the identical values.  \n  \n [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.be_1.vb)]\n [!code-cs[Classic WebData DataRow.BeginEdit Example#1](~/add/codesnippet/csharp/m-system.data.datarow.be_1.cs)]"
  syntax:
    content: public void BeginEdit ();
    parameters: []
  overload: System.Data.DataRow.BeginEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: "De methode is aangeroepen in de <xref href=&quot;System.Data.DataTable.RowChanging&quot;> </xref> gebeurtenis."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "De methode is aangeroepen op een verwijderde rij."
  platform:
  - net462
- uid: System.Data.DataRow.CancelEdit
  id: CancelEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: DataRow.CancelEdit()
  fullName: System.Data.DataRow.CancelEdit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee annuleert u de huidige bewerking op de rij."
  remarks: "Zie de <xref:System.Data.DataRow.BeginEdit%2A>methode voor meer informatie.</xref:System.Data.DataRow.BeginEdit%2A>"
  example:
  - "The following example edits the value of one column in the last row of a <xref:System.Windows.Forms.DataGrid> control. The example uses the <xref:System.Data.DataRow.BeginEdit%2A>, <xref:System.Data.DataRow.EndEdit%2A>, methods to edit the column's value and commit the change to the row.  \n  \n [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ca_1.vb)]\n [!code-cs[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ca_1.cs)]"
  syntax:
    content: public void CancelEdit ();
    parameters: []
  overload: System.Data.DataRow.CancelEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: "De methode is aangeroepen in de <xref href=&quot;System.Data.DataTable.RowChanging&quot;> </xref> gebeurtenis."
  platform:
  - net462
- uid: System.Data.DataRow.ClearErrors
  id: ClearErrors
  parent: System.Data.DataRow
  langs:
  - csharp
  name: ClearErrors()
  nameWithType: DataRow.ClearErrors()
  fullName: System.Data.DataRow.ClearErrors()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wist u de fouten voor de rij. Dit omvat de <> </> *> en fouten die zijn ingesteld met <> </> *>."
  remarks: "Gebruik <xref:System.Data.DataRow.SetColumnError%2A>en <xref:System.Data.DataRow.GetColumnError%2A>instellen en fouten voor afzonderlijke kolommen retourneren.</xref:System.Data.DataRow.GetColumnError%2A> </xref:System.Data.DataRow.SetColumnError%2A>       Stel de <xref:System.Data.DataRow.RowError%2A>eigenschap in te stellen van een fout die voor de hele rij geldt.</xref:System.Data.DataRow.RowError%2A>       Om te bepalen of er fouten voor de kolommenverzameling zijn, gebruikt de <xref:System.Data.DataRow.HasErrors%2A>methode.</xref:System.Data.DataRow.HasErrors%2A> Daarom kunt u de <xref:System.Data.DataRow.GetColumnsInError%2A>methode voor het ophalen van de kolommen met fouten.</xref:System.Data.DataRow.GetColumnsInError%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.HasErrors%2A> to look for errors. If the row has errors, the <xref:System.Data.DataRow.GetColumnsInError%2A> method returns the array of columns with errors that can then be resolved. The ClearErrors method is then called to clear all errors.  \n  \n [!code-cs[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/csharp/m-system.data.datarow.cl_1.cs)]\n [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.cl_1.vb)]"
  syntax:
    content: public void ClearErrors ();
    parameters: []
  overload: System.Data.DataRow.ClearErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.Delete
  id: Delete
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Delete()
  nameWithType: DataRow.Delete()
  fullName: System.Data.DataRow.Delete()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee verwijdert u de <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  remarks: "Als de <xref:System.Data.DataRow.RowState%2A>van de rij is toegevoegd, de <xref:System.Data.DataRow.RowState%2A>wordt `Detached` en de rij is verwijderd uit de tabel bij het aanroepen van <xref:System.Data.DataRow.AcceptChanges%2A>.</xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.RowState%2A>       De <xref:System.Data.DataRow.RowState%2A>wordt `Deleted` nadat u de Delete-methode op een bestaande <xref:System.Data.DataRow>.</xref:System.Data.DataRow> gebruikt</xref:System.Data.DataRow.RowState%2A> Het blijft `Deleted` totdat u <xref:System.Data.DataRow.AcceptChanges%2A>.</xref:System.Data.DataRow.AcceptChanges%2A> aanroepen Op dit moment de <xref:System.Data.DataRow>wordt verwijderd uit de tabel.</xref:System.Data.DataRow>       Verwijderen moet niet worden aangeroepen in een lus foreach tijdens het doorlopen een <xref:System.Data.DataRowCollection>object.</xref:System.Data.DataRowCollection> Delete wijzigt de status van de verzameling.       Een verwijderde rij kan worden undeleted door aan te roepen <xref:System.Data.DataRow.RejectChanges%2A>.</xref:System.Data.DataRow.RejectChanges%2A>      > [!NOTE] > De <xref:System.Data.DataRow.BeginEdit%2A>methode voor het tijdelijk wordt onderbroken <xref:System.Data.DataTable.RowChanging>gebeurtenissen, maar de delete-bewerking niet.</xref:System.Data.DataTable.RowChanging> </xref:System.Data.DataRow.BeginEdit%2A>"
  example:
  - "The following example creates a simple <xref:System.Data.DataTable> with two columns and ten rows. After deleting several <xref:System.Data.DataRow> items with the Delete method, one of the rows is undeleted by invoking <xref:System.Data.DataRow.RejectChanges%2A>.  \n  \n [!code-vb[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.de_1.vb)]\n [!code-cs[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/csharp/m-system.data.datarow.de_1.cs)]"
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.Data.DataRow.Delete*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "De <xref href=&quot;System.Data.DataRow&quot;> </xref> al is verwijderd."
  platform:
  - net462
- uid: System.Data.DataRow.EndEdit
  id: EndEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: EndEdit()
  nameWithType: DataRow.EndEdit()
  fullName: System.Data.DataRow.EndEdit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "De bewerking die plaatsvinden op de rij wordt beÃ«indigd."
  remarks: "Als u de eigenschap instelt, een uitzondering wordt gegenereerd als een uitzondering optreedt de <xref:System.Data.DataTable.RowChanging>gebeurtenis.</xref:System.Data.DataTable.RowChanging>"
  example:
  - "The following example uses the EndEdit method to end the edit of a <xref:System.Data.DataRow> value if the validation function returns true.  \n  \n [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.en_1.vb)]\n [!code-cs[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/csharp/m-system.data.datarow.en_1.cs)]"
  syntax:
    content: public void EndEdit ();
    parameters: []
  overload: System.Data.DataRow.EndEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: "De methode is aangeroepen in de <xref href=&quot;System.Data.DataTable.RowChanging&quot;> </xref> gebeurtenis."
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: "De bewerking heeft een beperking overschreden."
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "De rij hoort bij de tabel en de bewerking heeft geprobeerd de waarde van een alleen-lezen-kolom te wijzigen."
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "De bewerking heeft geprobeerd een null-waarde in een kolom plaatsen waar <xref:System.Data.DataColumn.AllowDBNull*>is ingesteld op false.</xref:System.Data.DataColumn.AllowDBNull*>"
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  id: GetChildRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(DataRelation)
  nameWithType: DataRow.GetChildRows(DataRelation)
  fullName: System.Data.DataRow.GetChildRows(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald van de onderliggende rijen van deze <xref href=&quot;System.Data.DataRow&quot;> </xref> met behulp van de opgegeven <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: "De <xref:System.Data.DataTable>bevat ook een verzameling van <xref:System.Data.DataRelation>objecten die wordt geretourneerd door de <xref:System.Data.DataTable.ChildRelations%2A>eigenschap.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetChildRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-cs[Classic WebData DataRow.GetChildRows2 Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_8_1.cs)]\n [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_8_1.vb)]"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    return:
      type: System.Data.DataRow[]
      description: "Een matrix van <xref href=&quot;System.Data.DataRow&quot;> </xref> objecten of een matrix van lengte nul."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De relatie en rij horen niet bij dezelfde tabel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De relatie is de <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "De rij behoort niet tot de tabel."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "De rij heeft geen deze versie van gegevens."
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.String)
  id: GetChildRows(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(String)
  nameWithType: DataRow.GetChildRows(String)
  fullName: System.Data.DataRow.GetChildRows(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald van de onderliggende rijen van een <xref href=&quot;System.Data.DataRow&quot;> </xref> met behulp van de opgegeven <xref:System.Data.DataRelation.RelationName*>van een <xref href=&quot;System.Data.DataRelation&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "De <xref:System.Data.DataTable>bevat ook een verzameling van <xref:System.Data.DataRelation>objecten die wordt geretourneerd door de <xref:System.Data.DataTable.ChildRelations%2A>eigenschap.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "De <xref:System.Data.DataRelation.RelationName*>van de <xref href=&quot;System.Data.DataRelation&quot;> </xref> te gebruiken.</xref:System.Data.DataRelation.RelationName*>"
    return:
      type: System.Data.DataRow[]
      description: "Een matrix van <xref href=&quot;System.Data.DataRow&quot;> </xref> objecten of een matrix van lengte nul."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De relatie en rij horen niet bij dezelfde tabel."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "De rij behoort niet tot de tabel."
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetChildRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(DataRelation,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald van de onderliggende rijen van een <xref href=&quot;System.Data.DataRow&quot;> </xref> met behulp van de opgegeven <xref href=&quot;System.Data.DataRelation&quot;> </xref>, en <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  remarks: "De <xref:System.Data.DataTable>bevat ook een verzameling van <xref:System.Data.DataRelation>objecten die wordt geretourneerd door de <xref:System.Data.DataTable.ChildRelations%2A>eigenschap.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Gebruik de <xref:System.Data.DataRow.HasVersion%2A>eigenschap om te bepalen of de <xref:System.Data.DataRowVersion>dat u wilt dat bestaat.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>       Als <xref:System.Data.DataRowVersion>is opgegeven, wordt de versie die wordt gebruikt afhankelijk van de <xref:System.Data.DataRow.RowState%2A>van de rij waarop `GetChildRows` wordt aangeroepen.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRowVersion> Als de rij waarop `GetChildRows` wordt opgeroepen heeft een `RowState` van `Modified`, `New`, of `Unchanged`, wordt de <xref:System.Data.DataRowVersion>versie van de rij wordt gebruikt voor het ophalen van gerelateerde onderliggende rijen met overeenkomende waarden in de versies van hun huidige.</xref:System.Data.DataRowVersion> Als de rij waarop `GetChildRows` wordt opgeroepen heeft een `RowState` van `Deleted`, wordt de <xref:System.Data.DataRowVersion>versie van de rij wordt gebruikt voor het ophalen van gerelateerde onderliggende rijen met overeenkomende waarden in de oorspronkelijke versie.</xref:System.Data.DataRowVersion>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetChildRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column with the specified version in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/add/codesnippet/visualbasic/47f0f4a3-cc08-456d-98cc-_1.vb)]\n [!code-cs[Classic WebData DataRow.GetChildRows3 Example#1](~/add/codesnippet/csharp/47f0f4a3-cc08-456d-98cc-_1.cs)]"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    - id: version
      type: System.Data.DataRowVersion
      description: "Een van de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> waarden opgeven van de versie van de gegevens op te halen. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Data.DataRow[]
      description: "Een matrix van <xref href=&quot;System.Data.DataRow&quot;> </xref> objecten."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De relatie en rij horen niet bij dezelfde tabel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "De rij behoort niet tot de tabel."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "De rij heeft niet de gevraagde <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  id: GetChildRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(String,DataRowVersion)
  nameWithType: DataRow.GetChildRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(String,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald van de onderliggende rijen van een <xref href=&quot;System.Data.DataRow&quot;> </xref> met behulp van de opgegeven <xref:System.Data.DataRelation.RelationName*>van een <xref href=&quot;System.Data.DataRelation&quot;> </xref>, en <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "De <xref:System.Data.DataTable>bevat ook een verzameling van <xref:System.Data.DataRelation>objecten die wordt geretourneerd door de <xref:System.Data.DataTable.ChildRelations%2A>eigenschap.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Gebruik de <xref:System.Data.DataRow.HasVersion%2A>eigenschap om te bepalen of de <xref:System.Data.DataRowVersion>dat u wilt dat bestaat.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>       Als <xref:System.Data.DataRowVersion>is opgegeven, wordt de versie die wordt gebruikt afhankelijk van de <xref:System.Data.DataRow.RowState%2A>van de rij waarop `GetChildRows` wordt aangeroepen.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRowVersion> Als de rij waarop `GetChildRows` wordt opgeroepen heeft een `RowState` van `Modified`, `New`, of `Unchanged`, wordt de <xref:System.Data.DataRowVersion>versie van de rij wordt gebruikt voor het ophalen van gerelateerde onderliggende rijen met overeenkomende waarden in de versies van hun huidige.</xref:System.Data.DataRowVersion> Als de rij waarop `GetChildRows` wordt opgeroepen heeft een `RowState` van `Deleted`, wordt de <xref:System.Data.DataRowVersion>versie van de rij wordt gebruikt voor het ophalen van gerelateerde onderliggende rijen met overeenkomende waarden in de oorspronkelijke versie.</xref:System.Data.DataRowVersion>"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: "De <xref:System.Data.DataRelation.RelationName*>van de <xref href=&quot;System.Data.DataRelation&quot;> </xref> te gebruiken.</xref:System.Data.DataRelation.RelationName*>"
    - id: version
      type: System.Data.DataRowVersion
      description: "Een van de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> waarden opgeven van de versie van de gegevens op te halen. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Data.DataRow[]
      description: "Een matrix van <xref href=&quot;System.Data.DataRow&quot;> </xref> objecten of een matrix van lengte nul."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De relatie en rij horen niet bij dezelfde tabel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "De rij behoort niet tot de tabel."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "De rij heeft niet de gevraagde <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  id: GetColumnError(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(DataColumn)
  nameWithType: DataRow.GetColumnError(DataColumn)
  fullName: System.Data.DataRow.GetColumnError(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "De beschrijving van de opgegeven opgehaald <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "Gebruik de <xref:System.Data.DataRow.SetColumnError%2A>methode kolom fouten instellen.</xref:System.Data.DataRow.SetColumnError%2A>       Om te bepalen of er fouten voor de kolommenverzameling zijn, gebruikt de <xref:System.Data.DataRow.HasErrors%2A>methode.</xref:System.Data.DataRow.HasErrors%2A> Daarom kunt u de <xref:System.Data.DataRow.GetColumnsInError%2A>methode voor het ophalen van de kolommen met fouten.</xref:System.Data.DataRow.GetColumnsInError%2A> U kunt ook de <xref:System.Data.DataTable.GetErrors%2A>methode van de <xref:System.Data.DataTable>retourneert alle rijen met fouten.</xref:System.Data.DataTable> </xref:System.Data.DataTable.GetErrors%2A>       Schakel alle fouten voor de columns-verzameling, gebruiken de <xref:System.Data.DataRow.ClearErrors%2A>methode.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_1_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_1_1.vb)]"
  syntax:
    content: public string GetColumnError (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
    return:
      type: System.String
      description: "De tekst van de beschrijving van de fout."
  overload: System.Data.DataRow.GetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnError(System.Int32)
  id: GetColumnError(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(Int32)
  nameWithType: DataRow.GetColumnError(Int32)
  fullName: System.Data.DataRow.GetColumnError(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt u de beschrijving voor de kolom die is opgegeven door index."
  remarks: "Gebruik de <xref:System.Data.DataRow.SetColumnError%2A>methode kolom fouten instellen.</xref:System.Data.DataRow.SetColumnError%2A>       Om te bepalen of er fouten voor de kolommenverzameling zijn, gebruikt de <xref:System.Data.DataRow.HasErrors%2A>methode.</xref:System.Data.DataRow.HasErrors%2A> Daarom kunt u de <xref:System.Data.DataRow.GetColumnsInError%2A>methode voor het ophalen van de kolommen met fouten.</xref:System.Data.DataRow.GetColumnsInError%2A>       Schakel alle fouten voor de columns-verzameling, gebruiken de <xref:System.Data.DataRow.ClearErrors%2A>methode.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_6_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_6_1.vb)]"
  syntax:
    content: public string GetColumnError (int columnIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "De op nul gebaseerde index van de kolom."
    return:
      type: System.String
      description: "De tekst van de beschrijving van de fout."
  overload: System.Data.DataRow.GetColumnError*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De <code> columnIndex </code> argument valt buiten het bereik."
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnError(System.String)
  id: GetColumnError(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(String)
  nameWithType: DataRow.GetColumnError(String)
  fullName: System.Data.DataRow.GetColumnError(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "De foutbeschrijving van een kolom, die is opgegeven met de naam opgehaald."
  remarks: "Gebruik de <xref:System.Data.DataRow.SetColumnError%2A>methode kolom fouten instellen.</xref:System.Data.DataRow.SetColumnError%2A>       Om te bepalen of er fouten voor de kolommenverzameling zijn, gebruikt de <xref:System.Data.DataRow.HasErrors%2A>methode.</xref:System.Data.DataRow.HasErrors%2A> Daarom kunt u de <xref:System.Data.DataRow.GetColumnsInError%2A>methode voor het ophalen van de kolommen met fouten.</xref:System.Data.DataRow.GetColumnsInError%2A>       Schakel alle fouten voor de columns-verzameling, gebruiken de <xref:System.Data.DataRow.ClearErrors%2A>methode.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_0_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_0_1.vb)]"
  syntax:
    content: public string GetColumnError (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "De naam van de kolom."
    return:
      type: System.String
      description: "De tekst van de beschrijving van de fout."
  overload: System.Data.DataRow.GetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnsInError
  id: GetColumnsInError
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnsInError()
  nameWithType: DataRow.GetColumnsInError()
  fullName: System.Data.DataRow.GetColumnsInError()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt u een matrix van kolommen die fouten bevatten."
  remarks: "De GetColumnsInError kunt u Verminder het aantal <xref:System.Data.DataColumn>objecten die moeten worden verwerkt op fouten door alleen de kolommen die met een fout geretourneerd.</xref:System.Data.DataColumn> Fouten kunnen worden ingesteld op afzonderlijke kolommen met de <xref:System.Data.DataRow.SetColumnError%2A>methode.</xref:System.Data.DataRow.SetColumnError%2A> Om het aantal verwerking te verminderen, onderzoekt de <xref:System.Data.DataRow.HasErrors%2A>eigenschap van de <xref:System.Data.DataRow>klasse om te bepalen of een <xref:System.Data.DataRow>heeft fouten voordat GetColumnsInError wordt aangeroepen.</xref:System.Data.DataRow> </xref:System.Data.DataRow> </xref:System.Data.DataRow.HasErrors%2A>       Gebruik de <xref:System.Data.DataRow.ClearErrors%2A>methode om te wissen van alle fouten op de rij.</xref:System.Data.DataRow.ClearErrors%2A> Dit omvat de <xref:System.Data.DataRow.RowError%2A>.</xref:System.Data.DataRow.RowError%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.HasErrors%2A> to look for errors. If the row has errors, the GetColumnsInError method returns the array of columns with errors that can then be resolved. The <xref:System.Data.DataRow.ClearErrors%2A> method is then called to clear all errors.  \n  \n [!code-cs[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_5_1.cs)]\n [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_5_1.vb)]"
  syntax:
    content: public System.Data.DataColumn[] GetColumnsInError ();
    parameters: []
    return:
      type: System.Data.DataColumn[]
      description: "Een matrix van <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten die fouten bevatten."
  overload: System.Data.DataRow.GetColumnsInError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  id: GetParentRow(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(DataRelation)
  nameWithType: DataRow.GetParentRow(DataRelation)
  fullName: System.Data.DataRow.GetParentRow(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald van de bovenliggende rij van een <xref href=&quot;System.Data.DataRow&quot;> </xref> met behulp van de opgegeven <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: "In een <xref:System.Data.DataSet>, de verzameling van alle bovenliggende <xref:System.Data.DataRelation>objecten voor de gegevensset wordt geretourneerd door de <xref:System.Data.DataRow.GetParentRows%2A>methode.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       De <xref:System.Data.DataTable>bevat ook een verzameling van <xref:System.Data.DataRelation>objecten, die wordt geretourneerd door de <xref:System.Data.DataTable.ParentRelations%2A>eigenschap.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-cs[Classic WebData DataRow.GetParentRow2 Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_3_1.cs)]\n [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_3_1.vb)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    return:
      type: System.Data.DataRow
      description: "De bovenliggende <xref href=&quot;System.Data.DataRow&quot;> </xref> van de huidige rij."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <code> relation </code> behoort niet tot de <xref href=&quot;System.Data.DataTable&quot;> </xref>.       The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "Een onderliggende rij heeft meerdere bovenliggende elementen."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Deze rij hoort niet bij de onderliggende tabel van de <xref href=&quot;System.Data.DataRelation&quot;> </xref> object."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "De rij behoort niet tot een tabel."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.String)
  id: GetParentRow(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(String)
  nameWithType: DataRow.GetParentRow(String)
  fullName: System.Data.DataRow.GetParentRow(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald van de bovenliggende rij van een <xref href=&quot;System.Data.DataRow&quot;> </xref> met behulp van de opgegeven <xref:System.Data.DataRelation.RelationName*>van een <xref href=&quot;System.Data.DataRelation&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "In een <xref:System.Data.DataSet>, de verzameling van alle bovenliggende <xref:System.Data.DataRelation>objecten voor de gegevensset wordt geretourneerd door de <xref:System.Data.DataRow.GetParentRows%2A>methode.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       De <xref:System.Data.DataTable>bevat ook een verzameling van <xref:System.Data.DataRelation>objecten, die wordt geretourneerd door de <xref:System.Data.DataTable.ParentRelations%2A>eigenschap.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the GetParentRow to print a value from each parent row of each <xref:System.Data.DataRow> in a <xref:System.Data.DataTable>.  \n  \n [!code-cs[Classic WebData DataRow.GetParentRow Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_4_1.cs)]\n [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_4_1.vb)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    return:
      type: System.Data.DataRow
      description: "De bovenliggende <xref href=&quot;System.Data.DataRow&quot;> </xref> van de huidige rij."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De relatie en rij horen niet bij dezelfde tabel."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "Een onderliggende rij heeft meerdere bovenliggende elementen."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "De rij behoort niet tot de tabel."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRow(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(DataRelation,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald van de bovenliggende rij van een <xref href=&quot;System.Data.DataRow&quot;> </xref> met behulp van de opgegeven <xref href=&quot;System.Data.DataRelation&quot;> </xref>, en <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  remarks: "In een <xref:System.Data.DataSet>, de verzameling van alle bovenliggende <xref:System.Data.DataRelation>objecten voor de gegevensset wordt geretourneerd door de <xref:System.Data.DataRow.GetParentRows%2A>methode.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       De <xref:System.Data.DataTable>bevat ook een verzameling van <xref:System.Data.DataRelation>objecten, die wordt geretourneerd door de <xref:System.Data.DataTable.ParentRelations%2A>eigenschap.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Gebruik de <xref:System.Data.DataRow.HasVersion%2A>eigenschap om te bepalen of de <xref:System.Data.DataRowVersion>dat u wilt dat bestaat.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/add/codesnippet/visualbasic/a16d1012-4e05-4bd8-9275-_1.vb)]\n [!code-cs[Classic WebData DataRow.GetParentRow3 Example#1](~/add/codesnippet/csharp/a16d1012-4e05-4bd8-9275-_1.cs)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    - id: version
      type: System.Data.DataRowVersion
      description: "Een van de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> waarden opgeven van de versie van de gegevens op te halen."
    return:
      type: System.Data.DataRow
      description: "De bovenliggende <xref href=&quot;System.Data.DataRow&quot;> </xref> van de huidige rij."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       De <code> relation </code> behoort niet tot deze tabelrelaties bovenliggende."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "Een onderliggende rij heeft meerdere bovenliggende elementen."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "De relatie onderliggende tabel is niet in de tabel die de rij hoort bij."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "De rij behoort niet tot een tabel."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "De rij heeft geen deze versie van gegevens."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  id: GetParentRow(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(String,DataRowVersion)
  nameWithType: DataRow.GetParentRow(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(String,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald van de bovenliggende rij van een <xref href=&quot;System.Data.DataRow&quot;> </xref> met behulp van de opgegeven <xref:System.Data.DataRelation.RelationName*>van een <xref href=&quot;System.Data.DataRelation&quot;> </xref>, en <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "In een <xref:System.Data.DataSet>, de verzameling van alle bovenliggende <xref:System.Data.DataRelation>objecten voor de gegevensset wordt geretourneerd door de <xref:System.Data.DataRow.GetParentRows%2A>methode.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       De <xref:System.Data.DataTable>bevat ook een verzameling van <xref:System.Data.DataRelation>objecten, die wordt geretourneerd door de <xref:System.Data.DataTable.ParentRelations%2A>eigenschap.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Gebruik de <xref:System.Data.DataRow.HasVersion%2A>eigenschap om te bepalen of de <xref:System.Data.DataRowVersion>dat u wilt dat bestaat.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to print a value from each parent row of each <xref:System.Data.DataRow> in a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_7_1.vb)]\n [!code-cs[Classic WebData DataRow.GetParentRow1 Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_7_1.cs)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    - id: version
      type: System.Data.DataRowVersion
      description: "Een van de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> waarden."
    return:
      type: System.Data.DataRow
      description: "De bovenliggende <xref href=&quot;System.Data.DataRow&quot;> </xref> van de huidige rij."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De relatie en rij horen niet bij dezelfde tabel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "Een onderliggende rij heeft meerdere bovenliggende elementen."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "De rij behoort niet tot de tabel."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "De rij heeft niet de gevraagde <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  id: GetParentRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(DataRelation)
  nameWithType: DataRow.GetParentRows(DataRelation)
  fullName: System.Data.DataRow.GetParentRows(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald van de bovenliggende rijen van een <xref href=&quot;System.Data.DataRow&quot;> </xref> met behulp van de opgegeven <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: "In een <xref:System.Data.DataSet>, de verzameling van alle bovenliggende <xref:System.Data.DataRelation>objecten voor de gegevensset wordt geretourneerd door de <xref:System.Data.DataRow.GetParentRows%2A>methode.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       De <xref:System.Data.DataTable>bevat ook een verzameling van <xref:System.Data.DataRelation>objecten, die wordt geretourneerd door de <xref:System.Data.DataTable.ParentRelations%2A>eigenschap.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_2_1.vb)]"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    return:
      type: System.Data.DataRow[]
      description: "Een matrix van <xref href=&quot;System.Data.DataRow&quot;> </xref> objecten of een matrix van lengte nul."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <xref href=&quot;System.Data.DataRelation&quot;> </xref> behoort niet tot deze rij <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "De relatie onderliggende tabel is niet in de tabel die de rij hoort bij."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "De rij hoort niet bij een <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.String)
  id: GetParentRows(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(String)
  nameWithType: DataRow.GetParentRows(String)
  fullName: System.Data.DataRow.GetParentRows(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald van de bovenliggende rijen van een <xref href=&quot;System.Data.DataRow&quot;> </xref> met behulp van de opgegeven <xref:System.Data.DataRelation.RelationName*>van een <xref href=&quot;System.Data.DataRelation&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "In een <xref:System.Data.DataSet>, de verzameling van alle bovenliggende <xref:System.Data.DataRelation>objecten voor de gegevensset wordt geretourneerd door de methode GetParentRows.</xref:System.Data.DataRelation> </xref:System.Data.DataSet>       De <xref:System.Data.DataTable>bevat ook een verzameling van <xref:System.Data.DataRelation>objecten, die wordt geretourneerd door de <xref:System.Data.DataTable.ParentRelations%2A>eigenschap.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    return:
      type: System.Data.DataRow[]
      description: "Een matrix van <xref href=&quot;System.Data.DataRow&quot;> </xref> objecten of een matrix van lengte nul."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De relatie en rij horen niet bij dezelfde tabel."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "De rij behoort niet tot de tabel."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(DataRelation,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald van de bovenliggende rijen van een <xref href=&quot;System.Data.DataRow&quot;> </xref> met behulp van de opgegeven <xref href=&quot;System.Data.DataRelation&quot;> </xref>, en <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  remarks: "In een <xref:System.Data.DataSet>, de verzameling van alle bovenliggende <xref:System.Data.DataRelation>objecten voor de gegevensset wordt geretourneerd door de <xref:System.Data.DataRow.GetParentRows%2A>methode.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       De <xref:System.Data.DataTable>bevat ook een verzameling van <xref:System.Data.DataRelation>objecten, die wordt geretourneerd door de <xref:System.Data.DataTable.ParentRelations%2A>eigenschap.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Gebruik de <xref:System.Data.DataRow.HasVersion%2A>eigenschap om te bepalen of de <xref:System.Data.DataRowVersion>dat u wilt dat bestaat.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/add/codesnippet/visualbasic/14f3e3ca-84f4-434d-94fa-_1.vb)]"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    - id: version
      type: System.Data.DataRowVersion
      description: "Een van de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> waarden opgeven van de versie van de gegevens op te halen."
    return:
      type: System.Data.DataRow[]
      description: "Een matrix van <xref href=&quot;System.Data.DataRow&quot;> </xref> objecten of een matrix van lengte nul."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <xref href=&quot;System.Data.DataRelation&quot;> </xref> behoort niet tot deze rij <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "De relatie onderliggende tabel is niet in de tabel die de rij hoort bij."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "De rij hoort niet bij een <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "De rij heeft niet de gevraagde <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  id: GetParentRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(String,DataRowVersion)
  nameWithType: DataRow.GetParentRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(String,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald van de bovenliggende rijen van een <xref href=&quot;System.Data.DataRow&quot;> </xref> met behulp van de opgegeven <xref:System.Data.DataRelation.RelationName*>van een <xref href=&quot;System.Data.DataRelation&quot;> </xref>, en <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "In een <xref:System.Data.DataSet>, de verzameling van alle bovenliggende <xref:System.Data.DataRelation>objecten voor de gegevensset wordt geretourneerd door de <xref:System.Data.DataRow.GetParentRows%2A>methode.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       De <xref:System.Data.DataTable>bevat ook een verzameling van <xref:System.Data.DataRelation>objecten, die wordt geretourneerd door de <xref:System.Data.DataTable.ParentRelations%2A>eigenschap.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Gebruik de <xref:System.Data.DataRow.HasVersion%2A>eigenschap om te bepalen of de <xref:System.Data.DataRowVersion>dat u wilt dat bestaat.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    - id: version
      type: System.Data.DataRowVersion
      description: "Een van de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> waarden opgeven van de versie van de gegevens op te halen. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Data.DataRow[]
      description: "Een matrix van <xref href=&quot;System.Data.DataRow&quot;> </xref> objecten of een matrix van lengte nul."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De relatie en rij horen niet bij dezelfde tabel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "De rij behoort niet tot de tabel."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "De rij heeft niet de gevraagde <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.HasErrors
  id: HasErrors
  parent: System.Data.DataRow
  langs:
  - csharp
  name: HasErrors
  nameWithType: DataRow.HasErrors
  fullName: System.Data.DataRow.HasErrors
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Haalt een waarde die aangeeft of er fouten zijn opgetreden in een rij."
  remarks: "`HasErrors`retourneert `true` eventuele <xref:System.Data.DataColumn>object in de rij bevat een fout optreedt, of als de <xref:System.Data.DataRow.RowError%2A>eigenschap van de <xref:System.Data.DataRow>is niet een lege tekenreeks.</xref:System.Data.DataRow> </xref:System.Data.DataRow.RowError%2A> </xref:System.Data.DataColumn>       Bij het valideren van gegevens, kunt u een fout instellen op elke kolom in een rij. Een dergelijke kolom, wanneer weergegeven in de <xref:System.Windows.Forms.DataGrid?displayProperty=fullName>bepalen, is gemarkeerd met een rood uitroepteken om aan te geven aan de gebruiker dat de kolom fout is.</xref:System.Windows.Forms.DataGrid?displayProperty=fullName>       Gebruik <xref:System.Data.DataRow.SetColumnError%2A>om in te stellen van een fout op een willekeurige kolom.</xref:System.Data.DataRow.SetColumnError%2A>       Gebruik de <xref:System.Data.DataRow.GetColumnError%2A>en `GetColumnsInError` methoden voor kolommen met fouten geretourneerd.</xref:System.Data.DataRow.GetColumnError%2A>       De <xref:System.Data.DataRow.ClearErrors%2A>methode wist alle fouten voor de rij.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example uses the HasErrors to look for errors. If the row has errors, the <xref:System.Data.DataRow.GetColumnsInError%2A> method returns the array of columns with errors that can then be resolved. The <xref:System.Data.DataRow.ClearErrors%2A> method is then called to clear all errors.  \n  \n [!code-cs[Classic WebData DataRow.HasErrors Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ha_1.cs)]\n [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ha_1.vb)]"
  syntax:
    content: public bool HasErrors { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de rij een fout bevat. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.HasErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  id: HasVersion(System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: HasVersion(DataRowVersion)
  nameWithType: DataRow.HasVersion(DataRowVersion)
  fullName: System.Data.DataRow.HasVersion(DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Haalt een waarde die aangeeft of een opgegeven versie bestaat."
  remarks: "Zie de <xref:System.Data.DataRow.BeginEdit%2A>methode voor meer informatie.</xref:System.Data.DataRow.BeginEdit%2A>"
  example:
  - "The following example uses the HasVersion method to determine whether the current value of a column and the proposed value are the same. If so, the edit is canceled. Otherwise, the <xref:System.Data.DataRow.AcceptChanges%2A> method is called to end the edit.  \n  \n [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ha_1.vb)]"
  syntax:
    content: public bool HasVersion (System.Data.DataRowVersion version);
    parameters:
    - id: version
      type: System.Data.DataRowVersion
      description: "Een van de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> waarden die geeft u de rijversie."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de versie bestaat; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.HasVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn)
  id: IsNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(DataColumn)
  nameWithType: DataRow.IsNull(DataColumn)
  fullName: System.Data.DataRow.IsNull(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt een waarde die aangeeft of de opgegeven <xref href=&quot;System.Data.DataColumn&quot;> </xref> bevat een null-waarde."
  remarks: ''
  example:
  - "The following example prints each column of each row in each table of a <xref:System.Data.DataSet>. If the row is set to a null value, the value is not printed.  \n  \n [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.is_2_1.vb)]"
  syntax:
    content: public bool IsNull (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de kolom een null-waarde bevat. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.Int32)
  id: IsNull(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(Int32)
  nameWithType: DataRow.IsNull(Int32)
  fullName: System.Data.DataRow.IsNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt een waarde die aangeeft of de kolom in de opgegeven index een null-waarde bevat."
  remarks: ''
  example:
  - "The following example changes the value of a column to a null value, and then uses the IsNull method to determine whether the value is null.  \n  \n [!code-vb[Classic WebData DataRow.IsNull Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.is_1_1.vb)]"
  syntax:
    content: public bool IsNull (int columnIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "De op nul gebaseerde index van de kolom."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de kolom een null-waarde bevat. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.String)
  id: IsNull(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(String)
  nameWithType: DataRow.IsNull(String)
  fullName: System.Data.DataRow.IsNull(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt een waarde die aangeeft of de kolom met de naam een null-waarde bevat."
  remarks: ''
  example:
  - "The following example changes the value of a column to a null value, and then uses the <xref:System.Data.DataRow.IsNull%2A> method to determine whether the value is null.  \n  \n [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.is_0_1.vb)]"
  syntax:
    content: public bool IsNull (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "De naam van de kolom."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de kolom een null-waarde bevat. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  id: IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(DataColumn,DataRowVersion)
  nameWithType: DataRow.IsNull(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.IsNull(DataColumn,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt een waarde die aangeeft of de opgegeven <xref href=&quot;System.Data.DataColumn&quot;> </xref> en <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> bevat een null-waarde."
  syntax:
    content: public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
    - id: version
      type: System.Data.DataRowVersion
      description: "Een van de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> waarden die geeft u de rijversie. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de kolom een null-waarde bevat. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Data.DataColumn)
  id: Item(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(DataColumn)
  nameWithType: DataRow.Item(DataColumn)
  fullName: System.Data.DataRow.Item(DataColumn)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald of ingesteld van de gegevens die zijn opgeslagen in de opgegeven <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "Als u de eigenschap instelt, een uitzondering wordt gegenereerd als een uitzondering optreedt de <xref:System.Data.DataTable.ColumnChanging>gebeurtenis.</xref:System.Data.DataTable.ColumnChanging>       Als dit een onmiddellijke bewerken, Zie <xref:System.Data.DataRow.EndEdit%2A>voor de uitzonderingen die kunnen worden gegenereerd.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following examples demonstrate the use of the <xref:System.Data.DataRow.Item%2A> property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control. The second sets a value passed as an argument to the method.  \n  \n [!code-vb[Classic WebData DataRow.this2 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_3_1.vb)]"
  syntax:
    content: public object this[System.Data.DataColumn column] { get; set; }
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "Een <xref href=&quot;System.Data.DataColumn&quot;> </xref> die de gegevens bevat."
    return:
      type: System.Object
      description: "Een <xref:System.Object>die de gegevens bevat.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De kolom behoort niet tot deze tabel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>column</code> is null."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Een poging gedaan een waarde instellen in een verwijderde rij."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "De gegevenstypen van de waarde en de kolom komen niet overeen."
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataRow.Item(Int32)
  fullName: System.Data.DataRow.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald of ingesteld van de gegevens die zijn opgeslagen in de kolom die is opgegeven door index."
  remarks: "Als u de eigenschap instelt, een uitzondering wordt gegenereerd als een uitzondering optreedt de <xref:System.Data.DataTable.ColumnChanging>gebeurtenis.</xref:System.Data.DataTable.ColumnChanging>       Als dit een bewerking, Zie <xref:System.Data.DataRow.EndEdit%2A>voor de uitzonderingen die kunnen worden gegenereerd.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following examples demonstrate the use of the Item property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-vb[Classic WebData DataRow.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_0_1.vb)]\n [!code-cs[Classic WebData DataRow.this Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_0_1.cs)]"
  syntax:
    content: public object this[int columnIndex] { get; set; }
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "De op nul gebaseerde index van de kolom."
    return:
      type: System.Object
      description: "Een <xref:System.Object>die de gegevens bevat.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Deze gebeurtenis treedt op wanneer u probeert een waarde instellen in een verwijderde rij."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De <code> columnIndex </code> argument valt buiten het bereik."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Deze gebeurtenis treedt op wanneer u de waarde en de nieuwe waarde <xref:System.Type>komt niet overeen met <xref:System.Data.DataColumn.DataType*>.</xref:System.Data.DataColumn.DataType*> </xref:System.Type> instellen"
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataRow.Item(String)
  fullName: System.Data.DataRow.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald of ingesteld van de gegevens die zijn opgeslagen in de kolom met de naam opgegeven."
  remarks: "Als u de eigenschap instelt, een uitzondering wordt gegenereerd als een uitzondering optreedt de <xref:System.Data.DataTable.ColumnChanging>gebeurtenis.</xref:System.Data.DataTable.ColumnChanging>       Als dit een onmiddellijke bewerken, Zie <xref:System.Data.DataRow.EndEdit%2A>voor de uitzonderingen die kunnen worden gegenereerd.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following examples demonstrate the use of the <xref:System.Data.DataRow.Item%2A> property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control. The second sets a value passed as an argument to the method.  \n  \n [!code-vb[Classic WebData DataRow.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_2_1.vb)]\n [!code-cs[Classic WebData DataRow.this1 Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_2_1.cs)]"
  syntax:
    content: public object this[string columnName] { get; set; }
    parameters:
    - id: columnName
      type: System.String
      description: "De naam van de kolom."
    return:
      type: System.Object
      description: "Een <xref:System.Object>die de gegevens bevat.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De kolom die is opgegeven door <code> columnName </code> kan niet worden gevonden."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Deze gebeurtenis treedt op wanneer u probeert een waarde instellen in een verwijderde rij."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Deze gebeurtenis treedt op wanneer u een waarde en de bijbehorende <xref:System.Type>komt niet overeen met <xref:System.Data.DataColumn.DataType*>.</xref:System.Data.DataColumn.DataType*> </xref:System.Type> instellen"
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "Deze gebeurtenis treedt op wanneer u probeert een null-waarde invoegen in een kolom waarbij <xref:System.Data.DataColumn.AllowDBNull*>is ingesteld op <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.DataColumn.AllowDBNull*>"
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  id: Item(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(DataColumn,DataRowVersion)
  nameWithType: DataRow.Item(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.Item(DataColumn,DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "De opgegeven versie van de gegevens die zijn opgeslagen in de opgegeven opgehaald <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "De `version` mag geen verward met de <xref:System.Data.DataRow.RowState%2A>eigenschap.</xref:System.Data.DataRow.RowState%2A> De `version` argument beschrijft de status van de gegevens die is opgenomen in de kolom ten opzichte van de oorspronkelijke waarde van de kolom.       Als u de eigenschap instelt, een uitzondering wordt gegenereerd als een uitzondering optreedt de <xref:System.Data.DataTable.ColumnChanging>gebeurtenis.</xref:System.Data.DataTable.ColumnChanging>       Als dit een onmiddellijke bewerken, Zie <xref:System.Data.DataRow.EndEdit%2A>voor de uitzonderingen die kunnen worden gegenereerd.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following example gets the current value of a clicked cell in the <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-cs[Classic WebData DataRow.this5 Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_6_1.cs)]\n [!code-vb[Classic WebData DataRow.this5 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_6_1.vb)]"
  syntax:
    content: public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "Een <xref href=&quot;System.Data.DataColumn&quot;> </xref> die informatie over de kolom bevat."
    - id: version
      type: System.Data.DataRowVersion
      description: "Een van de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> waarden die de rij-versie die u wilt. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "Een <xref:System.Object>die de gegevens bevat.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De kolom behoort niet tot de tabel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <code> column </code> argument bevat null."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "De rij heeft geen deze versie van gegevens."
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  id: Item(System.Int32,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(Int32,DataRowVersion)
  nameWithType: DataRow.Item(Int32,DataRowVersion)
  fullName: System.Data.DataRow.Item(Int32,DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt u de gegevens die zijn opgeslagen in de kolom, opgegeven door index en de versie van de gegevens moeten worden opgehaald."
  remarks: "U kunt alleen maken of bijwerken van een rij na het aanroepen van de <xref:System.Data.DataRow.BeginEdit%2A>methode; op deze manier <xref:System.Data.DataRow.EndEdit%2A>methode moet worden aangeroepen om door te voeren de bewerken</xref:System.Data.DataRow.EndEdit%2A> </xref:System.Data.DataRow.BeginEdit%2A> Nadat u de <xref:System.Data.DataRow.EndEdit%2A>methode, en voordat u contact opneemt met de <xref:System.Data.DataRow.AcceptChanges%2A>methode, interne weergaven van de oorspronkelijke en nieuwe voorgestelde waarden worden opgeslagen.</xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.EndEdit%2A> Daarom totdat u de <xref:System.Data.DataRow.AcceptChanges%2A>, kunt u de `version` argument om op te geven welke versie van de waarde van een kolom u nodig hebt, ofwel de `DataRowVersion.Original` of `DataRowVersion.Proposed`.</xref:System.Data.DataRow.AcceptChanges%2A> Echter, zodra u aanroepen de <xref:System.Data.DataRow.AcceptChanges%2A>methode, de versie van de kolom wordt teruggezet naar `DataRowVersion.Original`.</xref:System.Data.DataRow.AcceptChanges%2A> Als de rij nieuw is, kunt u ook doorgeven `DataRowVersion.Default` voor de parameter voor het ophalen van de standaardwaarde van de kolom. Bij het doorgeven van `DataRowVersion.Current`, de eigenschap retourneert de huidige waarde, ongeacht de versie ervan mogelijk.      > [!NOTE] > De <xref:System.Data.DataRow.BeginEdit%2A>methode impliciet wordt aangeroepen wanneer u de waarde van een gegevensgebonden besturingselement wijzigen of wanneer een <xref:System.Data.DataRow>object is toegevoegd aan de <xref:System.Data.DataRowCollection>; de <xref:System.Data.DataRow.EndEdit%2A>methode impliciet wordt aangeroepen bij het aanroepen van de volgende methoden: de <xref:System.Data.DataRow.AcceptChanges%2A>methode van de <xref:System.Data.DataRow>object, de <xref:System.Data.DataTable.AcceptChanges%2A>methode van de <xref:System.Data.DataTable>object, of de <xref:System.Data.DataRow.CancelEdit%2A>methode.</xref:System.Data.DataRow.CancelEdit%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataRow> </xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.EndEdit%2A> </xref:System.Data.DataRowCollection> </xref:System.Data.DataRow> </xref:System.Data.DataRow.BeginEdit%2A>       Daarentegen is de <xref:System.Data.DataRowVersion>opsomming `Current` retourneert de versie van de gegevens na de <xref:System.Data.DataRow.EndEdit%2A>methode is aangeroepen.</xref:System.Data.DataRow.EndEdit%2A> </xref:System.Data.DataRowVersion>       De `version` argument moet niet verwarren met de <xref:System.Data.DataRow.RowState%2A>eigenschap.</xref:System.Data.DataRow.RowState%2A> De `version` argument beschrijft de status van de gegevens die is opgenomen in de kolom ten opzichte van de oorspronkelijke waarde van de kolom. De <xref:System.Data.DataRow.RowState%2A>eigenschap beschrijft de status van de hele rij ten opzichte van de bovenliggende <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataRow.RowState%2A>       Als u de eigenschap instelt, een uitzondering wordt gegenereerd als een uitzondering optreedt de <xref:System.Data.DataTable.ColumnChanging>gebeurtenis.</xref:System.Data.DataTable.ColumnChanging>       Als dit een onmiddellijke bewerken, Zie <xref:System.Data.DataRow.EndEdit%2A>voor de uitzonderingen die kunnen worden gegenereerd.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following example gets the current value of a column through the <xref:System.Data.DataRow.Item%2A> property of the <xref:System.Data.DataRow> object.  \n  \n [!code-vb[Classic WebData DataRow.this3 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_4_1.vb)]"
  syntax:
    content: public object this[int columnIndex, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "De op nul gebaseerde index van de kolom."
    - id: version
      type: System.Data.DataRowVersion
      description: "Een van de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> waarden die de rij-versie die u wilt. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "Een <xref:System.Object>die de gegevens bevat.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De <code> columnIndex </code> argument valt buiten het bereik."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "De gegevenstypen van de waarde en de kolom komen niet overeen."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "De rij heeft geen deze versie van gegevens."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Een poging gedaan een waarde instellen in een verwijderde rij."
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  id: Item(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(String,DataRowVersion)
  nameWithType: DataRow.Item(String,DataRowVersion)
  fullName: System.Data.DataRow.Item(String,DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "De opgegeven versie van de gegevens die zijn opgeslagen in de kolom met de naam opgehaald."
  remarks: "De versie moet niet verwarren met de <xref:System.Data.DataRow.RowState%2A>eigenschap.</xref:System.Data.DataRow.RowState%2A> De `version` argument beschrijft de status van de gegevens die is opgenomen in de kolom ten opzichte van de oorspronkelijke waarde van de kolom. De <xref:System.Data.DataRow.RowState%2A>eigenschap beschrijft de status van de hele rij ten opzichte van de bovenliggende <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataRow.RowState%2A>       Als u de eigenschap instelt, een uitzondering wordt gegenereerd als een uitzondering optreedt de <xref:System.Data.DataTable.ColumnChanging>gebeurtenis.</xref:System.Data.DataTable.ColumnChanging>       Als dit een onmiddellijke bewerken, Zie <xref:System.Data.DataRow.EndEdit%2A>voor de uitzonderingen die kunnen worden gegenereerd.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following example gets the current version of data at a clicked cell of a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-vb[Classic WebData DataRow.this4 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_5_1.vb)]\n [!code-cs[Classic WebData DataRow.this4 Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_5_1.cs)]"
  syntax:
    content: public object this[string columnName, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: columnName
      type: System.String
      description: "De naam van de kolom."
    - id: version
      type: System.Data.DataRowVersion
      description: "Een van de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> waarden die de rij-versie die u wilt. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "Een <xref:System.Object>die de gegevens bevat.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De kolom die is opgegeven door <code> columnName </code> kan niet worden gevonden."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "De gegevenstypen van de waarde en de kolom komen niet overeen."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "De rij heeft geen deze versie van gegevens."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "De rij is verwijderd."
  platform:
  - net462
- uid: System.Data.DataRow.ItemArray
  id: ItemArray
  parent: System.Data.DataRow
  langs:
  - csharp
  name: ItemArray
  nameWithType: DataRow.ItemArray
  fullName: System.Data.DataRow.ItemArray
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald of ingesteld van de waarden voor deze rij via een matrix."
  remarks: "Deze eigenschap kunt u instellen of ophalen van waarden voor deze rij via een matrix. Als u deze eigenschap gebruikt om waarden te stellen, moet de matrix hebben dezelfde grootte en als de kolomverzameling bestellen. Doorgegeven `null` geeft aan dat er geen waarde is opgegeven in de ItemArray.       Gebruikers kunnen genereren uitzonderingen in de <xref:System.Data.DataTable.ColumnChanging>gebeurtenis of de <xref:System.Data.DataTable.RowChanging>gebeurtenis.</xref:System.Data.DataTable.RowChanging> </xref:System.Data.DataTable.ColumnChanging>"
  example:
  - "The following examples show how to get and set values using the ItemArray property.  \n  \n [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_1_1.vb)]\n [!code-cs[Classic WebData DataRow.ItemArray Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_1_1.cs)]"
  syntax:
    content: public object[] ItemArray { get; set; }
    return:
      type: System.Object[]
      description: "Een matrix van het type <xref:System.Object>.</xref:System.Object>"
  overload: System.Data.DataRow.ItemArray*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De matrix is groter dan het aantal kolommen in de tabel."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Een waarde in de matrix komt niet overeen met de <xref:System.Data.DataColumn.DataType*>in de desbetreffende <xref href=&quot;System.Data.DataColumn&quot;> </xref>.</xref:System.Data.DataColumn.DataType*>"
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: "Een bewerking heeft een beperking overschreden."
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "Een bewerking heeft geprobeerd de waarde van een alleen-lezen-kolom te wijzigen."
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "Een bewerking is geprobeerd om een null-waarde in een kolom waarbij <xref:System.Data.DataColumn.AllowDBNull*>van de <xref href=&quot;System.Data.DataColumn&quot;> </xref> -object is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.DataColumn.AllowDBNull*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "De rij is verwijderd."
  platform:
  - net462
- uid: System.Data.DataRow.RejectChanges
  id: RejectChanges
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RejectChanges()
  nameWithType: DataRow.RejectChanges()
  fullName: System.Data.DataRow.RejectChanges()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Alle wijzigingen in de rij sinds weigert <xref:System.Data.DataRow.AcceptChanges*>laatste is aangeroepen.</xref:System.Data.DataRow.AcceptChanges*>"
  remarks: "Wanneer u de methode RejectChanges aanroepen de <xref:System.Data.DataRow.CancelEdit%2A>methode impliciet aangeroepen om de wijzigingen annuleren.</xref:System.Data.DataRow.CancelEdit%2A> Als <xref:System.Data.DataRow.RowState%2A>is verwijderd of gewijzigd, de rij wordt teruggezet naar de vorige waarden en <xref:System.Data.DataRow.RowState%2A>wordt niet gewijzigd.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.RowState%2A> Als de <xref:System.Data.DataRow.RowState%2A>wordt toegevoegd, wordt de rij is verwijderd.</xref:System.Data.DataRow.RowState%2A>"
  example:
  - "The following example creates a simple <xref:System.Data.DataTable> with 2 columns and 10 rows. After several <xref:System.Data.DataRow> items are deleted with the <xref:System.Data.DataRow.Delete%2A> method, one of the rows is undeleted by invoking RejectChanges.  \n  \n [!code-vb[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.re_1.vb)]\n [!code-cs[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/csharp/m-system.data.datarow.re_1.cs)]"
  syntax:
    content: public void RejectChanges ();
    parameters: []
  overload: System.Data.DataRow.RejectChanges*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "De rij behoort niet tot de tabel."
  platform:
  - net462
- uid: System.Data.DataRow.RowError
  id: RowError
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RowError
  nameWithType: DataRow.RowError
  fullName: System.Data.DataRow.RowError
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald of ingesteld van de beschrijving van de aangepaste fout voor een rij."
  remarks: "Maakt gebruik van de <xref:System.Data.DataRow.HasErrors%2A>eigenschap eerst bepalen of een <xref:System.Data.DataRow>bevat fouten.</xref:System.Data.DataRow> </xref:System.Data.DataRow.HasErrors%2A>"
  example:
  - "The following example sets error text for ten rows of a table displayed in a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-cs[Classic WebData DataRow.RowError Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ro_1_1.cs)]\n [!code-vb[Classic WebData DataRow.RowError Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ro_1_1.vb)]"
  syntax:
    content: public string RowError { get; set; }
    return:
      type: System.String
      description: "De tekst met een beschrijving van een fout opgetreden."
  overload: System.Data.DataRow.RowError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.RowState
  id: RowState
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RowState
  nameWithType: DataRow.RowState
  fullName: System.Data.DataRow.RowState
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt de huidige status van de rij met betrekking tot de relatie tussen de <xref href=&quot;System.Data.DataRowCollection&quot;> </xref>."
  remarks: 'De waarde van de Rijstatus is afhankelijk van twee factoren: de aard van de bewerking op de rij is uitgevoerd en of <xref:System.Data.DataRow.AcceptChanges%2A>is aangeroepen voor de <xref:System.Data.DataRow>.</xref:System.Data.DataRow> </xref:System.Data.DataRow.AcceptChanges%2A>'
  example:
  - "The following example first creates a new <xref:System.Data.DataTable> with one column, and then creates a single <xref:System.Data.DataRow>. As the <xref:System.Data.DataRow> is created, added, modified, and deleted, its RowState is printed.  \n  \n [!code-vb[Classic WebData DataRow.RowState Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ro_0_1.vb)]\n [!code-cs[Classic WebData DataRow.RowState Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ro_0_1.cs)]"
  syntax:
    content: public System.Data.DataRowState RowState { get; }
    return:
      type: System.Data.DataRowState
      description: "Een van de <xref href=&quot;System.Data.DataRowState&quot;> </xref> waarden."
  overload: System.Data.DataRow.RowState*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetAdded
  id: SetAdded
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetAdded()
  nameWithType: DataRow.SetAdded()
  fullName: System.Data.DataRow.SetAdded()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Changes the <xref:System.Data.DataRow.Rowstate*> of a <xref href=&quot;System.Data.DataRow&quot;></xref> to <xref uid=&quot;langword_csharp_Added&quot; name=&quot;Added&quot; href=&quot;&quot;></xref>.</xref:System.Data.DataRow.Rowstate*>"
  remarks: "Wijzigingen de <xref:System.Data.DataRow.RowState%2A>van een <xref:System.Data.DataRow>naar `Added`.</xref:System.Data.DataRow> </xref:System.Data.DataRow.RowState%2A> Als de huidige rij niet in een is een `Unchanged` of een `Added` staat, wordt er een <xref:System.InvalidOperationException>met het bericht dat `SetAdded` kan alleen worden aangeroepen op een `DataRow` exemplaar waar de `RowState` is `Unchanged`.</xref:System.InvalidOperationException>"
  syntax:
    content: public void SetAdded ();
    parameters: []
  overload: System.Data.DataRow.SetAdded*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  id: SetColumnError(System.Data.DataColumn,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(DataColumn,String)
  nameWithType: DataRow.SetColumnError(DataColumn,String)
  fullName: System.Data.DataRow.SetColumnError(DataColumn,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee stelt u de foutbeschrijving van een kolom die is opgegeven als een <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "Als u wilt onderzoeken foutbeschrijvingen, gebruiken de <xref:System.Data.DataRow.GetColumnError%2A>methode.</xref:System.Data.DataRow.GetColumnError%2A>       Om te bepalen of er fouten voor de kolommenverzameling zijn, gebruikt de <xref:System.Data.DataRow.HasErrors%2A>eigenschap.</xref:System.Data.DataRow.HasErrors%2A> Daarom kunt u de <xref:System.Data.DataRow.GetColumnsInError%2A>methode voor het ophalen van de kolommen met fouten.</xref:System.Data.DataRow.GetColumnsInError%2A>       Als `null` of een lege tekenreeks is doorgegeven als de `error` parameter, de <xref:System.Data.DataRow>gedraagt zich alsof er geen fout was ingesteld en de <xref:System.Data.DataRow.HasErrors%2A>eigenschap resulteert in false.</xref:System.Data.DataRow.HasErrors%2A> </xref:System.Data.DataRow>       U kunt een beschrijving van de aangepaste fout instellen op de hele rij met de <xref:System.Data.DataRow.RowError%2A>eigenschap.</xref:System.Data.DataRow.RowError%2A>       Om te bepalen of er fouten voor de kolommenverzameling zijn, gebruikt de <xref:System.Data.DataRow.HasErrors%2A>methode.</xref:System.Data.DataRow.HasErrors%2A>       Schakel alle fouten voor de columns-verzameling, gebruiken de <xref:System.Data.DataRow.ClearErrors%2A>methode.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.se_3_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_3_1.vb)]"
  syntax:
    content: public void SetColumnError (System.Data.DataColumn column, string error);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "De <xref href=&quot;System.Data.DataColumn&quot;> </xref> om in te stellen voor de beschrijving van de fout."
    - id: error
      type: System.String
      description: "De beschrijving van de fout."
  overload: System.Data.DataRow.SetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetColumnError(System.Int32,System.String)
  id: SetColumnError(System.Int32,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(Int32,String)
  nameWithType: DataRow.SetColumnError(Int32,String)
  fullName: System.Data.DataRow.SetColumnError(Int32,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee stelt u de foutbeschrijving van een kolom die is opgegeven door index."
  remarks: "De methode wordt gebruikt om aangepaste foutbeschrijvingen op opgegeven kolommen. U kunt de <xref:System.Windows.Forms.ErrorProvider>besturingselement weer te geven de tekst van de fout.</xref:System.Windows.Forms.ErrorProvider>       Als u wilt onderzoeken foutbeschrijvingen, gebruiken de <xref:System.Data.DataRow.GetColumnError%2A>methode.</xref:System.Data.DataRow.GetColumnError%2A>       Om te bepalen of er fouten voor de kolommenverzameling zijn, gebruikt de <xref:System.Data.DataRow.HasErrors%2A>eigenschap.</xref:System.Data.DataRow.HasErrors%2A> Daarom kunt u de <xref:System.Data.DataRow.GetColumnsInError%2A>methode voor het ophalen van de kolommen met fouten.</xref:System.Data.DataRow.GetColumnsInError%2A>       Als `null` of een lege tekenreeks is doorgegeven als de `error` parameter, de <xref:System.Data.DataRow>gedraagt zich alsof er geen fout was ingesteld en de <xref:System.Data.DataRow.HasErrors%2A>eigenschap resulteert in false.</xref:System.Data.DataRow.HasErrors%2A> </xref:System.Data.DataRow>       U kunt een beschrijving van de aangepaste fout instellen op de hele rij met de <xref:System.Data.DataRow.RowError%2A>eigenschap.</xref:System.Data.DataRow.RowError%2A>       Schakel alle fouten voor de columns-verzameling, gebruiken de <xref:System.Data.DataRow.ClearErrors%2A>methode.</xref:System.Data.DataRow.ClearErrors%2A>       Om in te stellen fouttekst die voor een hele rij geldt de <xref:System.Data.DataRow.RowError%2A>eigenschap.</xref:System.Data.DataRow.RowError%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.se_0_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_0_1.vb)]"
  syntax:
    content: public void SetColumnError (int columnIndex, string error);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "De op nul gebaseerde index van de kolom."
    - id: error
      type: System.String
      description: "De beschrijving van de fout."
  overload: System.Data.DataRow.SetColumnError*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De <code> columnIndex </code> argument valt buiten het bereik"
  platform:
  - net462
- uid: System.Data.DataRow.SetColumnError(System.String,System.String)
  id: SetColumnError(System.String,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(String,String)
  nameWithType: DataRow.SetColumnError(String,String)
  fullName: System.Data.DataRow.SetColumnError(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee stelt u de foutbeschrijving van een kolom met de naam opgegeven."
  remarks: "De naam van een kolom is ingesteld met de <xref:System.Data.DataColumn.ColumnName%2A>eigenschap van de <xref:System.Data.DataColumn>klasse.</xref:System.Data.DataColumn> </xref:System.Data.DataColumn.ColumnName%2A>       Als u wilt onderzoeken foutbeschrijvingen, gebruiken de <xref:System.Data.DataRow.GetColumnError%2A>methode.</xref:System.Data.DataRow.GetColumnError%2A>       Om te bepalen of er fouten voor de kolommenverzameling zijn, gebruikt de <xref:System.Data.DataRow.HasErrors%2A>eigenschap.</xref:System.Data.DataRow.HasErrors%2A> Daarom kunt u de <xref:System.Data.DataRow.GetColumnsInError%2A>methode voor het ophalen van de kolommen met fouten.</xref:System.Data.DataRow.GetColumnsInError%2A>       Als `null` of een lege tekenreeks is doorgegeven als de `error` parameter, de <xref:System.Data.DataRow>gedraagt zich alsof er geen fout was ingesteld en de <xref:System.Data.DataRow.HasErrors%2A>eigenschap resulteert in false.</xref:System.Data.DataRow.HasErrors%2A> </xref:System.Data.DataRow>       U kunt een beschrijving van de aangepaste fout instellen op de hele rij met de <xref:System.Data.DataRow.RowError%2A>eigenschap.</xref:System.Data.DataRow.RowError%2A>       Om te bepalen of er fouten voor de kolommenverzameling zijn, gebruikt de <xref:System.Data.DataRow.HasErrors%2A>methode.</xref:System.Data.DataRow.HasErrors%2A>       Schakel alle fouten voor de columns-verzameling, gebruiken de <xref:System.Data.DataRow.ClearErrors%2A>methode.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.se_1_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_1_1.vb)]"
  syntax:
    content: public void SetColumnError (string columnName, string error);
    parameters:
    - id: columnName
      type: System.String
      description: "De naam van de kolom."
    - id: error
      type: System.String
      description: "De beschrijving van de fout."
  overload: System.Data.DataRow.SetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetModified
  id: SetModified
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetModified()
  nameWithType: DataRow.SetModified()
  fullName: System.Data.DataRow.SetModified()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Changes the <xref:System.Data.DataRow.Rowstate*> of a <xref href=&quot;System.Data.DataRow&quot;></xref> to <xref uid=&quot;langword_csharp_Modified&quot; name=&quot;Modified&quot; href=&quot;&quot;></xref>.</xref:System.Data.DataRow.Rowstate*>"
  remarks: "Wijzigingen de <xref:System.Data.DataRow.Rowstate%2A>van een <xref:System.Data.DataRow>naar `Modified`.</xref:System.Data.DataRow> </xref:System.Data.DataRow.Rowstate%2A> Als de huidige rij niet in een is een `Unchanged` of een `Added` staat, wordt er een <xref:System.InvalidOperationException>met het bericht dat `SetModified` kan alleen worden aangeroepen op een `DataRow` exemplaar waar de `RowState` is `Unchanged`.</xref:System.InvalidOperationException>"
  syntax:
    content: public void SetModified ();
    parameters: []
  overload: System.Data.DataRow.SetModified*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetNull(System.Data.DataColumn)
  id: SetNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetNull(DataColumn)
  nameWithType: DataRow.SetNull(DataColumn)
  fullName: System.Data.DataRow.SetNull(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee stelt u de waarde van de opgegeven <xref href=&quot;System.Data.DataColumn&quot;> </xref> in een null-waarde."
  remarks: "Gebruik de <xref:System.Data.DataRow.IsNull%2A>methode om te bepalen of een kolom een null-waarde bevat.</xref:System.Data.DataRow.IsNull%2A>"
  syntax:
    content: protected void SetNull (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
  overload: System.Data.DataRow.SetNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow)
  id: SetParentRow(System.Data.DataRow)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetParentRow(DataRow)
  nameWithType: DataRow.SetParentRow(DataRow)
  fullName: System.Data.DataRow.SetParentRow(DataRow)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee stelt u de bovenliggende rij van een <xref href=&quot;System.Data.DataRow&quot;> </xref> met opgegeven nieuwe bovenliggende <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  syntax:
    content: public void SetParentRow (System.Data.DataRow parentRow);
    parameters:
    - id: parentRow
      type: System.Data.DataRow
      description: "De nieuwe bovenliggende <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  overload: System.Data.DataRow.SetParentRow*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  id: SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetParentRow(DataRow,DataRelation)
  nameWithType: DataRow.SetParentRow(DataRow,DataRelation)
  fullName: System.Data.DataRow.SetParentRow(DataRow,DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee stelt u de bovenliggende rij van een <xref href=&quot;System.Data.DataRow&quot;> </xref> met opgegeven nieuwe bovenliggende <xref href=&quot;System.Data.DataRow&quot;> </xref> en <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: ''
  example:
  - "The following example sets the parent row of a specific child row.  \n  \n [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_2_1.vb)]"
  syntax:
    content: public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);
    parameters:
    - id: parentRow
      type: System.Data.DataRow
      description: "De nieuwe bovenliggende <xref href=&quot;System.Data.DataRow&quot;> </xref>."
    - id: relation
      type: System.Data.DataRelation
      description: "De relatie <xref href=&quot;System.Data.DataRelation&quot;> </xref> te gebruiken."
  overload: System.Data.DataRow.SetParentRow*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Een van de rijen behoort niet tot een tabel"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Een van de rijen is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De relatie hoort niet bij de <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref> van de <xref href=&quot;System.Data.DataSet&quot;> </xref> object."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "De relatie onderliggende <xref href=&quot;System.Data.DataTable&quot;> </xref> is niet in de tabel deze rij hoort bij."
  platform:
  - net462
- uid: System.Data.DataRow.Table
  id: Table
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Table
  nameWithType: DataRow.Table
  fullName: System.Data.DataRow.Table
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Haalt de <xref href=&quot;System.Data.DataTable&quot;> </xref> waarvoor deze rij bevat een schema."
  remarks: "Een <xref:System.Data.DataRow>niet per se hoort bij een tabel verzameling rijen.</xref:System.Data.DataRow> Dit probleem treedt op wanneer het <xref:System.Data.DataRow>is gemaakt, maar niet toegevoegd aan de <xref:System.Data.DataRowCollection>.</xref:System.Data.DataRowCollection> </xref:System.Data.DataRow> Als de <xref:System.Data.DataRow.RowState%2A>resultaat van de eigenschap `DataRowState.Detached`, de rij is niet in een verzameling.</xref:System.Data.DataRow.RowState%2A>"
  example:
  - "The following example uses the Table property to return a reference to the columns collection of the <xref:System.Data.DataTable>.  \n  \n [!code-cs[Classic WebData DataRow.Table Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ta_1.cs)]\n [!code-vb[Classic WebData DataRow.Table Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ta_1.vb)]"
  syntax:
    content: public System.Data.DataTable Table { get; }
    return:
      type: System.Data.DataTable
      description: "De <xref href=&quot;System.Data.DataTable&quot;> </xref> waarbij deze rij hoort."
  overload: System.Data.DataRow.Table*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.RowNotInTableException
  parent: System.Data
  isExternal: false
  name: RowNotInTableException
  nameWithType: RowNotInTableException
  fullName: System.Data.RowNotInTableException
- uid: System.Data.InRowChangingEventException
  parent: System.Data
  isExternal: false
  name: InRowChangingEventException
  nameWithType: InRowChangingEventException
  fullName: System.Data.InRowChangingEventException
- uid: System.Data.DeletedRowInaccessibleException
  parent: System.Data
  isExternal: false
  name: DeletedRowInaccessibleException
  nameWithType: DeletedRowInaccessibleException
  fullName: System.Data.DeletedRowInaccessibleException
- uid: System.Data.ConstraintException
  parent: System.Data
  isExternal: false
  name: ConstraintException
  nameWithType: ConstraintException
  fullName: System.Data.ConstraintException
- uid: System.Data.ReadOnlyException
  parent: System.Data
  isExternal: false
  name: ReadOnlyException
  nameWithType: ReadOnlyException
  fullName: System.Data.ReadOnlyException
- uid: System.Data.NoNullAllowedException
  parent: System.Data
  isExternal: false
  name: NoNullAllowedException
  nameWithType: NoNullAllowedException
  fullName: System.Data.NoNullAllowedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.VersionNotFoundException
  parent: System.Data
  isExternal: false
  name: VersionNotFoundException
  nameWithType: VersionNotFoundException
  fullName: System.Data.VersionNotFoundException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataException
  parent: System.Data
  isExternal: false
  name: DataException
  nameWithType: DataException
  fullName: System.Data.DataException
- uid: System.Data.InvalidConstraintException
  parent: System.Data
  isExternal: false
  name: InvalidConstraintException
  nameWithType: InvalidConstraintException
  fullName: System.Data.InvalidConstraintException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  parent: System.Data.DataRow
  isExternal: false
  name: DataRow(DataRowBuilder)
  nameWithType: DataRow.DataRow(DataRowBuilder)
  fullName: System.Data.DataRow.DataRow(DataRowBuilder)
- uid: System.Data.DataRowBuilder
  parent: System.Data
  isExternal: false
  name: DataRowBuilder
  nameWithType: DataRowBuilder
  fullName: System.Data.DataRowBuilder
- uid: System.Data.DataRow.AcceptChanges
  parent: System.Data.DataRow
  isExternal: false
  name: AcceptChanges()
  nameWithType: DataRow.AcceptChanges()
  fullName: System.Data.DataRow.AcceptChanges()
- uid: System.Data.DataRow.BeginEdit
  parent: System.Data.DataRow
  isExternal: false
  name: BeginEdit()
  nameWithType: DataRow.BeginEdit()
  fullName: System.Data.DataRow.BeginEdit()
- uid: System.Data.DataRow.CancelEdit
  parent: System.Data.DataRow
  isExternal: false
  name: CancelEdit()
  nameWithType: DataRow.CancelEdit()
  fullName: System.Data.DataRow.CancelEdit()
- uid: System.Data.DataRow.ClearErrors
  parent: System.Data.DataRow
  isExternal: false
  name: ClearErrors()
  nameWithType: DataRow.ClearErrors()
  fullName: System.Data.DataRow.ClearErrors()
- uid: System.Data.DataRow.Delete
  parent: System.Data.DataRow
  isExternal: false
  name: Delete()
  nameWithType: DataRow.Delete()
  fullName: System.Data.DataRow.Delete()
- uid: System.Data.DataRow.EndEdit
  parent: System.Data.DataRow
  isExternal: false
  name: EndEdit()
  nameWithType: DataRow.EndEdit()
  fullName: System.Data.DataRow.EndEdit()
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(DataRelation)
  nameWithType: DataRow.GetChildRows(DataRelation)
  fullName: System.Data.DataRow.GetChildRows(DataRelation)
- uid: System.Data.DataRow[]
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow[]
  spec.csharp:
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: DataRow[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelation
  parent: System.Data
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation
- uid: System.Data.DataRow.GetChildRows(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(String)
  nameWithType: DataRow.GetChildRows(String)
  fullName: System.Data.DataRow.GetChildRows(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetChildRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(DataRelation,DataRowVersion)
- uid: System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(String,DataRowVersion)
  nameWithType: DataRow.GetChildRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(String,DataRowVersion)
- uid: System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(DataColumn)
  nameWithType: DataRow.GetColumnError(DataColumn)
  fullName: System.Data.DataRow.GetColumnError(DataColumn)
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataRow.GetColumnError(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(Int32)
  nameWithType: DataRow.GetColumnError(Int32)
  fullName: System.Data.DataRow.GetColumnError(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataRow.GetColumnError(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(String)
  nameWithType: DataRow.GetColumnError(String)
  fullName: System.Data.DataRow.GetColumnError(String)
- uid: System.Data.DataRow.GetColumnsInError
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnsInError()
  nameWithType: DataRow.GetColumnsInError()
  fullName: System.Data.DataRow.GetColumnsInError()
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(DataRelation)
  nameWithType: DataRow.GetParentRow(DataRelation)
  fullName: System.Data.DataRow.GetParentRow(DataRelation)
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.DataRow.GetParentRow(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(String)
  nameWithType: DataRow.GetParentRow(String)
  fullName: System.Data.DataRow.GetParentRow(String)
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRow(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(DataRelation,DataRowVersion)
- uid: System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(String,DataRowVersion)
  nameWithType: DataRow.GetParentRow(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(String,DataRowVersion)
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(DataRelation)
  nameWithType: DataRow.GetParentRows(DataRelation)
  fullName: System.Data.DataRow.GetParentRows(DataRelation)
- uid: System.Data.DataRow.GetParentRows(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(String)
  nameWithType: DataRow.GetParentRows(String)
  fullName: System.Data.DataRow.GetParentRows(String)
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(DataRelation,DataRowVersion)
- uid: System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(String,DataRowVersion)
  nameWithType: DataRow.GetParentRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(String,DataRowVersion)
- uid: System.Data.DataRow.HasErrors
  parent: System.Data.DataRow
  isExternal: false
  name: HasErrors
  nameWithType: DataRow.HasErrors
  fullName: System.Data.DataRow.HasErrors
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: HasVersion(DataRowVersion)
  nameWithType: DataRow.HasVersion(DataRowVersion)
  fullName: System.Data.DataRow.HasVersion(DataRowVersion)
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(DataColumn)
  nameWithType: DataRow.IsNull(DataColumn)
  fullName: System.Data.DataRow.IsNull(DataColumn)
- uid: System.Data.DataRow.IsNull(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(Int32)
  nameWithType: DataRow.IsNull(Int32)
  fullName: System.Data.DataRow.IsNull(Int32)
- uid: System.Data.DataRow.IsNull(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(String)
  nameWithType: DataRow.IsNull(String)
  fullName: System.Data.DataRow.IsNull(String)
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(DataColumn,DataRowVersion)
  nameWithType: DataRow.IsNull(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.IsNull(DataColumn,DataRowVersion)
- uid: System.Data.DataRow.Item(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(DataColumn)
  nameWithType: DataRow.Item(DataColumn)
  fullName: System.Data.DataRow.Item(DataColumn)
- uid: System.Data.DataRow.Item(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(Int32)
  nameWithType: DataRow.Item(Int32)
  fullName: System.Data.DataRow.Item(Int32)
- uid: System.Data.DataRow.Item(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(String)
  nameWithType: DataRow.Item(String)
  fullName: System.Data.DataRow.Item(String)
- uid: System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(DataColumn,DataRowVersion)
  nameWithType: DataRow.Item(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.Item(DataColumn,DataRowVersion)
- uid: System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(Int32,DataRowVersion)
  nameWithType: DataRow.Item(Int32,DataRowVersion)
  fullName: System.Data.DataRow.Item(Int32,DataRowVersion)
- uid: System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(String,DataRowVersion)
  nameWithType: DataRow.Item(String,DataRowVersion)
  fullName: System.Data.DataRow.Item(String,DataRowVersion)
- uid: System.Data.DataRow.ItemArray
  parent: System.Data.DataRow
  isExternal: false
  name: ItemArray
  nameWithType: DataRow.ItemArray
  fullName: System.Data.DataRow.ItemArray
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRow.RejectChanges
  parent: System.Data.DataRow
  isExternal: false
  name: RejectChanges()
  nameWithType: DataRow.RejectChanges()
  fullName: System.Data.DataRow.RejectChanges()
- uid: System.Data.DataRow.RowError
  parent: System.Data.DataRow
  isExternal: false
  name: RowError
  nameWithType: DataRow.RowError
  fullName: System.Data.DataRow.RowError
- uid: System.Data.DataRow.RowState
  parent: System.Data.DataRow
  isExternal: false
  name: RowState
  nameWithType: DataRow.RowState
  fullName: System.Data.DataRow.RowState
- uid: System.Data.DataRowState
  parent: System.Data
  isExternal: false
  name: DataRowState
  nameWithType: DataRowState
  fullName: System.Data.DataRowState
- uid: System.Data.DataRow.SetAdded
  parent: System.Data.DataRow
  isExternal: false
  name: SetAdded()
  nameWithType: DataRow.SetAdded()
  fullName: System.Data.DataRow.SetAdded()
- uid: System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(DataColumn,String)
  nameWithType: DataRow.SetColumnError(DataColumn,String)
  fullName: System.Data.DataRow.SetColumnError(DataColumn,String)
- uid: System.Data.DataRow.SetColumnError(System.Int32,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(Int32,String)
  nameWithType: DataRow.SetColumnError(Int32,String)
  fullName: System.Data.DataRow.SetColumnError(Int32,String)
- uid: System.Data.DataRow.SetColumnError(System.String,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(String,String)
  nameWithType: DataRow.SetColumnError(String,String)
  fullName: System.Data.DataRow.SetColumnError(String,String)
- uid: System.Data.DataRow.SetModified
  parent: System.Data.DataRow
  isExternal: false
  name: SetModified()
  nameWithType: DataRow.SetModified()
  fullName: System.Data.DataRow.SetModified()
- uid: System.Data.DataRow.SetNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: SetNull(DataColumn)
  nameWithType: DataRow.SetNull(DataColumn)
  fullName: System.Data.DataRow.SetNull(DataColumn)
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow)
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow(DataRow)
  nameWithType: DataRow.SetParentRow(DataRow)
  fullName: System.Data.DataRow.SetParentRow(DataRow)
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow(DataRow,DataRelation)
  nameWithType: DataRow.SetParentRow(DataRow,DataRelation)
  fullName: System.Data.DataRow.SetParentRow(DataRow,DataRelation)
- uid: System.Data.DataRow.Table
  parent: System.Data.DataRow
  isExternal: false
  name: Table
  nameWithType: DataRow.Table
  fullName: System.Data.DataRow.Table
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataRow.#ctor*
  parent: System.Data.DataRow
  isExternal: false
  name: DataRow
  nameWithType: DataRow.DataRow
- uid: System.Data.DataRow.AcceptChanges*
  parent: System.Data.DataRow
  isExternal: false
  name: AcceptChanges
  nameWithType: DataRow.AcceptChanges
- uid: System.Data.DataRow.BeginEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: BeginEdit
  nameWithType: DataRow.BeginEdit
- uid: System.Data.DataRow.CancelEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: CancelEdit
  nameWithType: DataRow.CancelEdit
- uid: System.Data.DataRow.ClearErrors*
  parent: System.Data.DataRow
  isExternal: false
  name: ClearErrors
  nameWithType: DataRow.ClearErrors
- uid: System.Data.DataRow.Delete*
  parent: System.Data.DataRow
  isExternal: false
  name: Delete
  nameWithType: DataRow.Delete
- uid: System.Data.DataRow.EndEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: EndEdit
  nameWithType: DataRow.EndEdit
- uid: System.Data.DataRow.GetChildRows*
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows
  nameWithType: DataRow.GetChildRows
- uid: System.Data.DataRow.GetColumnError*
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError
  nameWithType: DataRow.GetColumnError
- uid: System.Data.DataRow.GetColumnsInError*
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnsInError
  nameWithType: DataRow.GetColumnsInError
- uid: System.Data.DataRow.GetParentRow*
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow
  nameWithType: DataRow.GetParentRow
- uid: System.Data.DataRow.GetParentRows*
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows
  nameWithType: DataRow.GetParentRows
- uid: System.Data.DataRow.HasErrors*
  parent: System.Data.DataRow
  isExternal: false
  name: HasErrors
  nameWithType: DataRow.HasErrors
- uid: System.Data.DataRow.HasVersion*
  parent: System.Data.DataRow
  isExternal: false
  name: HasVersion
  nameWithType: DataRow.HasVersion
- uid: System.Data.DataRow.IsNull*
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull
  nameWithType: DataRow.IsNull
- uid: System.Data.DataRow.Item*
  parent: System.Data.DataRow
  isExternal: false
  name: Item
  nameWithType: DataRow.Item
- uid: System.Data.DataRow.ItemArray*
  parent: System.Data.DataRow
  isExternal: false
  name: ItemArray
  nameWithType: DataRow.ItemArray
- uid: System.Data.DataRow.RejectChanges*
  parent: System.Data.DataRow
  isExternal: false
  name: RejectChanges
  nameWithType: DataRow.RejectChanges
- uid: System.Data.DataRow.RowError*
  parent: System.Data.DataRow
  isExternal: false
  name: RowError
  nameWithType: DataRow.RowError
- uid: System.Data.DataRow.RowState*
  parent: System.Data.DataRow
  isExternal: false
  name: RowState
  nameWithType: DataRow.RowState
- uid: System.Data.DataRow.SetAdded*
  parent: System.Data.DataRow
  isExternal: false
  name: SetAdded
  nameWithType: DataRow.SetAdded
- uid: System.Data.DataRow.SetColumnError*
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError
  nameWithType: DataRow.SetColumnError
- uid: System.Data.DataRow.SetModified*
  parent: System.Data.DataRow
  isExternal: false
  name: SetModified
  nameWithType: DataRow.SetModified
- uid: System.Data.DataRow.SetNull*
  parent: System.Data.DataRow
  isExternal: false
  name: SetNull
  nameWithType: DataRow.SetNull
- uid: System.Data.DataRow.SetParentRow*
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow
  nameWithType: DataRow.SetParentRow
- uid: System.Data.DataRow.Table*
  parent: System.Data.DataRow
  isExternal: false
  name: Table
  nameWithType: DataRow.Table
