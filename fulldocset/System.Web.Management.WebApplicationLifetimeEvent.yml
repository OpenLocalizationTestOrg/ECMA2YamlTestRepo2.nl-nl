### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebApplicationLifetimeEvent
  id: WebApplicationLifetimeEvent
  children:
  - System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)
  - System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  - System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters
  langs:
  - csharp
  name: WebApplicationLifetimeEvent
  nameWithType: WebApplicationLifetimeEvent
  fullName: System.Web.Management.WebApplicationLifetimeEvent
  type: Class
  summary: "Vertegenwoordigt een belangrijke gebeurtenis in de levensduur van een toepassing."
  remarks: "ASP.NET-statuscontrole kunt personeel voor productie en bewerkingen voor het beheren van de geïmplementeerde Web-Apps. De <xref:System.Web.Management>-naamruimte bevat de typen van de health-gebeurtenissen die verantwoordelijk is voor het verpakken van de toepassingsgegevens van de health-status en de providertypen verantwoordelijk voor het verwerken van deze gegevens.</xref:System.Web.Management> Het bevat ook ondersteunende typen die bij het beheer van health-gebeurtenissen helpen.       Toepassing levensduur gebeurtenissen zijn gebeurtenissen zoals het starten van de toepassing en afsluiten. Als een toepassing wordt beëindigd, kunt u waarom bepalen door het veld van het bericht gerelateerde gebeurtenissen weer te geven.       Wanneer een exemplaar WebApplicationLifetimeEvent optreedt, ASP.NET-statuscontrole de levensduur van toepassingsgebeurtenissen Prestatiemeter-updates. U kunt deze gebeurtenissen zich aanmelden door het toevoegen van het object WebApplicationLifetimeEvent aan de `rules` subsectie van het `healthMonitoring` gedeelte van het configuratiebestand, zoals wordt weergegeven in het volgende voorbeeld.      ```   <rules>     <add name=&quot;Application Events&quot;       eventName=&quot;Application Lifetime Events&quot;       provider=&quot;EventLogProvider&quot;       profile=&quot;Default&quot;       minInterval=&quot;00:01:00&quot; />   </rules>      ```Het prestatiemeteritem levensduur van toepassingsgebeurtenissen bevat de totale som van alle gebeurtenissen voor ASP.NET-levensduur. Dit prestatiemeteritem in Systeemmonitor (PerfMon) weergeven in de **items toevoegen** venster Selecteer **ASP.NET** van de **prestatie-object** vervolgkeuzelijst. Selecteer de **levensduur van toepassingsgebeurtenissen** prestatiemeteritem en klik op de **toevoegen** knop. Voor meer informatie, Zie &quot;Systeemmonitor (PerfMon) met ASP.NET-toepassingen&quot; op [MSDN](http://go.microsoft.com/fwlink/?linkid=37118). Als u gebeurtenissen moeten worden vastgelegd door de standaard toestaan <xref:System.Web.Management.EventLogWebEventProvider>, kunt u deze bekijken in Logboeken door te selecteren de **toepassing** logboek</xref:System.Web.Management.EventLogWebEventProvider> Zie voor meer informatie [logboeken](http://go.microsoft.com/fwlink/?linkid=24845&clcid=0x409) in de documentatie van Windows Server 2003 op TechNet.      > [!CAUTION] > Omdat het object WebApplicationLifetimeEvent een gebeurtenis hoog volume is, registratie het brongebruik intensief is en uw systeem vertragen. Het kan ook leiden tot andere gebeurtenissen kunnen worden overschreven in het geval van de <xref:System.Web.Management.EventLogWebEventProvider>klasse vanwege het grote aantal gebeurtenissen en de manier waarop de logboekregistratie werkt.</xref:System.Web.Management.EventLogWebEventProvider>      > [!NOTE] > In de meeste gevallen kunt u zich de ASP.NET-statuscontrole typen gebruiken als ze zijn geïmplementeerd en u de system health monitoring te regelen door te geven waarden in de `healthMonitoring` configuratiesectie. U kunt ook afgeleid van de statuscontrole typen voor het maken van uw eigen aangepaste gebeurtenissen en providers. Zie het voorbeeld in dit onderwerp voor een voorbeeld van die zijn afgeleid van de klasse WebApplicationLifetimeEvent."
  example:
  - "The following code example shows how to derive from the WebApplicationLifetimeEvent class to create a custom event.  \n  \n [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._24_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationLifetimeEvent#1](~/add/codesnippet/csharp/t-system.web.management._24_1.cs)]  \n  \n The following configuration-file excerpt shows how to configure the `healthMonitoring` section of a configuration file to add the `SampleWebApplicationLifetimeEvent` code defined above to the ASP.NET health-monitoring system. To add the event to the system, you must define the event by adding a new entry to the `eventMappings` section and map the event to a provider by adding a new entry to the `rules` section.  \n  \n```  \n<healthMonitoring  \n  enabled=\"true\"  \n  heartBeatInterval=\"0\">  \n  \n    <eventMappings>  \n       <clear />  \n       <!-- Configure the application lifetime event -->  \n       <!-- object to handle the Web application events. -->  \n       <add name=\"SampleApplicationLifetimeEvents\"  \n         type=\"System.Web.Management.SampleWebApplicationLifetimeEvent,  \n         System.Web,Version=2.0.3600.0,  \n         Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a\" />  \n     </eventMappings>  \n  \n    <rules>  \n      <clear/>  \n       // Configure the connection between the   \n       // application lifetime event object   \n       // and the provider that must process it.  \n       <add name=\"Custom Application Events\"  \n         eventName=\"SampleApplicationLifetimeEvents\"  \n         provider=\"EventLogProvider\"  \n         profile=\"Default\"  \n         minInterval=\"00:01:00\" />  \n    </rules>  \n  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public class WebApplicationLifetimeEvent : System.Web.Management.WebManagementEvent'
  inheritance:
  - System.Object
  - System.Web.Management.WebBaseEvent
  - System.Web.Management.WebManagementEvent
  implements: []
  inheritedMembers:
  - System.Web.Management.WebBaseEvent.ApplicationInformation
  - System.Web.Management.WebBaseEvent.EventCode
  - System.Web.Management.WebBaseEvent.EventDetailCode
  - System.Web.Management.WebBaseEvent.EventID
  - System.Web.Management.WebBaseEvent.EventOccurrence
  - System.Web.Management.WebBaseEvent.EventSequence
  - System.Web.Management.WebBaseEvent.EventSource
  - System.Web.Management.WebBaseEvent.EventTime
  - System.Web.Management.WebBaseEvent.EventTimeUtc
  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebBaseEvent.Message
  - System.Web.Management.WebBaseEvent.Raise
  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebBaseEvent.ToString
  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)
  - System.Web.Management.WebManagementEvent.ProcessInformation
  platform:
  - net462
- uid: System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32)'
  parent: System.Web.Management.WebApplicationLifetimeEvent
  langs:
  - csharp
  name: WebApplicationLifetimeEvent(String,Object,Int32)
  nameWithType: WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32)
  fullName: System.Web.Management.WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Initialiseert de <xref href=&quot;System.Web.Management.WebApplicationLifetimeEvent&quot;> </xref> klasse met de opgegeven parameters."
  remarks: "Deze constructor wordt intern gebruikt door het systeem ASP.NET health monitoring. U wordt nooit gebruikt om het maken van een exemplaar van de <xref:System.Web.Management.WebApplicationLifetimeEvent>klasse, maar u kunt aanroepen voor deze constructor bij het implementeren van uw eigen gebeurtenistype dat kenmerken van deze klasse overneemt.</xref:System.Web.Management.WebApplicationLifetimeEvent>      > [!NOTE] > WebApplicationLifetimeEvent de constructor is niet bedoeld voor rechtstreeks gebruik vanuit uw code. Deze wordt aangeroepen door ASP.NET. U kunt de constructor WebApplicationLifetimeEvent aanroepen als deze is afgeleid van de <xref:System.Web.Management.WebApplicationLifetimeEvent>klasse.</xref:System.Web.Management.WebApplicationLifetimeEvent>"
  example:
  - "The following code example shows how to use the WebApplicationLifetimeEvent in an ASP.NET custom health event. This code example is mainly intended to show the correct syntax to use.  \n  \n [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#2](~/add/codesnippet/visualbasic/f6897152-ffc5-4ce1-a4ea-_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationLifetimeEvent#2](~/add/codesnippet/csharp/f6897152-ffc5-4ce1-a4ea-_1.cs)]"
  syntax:
    content: protected WebApplicationLifetimeEvent (string message, object eventSource, int eventCode);
    parameters:
    - id: message
      type: System.String
      description: "Het bericht dat is gekoppeld aan de gebeurtenis."
    - id: eventSource
      type: System.Object
      description: "Het object dat de bron van de gebeurtenis."
    - id: eventCode
      type: System.Int32
      description: "De code die is gekoppeld aan de gebeurtenis. Wanneer u een aangepaste gebeurtenis implementeert, de gebeurteniscode moet groter dan <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
  overload: System.Web.Management.WebApplicationLifetimeEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32,System.Int32)'
  parent: System.Web.Management.WebApplicationLifetimeEvent
  langs:
  - csharp
  name: WebApplicationLifetimeEvent(String,Object,Int32,Int32)
  nameWithType: WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Initialiseert de <xref href=&quot;System.Web.Management.WebApplicationLifetimeEvent&quot;> </xref> klasse met de opgegeven parameters."
  remarks: "Deze constructor wordt intern gebruikt door het systeem ASP.NET health monitoring. U wordt nooit gebruikt om het maken van een exemplaar van de <xref:System.Web.Management.WebApplicationLifetimeEvent>klasse, maar u kunt aanroepen voor deze constructor bij het implementeren van uw eigen gebeurtenistype dat kenmerken van deze klasse overneemt.</xref:System.Web.Management.WebApplicationLifetimeEvent>      > [!NOTE] > WebApplicationLifetimeEvent de constructor is niet bedoeld voor rechtstreeks gebruik vanuit uw code. Deze wordt aangeroepen door ASP.NET. U kunt de constructor WebApplicationLifetimeEvent aanroepen als deze is afgeleid van de <xref:System.Web.Management.WebApplicationLifetimeEvent>klasse.</xref:System.Web.Management.WebApplicationLifetimeEvent>"
  example:
  - "The following code example shows how to use the WebApplicationLifetimeEvent in an ASP.NET custom health event. This code example is mainly intended to show the correct syntax to use.  \n  \n [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#3](~/add/codesnippet/visualbasic/d658829b-c5f1-4bb1-9080-_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationLifetimeEvent#3](~/add/codesnippet/csharp/d658829b-c5f1-4bb1-9080-_1.cs)]"
  syntax:
    content: protected WebApplicationLifetimeEvent (string message, object eventSource, int eventCode, int eventDetailCode);
    parameters:
    - id: message
      type: System.String
      description: "Het bericht dat is gekoppeld aan de gebeurtenis."
    - id: eventSource
      type: System.Object
      description: "Het object dat de bron van de gebeurtenis."
    - id: eventCode
      type: System.Int32
      description: "De code die is gekoppeld aan de gebeurtenis. Wanneer u een aangepaste gebeurtenis implementeert, de gebeurteniscode moet groter dan <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
    - id: eventDetailCode
      type: System.Int32
      description: "De <xref href=&quot;System.Web.Management.WebEventCodes&quot;> </xref> waarde waarmee de gedetailleerde id voor de gebeurtenis."
  overload: System.Web.Management.WebApplicationLifetimeEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters
  id: IncrementPerfCounters
  parent: System.Web.Management.WebApplicationLifetimeEvent
  langs:
  - csharp
  name: IncrementPerfCounters()
  nameWithType: WebApplicationLifetimeEvent.IncrementPerfCounters()
  fullName: System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Intern gebruikt om prestatiemeteritems te verhogen."
  syntax:
    content: protected override void IncrementPerfCounters ();
    parameters: []
  overload: System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebManagementEvent
  isExternal: false
  name: System.Web.Management.WebManagementEvent
- uid: System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)
  parent: System.Web.Management.WebApplicationLifetimeEvent
  isExternal: false
  name: WebApplicationLifetimeEvent(String,Object,Int32)
  nameWithType: WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32)
  fullName: System.Web.Management.WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  parent: System.Web.Management.WebApplicationLifetimeEvent
  isExternal: false
  name: WebApplicationLifetimeEvent(String,Object,Int32,Int32)
  nameWithType: WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32,Int32)
- uid: System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters
  parent: System.Web.Management.WebApplicationLifetimeEvent
  isExternal: false
  name: IncrementPerfCounters()
  nameWithType: WebApplicationLifetimeEvent.IncrementPerfCounters()
  fullName: System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters()
- uid: System.Web.Management.WebApplicationLifetimeEvent.#ctor*
  parent: System.Web.Management.WebApplicationLifetimeEvent
  isExternal: false
  name: WebApplicationLifetimeEvent
  nameWithType: WebApplicationLifetimeEvent.WebApplicationLifetimeEvent
- uid: System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters*
  parent: System.Web.Management.WebApplicationLifetimeEvent
  isExternal: false
  name: IncrementPerfCounters
  nameWithType: WebApplicationLifetimeEvent.IncrementPerfCounters
