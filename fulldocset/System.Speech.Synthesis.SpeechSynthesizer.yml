### YamlMime:ManagedReference
items:
- uid: System.Speech.Synthesis.SpeechSynthesizer
  id: SpeechSynthesizer
  children:
  - System.Speech.Synthesis.SpeechSynthesizer.#ctor
  - System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached
  - System.Speech.Synthesis.SpeechSynthesizer.Dispose
  - System.Speech.Synthesis.SpeechSynthesizer.Finalize
  - System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt
  - System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices
  - System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)
  - System.Speech.Synthesis.SpeechSynthesizer.Pause
  - System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached
  - System.Speech.Synthesis.SpeechSynthesizer.Rate
  - System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)
  - System.Speech.Synthesis.SpeechSynthesizer.Resume
  - System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)
  - System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)
  - System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)
  - System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)
  - System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  - System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice
  - System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull
  - System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  - System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)
  - System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)
  - System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)
  - System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted
  - System.Speech.Synthesis.SpeechSynthesizer.State
  - System.Speech.Synthesis.SpeechSynthesizer.StateChanged
  - System.Speech.Synthesis.SpeechSynthesizer.VisemeReached
  - System.Speech.Synthesis.SpeechSynthesizer.Voice
  - System.Speech.Synthesis.SpeechSynthesizer.VoiceChange
  - System.Speech.Synthesis.SpeechSynthesizer.Volume
  langs:
  - csharp
  name: SpeechSynthesizer
  nameWithType: SpeechSynthesizer
  fullName: System.Speech.Synthesis.SpeechSynthesizer
  type: Class
  summary: "Biedt toegang tot de functionaliteit van een geïnstalleerde spraak synthese-engine."
  remarks: "Wanneer u een nieuw SpeechSynthesizer-object maakt, gebruikt de standaard system stem. Voor het configureren van de SpeechSynthesizer voor het gebruik van een van de geïnstalleerde spraak synthese (spraak) stemmen, gebruiken de <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>of <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> Als u informatie over de stemmen worden geïnstalleerd, gebruikt u de <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>methode en de <xref:System.Speech.Synthesis.VoiceInfo>klasse.</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>       Deze klasse biedt ook controle over de volgende aspecten van spraak synthese: - als u wilt de uitvoer voor het object SpeechSynthesizer configureren, gebruikt u de <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, en <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>methoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>      -Voor het genereren van spraak, gebruiken de <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> De SpeechSynthesizer opleveren spraakherkenning uit tekst, een <xref:System.Speech.Synthesis.Prompt>of <xref:System.Speech.Synthesis.PromptBuilder>object, of van [spraak synthese Markup Language (SSML) versie 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</xref:System.Speech.Synthesis.PromptBuilder> </xref:System.Speech.Synthesis.Prompt>      -Als u wilt onderbreken en hervatten van spraak synthese, gebruiken de <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A>en <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A>methoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A>      -Als u wilt toevoegen of verwijderen van lexicons, gebruiken de <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>en <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A>methoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> De SpeechSynthesizer kunt een of meer lexicons gebruiken om te leiden van de uitspraak van woorden.      -Voor de levering van spraakuitvoer wijzigen, gebruikt u de <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A>en <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A>Eigenschappen.</xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A>       De SpeechSynthesizer wordt gegeven gebeurtenissen wanneer er bepaalde functies in prompts: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, en <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> </xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> </xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> </xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> Verhoogt ook gebeurtenissen die een over de start rapport (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>)- en einddatum (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) van operations spreken en op de wijziging van de spreken stem (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>      > [!NOTE] > Altijd aanroep <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A>voordat u uw laatste verwijzing naar de SpeechSynthesizer loslaat.</xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> Anders wordt de resources die worden gebruikt niet vrij totdat de garbagecollector van het object SpeechSynthesizer roept <xref:System.Object.Finalize%2A>methode.</xref:System.Object.Finalize%2A>"
  example:
  - "The following example is part of a console application that initializes a SpeechSynthesizer object and speaks a string.  \n  \n```c#  \n  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Speak a string.  \n      synth.Speak(\"This example demonstrates a basic use of Speech Synthesizer\");  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: 'public sealed class SpeechSynthesizer : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.#ctor
  id: '#ctor'
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeechSynthesizer()
  nameWithType: SpeechSynthesizer.SpeechSynthesizer()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeechSynthesizer()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> klasse."
  remarks: "Wanneer u een nieuwe initialiseren <xref:System.Speech.Synthesis.SpeechSynthesizer>exemplaar, wordt de standaard system stem.</xref:System.Speech.Synthesis.SpeechSynthesizer> Voor het configureren van de <xref:System.Speech.Synthesis.SpeechSynthesizer>gebruiken voor het gebruik van een van de geïnstalleerde spraak synthese (spraak) stemmen, de <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>of <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> Als u informatie over de stemmen worden geïnstalleerd, gebruikt u de <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>methode en de <xref:System.Speech.Synthesis.VoiceInfo>klasse.</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>"
  syntax:
    content: public SpeechSynthesizer ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)
  id: AddLexicon(System.Uri,System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: AddLexicon(Uri,String)
  nameWithType: SpeechSynthesizer.AddLexicon(Uri,String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(Uri,String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Voegt een lexicon naar de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> object."
  remarks: "Een lexicon uitspraak is een verzameling van woorden of zinnen samen met hun uitspraak, die bestaan uit letters en tekens vanaf een ondersteunde fonetische alfabet omzetten. U kunt een lexicon gebruiken om op te geven van aangepaste uitspraak voor gespecialiseerde woordenlijst in uw toepassing.       Opgegeven in een bestand met externe lexicon uitspraak hebben voorrang op de uitspraak van de interne lexicon spraak-synthesizer of de woordenlijst. Echter uitspraak inline opgegeven in de prompts gemaakt met een van de <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, of <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>methoden hebben voorrang boven de opgegeven in een lexicon uitspraak.</xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> </xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> </xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> Inline uitspraak gelden alleen voor één exemplaar van een woord. Zie [Lexicons en fonetische alfabet](http://msdn.microsoft.com/en-us/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) voor meer informatie.       U kunt meerdere lexicons toevoegen aan een <xref:System.Speech.Synthesis.SpeechSynthesizer>-object. Twee waarden worden momenteel ondersteund voor de `mediaType` parameter:-de waarde `application/pls+xml` geeft aan dat het lexicon voldoet aan de [uitspraak Lexicon specificatie (PLS) versie 1.0](http://go.microsoft.com/fwlink/?LinkId=201766).</xref:System.Speech.Synthesis.SpeechSynthesizer> Dit is de gewenste indeling te gebruiken.      -De waarde `application/vdn.ms-sapi-lex` geeft aan dat de indeling lexicon niet-gecomprimeerde Lexicon, een Microsoft-bedrijfseigen-indeling. Dit is een oudere indeling en het is raadzaam dat u de PLS-indeling die hierboven worden beschreven."
  example:
  - "The following example demonstrates the effect of adding and removing a lexicon that contains a custom pronunciation for the word \"blue\". The lexicon defines the pronunciation of \"blue\" to sound like \"bleep\". While the lexicon is loaded, the speech synthesizer uses the pronunciation defined in the lexicon.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Speak the prompt.  \n        synth.Speak(\"My favorite color is blue.\");  \n  \n        // Add a lexicon that changes the pronunciation of \"blue\".  \n        synth.AddLexicon(new Uri(\"C:\\\\test\\\\Blue.pls\"), \"application/pls+xml\");  \n  \n        // Speak the prompt.  \n        synth.Speak(\"My favorite color is blue.\");  \n  \n        // Remove the lexicon.  \n        synth.RemoveLexicon(new Uri(\"C:\\\\test\\\\Blue.pls\"));  \n  \n        // Speak the prompt.  \n        synth.Speak(\"My favorite color is blue.\");  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```  \n  \n Following are the contents of the lexicon file Blue.pls:  \n  \n```xml  \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n  \n<lexicon version=\"1.0\"   \n      xmlns=\"http://www.w3.org/2005/01/pronunciation-lexicon\"  \n      alphabet=\"x-microsoft-ups\" xml:lang=\"en-US\">  \n  \n  <lexeme>  \n    <grapheme> blue </grapheme>  \n    <phoneme> B L I P </phoneme>  \n  </lexeme>  \n  \n</lexicon>  \n```"
  syntax:
    content: public void AddLexicon (Uri uri, string mediaType);
    parameters:
    - id: uri
      type: System.Uri
      description: "De locatie van de informatie lexicon."
    - id: mediaType
      type: System.String
      description: "Het mediatype van het lexicon. Waarden voor Media zijn niet hoofdlettergevoelig."
  overload: System.Speech.Synthesis.SpeechSynthesizer.AddLexicon*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached
  id: BookmarkReached
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: BookmarkReached
  nameWithType: SpeechSynthesizer.BookmarkReached
  fullName: System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Deze gebeurtenis treedt op wanneer de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> een bladwijzer in een prompt wordt aangetroffen."
  remarks: "De <xref:System.Speech.Synthesis.SpeechSynthesizer>Deze gebeurtenis genereert tijdens het verwerken van een van de <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>methoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> Zie voor informatie over gegevens die zijn gekoppeld aan de gebeurtenis <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</xref:System.Speech.Synthesis.BookmarkReachedEventArgs>       U kunt met behulp van bladwijzers toevoegen de <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A>methode.</xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A>"
  example:
  - "The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback. The handler for the BookmarkReached event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToWaveFile(@\"C:\\test\\weather.wav\");  \n  \n        // Create a SoundPlayer instance to play the output audio file.  \n        System.Media.SoundPlayer m_SoundPlayer =  \n          new System.Media.SoundPlayer(@\"C:\\test\\weather.wav\");  \n  \n        // Build a prompt and append bookmarks.  \n        PromptBuilder builder = new PromptBuilder(  \n          new System.Globalization.CultureInfo(\"en-US\"));  \n        builder.AppendText(  \n          \"The weather forecast for today is partly cloudy with some sun breaks.\");  \n        builder.AppendBookmark(\"Daytime forecast\");  \n        builder.AppendText(  \n          \"Tonight's weather will be cloudy with a 30% chance of showers.\");  \n        builder.AppendBookmark(\"Nightime forecast\");  \n  \n        // Add a handler for the BookmarkReached event.  \n        synth.BookmarkReached +=  \n          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  \n  \n        // Speak the prompt and play back the output file.  \n        synth.Speak(builder);  \n        m_SoundPlayer.Play();  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  \n    // Write the name and position of the bookmark to the console.  \n    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  \n    {  \n      Console.WriteLine(\"Bookmark ({0}) reached at: {1} \",  \n        e.Bookmark, e.AudioPosition);  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.BookmarkReachedEventArgs> BookmarkReached;
    return:
      type: System.EventHandler{System.Speech.Synthesis.BookmarkReachedEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Dispose
  id: Dispose
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Dispose()
  nameWithType: SpeechSynthesizer.Dispose()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Dispose()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Verwijdert de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> object en releases resources gebruikt tijdens de sessie."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Finalize
  id: Finalize
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Finalize()
  nameWithType: SpeechSynthesizer.Finalize()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Finalize()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Veiligheidsmaatregel om op te schonen resources in het geval dat de <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose*>methode is niet aangeroepen.</xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose*>"
  syntax:
    content: ~SpeechSynthesizer ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt
  id: GetCurrentlySpokenPrompt
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: GetCurrentlySpokenPrompt()
  nameWithType: SpeechSynthesizer.GetCurrentlySpokenPrompt()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "De prompt opgehaald die de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> is spreken."
  remarks: ''
  example:
  - "```c#  \n  \n```"
  syntax:
    content: public System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt ();
    parameters: []
    return:
      type: System.Speech.Synthesis.Prompt
      description: "Retourneert de prompt object dat wordt momenteel gesproken."
  overload: System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices
  id: GetInstalledVoices
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: GetInstalledVoices()
  nameWithType: SpeechSynthesizer.GetInstalledVoices()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Resultaat van de geïnstalleerde spraak stemmen synthese (spraak)."
  remarks: "Een stem is een engine voor spraak-synthese (spraak of TTS) die is geïnstalleerd op het systeem."
  example:
  - "The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \nusing System.Speech.AudioFormat;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Output information about all of the installed voices.   \n        Console.WriteLine(\"Installed voices -\");  \n        foreach (InstalledVoice voice in synth.GetInstalledVoices())  \n        {  \n          VoiceInfo info = voice.VoiceInfo;  \n          string AudioFormats = \"\";  \n          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  \n          {  \n            AudioFormats += String.Format(\"{0}\\n\",  \n            fmt.EncodingFormat.ToString());  \n          }  \n  \n          Console.WriteLine(\" Name:          \" + info.Name);  \n          Console.WriteLine(\" Culture:       \" + info.Culture);  \n          Console.WriteLine(\" Age:           \" + info.Age);  \n          Console.WriteLine(\" Gender:        \" + info.Gender);  \n          Console.WriteLine(\" Description:   \" + info.Description);  \n          Console.WriteLine(\" ID:            \" + info.Id);  \n          Console.WriteLine(\" Enabled:       \" + voice.Enabled);  \n          if (info.SupportedAudioFormats.Count != 0)  \n          {  \n            Console.WriteLine( \" Audio formats: \" + AudioFormats);  \n          }  \n          else  \n          {  \n            Console.WriteLine(\" No supported audio formats found\");  \n          }  \n  \n          string AdditionalInfo = \"\";  \n          foreach (string key in info.AdditionalInfo.Keys)  \n          {  \n            AdditionalInfo += String.Format(\"  {0}: {1}\\n\", key, info.AdditionalInfo[key]);  \n          }  \n  \n          Console.WriteLine(\" Additional Info - \" + AdditionalInfo);  \n          Console.WriteLine();  \n        }  \n      }  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Synthesis.InstalledVoice> GetInstalledVoices ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Synthesis.InstalledVoice}
      description: "Retourneert een verzameling alleen-lezen van de stemmen op het systeem geïnstalleerd."
  overload: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)
  id: GetInstalledVoices(System.Globalization.CultureInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: GetInstalledVoices(CultureInfo)
  nameWithType: SpeechSynthesizer.GetInstalledVoices(CultureInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(CultureInfo)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Resultaat van de geïnstalleerde spraak stemmen synthese (spraak) die ondersteuning bieden voor een specifieke landinstelling."
  remarks: "Als geen van de geïnstalleerde stemmen ondersteuning voor de opgegeven landinstelling, retourneert deze methode een lege verzameling.       Microsoft Windows en de API System.Speech accepteert alle geldige taal land-codes. Als u wilt uitvoeren met de taal die is opgegeven in de eigenschap cultuur spraak, moet geen spraak synthese-engine die ondersteuning biedt voor die taal landcode worden geïnstalleerd. De synthese spraak zoekmachines die wordt geleverd bij Microsoft Windows 7 werken met de volgende taal landcodes:-en-US. Engels (Verenigde Staten) - zh-CN. Chinees (China) - zh-TW. Chinees (Taiwan) twee letters taalcodes zoals &quot;en&quot; zijn ook toegestaan."
  example:
  - "The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices that support the en-US locale.  \n  \n```c#  \nusing System;  \nusing System.Globalization;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the speech synthesizer.  \n      using (SpeechSynthesizer synthesizer = new SpeechSynthesizer())  \n      {  \n  \n        // Output information about all of the installed voices that  \n        // support the en-US locacale.   \n        Console.WriteLine(\"Installed voices for the en-US locale:\");  \n        foreach (InstalledVoice voice in  \n          synthesizer.GetInstalledVoices(new CultureInfo(\"en-US\")))  \n        {  \n          VoiceInfo info = voice.VoiceInfo;  \n          OutputVoiceInfo(info);  \n        }  \n  \n        // Output information about the current voice.  \n        Console.WriteLine();  \n        Console.WriteLine(\"Current voice:\");  \n        OutputVoiceInfo(synthesizer.Voice);  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  \n    // Display information about a synthesizer voice.  \n    private static void OutputVoiceInfo(VoiceInfo info)  \n    {  \n      Console.WriteLine(\"  Name: {0}, culture: {1}, gender: {2}, age: {3}.\",  \n        info.Name, info.Culture, info.Gender, info.Age);  \n      Console.WriteLine(\"    Description: {0}\", info.Description);  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Synthesis.InstalledVoice> GetInstalledVoices (System.Globalization.CultureInfo culture);
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: "De landinstelling die ondersteuning voor de stem bieden moet."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Synthesis.InstalledVoice}
      description: "Retourneert een verzameling alleen-lezen van de stemmen op het systeem geïnstalleerd die ondersteuning bieden voor de opgegeven landinstelling."
  overload: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Pause
  id: Pause
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Pause()
  nameWithType: SpeechSynthesizer.Pause()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Pause()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Onderbroken de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> object."
  syntax:
    content: public void Pause ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.Pause*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached
  id: PhonemeReached
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: PhonemeReached
  nameWithType: SpeechSynthesizer.PhonemeReached
  fullName: System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Deze gebeurtenis treedt op wanneer een phoneme is bereikt."
  remarks: "Een phoneme is een eenvoudige onderdeel van de taal is geschreven, meestal op een letter met een letter (of de combinatie van twee letters) die een of meer afzonderlijke geluiden vertegenwoordigt. De letter &quot;c&quot; is bijvoorbeeld een phoneme dat zoals &quot;s&quot; in &quot;cinder&quot; of &quot;k&quot; in &quot;catch klinkt&quot;. Een schriftelijke woord is een verzameling Fonemen. In een word wijzigen van een phoneme wordt gewijzigd, worden de spelling.       Een <xref:System.Speech.Synthesis.SpeechSynthesizer>exemplaar genereert een gebeurtenis PhonemeReached voor elk gedeelte van een woord dat een phoneme vormt.</xref:System.Speech.Synthesis.SpeechSynthesizer> Bijvoorbeeld: voor het woord &quot;thema&quot; genereert drie PhonemeReached gebeurtenissen; een voor het geluid &quot;e&quot;, één voor het geluid &quot;e&quot; en één voor het geluid &quot;&quot;M&quot; (me).       Zie voor een voorbeeld en informatie over gegevens die zijn gekoppeld aan de gebeurtenis <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</xref:System.Speech.Synthesis.PhonemeReachedEventArgs>"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.PhonemeReachedEventArgs> PhonemeReached;
    return:
      type: System.EventHandler{System.Speech.Synthesis.PhonemeReachedEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Rate
  id: Rate
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Rate
  nameWithType: SpeechSynthesizer.Rate
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Rate
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Opgehaald of ingesteld van de spreken frequentie van de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> object."
  remarks: ''
  example:
  - "The following example speaks a string with the speaking rate set to -2.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Set a value for the speaking rate.  \n      synth.Rate = -2;  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Speak a text string synchronously.  \n      synth.Speak(\"This example speaks a string with the speaking rate set to -2.\");  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }     \n  }    \n}  \n```"
  syntax:
    content: public int Rate { get; set; }
    return:
      type: System.Int32
      description: "Retourneert de spreken frequentie van de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> object, van 10 en 10 liggen."
  overload: System.Speech.Synthesis.SpeechSynthesizer.Rate*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)
  id: RemoveLexicon(System.Uri)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: RemoveLexicon(Uri)
  nameWithType: SpeechSynthesizer.RemoveLexicon(Uri)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(Uri)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hiermee verwijdert u een lexicon uit de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> object."
  remarks: "Zie <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>voor een voorbeeld.</xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>"
  syntax:
    content: public void RemoveLexicon (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "De locatie van het document lexicon."
  overload: System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Resume
  id: Resume
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Resume()
  nameWithType: SpeechSynthesizer.Resume()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Resume()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hervat de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> object nadat deze is onderbroken."
  syntax:
    content: public void Resume ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.Resume*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)
  id: SelectVoice(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SelectVoice(String)
  nameWithType: SpeechSynthesizer.SelectVoice(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hiermee selecteert u een specifieke stem met de naam."
  remarks: "Gebruik de <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>methode en <xref:System.Speech.Synthesis.VoiceInfo>klasse verkrijgen van de namen van geïnstalleerd spraak stemmen die u kunt selecteren.</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Als u wilt een stem selecteert, geeft u de volledige inhoud van de <xref:System.Speech.Synthesis.VoiceInfo.Name%2A>eigenschap als het argument voor de methode SelectVoice.</xref:System.Speech.Synthesis.VoiceInfo.Name%2A> De <xref:System.Speech.Synthesis.SpeechSynthesizer>object selecteert de eerste geïnstalleerde stem bevat `name` in de stem <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=fullName>eigenschap.</xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=fullName> </xref:System.Speech.Synthesis.SpeechSynthesizer> De <xref:System.Speech.Synthesis.SpeechSynthesizer>voor een vergelijking hoofdlettergevoelig, subtekenreeks om te bepalen of de stem overeenkomt met de `name`.</xref:System.Speech.Synthesis.SpeechSynthesizer>       Wanneer een toepassing wordt aangeroepen <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, de methode verifieert of elk van de stemmen in het register gevonden voldoet aan bepaalde criteria minimale.</xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Voor elke stem die mislukt de verificatie, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>stelt de <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>eigenschap `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Een toepassing een stem niet selecteren waarvan <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>eigenschap is `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> Toepassingen wordt normaal gesproken niet ingesteld een stem <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>eigenschap.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>       Selecteer een stem door geslacht, leeftijd of landinstellingen, gebruikt u een van de <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>methoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>"
  syntax:
    content: public void SelectVoice (string name);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de stem te selecteren."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SelectVoice*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)
  id: SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SelectVoiceByHints(VoiceGender)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Een stem met een specifieke geslacht selecteert."
  remarks: "Gebruik de <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>methode en <xref:System.Speech.Synthesis.VoiceInfo>klasse verkrijgen van de namen van geïnstalleerd spraak stemmen die u kunt selecteren.</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> De <xref:System.Speech.Synthesis.SpeechSynthesizer>object selecteert de eerste geïnstalleerde stem waarvan <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>eigenschap komt overeen met de `gender` parameter.</xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer>       Wanneer een toepassing wordt aangeroepen <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, de methode verifieert of elk van de stemmen in het register gevonden voldoet aan bepaalde criteria minimale.</xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Voor elke stem die mislukt de verificatie, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>stelt de <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>eigenschap `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Een toepassing een stem niet selecteren waarvan <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>eigenschap is `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> Toepassingen wordt normaal gesproken niet ingesteld een stem <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>eigenschap.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>       Selecteer een stem op basis van andere kenmerken, Zie de andere <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>methoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>       U selecteert een stem met de naam met de <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>"
  syntax:
    content: public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender);
    parameters:
    - id: gender
      type: System.Speech.Synthesis.VoiceGender
      description: "Het geslacht van de stem te selecteren."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)
  id: SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SelectVoiceByHints(VoiceGender,VoiceAge)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hiermee selecteert u een stem met een specifieke geslacht en leeftijd."
  remarks: "Gebruik de <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>methode en <xref:System.Speech.Synthesis.VoiceInfo>klasse verkrijgen van de namen van geïnstalleerd spraak stemmen die u kunt selecteren.</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> De <xref:System.Speech.Synthesis.SpeechSynthesizer>object selecteert de eerste geïnstalleerde stem waarvan <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>en <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>eigenschappen overeen met de `gender` en `age` parameters.</xref:System.Speech.Synthesis.VoiceInfo.Age%2A> </xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer>       Wanneer een toepassing wordt aangeroepen <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, de methode verifieert of elk van de stemmen in het register gevonden voldoet aan bepaalde criteria minimale.</xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Voor elke stem die mislukt de verificatie, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>stelt de <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>eigenschap `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Een toepassing een stem niet selecteren waarvan <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>eigenschap is `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> Toepassingen wordt normaal gesproken niet ingesteld een stem <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>eigenschap.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>       Selecteer een stem op basis van andere kenmerken, Zie de andere <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>methoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>       U selecteert een stem met de naam met de <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>"
  syntax:
    content: public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);
    parameters:
    - id: gender
      type: System.Speech.Synthesis.VoiceGender
      description: "Het geslacht van de stem te selecteren."
    - id: age
      type: System.Speech.Synthesis.VoiceAge
      description: "De leeftijd van de stem te selecteren."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)
  id: SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SelectVoiceByHints(VoiceGender,VoiceAge,Int32)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hiermee selecteert u een stem met een specifieke geslacht en leeftijd, op basis van de positie waarin de stemmen worden geordend."
  remarks: "Gebruik de <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>methode en <xref:System.Speech.Synthesis.VoiceInfo>klasse verkrijgen van de namen van geïnstalleerd spraak stemmen die u kunt selecteren.</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> De <xref:System.Speech.Synthesis.SpeechSynthesizer>object vindt geïnstalleerd voices waarvan <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>en <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>eigenschappen overeen met de `gender` en `age` parameters.</xref:System.Speech.Synthesis.VoiceInfo.Age%2A> </xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> De <xref:System.Speech.Synthesis.SpeechSynthesizer>telt de overeenkomsten gezocht en retourneert de stem wanneer de telling is gelijk aan de `voiceAlternate` parameter.</xref:System.Speech.Synthesis.SpeechSynthesizer>       Wanneer een toepassing wordt aangeroepen <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, de methode verifieert of elk van de stemmen in het register gevonden voldoet aan bepaalde criteria minimale.</xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Voor elke stem die mislukt de verificatie, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>stelt de <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>eigenschap `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Een toepassing een stem niet selecteren waarvan <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>eigenschap is `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> Toepassingen wordt normaal gesproken niet ingesteld een stem <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>eigenschap.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>       Selecteer een stem op basis van andere kenmerken, Zie de andere <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>overloads.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>       U selecteert een stem met de naam met de <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>"
  syntax:
    content: public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);
    parameters:
    - id: gender
      type: System.Speech.Synthesis.VoiceGender
      description: "Het geslacht van de stem te selecteren."
    - id: age
      type: System.Speech.Synthesis.VoiceAge
      description: "De leeftijd van de stem te selecteren."
    - id: voiceAlternate
      type: System.Int32
      description: "De positie van de stem te selecteren."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)
  id: SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hiermee selecteert u een stem met een specifieke geslacht, leeftijd en landinstellingen, op basis van de positie waarin de stemmen worden geordend."
  remarks: "De <xref:System.Speech.Synthesis.SpeechSynthesizer>object vindt waarvan voices <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, en <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A>eigenschappen overeen met de `gender`, `age`, en `culture` parameters.</xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> </xref:System.Speech.Synthesis.VoiceInfo.Age%2A> </xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> De <xref:System.Speech.Synthesis.SpeechSynthesizer>telt de overeenkomsten gezocht en retourneert de stem wanneer de telling is gelijk aan de `voiceAlternate` parameter.</xref:System.Speech.Synthesis.SpeechSynthesizer>       Microsoft Windows en de API System.Speech accepteert alle geldige taal land-codes. Uitvoeren van spraak met de taal die is opgegeven in de `culture` parameter, geen spraak synthese-engine die ondersteuning biedt voor die taal landcode moet worden geïnstalleerd. De synthese spraak zoekmachines die wordt geleverd bij Microsoft Windows 7 werken met de volgende taal landcodes:-en-US. Engels (Verenigde Staten) - zh-CN. Chinees (China) - zh-TW. Chinees (Taiwan) twee letters taalcodes zoals &quot;en&quot; zijn ook toegestaan.       Wanneer een toepassing wordt aangeroepen <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, de methode verifieert of elk van de stemmen in het register gevonden voldoet aan bepaalde criteria minimale.</xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Voor elke stem die mislukt de verificatie, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>stelt de <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>eigenschap `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Een toepassing een stem niet selecteren waarvan <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>eigenschap is `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> Toepassingen wordt normaal gesproken niet ingesteld een stem <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>eigenschap.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>       Selecteer een stem op basis van andere kenmerken, Zie de andere <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>overloads.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>       U selecteert een stem met de naam met de <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>"
  syntax:
    content: public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate, System.Globalization.CultureInfo culture);
    parameters:
    - id: gender
      type: System.Speech.Synthesis.VoiceGender
      description: "Het geslacht van de stem te selecteren."
    - id: age
      type: System.Speech.Synthesis.VoiceAge
      description: "De leeftijd van de stem te selecteren."
    - id: voiceAlternate
      type: System.Int32
      description: "De positie van de stem te selecteren."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "De landinstellingen van de stem te selecteren."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  id: SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)
  nameWithType: SpeechSynthesizer.SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hiermee configureert u de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> object uitvoer toevoegen aan een audiostroom."
  remarks: "Roep <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>voor het vrijgeven van de <xref:System.Speech.Synthesis.SpeechSynthesizer>van verwijzing naar de stroom.</xref:System.Speech.Synthesis.SpeechSynthesizer> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>       Zie voor een andere configuratieopties uitvoer de <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, en <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>methoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>"
  syntax:
    content: public void SetOutputToAudioStream (System.IO.Stream audioDestination, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);
    parameters:
    - id: audioDestination
      type: System.IO.Stream
      description: "De stroom aan waarnaar synthese uitvoer toevoegen."
    - id: formatInfo
      type: System.Speech.AudioFormat.SpeechAudioFormatInfo
      description: "De indeling moet worden gebruikt voor de uitvoer synthese."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice
  id: SetOutputToDefaultAudioDevice
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SetOutputToDefaultAudioDevice()
  nameWithType: SpeechSynthesizer.SetOutputToDefaultAudioDevice()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hiermee configureert u de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> object uitvoer naar het standaardaudioapparaat verzenden."
  remarks: "U kunt de **geluid** venster in het Windows- **Configuratiescherm** voor het configureren van de standaardaudioapparaat voor de computer.       Zie voor een andere configuratieopties uitvoer de <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, en <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>methoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>"
  example:
  - "The following example uses the synthesizer to speak a phrase to the default audio output.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the speech synthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the synthesizer to send output to the default audio device.  \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Speak a phrase.  \n        synth.Speak(\"This is sample text-to-speech output.\");  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public void SetOutputToDefaultAudioDevice ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull
  id: SetOutputToNull
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SetOutputToNull()
  nameWithType: SpeechSynthesizer.SetOutputToNull()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hiermee configureert u de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> object niet uitvoer van synthese bewerkingen verzenden naar een apparaat, bestand of stroom."
  remarks: "Gebruik deze methode voor het vrijgeven van de <xref:System.Speech.Synthesis.SpeechSynthesizer>van verwijzing naar een bestand of stroom.</xref:System.Speech.Synthesis.SpeechSynthesizer> Zie <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>voor een voorbeeld.</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>       Zie voor een andere configuratieopties uitvoer de <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, en <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>methoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>"
  syntax:
    content: public void SetOutputToNull ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)
  id: SetOutputToWaveFile(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SetOutputToWaveFile(String)
  nameWithType: SpeechSynthesizer.SetOutputToWaveFile(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hiermee configureert u de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> uitvoer toevoegen aan een bestand met wave-indeling audio-object."
  remarks: "Voor het configureren van de uitvoer en de audio-indeling opgeven, gebruikt u de <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>"
  example:
  - "The following example uses an instance of <xref:System.Media.SoundPlayer> to play a prompt that has been output to a .wav file. Because the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> call is asynchronous, the <xref:System.Media.SoundPlayer> instance is created (and the <xref:System.Media.SoundPlayer.Play%2A> method invoked) in the handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToWaveFile(@\"C:\\Test\\Sample.wav\");  \n  \n      // Register for the SpeakCompleted event.  \n      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  \n  \n      // Build a prompt.  \n      PromptBuilder builder = new PromptBuilder();  \n      builder.AppendText(\"This sample asynchronously speaks a prompt to a WAVE file.\");  \n  \n      // Speak the string asynchronously.  \n      synth.SpeakAsync(builder);  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  \n    // Handle the SpeakCompleted event.  \n    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  \n    {  \n  \n      // Create a SoundPlayer instance to play the output audio file.  \n      System.Media.SoundPlayer m_SoundPlayer =  \n        new System.Media.SoundPlayer(@\"C:\\Test\\Sample.wav\");  \n  \n      //  Play the output file.  \n      m_SoundPlayer.Play();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public void SetOutputToWaveFile (string path);
    parameters:
    - id: path
      type: System.String
      description: "Het pad naar het bestand."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  id: SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SetOutputToWaveFile(String,SpeechAudioFormatInfo)
  nameWithType: SpeechSynthesizer.SetOutputToWaveFile(String,SpeechAudioFormatInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(String,SpeechAudioFormatInfo)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hiermee configureert u de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> object uitvoer toevoegen aan een bestand Wave audio-indeling in een specifieke indeling."
  remarks: ''
  example:
  - "The following example specifies the format of the output of speech synthesis and sends it to a WAV file.  \n  \n```c#  \nusing System;  \nusing System.IO;  \nusing System.Speech.Synthesis;  \nusing System.Speech.AudioFormat;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToWaveFile(@\"C:\\temp\\test.wav\",   \n          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  \n  \n        // Create a SoundPlayer instance to play output audio file.  \n        System.Media.SoundPlayer m_SoundPlayer =   \n          new System.Media.SoundPlayer(@\"C:\\temp\\test.wav\");  \n  \n        // Build a prompt.  \n        PromptBuilder builder = new PromptBuilder();  \n        builder.AppendText(\"This is sample output to a WAVE file.\");  \n  \n        // Speak the prompt.  \n        synth.Speak(builder);  \n        m_SoundPlayer.Play();  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public void SetOutputToWaveFile (string path, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);
    parameters:
    - id: path
      type: System.String
      description: "Het pad naar het bestand."
    - id: formatInfo
      type: System.Speech.AudioFormat.SpeechAudioFormatInfo
      description: "De gegevens van de audio-indeling."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)
  id: SetOutputToWaveStream(System.IO.Stream)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SetOutputToWaveStream(Stream)
  nameWithType: SpeechSynthesizer.SetOutputToWaveStream(Stream)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(Stream)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hiermee configureert u de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> uitvoer toevoegen aan een stroom met wave-indeling audio-object."
  remarks: "De <xref:System.Speech.Synthesis.SpeechSynthesizer>verwijzing naar de stroom, configureer de synthesizer-uitvoer, bijvoorbeeld door het aanroepen van <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> de</xref:System.Speech.Synthesis.SpeechSynthesizer> vrijgeven       Zie voor een andere configuratieopties uitvoer de <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, en <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>methoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>"
  example:
  - "The following example outputs a phrase to a WAV stream.  \n  \n```c#  \nusing System;  \nusing System.IO;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the speech synthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      using (MemoryStream stream = new MemoryStream())  \n      {  \n  \n        // Create a SoundPlayer instance to play the output audio file.  \n        MemoryStream streamAudio = new MemoryStream();  \n        System.Media.SoundPlayer m_SoundPlayer = new System.Media.SoundPlayer();  \n  \n        // Configure the synthesizer to output to an audio stream.  \n        synth.SetOutputToWaveStream(streamAudio);  \n  \n        // Speak a phrase.  \n        synth.Speak(\"This is sample text-to-speech output.\");  \n        streamAudio.Position = 0;  \n        m_SoundPlayer.Stream = streamAudio;  \n        m_SoundPlayer.Play();  \n  \n        // Set the synthesizer output to null to release the stream.   \n        synth.SetOutputToNull();  \n  \n        // Insert code to persist or process the stream contents here.  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public void SetOutputToWaveStream (System.IO.Stream audioDestination);
    parameters:
    - id: audioDestination
      type: System.IO.Stream
      description: "De stroom aan waarnaar synthese uitvoer toevoegen."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)
  id: Speak(System.Speech.Synthesis.Prompt)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Speak(Prompt)
  nameWithType: SpeechSynthesizer.Speak(Prompt)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Speak(Prompt)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Synchroon spreekt u de inhoud van een <xref href=&quot;System.Speech.Synthesis.Prompt&quot;> </xref> object."
  remarks: "De inhoud van een <xref:System.Speech.Synthesis.Prompt>object, gebruik <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> </xref:System.Speech.Synthesis.Prompt> asynchroon spreken"
  example:
  - "The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the Speak method.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Create a prompt from a string.  \n        Prompt color = new Prompt(\"What is your favorite color?\");  \n  \n        // Speak the contents of the prompt synchronously.  \n        synth.Speak(color);  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public void Speak (System.Speech.Synthesis.Prompt prompt);
    parameters:
    - id: prompt
      type: System.Speech.Synthesis.Prompt
      description: "De inhoud te spreken."
  overload: System.Speech.Synthesis.SpeechSynthesizer.Speak*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)
  id: Speak(System.Speech.Synthesis.PromptBuilder)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Speak(PromptBuilder)
  nameWithType: SpeechSynthesizer.Speak(PromptBuilder)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Speak(PromptBuilder)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Synchroon spreekt u de inhoud van een <xref href=&quot;System.Speech.Synthesis.PromptBuilder&quot;> </xref> object."
  remarks: "De inhoud van een <xref:System.Speech.Synthesis.PromptBuilder>object, gebruik <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> </xref:System.Speech.Synthesis.PromptBuilder> asynchroon spreken"
  example:
  - "The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the Speak method.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Create a PromptBuilder object and append a text string.  \n        PromptBuilder song = new PromptBuilder();  \n        song.AppendText(\"Say the name of the song you want to hear\");  \n  \n        // Speak the contents of the prompt synchronously.  \n        synth.Speak(song);  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public void Speak (System.Speech.Synthesis.PromptBuilder promptBuilder);
    parameters:
    - id: promptBuilder
      type: System.Speech.Synthesis.PromptBuilder
      description: "De inhoud te spreken."
  overload: System.Speech.Synthesis.SpeechSynthesizer.Speak*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)
  id: Speak(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Speak(String)
  nameWithType: SpeechSynthesizer.Speak(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Speak(String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Synchroon spreekt de inhoud van een tekenreeks."
  remarks: "Een tekenreeks waarin SSML-opmaak synchroon spreken, gebruiken de <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> Voor het asynchroon spreekt de inhoud van een tekenreeks, gebruiken de <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>"
  example:
  - "As shown in the following example, the Speak method provides the simplest means to generate speech output synchronously.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Speak a string synchronously.  \n        synth.Speak(\"What is your favorite color?\");  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public void Speak (string textToSpeak);
    parameters:
    - id: textToSpeak
      type: System.String
      description: "De tekst te spreken."
  overload: System.Speech.Synthesis.SpeechSynthesizer.Speak*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)
  id: SpeakAsync(System.Speech.Synthesis.Prompt)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakAsync(Prompt)
  nameWithType: SpeechSynthesizer.SpeakAsync(Prompt)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(Prompt)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "De inhoud van asynchroon uitgesproken een <xref href=&quot;System.Speech.Synthesis.Prompt&quot;> </xref> object."
  remarks: "U kunt annuleren asynchrone spreken van een bericht waarin de <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>of de <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>       De inhoud van een <xref:System.Speech.Synthesis.Prompt>object, gebruik <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> </xref:System.Speech.Synthesis.Prompt> synchroon spreken"
  example:
  - "The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the SpeakAsync method.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Create a prompt from a string.  \n      Prompt color = new Prompt(\"What is your favorite color?\");  \n  \n      // Speak the contents of the prompt asynchronously.  \n      synth.SpeakAsync(color);  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public void SpeakAsync (System.Speech.Synthesis.Prompt prompt);
    parameters:
    - id: prompt
      type: System.Speech.Synthesis.Prompt
      description: "De inhoud te spreken."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)
  id: SpeakAsync(System.Speech.Synthesis.PromptBuilder)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakAsync(PromptBuilder)
  nameWithType: SpeechSynthesizer.SpeakAsync(PromptBuilder)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(PromptBuilder)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "De inhoud van asynchroon uitgesproken een <xref href=&quot;System.Speech.Synthesis.PromptBuilder&quot;> </xref> object."
  remarks: "De inhoud van een <xref:System.Speech.Synthesis.PromptBuilder>object, gebruik <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> </xref:System.Speech.Synthesis.PromptBuilder> synchroon spreken"
  example:
  - "The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the SpeakAsync method.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Create a PromptBuilder object and append a text string.  \n      PromptBuilder song = new PromptBuilder();  \n      song.AppendText(\"Say the name of the song you want to hear\");  \n  \n      // Speak the contents of the prompt asynchronously.  \n      synth.SpeakAsync(song);  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public System.Speech.Synthesis.Prompt SpeakAsync (System.Speech.Synthesis.PromptBuilder promptBuilder);
    parameters:
    - id: promptBuilder
      type: System.Speech.Synthesis.PromptBuilder
      description: "De inhoud te spreken."
    return:
      type: System.Speech.Synthesis.Prompt
      description: "Retourneert het object waarop de inhoud te spreken."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)
  id: SpeakAsync(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakAsync(String)
  nameWithType: SpeechSynthesizer.SpeakAsync(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Asynchroon spreekt de inhoud van een tekenreeks."
  remarks: "Asynchroon spreken een tekenreeks waarin SSML-opmaak, gebruiken de <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> Synchroon spreken de inhoud van een tekenreeks, gebruiken de <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> U kunt annuleren asynchrone spreken van een bericht waarin de <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>of de <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>"
  example:
  - "As shown in the following example, the SpeakAsync method provides the simplest means to generate speech output asynchronously.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Speak a string asynchronously.  \n      synth.SpeakAsync(\"What is your favorite color?\");  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public System.Speech.Synthesis.Prompt SpeakAsync (string textToSpeak);
    parameters:
    - id: textToSpeak
      type: System.String
      description: "De tekst te spreken."
    return:
      type: System.Speech.Synthesis.Prompt
      description: "Retourneert het object waarop de inhoud te spreken."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)
  id: SpeakAsyncCancel(System.Speech.Synthesis.Prompt)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakAsyncCancel(Prompt)
  nameWithType: SpeechSynthesizer.SpeakAsyncCancel(Prompt)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(Prompt)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hiermee annuleert u de asynchrone synthese-bewerking voor de opdrachtprompt in de wachtrij."
  remarks: "U kunt deze methode ook gebruiken om te annuleren een asynchrone bewerking voor de volgende uitspreken:-de inhoud van een <xref:System.String>opgegeven door een <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName> </xref:System.String>      -De inhoud van een <xref:System.Speech.Synthesis.PromptBuilder>opgegeven door een <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName> </xref:System.Speech.Synthesis.PromptBuilder>      -De inhoud van een <xref:System.String>met SSML opgegeven door een <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.String>       Als u aanroept <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName>, of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech maakt een <xref:System.Speech.Synthesis.Prompt>object en gevuld met de inhoud van de methode parameter en retourneert de <xref:System.Speech.Synthesis.Prompt>object.</xref:System.Speech.Synthesis.Prompt> </xref:System.Speech.Synthesis.Prompt> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName> Als u een kopie van de geretourneerde behoudt <xref:System.Speech.Synthesis.Prompt>, kunt u het doorgeven in SpeakAsyncCancel annuleren spreken inhoud die zijn opgegeven in een <xref:System.String>of een <xref:System.Speech.Synthesis.PromptBuilder>object.</xref:System.Speech.Synthesis.PromptBuilder> </xref:System.String> </xref:System.Speech.Synthesis.Prompt>"
  syntax:
    content: public void SpeakAsyncCancel (System.Speech.Synthesis.Prompt prompt);
    parameters:
    - id: prompt
      type: System.Speech.Synthesis.Prompt
      description: "De inhoud waarvoor een bewerking speak te annuleren."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll
  id: SpeakAsyncCancelAll
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakAsyncCancelAll()
  nameWithType: SpeechSynthesizer.SpeakAsyncCancelAll()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hiermee worden alle in de wachtrij, asynchroon, spraak synthese operations geannuleerd."
  remarks: ''
  example:
  - "The following example show a use of SpeakAsyncCancelAll to cancel the asynchronous speaking of a prompt, so that a new prompt can be spoken. Note that the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event fires when a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation is cancelled.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \nusing System.Threading;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Subscribe to the StateChanged event.  \n      synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  \n  \n      // Subscribe to the SpeakProgress event.  \n      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  \n  \n      // Subscribe to the SpeakCompleted event.  \n      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  \n  \n      // Begin speaking a text string asynchronously.  \n      synth.SpeakAsync(\"Speech is an effective and natural way for people to interact with applications, \" +  \n        \"complementing or even replacing the use of mice, keyboards, controllers, and gestures.\");  \n  \n      // Speak for four seconds.  \n      Thread.Sleep(4000);  \n  \n      // Cancel the SpeakAsync operation and wait one second.  \n      synth.SpeakAsyncCancelAll();  \n      Thread.Sleep(1000);  \n  \n      // Speak a new text string.  \n      synth.Speak(\"An urgent email message has arrived. Do you want to hear it?\");  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  \n    // Write to the console when the SpeakAsync operation has been cancelled.  \n    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  \n    {  \n      Console.WriteLine(\"\\nThe SpeakAsync operation was cancelled!!\");  \n    }  \n  \n    // When it changes, write the state of the SpeechSynthesizer to the console.  \n    static void synth_StateChanged(object sender, StateChangedEventArgs e)  \n    {  \n      Console.WriteLine(\"\\nSynthesizer State: {0}    Previous State: {1}\\n\", e.State, e.PreviousState);  \n    }  \n  \n    // Write the text being spoken by the SpeechSynthesizer to the console.  \n    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  \n    {  \n      Console.WriteLine(e.Text);  \n    }      \n  }    \n}  \n  \n```"
  syntax:
    content: public void SpeakAsyncCancelAll ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted
  id: SpeakCompleted
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakCompleted
  nameWithType: SpeechSynthesizer.SpeakCompleted
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Deze gebeurtenis treedt op wanneer de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> is voltooid spreken van een prompt."
  remarks: "De <xref:System.Speech.Synthesis.SpeechSynthesizer>wordt gegeven van de gebeurtenis SpeakCompleted na het voltooien van een van de <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>methoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer>       De <xref:System.Speech.Synthesis.SpeakCompletedEventArgs>klasse heeft geen eigenschappen en retourneert geen gegevens van de gebeurtenis SpeakCompleted.</xref:System.Speech.Synthesis.SpeakCompletedEventArgs> Dit wordt geleverd om in te schakelen auteurs van toepassingen gebeurtenis-handlers voor de gebeurtenis SpeakCompleted schrijven."
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.SpeakCompletedEventArgs> SpeakCompleted;
    return:
      type: System.EventHandler{System.Speech.Synthesis.SpeakCompletedEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress
  id: SpeakProgress
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakProgress
  nameWithType: SpeechSynthesizer.SpeakProgress
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Verhoogde na de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> spreekt u elke afzonderlijke word van een prompt."
  remarks: "De <xref:System.Speech.Synthesis.SpeechSynthesizer>Deze gebeurtenis voor elk nieuw woord dat er een prompt met behulp van een spreekt genereert de <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>methoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> Zie voor een voorbeeld en meer informatie over gegevens die zijn gekoppeld aan de gebeurtenis <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</xref:System.Speech.Synthesis.SpeakProgressEventArgs>"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.SpeakProgressEventArgs> SpeakProgress;
    return:
      type: System.EventHandler{System.Speech.Synthesis.SpeakProgressEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)
  id: SpeakSsml(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakSsml(String)
  nameWithType: SpeechSynthesizer.SpeakSsml(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Synchroon spreekt een <xref:System.String>die SSML-opmaak bevat.</xref:System.String>"
  remarks: "De inhoud van de `textToSpeak` parameter moet bevatten een `speak` element en moeten voldoen aan de [spraak synthese Markup Language (SSML) versie 1.0](http://go.microsoft.com/fwlink/?LinkId=201763). Zie voor meer informatie [spraak synthese Markup Language Reference](http://msdn.microsoft.com/en-us/0c51279e-84d2-4f73-a924-8832039abf94).       Asynchroon spreken een tekenreeks waarin SSML-opmaak, gebruiken de <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> U kunt <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>initiëren synchrone spreken van een tekenreeks die geen SSML-opmaak.</xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>       Tijdens een aanroep van deze methode de <xref:System.Speech.Synthesis.SpeechSynthesizer>kunt verhogen van de volgende gebeurtenissen:- <xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged> </xref:System.Speech.Synthesis.SpeechSynthesizer> Deze gebeurtenis treedt op wanneer de spreken status van de synthesizer verandert.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> Deze gebeurtenis treedt op wanneer de synthesizer begint spraak genereren.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> Deze gebeurtenis treedt elke keer dat de synthesizer bereikt een letter of een combinatie van letters die deel uitmaken van een afzonderlijke geluid van spraak in een taal.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> Deze gebeurtenis treedt elke keer de synthesizer is voltooid spreken een woord.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> Deze gebeurtenis treedt elke keer gesproken uitvoer een wijziging in de positie van de mond of de analyseert nemen die is gebruikt vereist voor het produceren van spraak.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> Deze gebeurtenis treedt op wanneer de synthesizer een bladwijzer in een prompt optreedt.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange> Deze gebeurtenis treedt op wanneer de spreken stem voor de synthesizer wordt gewijzigd.       De <xref:System.Speech.Synthesis.SpeechSynthesizer>veroorzaakt de <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>gebeurtenis tijdens het verwerken van de methode SpeakSsml.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> </xref:System.Speech.Synthesis.SpeechSynthesizer>"
  example:
  - "The following example renders the date 1/29/2009 as a date, in month, day, year order.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Build an SSML prompt in a string.  \n      string str = \"<speak version=\\\"1.0\\\"\";  \n      str += \" xmlns=\\\"http://www.w3.org/2001/10/synthesis\\\"\";  \n      str += \" xml:lang=\\\"en-US\\\">\";  \n      str += \"<say-as type=\\\"date:mdy\\\"> 1/29/2009 </say-as>\";  \n      str += \"</speak>\";  \n  \n      // Speak the contents of the prompt asynchronously.  \n      synth.SpeakSsml(str);  \n  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public void SpeakSsml (string textToSpeak);
    parameters:
    - id: textToSpeak
      type: System.String
      description: "De SSML-tekenreeks te spreken."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)
  id: SpeakSsmlAsync(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakSsmlAsync(String)
  nameWithType: SpeechSynthesizer.SpeakSsmlAsync(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Asynchroon spreekt een <xref:System.String>die SSML-opmaak bevat.</xref:System.String>"
  remarks: "De inhoud van de `textToSpeak` parameter moet bevatten een `speak` element en moeten voldoen aan de [spraak synthese Markup Language (SSML) versie 1.0](http://go.microsoft.com/fwlink/?LinkId=201763). Zie voor meer informatie [spraak synthese Markup Language Reference](http://msdn.microsoft.com/en-us/0c51279e-84d2-4f73-a924-8832039abf94).       Een tekenreeks waarin SSML-opmaak synchroon spreken, gebruiken de <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> U kunt <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>initiëren asynchrone spreken van een tekenreeks die geen SSML-opmaak.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>       Tijdens een aanroep van deze methode de <xref:System.Speech.Synthesis.SpeechSynthesizer>kunt verhogen van de volgende gebeurtenissen:- <xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged> </xref:System.Speech.Synthesis.SpeechSynthesizer> Deze gebeurtenis treedt op wanneer de spreken status van de synthesizer verandert.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> Deze gebeurtenis treedt op wanneer de synthesizer begint spraak genereren.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> Deze gebeurtenis treedt elke keer dat de synthesizer bereikt een letter of een combinatie van letters die deel uitmaken van een afzonderlijke geluid van spraak in een taal.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> Deze gebeurtenis treedt elke keer de synthesizer is voltooid spreken een woord.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> Deze gebeurtenis treedt elke keer gesproken uitvoer een wijziging in de positie van de mond of de analyseert nemen die is gebruikt vereist voor het produceren van spraak.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> Deze gebeurtenis treedt op wanneer de synthesizer een bladwijzer in een prompt optreedt.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange> Deze gebeurtenis treedt op wanneer de spreken stem voor de synthesizer wordt gewijzigd.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> Deze gebeurtenis treedt op wanneer de synthesizer is een bewerking SpeakSsmlAsync verwerkt.       Als uw toepassing dos is niet nodig hebt om taken uit te voeren tijdens het spreken, kunt u de <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>of de <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>methode voor het genereren van spraak synchroon.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>"
  example:
  - "```  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Build an SSML prompt in a string.  \n      string str = \"<speak version=\\\"1.0\\\"\";  \n      str += \" xmlns=\\\"http://www.w3.org/2001/10/synthesis\\\"\";  \n      str += \" xml:lang=\\\"en-US\\\">\";  \n      str += \"<say-as type=\\\"date:mdy\\\"> 1/29/2009 </say-as>\";  \n      str += \"</speak>\";  \n  \n      // Speak the contents of the prompt asynchronously.  \n      synth.SpeakSsmlAsync(str);  \n  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public System.Speech.Synthesis.Prompt SpeakSsmlAsync (string textToSpeak);
    parameters:
    - id: textToSpeak
      type: System.String
      description: "De opmaak SMML spreken."
    return:
      type: System.Speech.Synthesis.Prompt
      description: "Asynchroon spreekt een <xref:System.String>die SSML-opmaak bevat.</xref:System.String>"
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted
  id: SpeakStarted
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakStarted
  nameWithType: SpeechSynthesizer.SpeakStarted
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Deze gebeurtenis treedt op wanneer de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> spreken van een prompt wordt gestart."
  remarks: "De <xref:System.Speech.Synthesis.SpeechSynthesizer>activeert deze gebeurtenis wanneer deze begint met het verwerken van een prompt met behulp van de <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>methoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer>       De <xref:System.Speech.Synthesis.SpeakStartedEventArgs>klasse heeft geen eigenschappen en retourneert geen gegevens van de gebeurtenis SpeakStarted.</xref:System.Speech.Synthesis.SpeakStartedEventArgs> Dit wordt geleverd om in te schakelen auteurs van toepassingen gebeurtenis-handlers voor de gebeurtenis SpeakStarted schrijven."
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.SpeakStartedEventArgs> SpeakStarted;
    return:
      type: System.EventHandler{System.Speech.Synthesis.SpeakStartedEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.State
  id: State
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: State
  nameWithType: SpeechSynthesizer.State
  fullName: System.Speech.Synthesis.SpeechSynthesizer.State
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Opgehaald spreken de huidige status van de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> object."
  remarks: "Ophalen van de nieuwe status van de <xref:System.Speech.Synthesis.SpeechSynthesizer>nadat deze wijzigingen, gebruikt u de <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A>eigenschap van de <xref:System.Speech.Synthesis.StateChangedEventArgs>klasse.</xref:System.Speech.Synthesis.StateChangedEventArgs> </xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer>"
  example:
  - "The following example illustrates the state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> before, during, and after speaking a prompt.  \n  \n```c#  \nusing System;  \nusing System.Threading;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer() ;  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Subscribe to the SpeakProgress event.         \n      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  \n  \n      // Write the state of the SpeechSynthesizer to the console.  \n      Console.WriteLine(\"Current Synthesizer state: \" + synth.State + \"\\n\");  \n  \n      // Speak a string asynchronously.  \n      synth.SpeakAsync(\"What is your favorite color?\");  \n  \n      // Write the state of the SpeechSynthesizer to the console while it is speaking.  \n      Thread.Sleep(1000);  \n      Console.WriteLine(\"\\n - Current Synthesizer state: \" + synth.State + \" - \\n\");  \n  \n      // Write the state of the SpeechSynthesizer to the console after it is done speaking.  \n      Thread.Sleep(2000);  \n      Console.WriteLine(\"\\nCurrent Synthesizer state: \" + synth.State);  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  \n    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  \n    {  \n      Console.WriteLine(e.Text);  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public System.Speech.Synthesis.SynthesizerState State { get; }
    return:
      type: System.Speech.Synthesis.SynthesizerState
      description: "Retourneert de huidige spreken status van de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> object."
  overload: System.Speech.Synthesis.SpeechSynthesizer.State*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.StateChanged
  id: StateChanged
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: StateChanged
  nameWithType: SpeechSynthesizer.StateChanged
  fullName: System.Speech.Synthesis.SpeechSynthesizer.StateChanged
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Deze gebeurtenis treedt op wanneer de status van de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> wijzigingen."
  remarks: "De <xref:System.Speech.Synthesis.SpeechSynthesizer>Deze gebeurtenis wordt gegeven wanneer de spreken <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A>wijzigingen.</xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> Zie voor een voorbeeld en meer informatie over gegevens die zijn gekoppeld aan de gebeurtenis <xref:System.Speech.Synthesis.StateChangedEventArgs>.</xref:System.Speech.Synthesis.StateChangedEventArgs>       Als u wilt onderbreken en hervatten van spraak synthese, gebruiken de <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A>en <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A>methoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A>"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.StateChangedEventArgs> StateChanged;
    return:
      type: System.EventHandler{System.Speech.Synthesis.StateChangedEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.VisemeReached
  id: VisemeReached
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: VisemeReached
  nameWithType: SpeechSynthesizer.VisemeReached
  fullName: System.Speech.Synthesis.SpeechSynthesizer.VisemeReached
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Deze gebeurtenis treedt op wanneer een viseme is bereikt."
  remarks: "Een viseme is de basic positie van de mond en face wanneer een phoneme spreken. Visemes zijn visuele weergaven van Fonemen.       System.Speech ondersteunt 21 visemes voor Amerikaans Engels, die elk komt met een of meer Fonemen overeen.  VisemeReached gebeurtenissen worden gegenereerd wanneer een nieuwe phoneme bereikt een andere bijbehorende viseme dan de vorige phoneme bereikt heeft. Omdat sommige visemes meer dan één phoneme vertegenwoordigen, wordt een gebeurtenis VisemeReached wordt niet gegenereerd als de volgende phoneme bereikt komt met de dezelfde viseme als de vorige phoneme overeen. Bijvoorbeeld: voor de gesproken woorden &quot;deze zone&quot; een <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>gebeurtenis is opgetreden voor de &quot;s&quot; op &quot;dit&quot; en &quot;z&quot; in &quot;zone&quot;.</xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> Een gebeurtenis VisemeReached wordt echter niet gestart voor de &quot;z&quot; in &quot;zone&quot; omdat het overeenkomt met de dezelfde viseme als &quot;s&quot; in &quot;deze&quot;.       Hier volgt een lijst van de 21 SAPI Fonemen en phoneme-groepen die met een viseme in Amerikaans Engels overeenkomen.      | Viseme | Phoneme(s) |   |------------|------------------|   |&0; | stilte |   |&1; | ae, ax, ah |   |&2; | aa |   |&3; | ao |   |&4; | ey, eh, kɔˈnɛksi |   |&5; | eraccount |   |&6; | y, iy, ih, ix |   |&7; | w, uw |   |&8; | OE |   |&9; | aw |   |&10; | oy |   |&11; | ay |   |&12; | h |   |&13; | r |   |&14; | l |   |&15; | s, z |   |&16; | servicel, h, jh, zh |   |&17; | th, dh |   |&18; | f, v |   |&19; | d, t, n |   |&20; | k, g, ng |   |&21; | p, b, m |       Voor informatie over gegevens die zijn gekoppeld aan de `VisemeReached` gebeurtenis, Zie <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</xref:System.Speech.Synthesis.VisemeReachedEventArgs>"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.VisemeReachedEventArgs> VisemeReached;
    return:
      type: System.EventHandler{System.Speech.Synthesis.VisemeReachedEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Voice
  id: Voice
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Voice
  nameWithType: SpeechSynthesizer.Voice
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Voice
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hiermee haalt u informatie over de huidige stem van de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> object."
  remarks: "Wanneer u een nieuwe initialiseren <xref:System.Speech.Synthesis.SpeechSynthesizer>, wordt de standaard system stem.</xref:System.Speech.Synthesis.SpeechSynthesizer> Voor het configureren van de <xref:System.Speech.Synthesis.SpeechSynthesizer>-object op voor een van de geïnstalleerde spraak synthese stemmen, gebruikt u de <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>of <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>methode.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> Als u informatie over de stemmen worden geïnstalleerd, gebruikt u de <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>methode en de <xref:System.Speech.Synthesis.VoiceInfo>klasse.</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>"
  example:
  - "The following example initializes an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer>and gets information about the current voice.  \n  \n```c#  \nusing System;  \nusing System.IO;  \nusing System.Speech.Synthesis;  \nusing System.Speech.AudioFormat;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Get information about supported audio formats.  \n        string AudioFormats = \"\";  \n        foreach (SpeechAudioFormatInfo fmt in synth.Voice.SupportedAudioFormats)  \n        {  \n          AudioFormats += String.Format(\"{0}\\n\",  \n          fmt.EncodingFormat.ToString());  \n        }  \n  \n        // Write information about the voice to the console.  \n        Console.WriteLine(\" Name:          \" + synth.Voice.Name);  \n        Console.WriteLine(\" Culture:       \" + synth.Voice.Culture);  \n        Console.WriteLine(\" Age:           \" + synth.Voice.Age);  \n        Console.WriteLine(\" Gender:        \" + synth.Voice.Gender);  \n        Console.WriteLine(\" Description:   \" + synth.Voice.Description);  \n        Console.WriteLine(\" ID:            \" + synth.Voice.Id);  \n        if (synth.Voice.SupportedAudioFormats.Count != 0)  \n        {  \n          Console.WriteLine(\" Audio formats: \" + AudioFormats);  \n        }  \n        else  \n        {  \n          Console.WriteLine(\" No supported audio formats found\");  \n        }  \n  \n        // Get additional information about the voice.  \n        string AdditionalInfo = \"\";  \n        foreach (string key in synth.Voice.AdditionalInfo.Keys)  \n        {  \n          AdditionalInfo += String.Format(\"  {0}: {1}\\n\",  \n            key, synth.Voice.AdditionalInfo[key]);  \n        }  \n  \n        Console.WriteLine(\" Additional Info - \" + AdditionalInfo);  \n        Console.WriteLine();  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public System.Speech.Synthesis.VoiceInfo Voice { get; }
    return:
      type: System.Speech.Synthesis.VoiceInfo
      description: "Retourneert informatie over de huidige stem van de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> object."
  overload: System.Speech.Synthesis.SpeechSynthesizer.Voice*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.VoiceChange
  id: VoiceChange
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: VoiceChange
  nameWithType: SpeechSynthesizer.VoiceChange
  fullName: System.Speech.Synthesis.SpeechSynthesizer.VoiceChange
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Deze gebeurtenis treedt op wanneer de stem van de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> wijzigingen."
  remarks: "Zie voor een voorbeeld en informatie over gegevens die zijn gekoppeld aan de gebeurtenis <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</xref:System.Speech.Synthesis.VoiceChangeEventArgs>       U kunt de stem wijzigen die de <xref:System.Speech.Synthesis.SpeechSynthesizer>gebruikt met een van de <xref:System.Speech.Synthesis.PromptBuilder>van <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>methoden of de <xref:System.Speech.Synthesis.SpeechSynthesizer>van <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>of <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>methoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> </xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> </xref:System.Speech.Synthesis.PromptBuilder> </xref:System.Speech.Synthesis.SpeechSynthesizer>"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.VoiceChangeEventArgs> VoiceChange;
    return:
      type: System.EventHandler{System.Speech.Synthesis.VoiceChangeEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Volume
  id: Volume
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Volume
  nameWithType: SpeechSynthesizer.Volume
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Volume
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Ophalen of ingesteld van het volume van de uitvoer van de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> object."
  remarks: ''
  example:
  - "The following example sets the volume of the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s audio output for the synthesized voice and the WAV file.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Set the volume of the SpeechSynthesizer's ouput.  \n        synth.Volume = 60;  \n  \n        // Build a prompt containing recorded audio and synthesized speech.  \n        PromptBuilder builder = new PromptBuilder(  \n          new System.Globalization.CultureInfo(\"en-US\"));  \n        builder.AppendAudio(\"C:\\\\Test\\\\WelcomeToContosoRadio.wav\");  \n        builder.AppendText(  \n          \"The weather forecast for today is partly cloudy with some sun breaks.\");  \n  \n        // Speak the prompt.  \n        synth.Speak(builder);  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public int Volume { get; set; }
    return:
      type: System.Int32
      description: "Retourneert het volume van de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref>, tussen 0 en 100 liggen."
  overload: System.Speech.Synthesis.SpeechSynthesizer.Volume*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Synthesis.SpeechSynthesizer.#ctor
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeechSynthesizer()
  nameWithType: SpeechSynthesizer.SpeechSynthesizer()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeechSynthesizer()
- uid: System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: AddLexicon(Uri,String)
  nameWithType: SpeechSynthesizer.AddLexicon(Uri,String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(Uri,String)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: BookmarkReached
  nameWithType: SpeechSynthesizer.BookmarkReached
  fullName: System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached
- uid: System.EventHandler{System.Speech.Synthesis.BookmarkReachedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<BookmarkReachedEventArgs>
  nameWithType: EventHandler<BookmarkReachedEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.BookmarkReachedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.BookmarkReachedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.BookmarkReachedEventArgs
    name: BookmarkReachedEventArgs
    nameWithType: BookmarkReachedEventArgs
    fullName: BookmarkReachedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.Dispose
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Dispose()
  nameWithType: SpeechSynthesizer.Dispose()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Dispose()
- uid: System.Speech.Synthesis.SpeechSynthesizer.Finalize
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Finalize()
  nameWithType: SpeechSynthesizer.Finalize()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Finalize()
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: GetCurrentlySpokenPrompt()
  nameWithType: SpeechSynthesizer.GetCurrentlySpokenPrompt()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt()
- uid: System.Speech.Synthesis.Prompt
  parent: System.Speech.Synthesis
  isExternal: false
  name: Prompt
  nameWithType: Prompt
  fullName: System.Speech.Synthesis.Prompt
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: GetInstalledVoices()
  nameWithType: SpeechSynthesizer.GetInstalledVoices()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Synthesis.InstalledVoice}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<InstalledVoice>
  nameWithType: ReadOnlyCollection<InstalledVoice>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Synthesis.InstalledVoice>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Speech.Synthesis.InstalledVoice>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.InstalledVoice
    name: InstalledVoice
    nameWithType: InstalledVoice
    fullName: InstalledVoice
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: GetInstalledVoices(CultureInfo)
  nameWithType: SpeechSynthesizer.GetInstalledVoices(CultureInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Speech.Synthesis.SpeechSynthesizer.Pause
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Pause()
  nameWithType: SpeechSynthesizer.Pause()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Pause()
- uid: System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: PhonemeReached
  nameWithType: SpeechSynthesizer.PhonemeReached
  fullName: System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached
- uid: System.EventHandler{System.Speech.Synthesis.PhonemeReachedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<PhonemeReachedEventArgs>
  nameWithType: EventHandler<PhonemeReachedEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.PhonemeReachedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.PhonemeReachedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.PhonemeReachedEventArgs
    name: PhonemeReachedEventArgs
    nameWithType: PhonemeReachedEventArgs
    fullName: PhonemeReachedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.Rate
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Rate
  nameWithType: SpeechSynthesizer.Rate
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Rate
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: RemoveLexicon(Uri)
  nameWithType: SpeechSynthesizer.RemoveLexicon(Uri)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(Uri)
- uid: System.Speech.Synthesis.SpeechSynthesizer.Resume
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Resume()
  nameWithType: SpeechSynthesizer.Resume()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Resume()
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoice(String)
  nameWithType: SpeechSynthesizer.SelectVoice(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(String)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoiceByHints(VoiceGender)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender)
- uid: System.Speech.Synthesis.VoiceGender
  parent: System.Speech.Synthesis
  isExternal: false
  name: VoiceGender
  nameWithType: VoiceGender
  fullName: System.Speech.Synthesis.VoiceGender
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoiceByHints(VoiceGender,VoiceAge)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge)
- uid: System.Speech.Synthesis.VoiceAge
  parent: System.Speech.Synthesis
  isExternal: false
  name: VoiceAge
  nameWithType: VoiceAge
  fullName: System.Speech.Synthesis.VoiceAge
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoiceByHints(VoiceGender,VoiceAge,Int32)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)
  nameWithType: SpeechSynthesizer.SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo
  parent: System.Speech.AudioFormat
  isExternal: false
  name: SpeechAudioFormatInfo
  nameWithType: SpeechAudioFormatInfo
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToDefaultAudioDevice()
  nameWithType: SpeechSynthesizer.SetOutputToDefaultAudioDevice()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice()
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToNull()
  nameWithType: SpeechSynthesizer.SetOutputToNull()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull()
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToWaveFile(String)
  nameWithType: SpeechSynthesizer.SetOutputToWaveFile(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(String)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToWaveFile(String,SpeechAudioFormatInfo)
  nameWithType: SpeechSynthesizer.SetOutputToWaveFile(String,SpeechAudioFormatInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(String,SpeechAudioFormatInfo)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToWaveStream(Stream)
  nameWithType: SpeechSynthesizer.SetOutputToWaveStream(Stream)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(Stream)
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Speak(Prompt)
  nameWithType: SpeechSynthesizer.Speak(Prompt)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Speak(Prompt)
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Speak(PromptBuilder)
  nameWithType: SpeechSynthesizer.Speak(PromptBuilder)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Speak(PromptBuilder)
- uid: System.Speech.Synthesis.PromptBuilder
  parent: System.Speech.Synthesis
  isExternal: false
  name: PromptBuilder
  nameWithType: PromptBuilder
  fullName: System.Speech.Synthesis.PromptBuilder
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Speak(String)
  nameWithType: SpeechSynthesizer.Speak(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Speak(String)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsync(Prompt)
  nameWithType: SpeechSynthesizer.SpeakAsync(Prompt)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(Prompt)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsync(PromptBuilder)
  nameWithType: SpeechSynthesizer.SpeakAsync(PromptBuilder)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(PromptBuilder)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsync(String)
  nameWithType: SpeechSynthesizer.SpeakAsync(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(String)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsyncCancel(Prompt)
  nameWithType: SpeechSynthesizer.SpeakAsyncCancel(Prompt)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(Prompt)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsyncCancelAll()
  nameWithType: SpeechSynthesizer.SpeakAsyncCancelAll()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll()
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakCompleted
  nameWithType: SpeechSynthesizer.SpeakCompleted
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted
- uid: System.EventHandler{System.Speech.Synthesis.SpeakCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SpeakCompletedEventArgs>
  nameWithType: EventHandler<SpeakCompletedEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.SpeakCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.SpeakCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.SpeakCompletedEventArgs
    name: SpeakCompletedEventArgs
    nameWithType: SpeakCompletedEventArgs
    fullName: SpeakCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakProgress
  nameWithType: SpeechSynthesizer.SpeakProgress
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress
- uid: System.EventHandler{System.Speech.Synthesis.SpeakProgressEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SpeakProgressEventArgs>
  nameWithType: EventHandler<SpeakProgressEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.SpeakProgressEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.SpeakProgressEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.SpeakProgressEventArgs
    name: SpeakProgressEventArgs
    nameWithType: SpeakProgressEventArgs
    fullName: SpeakProgressEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakSsml(String)
  nameWithType: SpeechSynthesizer.SpeakSsml(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(String)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakSsmlAsync(String)
  nameWithType: SpeechSynthesizer.SpeakSsmlAsync(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(String)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakStarted
  nameWithType: SpeechSynthesizer.SpeakStarted
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted
- uid: System.EventHandler{System.Speech.Synthesis.SpeakStartedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SpeakStartedEventArgs>
  nameWithType: EventHandler<SpeakStartedEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.SpeakStartedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.SpeakStartedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.SpeakStartedEventArgs
    name: SpeakStartedEventArgs
    nameWithType: SpeakStartedEventArgs
    fullName: SpeakStartedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.State
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: State
  nameWithType: SpeechSynthesizer.State
  fullName: System.Speech.Synthesis.SpeechSynthesizer.State
- uid: System.Speech.Synthesis.SynthesizerState
  parent: System.Speech.Synthesis
  isExternal: false
  name: SynthesizerState
  nameWithType: SynthesizerState
  fullName: System.Speech.Synthesis.SynthesizerState
- uid: System.Speech.Synthesis.SpeechSynthesizer.StateChanged
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: StateChanged
  nameWithType: SpeechSynthesizer.StateChanged
  fullName: System.Speech.Synthesis.SpeechSynthesizer.StateChanged
- uid: System.EventHandler{System.Speech.Synthesis.StateChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<StateChangedEventArgs>
  nameWithType: EventHandler<StateChangedEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.StateChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.StateChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.StateChangedEventArgs
    name: StateChangedEventArgs
    nameWithType: StateChangedEventArgs
    fullName: StateChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.VisemeReached
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: VisemeReached
  nameWithType: SpeechSynthesizer.VisemeReached
  fullName: System.Speech.Synthesis.SpeechSynthesizer.VisemeReached
- uid: System.EventHandler{System.Speech.Synthesis.VisemeReachedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<VisemeReachedEventArgs>
  nameWithType: EventHandler<VisemeReachedEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.VisemeReachedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.VisemeReachedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.VisemeReachedEventArgs
    name: VisemeReachedEventArgs
    nameWithType: VisemeReachedEventArgs
    fullName: VisemeReachedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.Voice
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Voice
  nameWithType: SpeechSynthesizer.Voice
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Voice
- uid: System.Speech.Synthesis.VoiceInfo
  parent: System.Speech.Synthesis
  isExternal: false
  name: VoiceInfo
  nameWithType: VoiceInfo
  fullName: System.Speech.Synthesis.VoiceInfo
- uid: System.Speech.Synthesis.SpeechSynthesizer.VoiceChange
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: VoiceChange
  nameWithType: SpeechSynthesizer.VoiceChange
  fullName: System.Speech.Synthesis.SpeechSynthesizer.VoiceChange
- uid: System.EventHandler{System.Speech.Synthesis.VoiceChangeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<VoiceChangeEventArgs>
  nameWithType: EventHandler<VoiceChangeEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.VoiceChangeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.VoiceChangeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.VoiceChangeEventArgs
    name: VoiceChangeEventArgs
    nameWithType: VoiceChangeEventArgs
    fullName: VoiceChangeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.Volume
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Volume
  nameWithType: SpeechSynthesizer.Volume
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Volume
- uid: System.Speech.Synthesis.SpeechSynthesizer.#ctor*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeechSynthesizer
  nameWithType: SpeechSynthesizer.SpeechSynthesizer
- uid: System.Speech.Synthesis.SpeechSynthesizer.AddLexicon*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: AddLexicon
  nameWithType: SpeechSynthesizer.AddLexicon
- uid: System.Speech.Synthesis.SpeechSynthesizer.Dispose*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Dispose
  nameWithType: SpeechSynthesizer.Dispose
- uid: System.Speech.Synthesis.SpeechSynthesizer.Finalize*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Finalize
  nameWithType: SpeechSynthesizer.Finalize
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: GetCurrentlySpokenPrompt
  nameWithType: SpeechSynthesizer.GetCurrentlySpokenPrompt
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: GetInstalledVoices
  nameWithType: SpeechSynthesizer.GetInstalledVoices
- uid: System.Speech.Synthesis.SpeechSynthesizer.Pause*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Pause
  nameWithType: SpeechSynthesizer.Pause
- uid: System.Speech.Synthesis.SpeechSynthesizer.Rate*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Rate
  nameWithType: SpeechSynthesizer.Rate
- uid: System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: RemoveLexicon
  nameWithType: SpeechSynthesizer.RemoveLexicon
- uid: System.Speech.Synthesis.SpeechSynthesizer.Resume*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Resume
  nameWithType: SpeechSynthesizer.Resume
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoice*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoice
  nameWithType: SpeechSynthesizer.SelectVoice
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoiceByHints
  nameWithType: SpeechSynthesizer.SelectVoiceByHints
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToAudioStream
  nameWithType: SpeechSynthesizer.SetOutputToAudioStream
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToDefaultAudioDevice
  nameWithType: SpeechSynthesizer.SetOutputToDefaultAudioDevice
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToNull
  nameWithType: SpeechSynthesizer.SetOutputToNull
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToWaveFile
  nameWithType: SpeechSynthesizer.SetOutputToWaveFile
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToWaveStream
  nameWithType: SpeechSynthesizer.SetOutputToWaveStream
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Speak
  nameWithType: SpeechSynthesizer.Speak
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsync
  nameWithType: SpeechSynthesizer.SpeakAsync
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsyncCancel
  nameWithType: SpeechSynthesizer.SpeakAsyncCancel
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsyncCancelAll
  nameWithType: SpeechSynthesizer.SpeakAsyncCancelAll
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakSsml
  nameWithType: SpeechSynthesizer.SpeakSsml
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakSsmlAsync
  nameWithType: SpeechSynthesizer.SpeakSsmlAsync
- uid: System.Speech.Synthesis.SpeechSynthesizer.State*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: State
  nameWithType: SpeechSynthesizer.State
- uid: System.Speech.Synthesis.SpeechSynthesizer.Voice*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Voice
  nameWithType: SpeechSynthesizer.Voice
- uid: System.Speech.Synthesis.SpeechSynthesizer.Volume*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Volume
  nameWithType: SpeechSynthesizer.Volume
