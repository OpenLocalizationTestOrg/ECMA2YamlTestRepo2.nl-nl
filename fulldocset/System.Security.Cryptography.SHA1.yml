### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.SHA1
  id: SHA1
  children:
  - System.Security.Cryptography.SHA1.#ctor
  - System.Security.Cryptography.SHA1.Create
  - System.Security.Cryptography.SHA1.Create(System.String)
  langs:
  - csharp
  name: SHA1
  nameWithType: SHA1
  fullName: System.Security.Cryptography.SHA1
  type: Class
  summary: "Berekent de SHA1-hash voor de invoergegevens."
  remarks: "De hash wordt als een unieke waarde met een vaste grootte van een grote hoeveelheid gegevens die worden gebruikt. Hashes van twee sets van gegevens moeten overeenkomen met als de bijbehorende gegevens ook overeenkomt. Kleine wijzigingen in de gegevens leiden tot grote, onvoorspelbare wijzigingen in de hash.       De grootte van de hash voor het SHA1-algoritme is een 160-bits."
  example:
  - "The following example computes the SHA1 hash for `data` and stores it in `result`. This example assumes that there is a predefined constant `DATA_SIZE`.  \n  \n [!code-cs[Classic SHA1 Example#1](~/add/codesnippet/csharp/t-system.security.crypto_98_1.cs)]\n [!code-cpp[Classic SHA1 Example#1](~/add/codesnippet/cpp/t-system.security.crypto_98_1.cpp)]\n [!code-vb[Classic SHA1 Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_98_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class SHA1 : System.Security.Cryptography.HashAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.HashFinal
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.Initialize
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.SHA1.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.SHA1
  langs:
  - csharp
  name: SHA1()
  nameWithType: SHA1.SHA1()
  fullName: System.Security.Cryptography.SHA1.SHA1()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiseert een nieuw exemplaar van <xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref>."
  remarks: "U kan geen exemplaar van een abstracte klasse maken. Toepassingscode maakt een nieuw exemplaar van een afgeleide klasse."
  syntax:
    content: protected SHA1 ();
    parameters: []
  overload: System.Security.Cryptography.SHA1.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het beleid voor dit object is niet compatibel zijn met het FIPS-algoritme."
  platform:
  - net462
- uid: System.Security.Cryptography.SHA1.Create
  id: Create
  parent: System.Security.Cryptography.SHA1
  langs:
  - csharp
  name: Create()
  nameWithType: SHA1.Create()
  fullName: System.Security.Cryptography.SHA1.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Maakt een exemplaar van de standaardimplementatie van <xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref>."
  remarks: "De standaardimplementatie van <xref:System.Security.Cryptography.SHA1> <xref:System.Security.Cryptography.SHA1CryptoServiceProvider>.</xref:System.Security.Cryptography.SHA1CryptoServiceProvider> is</xref:System.Security.Cryptography.SHA1>"
  syntax:
    content: public static System.Security.Cryptography.SHA1 Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.SHA1
      description: "Een nieuw exemplaar van <xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref>."
  overload: System.Security.Cryptography.SHA1.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SHA1.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.SHA1
  langs:
  - csharp
  name: Create(String)
  nameWithType: SHA1.Create(String)
  fullName: System.Security.Cryptography.SHA1.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Maakt een exemplaar van de opgegeven implementatie van <xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref>."
  syntax:
    content: public static System.Security.Cryptography.SHA1 Create (string hashName);
    parameters:
    - id: hashName
      type: System.String
      description: "De naam van de specifieke implementatie van <xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref> moet worden gebruikt."
    return:
      type: System.Security.Cryptography.SHA1
      description: "Een nieuw exemplaar van <xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref> met de opgegeven implementatie."
  overload: System.Security.Cryptography.SHA1.Create*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: System.Security.Cryptography.HashAlgorithm
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.SHA1.#ctor
  parent: System.Security.Cryptography.SHA1
  isExternal: false
  name: SHA1()
  nameWithType: SHA1.SHA1()
  fullName: System.Security.Cryptography.SHA1.SHA1()
- uid: System.Security.Cryptography.SHA1.Create
  parent: System.Security.Cryptography.SHA1
  isExternal: false
  name: Create()
  nameWithType: SHA1.Create()
  fullName: System.Security.Cryptography.SHA1.Create()
- uid: System.Security.Cryptography.SHA1
  parent: System.Security.Cryptography
  isExternal: false
  name: SHA1
  nameWithType: SHA1
  fullName: System.Security.Cryptography.SHA1
- uid: System.Security.Cryptography.SHA1.Create(System.String)
  parent: System.Security.Cryptography.SHA1
  isExternal: false
  name: Create(String)
  nameWithType: SHA1.Create(String)
  fullName: System.Security.Cryptography.SHA1.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.SHA1.#ctor*
  parent: System.Security.Cryptography.SHA1
  isExternal: false
  name: SHA1
  nameWithType: SHA1.SHA1
- uid: System.Security.Cryptography.SHA1.Create*
  parent: System.Security.Cryptography.SHA1
  isExternal: false
  name: Create
  nameWithType: SHA1.Create
