### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DrawTreeNodeEventArgs
  id: DrawTreeNodeEventArgs
  children:
  - System.Windows.Forms.DrawTreeNodeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)
  - System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
  - System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
  - System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
  - System.Windows.Forms.DrawTreeNodeEventArgs.Node
  - System.Windows.Forms.DrawTreeNodeEventArgs.State
  langs:
  - csharp
  name: DrawTreeNodeEventArgs
  nameWithType: DrawTreeNodeEventArgs
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs
  type: Class
  summary: "Biedt gegevens voor de <xref href=&quot;System.Windows.Forms.TreeView.DrawNode&quot;> </xref> gebeurtenis."
  remarks: "Gebruik de <xref:System.Windows.Forms.TreeView.DrawNode>gebeurtenis pas het uiterlijk van de knooppunten in een <xref:System.Windows.Forms.TreeView>besturingselement met de eigenaar van tekenen.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.DrawNode>       De <xref:System.Windows.Forms.TreeView.DrawNode>gebeurtenis wordt geactiveerd door een <xref:System.Windows.Forms.TreeView>bepalen wanneer de <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>eigenschap is ingesteld op <xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName>of <xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName>en een knooppunt wordt weergegeven of bijgewerkt.</xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName> </xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName> </xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.DrawNode> De doorgegeven aan de gebeurtenis-handler DrawTreeNodeEventArgs bevat informatie over het knooppunt en de methoden voor het tekenen van het knooppunt wordt getekend.       Gebruik de <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A>of <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A>Eigenschappen voor het ophalen van informatie over het knooppunt dat moet worden getekend.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> </xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> Gebruik de <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics%2A>eigenschap te doen de tekening binnen de ruimte die is opgegeven door de <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>eigenschap.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> </xref:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics%2A> Als u het besturingssysteem tekenen van een knooppunt dat niet hoeft te worden van eigenaar getekend, stelt de <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>eigenschap `true`.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>       Wanneer de <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>eigenschap is ingesteld op <xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName>, het gebied worden aangegeven door de <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>eigenschap bevat het label-gedeelte van het knooppunt alleen.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> </xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName> Wanneer de <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>eigenschap is ingesteld op <xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName>, wordt de <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>gebied omvat het hele knooppunt, met inbegrip van het gebied doorgaans gebruikt voor pictogrammen, selectievakjes, plus en minteken zijn, en regels tussen de knooppunten.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> </xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n Additionally, a handler for the <xref:System.Windows.Forms.Control.MouseDown?displayProperty=fullName> event provides hit-testing. By default, a node can be selected only by clicking the region around its label. The <xref:System.Windows.Forms.Control.MouseDown?displayProperty=fullName> event handler selects a node that is clicked anywhere within this region or within the region around a node tag, if present.  \n  \n [!code-vb[TreeViewOwnerDraw#1](~/add/codesnippet/visualbasic/t-system.windows.forms.d_20_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#1](~/add/codesnippet/cpp/t-system.windows.forms.d_20_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#1](~/add/codesnippet/csharp/t-system.windows.forms.d_20_1.cs)]"
  syntax:
    content: 'public class DrawTreeNodeEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)
  id: '#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)'
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  nameWithType: DrawTreeNodeEventArgs.DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Forms.DrawTreeNodeEventArgs&quot;> </xref> klasse."
  syntax:
    content: public DrawTreeNodeEventArgs (System.Drawing.Graphics graphics, System.Windows.Forms.TreeNode node, System.Drawing.Rectangle bounds, System.Windows.Forms.TreeNodeStates state);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "De <xref href=&quot;System.Drawing.Graphics&quot;> </xref> water waarop moet worden getekend."
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "De <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> wordt getekend."
    - id: bounds
      type: System.Drawing.Rectangle
      description: "De <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> waarbinnen moet worden getekend."
    - id: state
      type: System.Windows.Forms.TreeNodeStates
      description: "Een bitsgewijze combinatie van de <xref href=&quot;System.Windows.Forms.TreeNodeStates&quot;> </xref> waarden die de huidige status van de <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> te tekenen."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
  id: Bounds
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: Bounds
  nameWithType: DrawTreeNodeEventArgs.Bounds
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Haalt de grootte en locatie van de <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> wordt getekend."
  remarks: "De locatie die is opgegeven door deze eigenschap is ten opzichte van de linkerbovenhoek van de <xref:System.Windows.Forms.TreeView>besturingselement.</xref:System.Windows.Forms.TreeView>       Wanneer de <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>eigenschap is ingesteld op <xref:System.Windows.Forms.TreeViewDrawMode>het gebied dat is opgegeven door de eigenschap grenzen is de regio waarin een knooppunt kan worden geklikt om Selecteer deze.</xref:System.Windows.Forms.TreeViewDrawMode> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName> Als u buiten deze regio detectietest tekent, moet u uw eigen code opgeven voor het selecteren van een knooppunt wanneer het zichtbare gebied wordt geklikt. U kunt ook uw eigen detectietest bieden code wanneer de <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>eigenschap is ingesteld op <xref:System.Windows.Forms.TreeViewDrawMode>.</xref:System.Windows.Forms.TreeViewDrawMode> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName> In deze modus kan de eigenschap grenzen omvat het hele knooppunt over de hele breedte van de <xref:System.Windows.Forms.TreeView>beheren, in plaats van de regio NET detectietest.</xref:System.Windows.Forms.TreeView>"
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_14_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_14_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_14_1.cs)]"
  syntax:
    content: public System.Drawing.Rectangle Bounds { get; }
    return:
      type: System.Drawing.Rectangle
      description: "Een <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> die staat voor de grenzen van de <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> wordt getekend."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
  id: DrawDefault
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: DrawDefault
  nameWithType: DrawTreeNodeEventArgs.DrawDefault
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Opgehaald of ingesteld met een waarde die aangeeft of de <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> moet worden getekend door het besturingssysteem dan wordt de eigenaar getekend."
  remarks: "Deze eigenschap instellen op `true` voor knooppunten die u niet aanpassen wilt, wanneer u verwerkt de <xref:System.Windows.Forms.TreeView.DrawNode>gebeurtenis.</xref:System.Windows.Forms.TreeView.DrawNode> Dit is bijvoorbeeld handig als u wilt aanpassen, alleen de knooppunten die zich in een specifieke status."
  example:
  - "The following code example demonstrates the use of this property. In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tag and a custom highlight color manually for the selected node. Nodes that are not selected do not need customization. For unselected nodes, the DrawDefault property is set to `true` so that they will be drawn by the operating system and will not have a customized appearance.  \n  \n> [!NOTE]\n>  If you draw a node manually and also set the DrawDefault property to `true`, some or all of what you draw may be overwritten by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_319_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_319_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_319_1.cs)]"
  syntax:
    content: public bool DrawDefault { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het knooppunt moet worden getekend door het besturingssysteem. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als het knooppunt worden getekend in de gebeurtenis-handler. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
  id: Graphics
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: Graphics
  nameWithType: DrawTreeNodeEventArgs.Graphics
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Haalt de <xref href=&quot;System.Drawing.Graphics&quot;> </xref> object dat wordt gebruikt om te tekenen de <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>."
  remarks: "De <xref:System.Drawing.Graphics>klasse biedt de eigenschappen en methoden die nuttig is voor tekenen op het apparaat.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_326_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_326_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_326_1.cs)]"
  syntax:
    content: public System.Drawing.Graphics Graphics { get; }
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;></xref> used to draw the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Node
  id: Node
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: Node
  nameWithType: DrawTreeNodeEventArgs.Node
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Node
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Haalt de <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> wordt getekend."
  remarks: "Deze eigenschap gebruiken voor toegang tot de <xref:System.Windows.Forms.TreeNode>object dat moet worden getekend.</xref:System.Windows.Forms.TreeNode> Dit is handig wanneer de <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A>eigenschap biedt geen voldoende informatie om te voldoen aan uw behoeften.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> De <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A>eigenschap bevat alleen minimale statusinformatie die u, bijvoorbeeld gebruiken kunt om te bepalen of een knooppunt is geselecteerd, gecontroleerd of gericht.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> De eigenschap van het knooppunt aan de andere kant, hebt u toegang tot alle leden van de <xref:System.Windows.Forms.TreeNode>object.</xref:System.Windows.Forms.TreeNode> U moet rechtstreeks toegang hebben tot het knooppunt, bijvoorbeeld wanneer u wilt bepalen van de status van de uitbreiding."
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_198_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_198_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_198_1.cs)]"
  syntax:
    content: public System.Windows.Forms.TreeNode Node { get; }
    return:
      type: System.Windows.Forms.TreeNode
      description: "De <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> wordt getekend."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.Node*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.State
  id: State
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: State
  nameWithType: DrawTreeNodeEventArgs.State
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.State
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hiermee wordt de huidige status van de <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> wordt getekend."
  remarks: "Deze eigenschap gebruiken om te controleren of de <xref:System.Windows.Forms.TreeNode>object dat moet worden getekend is in een bepaalde status.</xref:System.Windows.Forms.TreeNode> Deze eigenschap bevat alleen minimale statusinformatie over het knooppunt. Deze eigenschap, bijvoorbeeld, kunt u bepalen of een knooppunt is geselecteerd, gecontroleerd of gericht. Als u nodig hebt voor meer informatie, ophalen van het knooppunt via de <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A>eigenschap.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> Bijvoorbeeld, om te bepalen of het knooppunt is uitgevouwen, moet u het knooppunt ophalen en controleer de <xref:System.Windows.Forms.TreeNode.IsExpanded%2A?displayProperty=fullName>eigenschap.</xref:System.Windows.Forms.TreeNode.IsExpanded%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_85_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_85_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_85_1.cs)]"
  syntax:
    content: public System.Windows.Forms.TreeNodeStates State { get; }
    return:
      type: System.Windows.Forms.TreeNodeStates
      description: "Een bitsgewijze combinatie van de <xref href=&quot;System.Windows.Forms.TreeNodeStates&quot;> </xref> waarden die de huidige status van de <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.State*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  nameWithType: DrawTreeNodeEventArgs.DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Windows.Forms.TreeNode
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Windows.Forms.TreeNode
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.TreeNodeStates
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNodeStates
  nameWithType: TreeNodeStates
  fullName: System.Windows.Forms.TreeNodeStates
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Bounds
  nameWithType: DrawTreeNodeEventArgs.Bounds
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: DrawDefault
  nameWithType: DrawTreeNodeEventArgs.DrawDefault
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Graphics
  nameWithType: DrawTreeNodeEventArgs.Graphics
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Node
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Node
  nameWithType: DrawTreeNodeEventArgs.Node
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Node
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.State
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: State
  nameWithType: DrawTreeNodeEventArgs.State
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.State
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.#ctor*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: DrawTreeNodeEventArgs
  nameWithType: DrawTreeNodeEventArgs.DrawTreeNodeEventArgs
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Bounds
  nameWithType: DrawTreeNodeEventArgs.Bounds
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: DrawDefault
  nameWithType: DrawTreeNodeEventArgs.DrawDefault
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Graphics
  nameWithType: DrawTreeNodeEventArgs.Graphics
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Node*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Node
  nameWithType: DrawTreeNodeEventArgs.Node
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.State*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: State
  nameWithType: DrawTreeNodeEventArgs.State
