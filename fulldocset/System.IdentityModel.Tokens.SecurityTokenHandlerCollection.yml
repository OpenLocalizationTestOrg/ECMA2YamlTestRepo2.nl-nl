### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  id: SecurityTokenHandlerCollection
  children:
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler})
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler},System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace(System.IdentityModel.Tokens.SecurityTokenHandler)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.Type)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem(System.Int32)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: SecurityTokenHandlerCollection
  nameWithType: SecurityTokenHandlerCollection
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  type: Class
  summary: "Vertegenwoordigt een verzameling security token handlers."
  syntax:
    content: 'public class SecurityTokenHandlerCollection : System.Collections.ObjectModel.Collection<System.IdentityModel.Tokens.SecurityTokenHandler>'
  inheritance:
  - System.Collections.ObjectModel.Collection`1
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: SecurityTokenHandlerCollection()
  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection()
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandlerCollection&quot;> </xref> klasse."
  remarks: "De nieuwe verzameling bevat geen eventuele handlers."
  syntax:
    content: public SecurityTokenHandlerCollection ();
    parameters: []
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler})'
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>)
  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandlerCollection&quot;> </xref> klasse met de opgegeven token handlers."
  remarks: "Gebruik deze constructor niet om te klonen van een exemplaar van de <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection>klasse, gebruikt u de **kloon** methode in plaats daarvan.</xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection>"
  syntax:
    content: public SecurityTokenHandlerCollection (System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityTokenHandler> handlers);
    parameters:
    - id: handlers
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler}
      description: "De token handlers waarmee initialiseren van het nieuwe exemplaar."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  id: '#ctor(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)'
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: SecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandlerCollection&quot;> </xref> klasse met de opgegeven configuratie."
  remarks: "De nieuwe verzameling bevat geen eventuele handlers."
  syntax:
    content: public SecurityTokenHandlerCollection (System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration configuration);
    parameters:
    - id: configuration
      type: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration
      description: "De basisconfiguratie om te koppelen aan de verzameling."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler},System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler},System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)'
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>,SecurityTokenHandlerConfiguration)
  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>,SecurityTokenHandlerConfiguration)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>,SecurityTokenHandlerConfiguration)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandlerCollection&quot;> </xref> klasse met het opgegeven token handlers en de configuratie."
  remarks: "Gebruik deze constructor niet om te klonen van een exemplaar van de <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection>klasse, gebruikt u de **kloon** methode in plaats daarvan.</xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection>"
  syntax:
    content: public SecurityTokenHandlerCollection (System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityTokenHandler> handlers, System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration configuration);
    parameters:
    - id: handlers
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler}
      description: "De token handlers waarmee initialiseren van het nieuwe exemplaar."
    - id: configuration
      type: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration
      description: "De basisconfiguratie om te koppelen aan de verzameling."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace(System.IdentityModel.Tokens.SecurityTokenHandler)
  id: AddOrReplace(System.IdentityModel.Tokens.SecurityTokenHandler)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: AddOrReplace(SecurityTokenHandler)
  nameWithType: SecurityTokenHandlerCollection.AddOrReplace(SecurityTokenHandler)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace(SecurityTokenHandler)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Voegt de opgegeven handler token toe aan deze verzameling. Als een handler met hetzelfde token id als de opgegeven handler al in de verzameling bestaat, wordt deze vervangen door de opgegeven handler."
  syntax:
    content: public void AddOrReplace (System.IdentityModel.Tokens.SecurityTokenHandler handler);
    parameters:
    - id: handler
      type: System.IdentityModel.Tokens.SecurityTokenHandler
      description: "De token handler toevoegen aan de verzameling."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  id: CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Retourneert een waarde die aangeeft of de opgegeven ID-clausule kan worden gelezen door een van de handlers in deze verzameling of door de base <xref href=&quot;System.ServiceModel.Security.WSSecurityTokenSerializer&quot;> </xref>."
  syntax:
    content: public bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Een XML-lezer is geplaatst op het startelement. De lezer moet niet worden verplaatst."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de sleutel-id-component kan worden gelezen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  id: CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: CanReadKeyIdentifierClauseCore(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Retourneert een waarde die aangeeft of de opgegeven ID-clausule kan worden gelezen door een van de handlers in de verzameling of door de base <xref href=&quot;System.ServiceModel.Security.WSSecurityTokenSerializer&quot;> </xref>."
  syntax:
    content: protected virtual bool CanReadKeyIdentifierClauseCore (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Een XML-lezer is geplaatst op het startelement. De lezer moet niet worden verplaatst."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de sleutel-id-component kan worden gelezen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.String)
  id: CanReadToken(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: CanReadToken(String)
  nameWithType: SecurityTokenHandlerCollection.CanReadToken(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Retourneert een waarde die aangeeft of de opgegeven tekenreeksweergave van een token kan worden gelezen door een van de handlers in deze verzameling."
  remarks: "De methode roept de <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%28System.String%29?displayProperty=fullName>methode voor de token handlers (<xref:System.IdentityModel.Tokens.SecurityTokenHandler>) in de verzameling om te bepalen of het token kan worden gelezen.</xref:System.IdentityModel.Tokens.SecurityTokenHandler> </xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%28System.String%29?displayProperty=fullName>"
  syntax:
    content: public bool CanReadToken (string tokenString);
    parameters:
    - id: tokenString
      type: System.String
      description: "Het token dat wordt weergegeven als een tekenreeks."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de verzameling een beveiligingstoken-handler die het opgegeven token bevat; kan worden gelezen anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.Xml.XmlReader)
  id: CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: CanReadToken(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Retourneert een waarde die aangeeft of het opgegeven token kan worden gelezen door een van de handlers in deze verzameling."
  syntax:
    content: public bool CanReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Een XML-lezer is geplaatst op het startelement. De lezer moet niet worden verplaatst."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het token kan worden gelezen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)
  id: CanWriteToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: CanWriteToken(SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.CanWriteToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Retourneert een waarde die aangeeft of het opgegeven token kan worden geserialiseerd door een van de handlers in deze verzameling."
  syntax:
    content: public bool CanWriteToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Het beveiligingstoken moet worden geserialiseerd."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het token kan worden geserialiseerd door een van de handlers; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems
  id: ClearItems
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: ClearItems()
  nameWithType: SecurityTokenHandlerCollection.ClearItems()
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hiermee worden alle van de handlers uit deze verzameling verwijderd. (Het onderdrukken van de basisklasse-methode.)"
  syntax:
    content: protected override void ClearItems ();
    parameters: []
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration
  id: Configuration
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: Configuration
  nameWithType: SecurityTokenHandlerCollection.Configuration
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Opgehaald en ingesteld van de basisconfiguratie voor deze security token handler-verzameling."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration
      description: "De configuratie voor de verzameling beveiligingstoken-handler."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection
  id: CreateDefaultSecurityTokenHandlerCollection
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: CreateDefaultSecurityTokenHandlerCollection()
  nameWithType: SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection()
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Maakt een verzameling system standaard basisprincipes van beveiliging token handlers, die allemaal de standaardconfiguratie van het systeem. De token handlers in deze verzameling moeten worden geconfigureerd met servicespecifieke gegevens voordat ze kunnen worden gebruikt."
  syntax:
    content: public static System.IdentityModel.Tokens.SecurityTokenHandlerCollection CreateDefaultSecurityTokenHandlerCollection ();
    parameters: []
    return:
      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
      description: "Een verzameling van de beveiliging beveiligingstoken-handler die de standaard, token handlers basisprincipes van beveiliging bevat."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  id: CreateDefaultSecurityTokenHandlerCollection(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: CreateDefaultSecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  nameWithType: SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Maakt een verzameling van de standaard system van het token handlers basisprincipes van beveiliging en koppelt u de opgegeven configuratie met de nieuwe verzameling. Elk van de handlers heeft de standaardconfiguratie van het systeem. De token handlers in deze verzameling moeten worden geconfigureerd met servicespecifieke gegevens voordat ze kunnen worden gebruikt."
  syntax:
    content: public static System.IdentityModel.Tokens.SecurityTokenHandlerCollection CreateDefaultSecurityTokenHandlerCollection (System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration configuration);
    parameters:
    - id: configuration
      type: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration
      description: "De configuratie om te koppelen aan de handler-verzameling."
    return:
      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
      description: "Een verzameling van de beveiliging beveiligingstoken-handler die de standaard, token handlers basisprincipes van beveiliging bevat."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: CreateToken(SecurityTokenDescriptor)
  nameWithType: SecurityTokenHandlerCollection.CreateToken(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Maakt een token van de opgegeven token descriptor."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "De token descriptor van waaruit het token wordt gemaakt. Eigenschappen van de token descriptor zijn ingesteld voordat deze methode wordt aangeroepen."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Een beveiligingstoken dat overeenkomt met de eigenschappen van de token descriptor."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)
  id: InsertItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: InsertItem(Int32,SecurityTokenHandler)
  nameWithType: SecurityTokenHandlerCollection.InsertItem(Int32,SecurityTokenHandler)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem(Int32,SecurityTokenHandler)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hiermee voegt u de opgegeven handler token in deze verzameling in de opgegeven index. (Het onderdrukken van de basisklasse-methode.)"
  syntax:
    content: protected override void InsertItem (int index, System.IdentityModel.Tokens.SecurityTokenHandler item);
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index waarmee de handler moet worden ingevoegd."
    - id: item
      type: System.IdentityModel.Tokens.SecurityTokenHandler
      description: "De token handler om in te voegen."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.IdentityModel.Tokens.SecurityToken)
  id: Item(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: Item(SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.Item(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(SecurityToken)
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hiermee haalt u een token handler uit deze verzameling die de opgegeven beveiligingstoken kan verwerken."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityTokenHandler this[System.IdentityModel.Tokens.SecurityToken token] { get; }
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Het token waarvoor de handler moet worden geretourneerd."
    return:
      type: System.IdentityModel.Tokens.SecurityTokenHandler
      description: "Een handler van het token dat het opgegeven token kan verwerken."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.String)
  id: Item(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: SecurityTokenHandlerCollection.Item(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(String)
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hiermee haalt u een token handler uit deze verzameling dat het opgegeven type-id kan verwerken."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityTokenHandler this[string tokenTypeIdentifier] { get; }
    parameters:
    - id: tokenTypeIdentifier
      type: System.String
      description: "Een URI die het tokentype identificeert."
    return:
      type: System.IdentityModel.Tokens.SecurityTokenHandler
      description: "Een handler van het token dat tokens die met de id van het opgegeven type overeenkomen kan verwerken."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.Type)
  id: Item(System.Type)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: Item(Type)
  nameWithType: SecurityTokenHandlerCollection.Item(Type)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(Type)
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hiermee haalt u de handler uit deze verzameling dat het opgegeven tokentype kan verwerken."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityTokenHandler this[Type tokenType] { get; }
    parameters:
    - id: tokenType
      type: System.Type
      description: "Het type van het token moet worden verwerkt."
    return:
      type: System.IdentityModel.Tokens.SecurityTokenHandler
      description: "Een handler van het token dat tokens van het opgegeven type kan verwerken."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause(System.Xml.XmlReader)
  id: ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Een ID-clausule van de opgegeven XML-lezer deserializes."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Een XML-lezer is geplaatst op het startelement van het XML-bestand om te worden gedeserialiseerd in de component sleutel-id."
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "De ID-clausule gedeserialiseerd van het XML-bestand."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  id: ReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: ReadKeyIdentifierClauseCore(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Een ID-clausule van de opgegeven XML-lezer deserializes."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClauseCore (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Een XML-lezer is geplaatst op het startelement van het XML-bestand om te worden gedeserialiseerd in de component sleutel-id."
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "De ID-clausule gedeserialiseerd van het XML-bestand."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.String)
  id: ReadToken(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: ReadToken(String)
  nameWithType: SecurityTokenHandlerCollection.ReadToken(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Een beveiligingstoken uit de opgegeven reeks deserializes."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken ReadToken (string tokenString);
    parameters:
    - id: tokenString
      type: System.String
      description: "De tekenreeks weer waaruit het deserialiseren van het token."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Het token dat is gedeserialiseerd van de opgegeven tekenreeks."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.Xml.XmlReader)
  id: ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: ReadToken(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Deserializes een beveiligingstoken uit de opgegeven XML-lezer."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Een XML-lezer aan het beginelement van het token geplaatst."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Het beveiligingstoken gedeserialiseerd van het XML-bestand."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem(System.Int32)
  id: RemoveItem(System.Int32)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: RemoveItem(Int32)
  nameWithType: SecurityTokenHandlerCollection.RemoveItem(Int32)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem(Int32)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hiermee verwijdert u de handler op de opgegeven index uit deze verzameling. (Het onderdrukken van de basisklasse-methode.)"
  syntax:
    content: protected override void RemoveItem (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index van de handler om te verwijderen."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)
  id: SetItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: SetItem(Int32,SecurityTokenHandler)
  nameWithType: SecurityTokenHandlerCollection.SetItem(Int32,SecurityTokenHandler)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem(Int32,SecurityTokenHandler)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "De token handler op de opgegeven index in de verzameling vervangt door de opgegeven handler."
  syntax:
    content: protected override void SetItem (int index, System.IdentityModel.Tokens.SecurityTokenHandler item);
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index van het element te vervangen."
    - id: item
      type: System.IdentityModel.Tokens.SecurityTokenHandler
      description: "De nieuwe token handler voor het element bij de opgegeven index."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers
  id: TokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: TokenTypeIdentifiers
  nameWithType: SecurityTokenHandlerCollection.TokenTypeIdentifiers
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hiermee haalt u een lijst van de type-id van de tokens die zijn verwerkt door de handlers in deze verzameling."
  syntax:
    content: public System.Collections.Generic.IEnumerable<string> TokenTypeIdentifiers { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "De lijst met type-id URI&quot;s."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes
  id: TokenTypes
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: TokenTypes
  nameWithType: SecurityTokenHandlerCollection.TokenTypes
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hiermee haalt u een lijst van de typen van de tokens die zijn verwerkt door handlers in deze verzameling."
  syntax:
    content: public System.Collections.Generic.IEnumerable<Type> TokenTypes { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: "De lijst met typen."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: ValidateToken(SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "De opgegeven security token valideert."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Het token te valideren."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: "De identiteiten die zijn opgenomen in het token."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenHandlerCollection.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "De opgegeven ID-clausule naar XML serialiseert."
  syntax:
    content: public void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "De XML-schrijver."
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "De ID-clausule te serialiseren."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "De opgegeven ID-clausule naar XML serialiseert."
  syntax:
    content: protected virtual void WriteKeyIdentifierClauseCore (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "De XML-schrijver."
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "De ID-clausule te serialiseren."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  id: WriteToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: WriteToken(SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.WriteToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Het opgegeven beveiligingstoken naar een tekenreeks serialiseert."
  syntax:
    content: public string WriteToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Het token te serialiseren."
    return:
      type: System.String
      description: "De tekenreeks uit het token is geserialiseerd."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verzameling bevat geen een handler die geschikt is voor het serialiseren van het opgegeven token."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(XmlWriter,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Het opgegeven beveiligingstoken XML serialiseert."
  syntax:
    content: public void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "De XML-schrijver."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Het token te serialiseren."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verzameling bevat geen een handler die geschikt is voor het serialiseren van het opgegeven token."
  platform:
  - net462
references:
- uid: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.ObjectModel.Collection<System.IdentityModel.Tokens.SecurityTokenHandler>
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: SecurityTokenHandlerCollection()
  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection()
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection()
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler})
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>)
  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>)
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<SecurityTokenHandler>
  nameWithType: IEnumerable<SecurityTokenHandler>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityTokenHandler>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Tokens.SecurityTokenHandler>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityTokenHandler
    name: SecurityTokenHandler
    nameWithType: SecurityTokenHandler
    fullName: SecurityTokenHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: SecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenHandlerConfiguration
  nameWithType: SecurityTokenHandlerConfiguration
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler},System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>,SecurityTokenHandlerConfiguration)
  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>,SecurityTokenHandlerConfiguration)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>,SecurityTokenHandlerConfiguration)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace(System.IdentityModel.Tokens.SecurityTokenHandler)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: AddOrReplace(SecurityTokenHandler)
  nameWithType: SecurityTokenHandlerCollection.AddOrReplace(SecurityTokenHandler)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace(SecurityTokenHandler)
- uid: System.IdentityModel.Tokens.SecurityTokenHandler
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenHandler
  nameWithType: SecurityTokenHandler
  fullName: System.IdentityModel.Tokens.SecurityTokenHandler
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(XmlReader)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CanReadKeyIdentifierClauseCore(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CanReadToken(String)
  nameWithType: SecurityTokenHandlerCollection.CanReadToken(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CanReadToken(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CanWriteToken(SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.CanWriteToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ClearItems()
  nameWithType: SecurityTokenHandlerCollection.ClearItems()
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems()
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: Configuration
  nameWithType: SecurityTokenHandlerCollection.Configuration
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CreateDefaultSecurityTokenHandlerCollection()
  nameWithType: SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection()
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection()
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenHandlerCollection
  nameWithType: SecurityTokenHandlerCollection
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CreateDefaultSecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  nameWithType: SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CreateToken(SecurityTokenDescriptor)
  nameWithType: SecurityTokenHandlerCollection.CreateToken(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenDescriptor
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: InsertItem(Int32,SecurityTokenHandler)
  nameWithType: SecurityTokenHandlerCollection.InsertItem(Int32,SecurityTokenHandler)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem(Int32,SecurityTokenHandler)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: Item(SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.Item(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: Item(String)
  nameWithType: SecurityTokenHandlerCollection.Item(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(String)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.Type)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: Item(Type)
  nameWithType: SecurityTokenHandlerCollection.Item(Type)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ReadKeyIdentifierClauseCore(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ReadToken(String)
  nameWithType: SecurityTokenHandlerCollection.ReadToken(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(String)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ReadToken(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem(System.Int32)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: RemoveItem(Int32)
  nameWithType: SecurityTokenHandlerCollection.RemoveItem(Int32)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem(Int32)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: SetItem(Int32,SecurityTokenHandler)
  nameWithType: SecurityTokenHandlerCollection.SetItem(Int32,SecurityTokenHandler)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem(Int32,SecurityTokenHandler)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: TokenTypeIdentifiers
  nameWithType: SecurityTokenHandlerCollection.TokenTypeIdentifiers
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: TokenTypes
  nameWithType: SecurityTokenHandlerCollection.TokenTypes
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes
- uid: System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ValidateToken(SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ClaimsIdentity>
  nameWithType: ReadOnlyCollection<ClaimsIdentity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: ClaimsIdentity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenHandlerCollection.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: WriteToken(SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.WriteToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(XmlWriter,SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: SecurityTokenHandlerCollection
  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: AddOrReplace
  nameWithType: SecurityTokenHandlerCollection.AddOrReplace
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CanReadKeyIdentifierClause
  nameWithType: SecurityTokenHandlerCollection.CanReadKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CanReadKeyIdentifierClauseCore
  nameWithType: SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CanReadToken
  nameWithType: SecurityTokenHandlerCollection.CanReadToken
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CanWriteToken
  nameWithType: SecurityTokenHandlerCollection.CanWriteToken
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ClearItems
  nameWithType: SecurityTokenHandlerCollection.ClearItems
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: Configuration
  nameWithType: SecurityTokenHandlerCollection.Configuration
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CreateDefaultSecurityTokenHandlerCollection
  nameWithType: SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CreateToken
  nameWithType: SecurityTokenHandlerCollection.CreateToken
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: InsertItem
  nameWithType: SecurityTokenHandlerCollection.InsertItem
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: Item
  nameWithType: SecurityTokenHandlerCollection.Item
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ReadKeyIdentifierClause
  nameWithType: SecurityTokenHandlerCollection.ReadKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ReadKeyIdentifierClauseCore
  nameWithType: SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ReadToken
  nameWithType: SecurityTokenHandlerCollection.ReadToken
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: RemoveItem
  nameWithType: SecurityTokenHandlerCollection.RemoveItem
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: SetItem
  nameWithType: SecurityTokenHandlerCollection.SetItem
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: TokenTypeIdentifiers
  nameWithType: SecurityTokenHandlerCollection.TokenTypeIdentifiers
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: TokenTypes
  nameWithType: SecurityTokenHandlerCollection.TokenTypes
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ValidateToken
  nameWithType: SecurityTokenHandlerCollection.ValidateToken
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: WriteKeyIdentifierClause
  nameWithType: SecurityTokenHandlerCollection.WriteKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: WriteKeyIdentifierClauseCore
  nameWithType: SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: WriteToken
  nameWithType: SecurityTokenHandlerCollection.WriteToken
