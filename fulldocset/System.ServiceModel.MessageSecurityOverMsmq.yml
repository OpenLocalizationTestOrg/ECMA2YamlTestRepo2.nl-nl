### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.MessageSecurityOverMsmq
  id: MessageSecurityOverMsmq
  children:
  - System.ServiceModel.MessageSecurityOverMsmq.#ctor
  - System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite
  - System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType
  langs:
  - csharp
  name: MessageSecurityOverMsmq
  nameWithType: MessageSecurityOverMsmq
  fullName: System.ServiceModel.MessageSecurityOverMsmq
  type: Class
  summary: "Kan bericht beveiligingsniveau eigenschappen instellen op de <xref href=&quot;System.ServiceModel.NetMsmqBinding&quot;> </xref> binding."
  remarks: "Dit object is toegankelijk vanuit de binding door middel van de <xref:System.ServiceModel.NetMsmqBinding.Security%2A>eigenschap die resulteert in een <xref:System.ServiceModel.NetMsmqSecurity>object.</xref:System.ServiceModel.NetMsmqSecurity> </xref:System.ServiceModel.NetMsmqBinding.Security%2A> Dit object heeft een <xref:System.ServiceModel.NetMsmqSecurity.Message%2A>eigenschap waarmee een verwijzing naar het object MessageSecurityOverMsmq.</xref:System.ServiceModel.NetMsmqSecurity.Message%2A>"
  example:
  - >-
    [!code-vb[UEMessageSecurityOverMsmq#1](~/add/codesnippet/visualbasic/t-system.servicemodel.me_1_1.vb)]
     [!code-cs[UEMessageSecurityOverMsmq#1](~/add/codesnippet/csharp/t-system.servicemodel.me_1_1.cs)]
  syntax:
    content: public sealed class MessageSecurityOverMsmq
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverMsmq.#ctor
  id: '#ctor'
  parent: System.ServiceModel.MessageSecurityOverMsmq
  langs:
  - csharp
  name: MessageSecurityOverMsmq()
  nameWithType: MessageSecurityOverMsmq.MessageSecurityOverMsmq()
  fullName: System.ServiceModel.MessageSecurityOverMsmq.MessageSecurityOverMsmq()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ServiceModel.MessageSecurityOverMsmq&quot;> </xref> klasse."
  syntax:
    content: public MessageSecurityOverMsmq ();
    parameters: []
  overload: System.ServiceModel.MessageSecurityOverMsmq.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite
  id: AlgorithmSuite
  parent: System.ServiceModel.MessageSecurityOverMsmq
  langs:
  - csharp
  name: AlgorithmSuite
  nameWithType: MessageSecurityOverMsmq.AlgorithmSuite
  fullName: System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Hiermee geeft u de algoritmereeks gebruikt voor van beveiligingsberichten op het niveau van SOAP."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>Hiermee definieert u verschillende algoritmen zoals standaardisatie, Digest, KeyWrap, handtekening, versleuteling en KeyDerivation algoritmen.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite> Deze eigenschap is de meest relevante bij het werken met een platform die gebruikmaakt van een set algoritmen anders dan de standaardwaarde. U moet rekening houden met de sterke en zwakke punten van de relevante algoritmen als u wijzigingen aanbrengt aan deze eigenschap."
  example:
  - >-
    [!code-vb[UEMessageSecurityOverMsmq#2](~/add/codesnippet/visualbasic/p-system.servicemodel.me_1_1.vb)]
     [!code-cs[UEMessageSecurityOverMsmq#2](~/add/codesnippet/csharp/p-system.servicemodel.me_1_1.cs)]
  syntax:
    content: public System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "De <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;> </xref> instellen voor berichten die worden verzonden via de <xref href=&quot;System.ServiceModel.NetMsmqBinding&quot;> </xref> binding."
  overload: System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType
  id: ClientCredentialType
  parent: System.ServiceModel.MessageSecurityOverMsmq
  langs:
  - csharp
  name: ClientCredentialType
  nameWithType: MessageSecurityOverMsmq.ClientCredentialType
  fullName: System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Opgehaald of ingesteld de <xref:System.ServiceModel.MessageCredentialType>voor berichten die worden verzonden via de MSMQ-transport.</xref:System.ServiceModel.MessageCredentialType>"
  remarks: "Deze eigenschap kan worden ingesteld op een van de volgende waarden:- **geen**: Hierdoor kan de service kan interactief met anonieme clients. Noch de client als de service is een referentie vereist.      - **Windows**: Hierdoor kan de SOAP-uitwisseling worden onder de geverifieerde context van een Windows-referentie. Dit wordt altijd uitgevoerd op basis van Kerberos-verificatie.      - **Gebruikersnaam**: Hierdoor kan de service vereist dat de client worden geverifieerd met behulp van de referentie van een gebruikersnaam. Deze referentie worden opgegeven met behulp van de <xref:System.ServiceModel.Description.ClientCredentials>klasse.</xref:System.ServiceModel.Description.ClientCredentials>      > [!NOTE]  >   [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] biedt geen ondersteuning voor het verzenden van een wachtwoord digest- of afgeleid sleutels met behulp van wachtwoord en het gebruik van dergelijke sleutels voor berichtbeveiliging. Als zodanig [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] wordt afgedwongen dat de uitwisseling bij gebruik van referenties van de gebruikersnaam is beveiligd. Deze modus moet het certificaat worden opgegeven op de client met behulp van `ClientCredential` gedrag en `serviceCertificate`:- `Certificate`: Hierdoor kan de service vereist dat de client worden geverifieerd met een certificaat. De clientreferenties in dit geval moet worden opgegeven met <xref:System.ServiceModel.Description.ClientCredentials>klasse of `ClientCredentials` gedrag.</xref:System.ServiceModel.Description.ClientCredentials> De service-referentie in dit geval moet worden opgegeven met <xref:System.ServiceModel.Description.ClientCredentials>klasse of `ClientCredentials` gedrag door op te geven de `serviceCertificate`.</xref:System.ServiceModel.Description.ClientCredentials>      - `InfoCard`: Hierdoor kan de service vereist dat de client worden geverifieerd met behulp van een InfoCard. De `serviceCertificate` moet zijn geconfigureerd in de `ClientCredential` gedrag.      -De certificaat-referentie voor de `MessageSecurityOverMsmq` geldt alleen wanneer de beveiligingsmodus is ingesteld op `Both` of `Message`."
  example:
  - >-
    [!code-vb[UEMessageSecurityOverMsmq#3](~/add/codesnippet/visualbasic/p-system.servicemodel.me_4_1.vb)]
     [!code-cs[UEMessageSecurityOverMsmq#3](~/add/codesnippet/csharp/p-system.servicemodel.me_4_1.cs)]
  syntax:
    content: public System.ServiceModel.MessageCredentialType ClientCredentialType { get; set; }
    return:
      type: System.ServiceModel.MessageCredentialType
      description: "De <xref:System.ServiceModel.MessageCredentialType>voor berichten die worden verzonden via de MSMQ-transport.</xref:System.ServiceModel.MessageCredentialType>"
  overload: System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.MessageSecurityOverMsmq.#ctor
  parent: System.ServiceModel.MessageSecurityOverMsmq
  isExternal: false
  name: MessageSecurityOverMsmq()
  nameWithType: MessageSecurityOverMsmq.MessageSecurityOverMsmq()
  fullName: System.ServiceModel.MessageSecurityOverMsmq.MessageSecurityOverMsmq()
- uid: System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite
  parent: System.ServiceModel.MessageSecurityOverMsmq
  isExternal: false
  name: AlgorithmSuite
  nameWithType: MessageSecurityOverMsmq.AlgorithmSuite
  fullName: System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite
- uid: System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType
  parent: System.ServiceModel.MessageSecurityOverMsmq
  isExternal: false
  name: ClientCredentialType
  nameWithType: MessageSecurityOverMsmq.ClientCredentialType
  fullName: System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType
- uid: System.ServiceModel.MessageCredentialType
  parent: System.ServiceModel
  isExternal: true
  name: MessageCredentialType
  nameWithType: MessageCredentialType
  fullName: System.ServiceModel.MessageCredentialType
- uid: System.ServiceModel.MessageSecurityOverMsmq.#ctor*
  parent: System.ServiceModel.MessageSecurityOverMsmq
  isExternal: false
  name: MessageSecurityOverMsmq
  nameWithType: MessageSecurityOverMsmq.MessageSecurityOverMsmq
- uid: System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite*
  parent: System.ServiceModel.MessageSecurityOverMsmq
  isExternal: false
  name: AlgorithmSuite
  nameWithType: MessageSecurityOverMsmq.AlgorithmSuite
- uid: System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType*
  parent: System.ServiceModel.MessageSecurityOverMsmq
  isExternal: false
  name: ClientCredentialType
  nameWithType: MessageSecurityOverMsmq.ClientCredentialType
