### YamlMime:ManagedReference
items:
- uid: System.Threading.Overlapped
  id: Overlapped
  children:
  - System.Threading.Overlapped.#ctor
  - System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  - System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  - System.Threading.Overlapped.AsyncResult
  - System.Threading.Overlapped.EventHandle
  - System.Threading.Overlapped.EventHandleIntPtr
  - System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  - System.Threading.Overlapped.OffsetHigh
  - System.Threading.Overlapped.OffsetLow
  - System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  - System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  - System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  - System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  - System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  langs:
  - csharp
  name: Overlapped
  nameWithType: Overlapped
  fullName: System.Threading.Overlapped
  type: Class
  summary: "Biedt een beheerde weergave van een Win32 `OVERLAPPED` structuur, met inbegrip van methoden voor het overbrengen van informatie van een-exemplaar moet een <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> structuur."
  remarks: "De <xref:System.Threading.Overlapped.Pack%2A>en <xref:System.Threading.Overlapped.UnsafePack%2A>methoden wordt informatie overgedragen van een object Overlapped niet naar een <xref:System.Threading.NativeOverlapped>-structuur die kan worden doorgegeven aan Win32-API-functies voor asynchrone i/o-bestand.</xref:System.Threading.NativeOverlapped> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A> De <xref:System.Threading.Overlapped.Unpack%2A>methode overdrachten gegevens uit een <xref:System.Threading.NativeOverlapped>structuur met een exemplaar van de klasse.</xref:System.Threading.NativeOverlapped> </xref:System.Threading.Overlapped.Unpack%2A>       Wijzigingen in de eigenschappen van een object Overlapped niet van invloed zijn op de bijbehorende <xref:System.Threading.NativeOverlapped>structuur, en vice versa.</xref:System.Threading.NativeOverlapped>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class Overlapped
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor
  id: '#ctor'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped()
  nameWithType: Overlapped.Overlapped()
  fullName: System.Threading.Overlapped.Overlapped()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Initialiseert een nieuw, leeg exemplaar van de <xref href=&quot;System.Threading.Overlapped&quot;> </xref> klasse."
  syntax:
    content: public Overlapped ();
    parameters: []
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped(Int32,Int32,Int32,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Threading.Overlapped&quot;> </xref> klasse met het opgegeven bestand plaatsen, de 32-bits geheel getal-ingang naar een gebeurtenis die u ontvangt een signaal wanneer de i/o-bewerking voltooid is en een interface waarmee het resultaat van de bewerking."
  remarks: "Gebruik de <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>eigenschap ophalen van de ingang van alle beheerde synchronisatiegebeurtenis die is afgeleid van de <xref:System.Threading.WaitHandle>klasse.</xref:System.Threading.WaitHandle> </xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>       De implementatie van <xref:System.IAsyncResult>voorziet in statusinformatie over de i/o-bewerking.</xref:System.IAsyncResult> Geef dit door aan de constructor in de `ar` parameter, en deze later met op te halen de <xref:System.Threading.Overlapped.AsyncResult%2A>eigenschap.</xref:System.Threading.Overlapped.AsyncResult%2A> Als een callback-methode is opgegeven voor de <xref:System.Threading.Overlapped.Pack%2A>of <xref:System.Threading.Overlapped.UnsafePack%2A>methode, de callback kunt ophalen uw <xref:System.IAsyncResult>door het uitpakken van de <xref:System.Threading.NativeOverlapped>structuur die het ontvangt.</xref:System.Threading.NativeOverlapped> </xref:System.IAsyncResult> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A>"
  syntax:
    content: public Overlapped (int offsetLo, int offsetHi, int hEvent, IAsyncResult ar);
    parameters:
    - id: offsetLo
      type: System.Int32
      description: "De lage woord van de bestandspositie waarmee de overdracht te starten."
    - id: offsetHi
      type: System.Int32
      description: "De hoge woord van de bestandspositie waarmee de overdracht te starten."
    - id: hEvent
      type: System.Int32
      description: "De ingang naar een gebeurtenis die u ontvangt een signaal wanneer de i/o-bewerking voltooid is."
    - id: ar
      type: System.IAsyncResult
      description: "Een object dat u implementeert de <xref:System.IAsyncResult>interface en voorziet in statusinformatie over de i/o-bewerking.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  id: '#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Threading.Overlapped&quot;> </xref> klasse met het opgegeven bestand plaatsen, de ingang naar een gebeurtenis die u ontvangt een signaal wanneer de i/o-bewerking voltooid is en een interface waarmee het resultaat van de bewerking."
  remarks: "Ophalen van de ingang van een beheerde synchronisatieobject die is afgeleid van de <xref:System.Threading.WaitHandle>klasse, gebruikt u de <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName>eigenschap ophalen van een <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>object, en vervolgens roept de <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>methode.</xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> </xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> </xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName> </xref:System.Threading.WaitHandle>       De implementatie van <xref:System.IAsyncResult>voorziet in statusinformatie over de i/o-bewerking.</xref:System.IAsyncResult> Geef dit door aan de constructor in de `ar` parameter, en deze later met op te halen de <xref:System.Threading.Overlapped.AsyncResult%2A>eigenschap.</xref:System.Threading.Overlapped.AsyncResult%2A> Als een callback-methode is opgegeven voor de <xref:System.Threading.Overlapped.Pack%2A>of <xref:System.Threading.Overlapped.UnsafePack%2A>methode, de callback kunt ophalen uw <xref:System.IAsyncResult>door het uitpakken van de <xref:System.Threading.NativeOverlapped>structuur die het ontvangt.</xref:System.Threading.NativeOverlapped> </xref:System.IAsyncResult> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A>"
  syntax:
    content: public Overlapped (int offsetLo, int offsetHi, IntPtr hEvent, IAsyncResult ar);
    parameters:
    - id: offsetLo
      type: System.Int32
      description: "De lage woord van de bestandspositie waarmee de overdracht te starten."
    - id: offsetHi
      type: System.Int32
      description: "De hoge woord van de bestandspositie waarmee de overdracht te starten."
    - id: hEvent
      type: System.IntPtr
      description: "De ingang naar een gebeurtenis die u ontvangt een signaal wanneer de i/o-bewerking voltooid is."
    - id: ar
      type: System.IAsyncResult
      description: "Een object dat u implementeert de <xref:System.IAsyncResult>interface en voorziet in statusinformatie over de i/o-bewerking.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.AsyncResult
  id: AsyncResult
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
  fullName: System.Threading.Overlapped.AsyncResult
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Opgehaald of ingesteld van het object dat voorziet in statusinformatie over de i/o-bewerking."
  syntax:
    content: public IAsyncResult AsyncResult { get; set; }
    return:
      type: System.IAsyncResult
      description: "Een object dat u implementeert de <xref:System.IAsyncResult>interface.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.AsyncResult*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.EventHandle
  id: EventHandle
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: EventHandle
  nameWithType: Overlapped.EventHandle
  fullName: System.Threading.Overlapped.EventHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Opgehaald of ingesteld van de 32-bits geheel getal-ingang naar een synchronisatiegebeurtenis die u ontvangt een signaal wanneer de i/o-bewerking voltooid is."
  remarks: "Deze eigenschap kan niet worden gebruikt op 64-bits-platforms. Gebruik de <xref:System.Threading.Overlapped.EventHandleIntPtr%2A>eigenschap in plaats daarvan.</xref:System.Threading.Overlapped.EventHandleIntPtr%2A>       Gebruik de <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>eigenschap ophalen van de ingang van alle beheerde synchronisatiegebeurtenis die is afgeleid van de <xref:System.Threading.WaitHandle>klasse.</xref:System.Threading.WaitHandle> </xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>"
  syntax:
    content: public int EventHandle { get; set; }
    return:
      type: System.Int32
      description: "Een <xref:System.Int32>-waarde voor de ingang van de synchronisatiegebeurtenis.</xref:System.Int32>"
  overload: System.Threading.Overlapped.EventHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.EventHandleIntPtr
  id: EventHandleIntPtr
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
  fullName: System.Threading.Overlapped.EventHandleIntPtr
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Opgehaald of ingesteld van de ingang naar de synchronisatiegebeurtenis die u ontvangt een signaal wanneer de i/o-bewerking voltooid is."
  remarks: "Ophalen van de ingang van een beheerde synchronisatieobject die is afgeleid van de <xref:System.Threading.WaitHandle>klasse, gebruikt u de <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName>eigenschap ophalen van een <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>object, en vervolgens roept de <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>methode.</xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> </xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> </xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName> </xref:System.Threading.WaitHandle>"
  syntax:
    content: public IntPtr EventHandleIntPtr { get; set; }
    return:
      type: System.IntPtr
      description: "Een <xref:System.IntPtr>die de ingang van de gebeurtenis.</xref:System.IntPtr>"
  overload: System.Threading.Overlapped.EventHandleIntPtr*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  id: Free(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Free(NativeOverlapped*)
  nameWithType: Overlapped.Free(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Free(NativeOverlapped*)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Maakt het niet-beheerde geheugen die is gekoppeld aan een systeemeigen overlappende structuur toegewezen door de <xref:System.Threading.Overlapped.Pack*>methode.</xref:System.Threading.Overlapped.Pack*>"
  remarks: "U moet de methode Free exact aanroepen keren voor op elke <xref:System.Threading.NativeOverlapped>aanwijzer u van ontvangt de <xref:System.Threading.Overlapped.Pack%2A>methode.</xref:System.Threading.Overlapped.Pack%2A> </xref:System.Threading.NativeOverlapped> Als u niet de methode Free aanroept, wordt u geheugen lekt. Als u de methode Free meer dan één keer aanroept, wordt er geheugen beschadigd."
  syntax:
    content: public static void Free (System.Threading.NativeOverlapped* nativeOverlappedPtr);
    parameters:
    - id: nativeOverlappedPtr
      type: System.Threading.NativeOverlapped*
      description: "Een verwijzing naar de <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> structuur om te worden vrijgemaakt."
  overload: System.Threading.Overlapped.Free*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nativeOverlappedPtr</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.Overlapped.OffsetHigh
  id: OffsetHigh
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
  fullName: System.Threading.Overlapped.OffsetHigh
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Opgehaald of ingesteld van het woord hoge-volgorde van de bestandspositie waarmee de overdracht te starten. De bestandspositie is een byte-offset vanaf het begin van het bestand."
  syntax:
    content: public int OffsetHigh { get; set; }
    return:
      type: System.Int32
      description: "Een <xref:System.Int32>-waarde voor het hoge woord van de bestandspositie.</xref:System.Int32>"
  overload: System.Threading.Overlapped.OffsetHigh*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.OffsetLow
  id: OffsetLow
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
  fullName: System.Threading.Overlapped.OffsetLow
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Opgehaald of ingesteld van het woord lage van de bestandspositie waarmee de overdracht te starten. De bestandspositie is een byte-offset vanaf het begin van het bestand."
  syntax:
    content: public int OffsetLow { get; set; }
    return:
      type: System.Int32
      description: "Een <xref:System.Int32>-waarde voor het lage woord van de bestandspositie.</xref:System.Int32>"
  overload: System.Threading.Overlapped.OffsetLow*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  id: Pack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Pack(IOCompletionCallback)
  nameWithType: Overlapped.Pack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Taalpakketten in het huidige exemplaar van een <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> structuur, geven de gemachtigde kan worden aangeroepen wanneer de asynchrone i/o-bewerking voltooid is."
  remarks: "De verwijzing zonder begeleiding is geretourneerd door deze methode kan worden doorgegeven aan het besturingssysteem in overlappende i/o-bewerkingen. De <xref:System.Threading.NativeOverlapped>structuur is opgelost in het fysieke geheugen tot <xref:System.Threading.Overlapped.Unpack%2A>wordt aangeroepen.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>      > [!IMPORTANT] > De aanroeper is verantwoordelijk voor de buffer vastmaken. Als het toepassingsdomein verwijderd is, maar de handle naar de buffer die is vastgemaakt wordt vernietigd en de buffer wordt uitgebracht, zodat de i/o-bewerking om te schrijven naar het adres vrijgegeven. Daarom is het beter gebruik van de <xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>overbelasting voor methode, waarbij de runtime de buffer pincodes.</xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>"
  syntax:
    content: public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Een <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> gemachtigde die staat voor de callback-methode aangeroepen wanneer de asynchrone i/o-bewerking is voltooid."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Een verwijzing zonder begeleiding naar een <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> structuur."
  overload: System.Threading.Overlapped.Pack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De huidige <xref href=&quot;System.Threading.Overlapped&quot;> </xref> is al ingepakt."
  platform:
  - net462
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  id: Pack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Pack(IOCompletionCallback,Object)
  nameWithType: Overlapped.Pack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Taalpakketten in het huidige exemplaar van een <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> opgeven van een gemachtigde die wordt aangeroepen wanneer de asynchrone i/o-bewerking voltooid is en een beheerd object die als een buffer fungeert-structuur."
  remarks: "De verwijzing zonder begeleiding is geretourneerd door deze methode kan worden doorgegeven aan het besturingssysteem in overlappende i/o-bewerkingen. De <xref:System.Threading.NativeOverlapped>structuur is opgelost in het fysieke geheugen tot <xref:System.Threading.Overlapped.Unpack%2A>wordt aangeroepen.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       De buffer of buffers opgegeven in `userData` moet overeenkomen met de doorgegeven aan de niet-beheerde besturingssysteem-functie die de asynchrone i/o&quot;s uitvoert.      > [!NOTE] > De runtime pincodes buffer of buffers opgegeven in `userData` voor de duur van de i/o-bewerking. Als het toepassingsdomein verwijderd is, blijft de runtime het geheugen vastgemaakt totdat de i/o-bewerking is voltooid."
  syntax:
    content: public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb, object userData);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Een <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> gemachtigde die staat voor de callback-methode aangeroepen wanneer de asynchrone i/o-bewerking is voltooid."
    - id: userData
      type: System.Object
      description: "Een object of een matrix met objecten die vertegenwoordigen de invoer- of uitvoerwaarden buffer voor de bewerking. Elk object vertegenwoordigt een buffer, kan bijvoorbeeld een matrix met bytes."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Een verwijzing zonder begeleiding naar een <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> structuur."
  overload: System.Threading.Overlapped.Pack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De huidige <xref href=&quot;System.Threading.Overlapped&quot;> </xref> is al ingepakt."
  platform:
  - net462
- uid: System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  id: Unpack(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Unpack(NativeOverlapped*)
  nameWithType: Overlapped.Unpack(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Unpack(NativeOverlapped*)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Hiermee wordt de opgegeven zonder begeleiding uitgepakt <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> structuur in een beheerde <xref href=&quot;System.Threading.Overlapped&quot;> </xref> object."
  remarks: "De <xref:System.Threading.NativeOverlapped>structuur is niet van het fysieke geheugen vrijgemaakt totdat u de <xref:System.Threading.Overlapped.Free%2A>methode.</xref:System.Threading.Overlapped.Free%2A> </xref:System.Threading.NativeOverlapped>"
  syntax:
    content: public static System.Threading.Overlapped Unpack (System.Threading.NativeOverlapped* nativeOverlappedPtr);
    parameters:
    - id: nativeOverlappedPtr
      type: System.Threading.NativeOverlapped*
      description: "Een verwijzing zonder begeleiding naar een <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> structuur."
    return:
      type: System.Threading.Overlapped
      description: "Een <xref href=&quot;System.Threading.Overlapped&quot;> </xref> object met de informatie uit de systeemeigen structuur hebt uitgepakt."
  overload: System.Threading.Overlapped.Unpack*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nativeOverlappedPtr</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  id: UnsafePack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: UnsafePack(IOCompletionCallback)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Taalpakketten in het huidige exemplaar van een <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> structuur opgeven van de gemachtigde moet worden aangeroepen wanneer de asynchrone i/o-bewerking voltooid is. De aanroepende stack wordt niet worden doorgegeven."
  remarks: "De verwijzing zonder begeleiding is geretourneerd door deze methode kan worden doorgegeven aan het besturingssysteem in overlappende i/o-bewerkingen. De <xref:System.Threading.NativeOverlapped>structuur is opgelost in het fysieke geheugen tot <xref:System.Threading.Overlapped.Unpack%2A>wordt aangeroepen.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       De aanroeper is verantwoordelijk voor de buffer vastmaken. Als het toepassingsdomein verwijderd is, maar de handle naar de buffer die is vastgemaakt wordt vernietigd en de buffer wordt uitgebracht, zodat de i/o-bewerking om te schrijven naar het adres vrijgegeven. Daarom is het beter gebruik van de <xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>overbelasting voor methode, waarbij de runtime de buffer pincodes.</xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>      > [!CAUTION] > Werken met de <xref:System.Threading.Overlapped.UnsafePack%2A>methode kan per ongeluk openen van een beveiligingsrisico.</xref:System.Threading.Overlapped.UnsafePack%2A> De controle van de machtiging van de machtigingen van alle aanroepfuncties codetoegangsbeveiliging gebaseerd op de stack. De <xref:System.Threading.Overlapped.UnsafePack%2A>methode wordt niet doorgegeven aan de aanroepende stack.</xref:System.Threading.Overlapped.UnsafePack%2A> Schadelijke code mogelijk misbruik maakt van dit om te voorkomen dat de machtiging controles."
  syntax:
    content: public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Een <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> gemachtigde die staat voor de callback-methode aangeroepen wanneer de asynchrone i/o-bewerking is voltooid."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Een verwijzing zonder begeleiding naar een <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> structuur."
  overload: System.Threading.Overlapped.UnsafePack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De huidige <xref href=&quot;System.Threading.Overlapped&quot;> </xref> is al ingepakt."
  platform:
  - net462
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  id: UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: UnsafePack(IOCompletionCallback,Object)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Taalpakketten in het huidige exemplaar van een <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> structuur, geven de gemachtigde moet worden aangeroepen wanneer de asynchrone i/o-bewerking voltooid is en de beheerde die objecten fungeert als een buffer. De aanroepende stack wordt niet worden doorgegeven."
  remarks: "De verwijzing zonder begeleiding is geretourneerd door deze methode kan worden doorgegeven aan het besturingssysteem in overlappende i/o-bewerkingen. De <xref:System.Threading.NativeOverlapped>structuur is opgelost in het fysieke geheugen tot <xref:System.Threading.Overlapped.Unpack%2A>wordt aangeroepen.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       De buffer of buffers opgegeven in `userData` moet overeenkomen met de doorgegeven aan de niet-beheerde besturingssysteem-functie die de asynchrone i/o&quot;s uitvoert.       De runtime pincodes buffer of buffers opgegeven in`userData` voor de duur van de i/o-bewerking. Als het toepassingsdomein verwijderd is, blijft de runtime het geheugen vastgemaakt totdat de i/o-bewerking is voltooid.      > [!CAUTION] > Met behulp van de UnsafePack methode kan per ongeluk openen van een beveiligingsrisico. De controle van de machtiging van de machtigingen van alle aanroepfuncties codetoegangsbeveiliging gebaseerd op de stack. De methode UnsafePack wordt niet doorgegeven aan de stack aanroepen. Schadelijke code mogelijk misbruik maakt van dit om te voorkomen dat de machtiging controles."
  syntax:
    content: public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb, object userData);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Een <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> gemachtigde die staat voor de callback-methode aangeroepen wanneer de asynchrone i/o-bewerking is voltooid."
    - id: userData
      type: System.Object
      description: "Een object of een matrix met objecten die vertegenwoordigen de invoer- of uitvoerwaarden buffer voor de bewerking. Elk object vertegenwoordigt een buffer, kan bijvoorbeeld een matrix met bytes."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Een verwijzing zonder begeleiding naar een <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> structuur."
  overload: System.Threading.Overlapped.UnsafePack*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De aanroeper heeft niet de vereiste machtiging."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De huidige <xref href=&quot;System.Threading.Overlapped&quot;> </xref> is al ingepakt."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Threading.Overlapped.#ctor
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped()
  nameWithType: Overlapped.Overlapped()
  fullName: System.Threading.Overlapped.Overlapped()
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped(Int32,Int32,Int32,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Threading.Overlapped.AsyncResult
  parent: System.Threading.Overlapped
  isExternal: false
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
  fullName: System.Threading.Overlapped.AsyncResult
- uid: System.Threading.Overlapped.EventHandle
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandle
  nameWithType: Overlapped.EventHandle
  fullName: System.Threading.Overlapped.EventHandle
- uid: System.Threading.Overlapped.EventHandleIntPtr
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
  fullName: System.Threading.Overlapped.EventHandleIntPtr
- uid: System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Free(NativeOverlapped*)
  nameWithType: Overlapped.Free(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Free(NativeOverlapped*)
- uid: System.Threading.Overlapped.OffsetHigh
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
  fullName: System.Threading.Overlapped.OffsetHigh
- uid: System.Threading.Overlapped.OffsetLow
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
  fullName: System.Threading.Overlapped.OffsetLow
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack(IOCompletionCallback)
  nameWithType: Overlapped.Pack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback)
- uid: System.Threading.IOCompletionCallback
  parent: System.Threading
  isExternal: false
  name: IOCompletionCallback
  nameWithType: IOCompletionCallback
  fullName: System.Threading.IOCompletionCallback
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack(IOCompletionCallback,Object)
  nameWithType: Overlapped.Pack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback,Object)
- uid: System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Unpack(NativeOverlapped*)
  nameWithType: Overlapped.Unpack(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Unpack(NativeOverlapped*)
- uid: System.Threading.Overlapped
  parent: System.Threading
  isExternal: false
  name: Overlapped
  nameWithType: Overlapped
  fullName: System.Threading.Overlapped
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack(IOCompletionCallback)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback)
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack(IOCompletionCallback,Object)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback,Object)
- uid: System.Threading.Overlapped.#ctor*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped
  nameWithType: Overlapped.Overlapped
- uid: System.Threading.Overlapped.AsyncResult*
  parent: System.Threading.Overlapped
  isExternal: false
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
- uid: System.Threading.Overlapped.EventHandle*
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandle
  nameWithType: Overlapped.EventHandle
- uid: System.Threading.Overlapped.EventHandleIntPtr*
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
- uid: System.Threading.Overlapped.Free*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Free
  nameWithType: Overlapped.Free
- uid: System.Threading.Overlapped.OffsetHigh*
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
- uid: System.Threading.Overlapped.OffsetLow*
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
- uid: System.Threading.Overlapped.Pack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack
  nameWithType: Overlapped.Pack
- uid: System.Threading.Overlapped.Unpack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Unpack
  nameWithType: Overlapped.Unpack
- uid: System.Threading.Overlapped.UnsafePack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack
  nameWithType: Overlapped.UnsafePack
