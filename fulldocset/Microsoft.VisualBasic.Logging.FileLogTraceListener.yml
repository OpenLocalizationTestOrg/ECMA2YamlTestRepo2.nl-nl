### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener
  id: FileLogTraceListener
  children:
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  langs:
  - csharp
  name: FileLogTraceListener
  nameWithType: FileLogTraceListener
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener
  type: Class
  summary: "Biedt een eenvoudige listener waarin de logboekregistratie van uitvoer naar bestand wordt verwezen."
  remarks: "De klasse FileLogTraceListener biedt mogelijkheden voor automatische onderhoud voor het archiveren van logboekbestanden, indien nodig, op dagelijks of per toepassing. Deze automatische archivering functionaliteit vermindert de verantwoordelijkheden van het onderhoud van ontwikkelaars en beheerders.       Een exemplaar van FileLogTraceListener kan worden toegevoegd aan de <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName>of <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>verzamelingen uitvoer omleiden van logboekregistratie in een tekstbestand.</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> </xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> Instanties van deze klasse kunnen ook worden toegevoegd aan `My.Application.Log` of `My.Log` (voor webtoepassingen) in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] toepassingen. Zie voor meer informatie [Walkthrough: wijzigen waar My.Application.Log schrijft informatie](~/add/includes/ajax-current-ext-md.md) `.` de belangrijkste functies van deze klasse zijn: 1.  *Archivering functionaliteit*. De logboekbestanden die worden gegenereerd door deze klasse een naam volgens de basisnaam en de datum, samen met een aantal te onderscheiden van het logboekbestand van latere versies van het logboek. Nieuwe logboekbestanden worden gemaakt op basis van nodig.           De expliciete vorm van de bestandsnaam is `baseName`[-`dateStamp`] [-`version`] .log, waarbij: - de `baseName` deel is de naam van het logboek fundamentele, opgegeven door de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>eigenschap.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>          -De `dateStamp` onderdeel heeft de indeling &quot;Jjjj-MM-DD&quot;, en dit wordt weergegeven wanneer <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>of <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>          -Als meer dan één logboekbestand nodig is met dezelfde `baseName` en `dateStamp`, wordt de `version` deel, een positieve `Integer`, wordt toegevoegd aan de bestandsnaam.      2.  *Meerdere klasse-instanties*. Als u een exemplaar van de klasse FileLogTraceListener schrijft naar een bestand dat wordt gebruikt:-de klasse deelt het bestand als deze wordt gebruikt door een ander exemplaar van de klasse FileLogTraceListener in hetzelfde proces.          -De klasse maakt een nieuw logboekbestand met de naam van de volgende beschikbaar als het bestand wordt gebruikt door een ander proces.      3.  *Threadbeveiliging*. De klasse FileLogTraceListener is thread-veilig. Hiermee kunt u veilig berichten schrijven naar het logboek vanuit meerdere threads zonder het gebruik van vergrendelingen.       **Locatie van het logboekbestand** : de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>eigenschap duurt een <xref:Microsoft.VisualBasic.Logging.LogFileLocation>opsomming om op te geven van een van de typische mappen het logboekbestand te schrijven.</xref:Microsoft.VisualBasic.Logging.LogFileLocation> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>      -Als u wilt het logboek schrijven naar een andere locatie, stel de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>eigenschap aan die locatie.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>       **De naam van het logboekbestand** -de basisnaam aan voor het logboekbestand wordt opgegeven door de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>eigenschap.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>      -Het huidige logboekbestand kan worden gelezen vanaf de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>eigenschap.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> Deze is afgeleid van verschillende andere eigenschappen en de huidige status van de logboeken in het bestandssysteem.       **Meld u onderhoud** -de minimale frequentie voor het maken van nieuwe logboekbestanden wordt bepaald door de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>eigenschap.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> Wanneer de waarde is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>of <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>, een nieuw logboekbestand minstens één keer wordt gemaakt, elke dag of week en datum is opgenomen in de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>naam.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>      -De maximale grootte (in bytes) van het logboekbestand wordt bepaald door de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>eigenschap.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> Als de grootte van het logboekbestand overschrijdt, extra berichten die zijn geschreven naar het logboek zijn verwijderde en, afhankelijk van de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>eigenschap, wordt er een uitzondering gegenereerd.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>      -De <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>eigenschap bepaalt hoeveel ruimte (in bytes) moet beschikbaar zijn.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> Dit zorgt ervoor dat de klasse FileLogTraceListener niet alle beschikbare schijfruimte verbruikt. Gebruik de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>eigenschap om het gedrag van het logboek wordt geschreven wanneer er minder dan <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>vrije bytes.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>       **Logboekbestand uitvoerinstellingen** : de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>-eigenschap geeft op of de onderliggende stroom moet worden leeggemaakt automatisch na elke schrijfbewerking naar het logboekbestand.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>      -De <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>eigenschap geeft aan of berichten toevoegen aan het huidige logboekbestand als toegestaan, of ze naar een nieuw logboekbestand te schrijven.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>      -De <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>eigenschap geeft de tekenreeks moet worden gebruikt voor de velden in een logboekbericht die begrenst.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      -De <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>eigenschap geeft u de codering die moet worden gebruikt bij het maken van een nieuw logboekbestand.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>       **Logboekbestand uitvoer** : de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>en <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>methoden berichten schrijven naar het logboekbestand.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> Deze methoden controleren de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>eigenschap, samen met de bestaande logboekbestanden met dezelfde basisnaam om te bepalen of een nieuw logboekbestand moet worden gemaakt.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>      -De <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>methode leegmaakacties alle berichten momenteel in de uitvoerbuffer naar het logboekbestand.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>      -De <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>methode sluit het logboekbestand zodat het kan worden gebruikt door andere processen.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>       **Inschakelen van uitvoer** moet u tracering of foutopsporing voor het gebruik van een traceringslistener inschakelen. De volgende syntaxis is specifiek compiler. Als u compilers dan C# of [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], Raadpleeg de documentatie voor de compiler.      -Als foutopsporing wilt inschakelen in C#, voeg de `/d:DEBUG` vlag aan de opdrachtregel voor de compiler wanneer u de code compileren of u kunt toevoegen `#define DEBUG` boven aan het bestand. In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], voeg de `/d:DEBUG=True` vlag aan de compiler-opdrachtregel.      -Toevoegen tracering wilt inschakelen in C#, de `/d:TRACE` vlag aan de opdrachtregel voor de compiler bij het compileren van uw code, of Voeg `#define TRACE` boven aan het bestand. In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], voeg de `/d:TRACE=True` vlag aan de compiler-opdrachtregel.       Het niveau van de listener stelt het configuratiebestand voor uw toepassing te bewerken. In dit bestand kunt u toevoegen van een listener, instellen van het type en de parameters instellen, een listener te verwijderen of wissen van alle listeners die eerder zijn ingesteld door de toepassing. Het configuratiebestand moet zijn geformatteerd als in het volgende voorbeeld.       Voor dit voorbeeld wilt uitvoeren, moet u de volledig gekwalificeerde assembly-naam opgeven. Zie voor meer informatie over het verkrijgen van de volledig gekwalificeerde assembly-naam [assemblynamen](~/add/includes/ajax-current-ext-md.md).      ```   <configuration>       <system.diagnostics>           <sharedListeners>               <add name=&quot;FileLog&quot;                   type=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener,                          Microsoft.VisualBasic, Version=8.0.0.0,                          Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,                          processorArchitecture=MSIL&quot;                    initializeData=&quot;FileLogWriter&quot;/>           </sharedListeners>       </system.diagnostics>   </configuration>   ```"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public class FileLogTraceListener : System.Diagnostics.TraceListener
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FileLogTraceListener()
  nameWithType: FileLogTraceListener.FileLogTraceListener()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;> </xref> klasse met de standaardnaam."
  remarks: "Deze methode stelt u de naam van het exemplaar van de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>klasse FileLogTraceListener.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       U hebt toegang tot de exemplaarnaam via de <xref:System.Diagnostics.TraceListener.Name%2A>eigenschap.</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public FileLogTraceListener ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FileLogTraceListener(String)
  nameWithType: FileLogTraceListener.FileLogTraceListener(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener(String)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;> </xref> klasse met de opgegeven naam."
  remarks: "Deze methode stelt u de naam van het exemplaar van de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>klasse naar `name`.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       U hebt toegang tot de exemplaarnaam beschouwd de <xref:System.Diagnostics.TraceListener.Name%2A>eigenschap.</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public FileLogTraceListener (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. De naam van het instantieobject."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  id: Append
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Append
  nameWithType: FileLogTraceListener.Append
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Bepaalt of de uitvoer naar het huidige bestand toevoegen of schrijven naar een nieuw bestand."
  remarks: "Als de eigenschap Append is `False`, de uitvoer wordt geschreven naar een nieuw bestand. Als de eigenschap is `True`, de uitvoer wordt toegevoegd aan het huidige bestand, tenzij:-het uitvoerbestand is vergrendeld door een ander proces. In dit geval wordt een nieuw logboekbestand gemaakt met een versienummer dat is opgenomen in de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>naam.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>      -De huidige grootte is groter dan wat de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>eigenschap kunt.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> In dit geval zijn aanvullende berichten verwijderde en, afhankelijk van de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>eigenschap, wordt er een uitzondering gegenereerd.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>      -De bestaande bestandsnaam is verouderd volgens de planning maken van het logboek is opgegeven door de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>eigenschap.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> In dit geval wordt een nieuw logboekbestand gemaakt en de datumstempel is opgenomen in de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>naam.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>"
  syntax:
    content: public bool Append { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>, met <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> die aangeeft dat de uitvoer wordt toegevoegd aan het huidige bestand en <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> die aangeeft dat de uitvoer naar een nieuw bestand wordt geschreven. De standaardinstelling voor deze eigenschap is <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  id: AutoFlush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Hiermee wordt aangegeven of het schrijven naar de stroom log-bestand de buffer leegmaken."
  remarks: "De `False` instellen voor de eigenschap AutoFlush de beste prestaties voor de meeste toepassingen biedt, omdat het is efficiënter meerdere berichten in één keer in te schrijven naar het logboekbestand. U kunt de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>methode leegmaken van alle berichten momenteel in het logboekbestand buffer-uitvoer.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> U kunt ook de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>methode, die impliciet Leegmaakacties van de stroom voordat het logboekbestand wordt gesloten.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>"
  syntax:
    content: public bool AutoFlush { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>, met <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> die aangeeft dat de stroom moet worden leeggemaakt nadat elke schrijfbewerking; anders de logboekvermeldingen worden gebufferd en efficiënter wordt geschreven. De standaardinstelling voor deze eigenschap is <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  id: BaseFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Opgehaald of ingesteld van de basisnaam aan voor de logboekbestanden die wordt gebruikt om de naam van de volledige logboekbestand te maken."
  remarks: "The BaseFileName property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.  \n  \n The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name. It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log. New log files are created on an as-needed basis.  \n  \n The explicit form of the full log file name is `path`\\\\`baseName`[-`dateStamp`][-`iteration`].log, where  \n  \n-   The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.  \n  \n-   The `baseName` part is the fundamental log name, specified by the BaseFileName property.  \n  \n-   The `dateStamp` part has the format \"YYYY-MM-DD\", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.  \n  \n-   If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name."
  syntax:
    content: public string BaseFileName { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. De basisnaam aan voor de logboekbestanden. De standaardwaarde is de toepassing productnaam."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  id: Close
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: FileLogTraceListener.Close()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "De onderliggende stroom voor het huidige logboekbestand wordt gesloten en alle resources die zijn gekoppeld aan de huidige stroom releases."
  remarks: "U hoeft niet expliciet de sluiten methode niet aanroepen omdat de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>klasse beheert de onderliggende stoom.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  id: CustomLocation
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Opgehaald of ingesteld van de logboekmap wanneer de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*>eigenschap is ingesteld op <xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;> </xref>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*>"
  remarks: "Wanneer de eigenschap CustomLocation is ingesteld, deze ook de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>eigenschap <xref:Microsoft.VisualBasic.Logging.LogFileLocation>.</xref:Microsoft.VisualBasic.Logging.LogFileLocation> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> ingesteld       De eigenschap CustomLocation Veroorzaak een uitzondering als de map kan niet worden omgezet."
  syntax:
    content: public string CustomLocation { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, dit is de naam van de map voor logboekbestand. De standaardinstelling voor deze eigenschap is van de gebruiker voor toepassingsgegevens."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  id: Delimiter
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Opgehaald of ingesteld van het scheidingsteken dat wordt gebruikt voor het scheiden van velden in een logboekbericht."
  remarks: "De eigenschap scheidingsteken kunt u het scheidingsteken wijzigen."
  syntax:
    content: public string Delimiter { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, namelijk het scheidingsteken dat wordt gebruikt voor velden in een logboekbericht. De standaardinstelling voor deze eigenschap is de TAB-teken."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  id: DiskSpaceExhaustedBehavior
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Hiermee bepaalt u wat te doen bij het schrijven naar het logboekbestand en er minder vrije schijfruimte beschikbaar dan is opgegeven bij de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*>eigenschap.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*>"
  remarks: "Wanneer de eigenschap DiskSpaceExhaustedBehavior is ingesteld op <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>, de logboekberichten achtergrond verwijderd als er niet genoeg schijfruimte gereserveerd.</xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption> Dit is de standaardinstelling en deze voorkomt u dat eenvoudige toepassingen mislukken als de schijf vol opgehaald.       Krachtiger toepassingen kunnen de eigenschap DiskSpaceExhaustedBehavior ingesteld op <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>, en voeg `Try...Catch` blokken om alle code die in het logboek. schrijft</xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>"
  syntax:
    content: public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&quot;></xref>. Hiermee bepaalt u wat te doen bij een poging tot schrijven naar het logboek-bestand en er is minder vrije schijfruimte beschikbaar dan is opgegeven bij de <> </> *> eigenschap, of als de grootte van het logboekbestand is groter dan wat de <> </> *> eigenschap kunt. De standaardwaarde is <xref href=&quot;Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: FileLogTraceListener.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "De onderliggende stroom wordt gesloten en eventueel versies van de beheerde bronnen."
  remarks: "Wanneer de `disposing` parameter `True`, deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>verwijzingen.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Deze methode roept de `Dispose` methode van elk object waarnaar wordt verwezen."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>versies van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> releases alleen bronnen zonder begeleiding."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  id: Encoding
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Opgehaald of ingesteld van de codering die moet worden gebruikt bij het maken van een nieuw logboekbestand."
  remarks: "Wanneer u tekst toevoegt aan een bestaand logboekbestand, wordt de codering van het bestand gebruikt in plaats van de codering die is opgegeven door de eigenschap Encoding."
  syntax:
    content: public System.Text.Encoding Encoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>, waarmee de codering die moet worden gebruikt wanneer een nieuw logboekbestand maakt.</xref:System.Text.Encoding> De standaardwaarde van deze eigenschap is <xref:System.Text.UTF8Encoding>.</xref:System.Text.UTF8Encoding>"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  id: Flush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: FileLogTraceListener.Flush()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Leegmaakacties van de onderliggende stroom die naar het huidige logboekbestand schrijft."
  remarks: "Gebruik de methode Flush alle gebufferde gegevens schrijven naar het huidige logboekbestand."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  id: FullLogFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Hiermee haalt u de naam van de huidige volledige logboekbestand."
  remarks: "The FullLogFileName property gives the current full log-file name. It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log. New log files are created on an as-needed basis.  \n  \n The explicit form of the full log-file name is `path`\\\\`baseName`[-`dateStamp`][-`iteration`].log, where:  \n  \n-   The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.  \n  \n-   The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.  \n  \n-   The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.  \n  \n-   If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name."
  syntax:
    content: public string FullLogFileName { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, dit is de naam van de huidige volledige logboekbestand."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: FileLogTraceListener.GetSupportedAttributes()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Hiermee haalt u de aangepaste XML-configuratiekenmerken wordt ondersteund door de traceringslistener."
  remarks: "De aangepaste kenmerken voor het <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>kan worden gebruikt in het XML-configuratiebestand voor het beheren van het gedrag van een exemplaar van de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>klasse.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Met behulp van een ander kenmerk zorgt ervoor dat een configuratie-uitzondering."
  syntax:
    content: protected override string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>matrix met de XML-configuratiekenmerken wordt herkend door deze listener."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  id: IncludeHostName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Hiermee wordt aangegeven of de hostnaam van de machine logboekregistratie moet worden opgenomen in de uitvoer."
  remarks: "Gebruik de eigenschap voor het configureren van het gedrag van de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>en <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>methoden.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public bool IncludeHostName { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. Gebruik <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> anders gebruiken als de host-ID opgenomen worden moet; <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  id: Location
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Location
  nameWithType: FileLogTraceListener.Location
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Opgehaald of ingesteld van de locatie van de logboekbestanden."
  remarks: "Use the Location property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.  \n  \n|**Location value**|**Path**|  \n|------------------------|--------------|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the application data that is shared among all users, with the format:<br /><br /> `BasePath`\\\\`CompanyName`\\\\`ProductName`\\\\`ProductVersion`<br /><br /> A typical value for `BasePath` is:<br /><br /> C:\\Documents and Settings\\All Users\\Application Data<br /><br /> The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the executable file that started the application.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the application data of a user, with the format:<br /><br /> `BasePath`\\\\`CompanyName`\\\\`ProductName`\\\\`ProductVersion`<br /><br /> A typical value for `BasePath` is:<br /><br /> C:\\Documents and Settings\\\\`username`\\Application Data<br /><br /> The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path of the current system's temporary folder.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.|"
  syntax:
    content: public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.LogFileLocation
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;></xref>, wordt de locatie voor het logboekbestand. De standaardwaarde is <xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  id: LogFileCreationSchedule
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Hiermee wordt bepaald welke datum in de namen van de logboekbestanden op te nemen."
  remarks: "Toewijzen van een van de <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>opsommingswaarden voor de eigenschap LogFileCreationSchedule om op te geven welke datum in de namen van de logboekbestanden op te nemen.</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>       De indeling van de datum is jjjj-MM-DD. Zie voor meer informatie over de indeling van de naam van het logboek <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>      | **LogFileCreationSchedule waarde**|**datum in de naam van het logboek**|   |---------------------------------------|-----------------------------------|   | <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>| De huidige datum in de naam van het logboek opnemen. |   | <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>| De datum niet opnemen in de naam van het logboek. |   | <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>| De eerste dag van de huidige week opnemen in de naam van het logboek.</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption><br /><br /> De week begint op zaterdag. |"
  syntax:
    content: public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&quot;></xref>. Hiermee wordt aangegeven welke datum in de namen van het logboekbestand op te nemen. De standaardwaarde is <xref href=&quot;Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  id: MaxFileSize
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Opgehaald of ingesteld van de maximaal toegestane grootte van het logboekbestand in bytes."
  remarks: "Gebruik deze eigenschap om ervoor te zorgen dat de logboekbestanden niet te groot toenemen doen.       Als het logboek voor de bestandsgrootte (in bytes) is groter dan de waarde van deze eigenschap wanneer de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>klasse pogingen om een bericht schrijven naar het logboek, het bericht is verwijderd en de fout is achtergrond of een uitzondering gegenereerd, afhankelijk van de waarde van de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>eigenschap.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Anders wordt wordt het bericht naar het logboek geschreven als de hoeveelheid vrije schijfruimte (in bytes) kleiner dan <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> is"
  syntax:
    content: public long MaxFileSize { get; set; }
    return:
      type: System.Int64
      description: "<xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>. Dit is de maximale toegestane logboekbestand grootte, in bytes. De standaardwaarde is 5000000."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Als deze eigenschap is ingesteld op een waarde minder dan 1000."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  id: ReserveDiskSpace
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Opgehaald of ingesteld de hoeveelheid vrije schijfruimte, in bytes nodig voordat berichten kunnen worden geschreven naar het logboekbestand."
  remarks: "Gebruik deze eigenschap om ervoor te zorgen dat de logboekbestanden van de schijf niet volledig vullen.       Als de hoeveelheid vrije schijfruimte (in bytes ruimte) is kleiner dan de waarde van deze eigenschap wanneer de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>klasse pogingen om een bericht schrijven naar het logboek, het bericht is verwijderd en de fout is achtergrond of een uitzondering gegenereerd, afhankelijk van de waarde van de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>eigenschap.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Anders wordt wordt het bericht naar het logboek geschreven als de grootte van het logboekbestand (in bytes) groter dan <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> is"
  syntax:
    content: public long ReserveDiskSpace { get; set; }
    return:
      type: System.Int64
      description: "<xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>. Dit is de hoeveelheid vrije schijfruimte nodig. De standaardwaarde is 10000000."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Als deze eigenschap is ingesteld op een waarde die lager is dan 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Traceringsinformatie schrijfbewerkingen, een gegevensobject en informatie over de gebeurtenis naar het uitvoerbestand of de stroom."
  remarks: "Deze methode: 1.  De gegevens en context-informatie voor uitvoer opgemaakt.      2.  Maakt een nieuw logboekbestand, indien nodig.      3.  Schrijft de informatie in het logboekbestand.       Zie voor meer informatie over het maken van nieuwe logboekbestanden <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       De volgende tabel bevat de uitvoervelden in de aangegeven volgorde. De velden worden gescheiden door de tekenreeks die de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>eigenschap geeft u en worden gevolgd door een regel terminator.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Veld**|**uitvoer voorwaarde**|**beschrijving**|   |---------------|--------------------------|---------------------|   | `source`| Altijd | De waarde van `name`. |   | `severity`| Altijd | De opsommingswaarde naam van `eventType`. |   | `id`| Altijd | De tekenreeksweergave van `id`. |   | `message`| Altijd | De tekenreeksweergave van `data`. |   | `callStack`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De eigenschap <xref:System.Diagnostics.TraceEventCache.Callstack%2A>van `eventCache`. |   | `CorrelationID`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De eigenschap <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>van `eventCache`. |   | `DateTime`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De tekenreeksrepresentatie van de <xref:System.Diagnostics.TraceEventCache.DateTime%2A>eigenschap van `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> De invariant culture wordt gebruikt voor de tekenreeksconversie van. |   | `ProcessID`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De tekenreeksrepresentatie van de <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>eigenschap van `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> De invariant culture wordt gebruikt voor de tekenreeksconversie van. |   | `ThreadID`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De eigenschap <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>van `eventCache`. |   | `Timestamp`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De tekenreeksrepresentatie van de <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>eigenschap van `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> De invariant culture wordt gebruikt voor de tekenreeksconversie van. |   | `HostName`| Als de eigenschap <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>is `True`. | De naam van de computer. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Een <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> object met het huidige proces-ID, thread-ID en stack trace-informatie."
    - id: source
      type: System.String
      description: "Een naam van de traceringsbron die deze methode wordt aangeroepen."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Een van de <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> opsommingswaarden."
    - id: id
      type: System.Int32
      description: "Een numerieke id voor de gebeurtenis."
    - id: data
      type: System.Object
      description: "De traceringsgegevens te verzenden."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Schrijfbewerkingen trace-informatie, een matrix van gegevensobjecten en informatie over de gebeurtenis naar het uitvoerbestand of de stroom."
  remarks: "Deze methode: 1.  De gegevens en context-informatie voor 2-uitvoer wordt opgemaakt.  Hiermee maakt u een nieuw logboekbestand bestand, indien nodig, 3.  Schrijft de informatie in het logboekbestand.       Zie voor meer informatie over het maken van nieuwe logboekbestanden <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       Deze tabel bevat de uitvoervelden in de aangegeven volgorde. De velden worden gescheiden door de tekenreeks die de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>eigenschap geeft u en worden gevolgd door een regel terminator.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Veld**|**uitvoer voorwaarde**|**beschrijving**|   |---------------|--------------------------|---------------------|   | `source`| Altijd | De waarde van `name`. |   | `severity`| Altijd | De opsommingswaarde naam van `eventType`. |   | `id`| Altijd | De tekenreeksweergave van `id`. |   | `message`| Altijd | De tekenreeks die bestaat uit de tekenreeksweergave van elk element in `data`elk elkaar zijn gescheiden door <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>. |   | `callStack`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De eigenschap <xref:System.Diagnostics.TraceEventCache.Callstack%2A>van `eventCache`. |   | `CorrelationID`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De eigenschap <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>van `eventCache`. |   | `DateTime`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De tekenreeksrepresentatie van de <xref:System.Diagnostics.TraceEventCache.DateTime%2A>eigenschap van `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> De invariant culture wordt gebruikt voor de tekenreeksconversie van. |   | `ProcessID`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De tekenreeksrepresentatie van de <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>eigenschap van `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> De invariant culture wordt gebruikt voor de tekenreeksconversie van. |   | `ThreadID`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De eigenschap <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>van `eventCache`. |   | `Timestamp`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De tekenreeksrepresentatie van de <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>eigenschap van `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> De invariant culture wordt gebruikt voor de tekenreeksconversie van. |   | `HostName`| Als de eigenschap <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>is `True`. | De naam van de computer. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Een <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> object met het huidige proces-ID, thread-ID en stack trace-informatie."
    - id: source
      type: System.String
      description: "De naam van de traceringsbron die deze methode wordt aangeroepen."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Een van de <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> opsommingswaarden."
    - id: id
      type: System.Int32
      description: "Een numerieke id voor de gebeurtenis."
    - id: data
      type: System.Object[]
      description: "Een matrix met objecten die u wilt verzenden als gegevens."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Schrijfbewerkingen trace-informatie, de informatie van een bericht en de gebeurtenis naar het uitvoerbestand of de stroom."
  remarks: "Deze methode: 1.  De gegevens en context-informatie voor uitvoer opgemaakt.      2.  Maakt een nieuw logboekbestand, indien nodig.      3.  Schrijft de informatie in het logboekbestand.       Zie voor meer informatie over het maken van nieuwe logboekbestanden <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       Deze tabel bevat de uitvoervelden in de volgorde waarin ze worden weergegeven. De velden worden gescheiden door de tekenreeks die de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>eigenschap geeft u en worden gevolgd door een regel terminator.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Veld**|**uitvoer voorwaarde**|**beschrijving**|   |---------------|--------------------------|---------------------|   | `source`| Altijd. | De waarde van `name`. |   | `severity`| Altijd. | De opsommingswaarde naam van `eventType`. |   | `id`| Altijd. | De tekenreeksweergave van `id`. |   | `message`| Altijd. | De waarde van `message`. |   | `callStack`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De eigenschap <xref:System.Diagnostics.TraceEventCache.Callstack%2A>van `eventCache`. |   | `CorrelationID`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De eigenschap <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>van `eventCache`. |   | `DateTime`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De tekenreeksrepresentatie van de <xref:System.Diagnostics.TraceEventCache.DateTime%2A>eigenschap van `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> De invariant culture wordt gebruikt voor de tekenreeksconversie van. |   | `ProcessID`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De tekenreeksrepresentatie van de <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>eigenschap van `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> De invariant culture wordt gebruikt voor de tekenreeksconversie van. |   | `ThreadID`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De eigenschap <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>van `eventCache`. |   | `Timestamp`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De tekenreeksrepresentatie van de <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>eigenschap van `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> De invariant culture wordt gebruikt voor de tekenreeksconversie van. |   | `HostName`| Als de eigenschap <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>is `True`. | De naam van de computer. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Een <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> object met het huidige proces-ID, thread-ID en stack trace-informatie."
    - id: source
      type: System.String
      description: "Een naam van de traceringsbron die deze methode wordt aangeroepen."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Een van de <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> opsommingswaarden."
    - id: id
      type: System.Int32
      description: "Een numerieke id voor de gebeurtenis."
    - id: message
      type: System.String
      description: "Een bericht te schrijven."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Schrijfbewerkingen trace-informatie, een opgemaakte matrix met objecten en informatie over de gebeurtenis naar het uitvoerbestand of de stroom."
  remarks: "Deze methode: 1.  De gegevens en context-informatie voor uitvoer opgemaakt.      2.  Maakt een nieuwe een nieuw logboekbestand, indien nodig.      3.  Schrijft de informatie in het logboekbestand.       Zie voor meer informatie over het maken van nieuwe logboekbestanden <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       Deze tabel bevat de uitvoervelden in de volgorde waarin ze worden weergegeven. De velden worden gescheiden door de tekenreeks die de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>eigenschap geeft u en gevolgd door een regel terminator.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Veld**|**uitvoer voorwaarde**|**beschrijving**|   |---------------|--------------------------|---------------------|   | `source`| Altijd | De waarde van `name`. |   | `severity`| Altijd | De opsommingswaarde naam van `eventType`. |   | `id`| Altijd | De tekenreeksweergave van `id`. |   | `message`| Altijd | De gegevens in `args` geformatteerd met het `format` tekenreeks en het gebruik van de invariant culture voor conversies van het type string. |   | `callStack`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De eigenschap <xref:System.Diagnostics.TraceEventCache.Callstack%2A>van `eventCache`. |   | `CorrelationID`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De eigenschap <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>van `eventCache`. |   | `DateTime`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De tekenreeksrepresentatie van de <xref:System.Diagnostics.TraceEventCache.DateTime%2A>eigenschap van `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> De invariant culture wordt gebruikt voor de tekenreeksconversie van. |   | `ProcessID`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De tekenreeksrepresentatie van de <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>eigenschap van `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> De invariant culture wordt gebruikt voor de tekenreeksconversie van. |   | `ThreadID`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De eigenschap <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>van `eventCache`. |   | `Timestamp`| Wanneer de <xref:System.Diagnostics.TraceOptions>-vlag is ingesteld in de eigenschap <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | De tekenreeksrepresentatie van de <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>eigenschap van `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> De invariant culture wordt gebruikt voor de tekenreeksconversie van. |   | `HostName`| Als de eigenschap <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>is `True`. | De naam van de computer. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Een <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> object met het huidige proces-ID, thread-ID en stack trace-informatie."
    - id: source
      type: System.String
      description: "Een naam van de traceringsbron die deze methode wordt aangeroepen."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Een van de <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> opsommingswaarden."
    - id: id
      type: System.Int32
      description: "Een numerieke id voor de gebeurtenis."
    - id: format
      type: System.String
      description: "Een tekenreeks met nul of meer indeling items, die overeenkomen met de objecten in de `args` matrix."
    - id: args
      type: System.Object[]
      description: "Een <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> matrix met nul of meer objecten om te formatteren."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  id: Write(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: FileLogTraceListener.Write(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Schrijft een verbatim-bericht naar schijf, zonder dat enige informatie aanvullende context."
  remarks: "De methode Write schrijft een specifieke bericht naar het logboekbestand, zonder dat enige informatie aanvullende context.       Gebruik een van de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>methoden met de contextinformatie in de logboekuitvoer.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public override void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Het aangepaste bericht schrijven."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: FileLogTraceListener.WriteLine(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Schrijft een verbatim-bericht naar de schijf, gevolgd door de huidige regel terminator, zonder dat enige informatie aanvullende context."
  remarks: "De methode WriteLine schrijft een specifieke bericht naar het logboekbestand, zonder dat enige informatie aanvullende context.       Gebruik een van de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>methoden met de contextinformatie in de logboekuitvoer.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public override void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Het aangepaste bericht schrijven."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TraceListener
  isExternal: false
  name: System.Diagnostics.TraceListener
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener()
  nameWithType: FileLogTraceListener.FileLogTraceListener()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener(String)
  nameWithType: FileLogTraceListener.FileLogTraceListener(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Append
  nameWithType: FileLogTraceListener.Append
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Close()
  nameWithType: FileLogTraceListener.Close()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
- uid: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: DiskSpaceExhaustedOption
  nameWithType: DiskSpaceExhaustedOption
  fullName: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: FileLogTraceListener.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(Boolean)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Flush()
  nameWithType: FileLogTraceListener.Flush()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: FileLogTraceListener.GetSupportedAttributes()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Location
  nameWithType: FileLogTraceListener.Location
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
- uid: Microsoft.VisualBasic.Logging.LogFileLocation
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: LogFileLocation
  nameWithType: LogFileLocation
  fullName: Microsoft.VisualBasic.Logging.LogFileLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
- uid: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: LogFileCreationScheduleOption
  nameWithType: LogFileCreationScheduleOption
  fullName: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: FileLogTraceListener.Write(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: FileLogTraceListener.WriteLine(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener
  nameWithType: FileLogTraceListener.FileLogTraceListener
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Append
  nameWithType: FileLogTraceListener.Append
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Close
  nameWithType: FileLogTraceListener.Close
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Dispose
  nameWithType: FileLogTraceListener.Dispose
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Flush
  nameWithType: FileLogTraceListener.Flush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: FileLogTraceListener.GetSupportedAttributes
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Location
  nameWithType: FileLogTraceListener.Location
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData
  nameWithType: FileLogTraceListener.TraceData
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: FileLogTraceListener.TraceEvent
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Write
  nameWithType: FileLogTraceListener.Write
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: FileLogTraceListener.WriteLine
