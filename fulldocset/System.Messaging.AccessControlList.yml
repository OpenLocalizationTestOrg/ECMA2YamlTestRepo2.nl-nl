### YamlMime:ManagedReference
items:
- uid: System.Messaging.AccessControlList
  id: AccessControlList
  children:
  - System.Messaging.AccessControlList.#ctor
  - System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)
  - System.Messaging.AccessControlList.Contains(System.Messaging.AccessControlEntry)
  - System.Messaging.AccessControlList.CopyTo(System.Messaging.AccessControlEntry[],System.Int32)
  - System.Messaging.AccessControlList.IndexOf(System.Messaging.AccessControlEntry)
  - System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)
  - System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)
  langs:
  - csharp
  name: AccessControlList
  nameWithType: AccessControlList
  fullName: System.Messaging.AccessControlList
  type: Class
  summary: "Bevat een lijst met vermeldingen voor toegangsbeheer, toegangsrechten opgeven voor een of meer entiteiten."
  remarks: "Gebruik de klasse AccessControlList toegangsrechten om toe te voegen met één aanroep bij het instellen van machtigingen en meerdere entiteiten opgeven. De toegangsbeheerlijst maken door een access control entry voor elke toegang rechten combinatie en beheerder toe te voegen.       Een AccessControlList identificeert de entiteiten die zijn toegestaan of geweigerd toegang tot een beveiligbaar object. Als een proces probeert te krijgen van een beveiligbaar object, controleert het systeem de vermeldingen voor toegangsbeheer in de toegangsbeheerlijst van het object om te bepalen of u toegang verlenen tot het. Als het object geen access control list heeft, verleent het systeem volledige toegang tot alles. Als de toegangsbeheerlijst van het object geen vermeldingen heeft, weigert het systeem alle pogingen tot toegang tot het object.       Het systeem controleert de vermeldingen voor toegangsbeheer in volgorde, totdat er een of meer waarmee de aangevraagde toegangsrechten of een van de aangevraagde toegangsrechten worden geweigerd.       Het systeem onderzoekt elk <xref:System.Messaging.AccessControlEntry>in reeks totdat een van de volgende gebeurtenissen zich voordoet:: een geweigerde toegang <xref:System.Messaging.AccessControlEntry>expliciet geweigerd een van de aangevraagde toegangsrechten voor een van de entiteiten die worden vermeld in de thread-toegangstoken.</xref:System.Messaging.AccessControlEntry> </xref:System.Messaging.AccessControlEntry>      -Een of meer toegang is toegestaan <xref:System.Messaging.AccessControlEntry>items voor entiteiten die worden vermeld in de thread toegangstoken expliciet de aangevraagde toegangsrechten toekennen.</xref:System.Messaging.AccessControlEntry>      -Alle <xref:System.Messaging.AccessControlEntry>artikelen zijn gecontroleerd en er is nog steeds ten minste één aangevraagde toegangsrecht die is niet expliciet is toegestaan, in welk geval impliciet toegang is geweigerd.</xref:System.Messaging.AccessControlEntry>"
  syntax:
    content: 'public class AccessControlList : System.Collections.CollectionBase'
  inheritance:
  - System.Object
  - System.Collections.CollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.CollectionBase.Capacity
  - System.Collections.CollectionBase.Clear
  - System.Collections.CollectionBase.Count
  - System.Collections.CollectionBase.GetEnumerator
  - System.Collections.CollectionBase.InnerList
  - System.Collections.CollectionBase.List
  - System.Collections.CollectionBase.OnClear
  - System.Collections.CollectionBase.OnClearComplete
  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnValidate(System.Object)
  - System.Collections.CollectionBase.RemoveAt(System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  platform:
  - net462
- uid: System.Messaging.AccessControlList.#ctor
  id: '#ctor'
  parent: System.Messaging.AccessControlList
  langs:
  - csharp
  name: AccessControlList()
  nameWithType: AccessControlList.AccessControlList()
  fullName: System.Messaging.AccessControlList.AccessControlList()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Messaging.AccessControlList&quot;> </xref> klasse."
  syntax:
    content: public AccessControlList ();
    parameters: []
  overload: System.Messaging.AccessControlList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)
  id: Add(System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  langs:
  - csharp
  name: Add(AccessControlEntry)
  nameWithType: AccessControlList.Add(AccessControlEntry)
  fullName: System.Messaging.AccessControlList.Add(AccessControlEntry)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Voegt een access control entry toe aan de toegangsbeheerlijst."
  syntax:
    content: public int Add (System.Messaging.AccessControlEntry entry);
    parameters:
    - id: entry
      type: System.Messaging.AccessControlEntry
      description: "Een <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> toe te voegen aan het einde van de toegangsbeheerlijst."
    return:
      type: System.Int32
      description: "De positie waarin de nieuwe access control entry is ingevoegd."
  overload: System.Messaging.AccessControlList.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>entry</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.AccessControlList.Contains(System.Messaging.AccessControlEntry)
  id: Contains(System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  langs:
  - csharp
  name: Contains(AccessControlEntry)
  nameWithType: AccessControlList.Contains(AccessControlEntry)
  fullName: System.Messaging.AccessControlList.Contains(AccessControlEntry)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hiermee wordt bepaald of de access control list, een specifieke access control entry bevat."
  syntax:
    content: public bool Contains (System.Messaging.AccessControlEntry entry);
    parameters:
    - id: entry
      type: System.Messaging.AccessControlEntry
      description: "De <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> te vinden in de toegangsbeheerlijst."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de access control entry wordt gevonden in de access control list; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.AccessControlList.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.AccessControlList.CopyTo(System.Messaging.AccessControlEntry[],System.Int32)
  id: CopyTo(System.Messaging.AccessControlEntry[],System.Int32)
  parent: System.Messaging.AccessControlList
  langs:
  - csharp
  name: CopyTo(AccessControlEntry[],Int32)
  nameWithType: AccessControlList.CopyTo(AccessControlEntry[],Int32)
  fullName: System.Messaging.AccessControlList.CopyTo(AccessControlEntry[],Int32)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Kopieert de hele access control list naar een compatibel eendimensionale matrix van toegang beheren vermeldingen, beginnend bij de opgegeven index van de doelmatrix."
  syntax:
    content: public void CopyTo (System.Messaging.AccessControlEntry[] array, int index);
    parameters:
    - id: array
      type: System.Messaging.AccessControlEntry[]
      description: "Een matrix van het type <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> aan de lijst met vermeldingen voor toegangsbeheer, worden gekopieerd. De matrix moet hebben op nul gebaseerde indexering."
    - id: index
      type: System.Int32
      description: "De index in de matrix waarop u wilt beginnen met het kopiëren van de lijst met vermeldingen voor toegangsbeheer."
  overload: System.Messaging.AccessControlList.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>array</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> index </code> parameter kleiner is dan nul."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> index </code> parameter is groter dan of gelijk zijn aan de lengte van de <code> array </code> parameter.       - of - het aantal elementen in de toegangsbeheerlijst van de bron is groter dan de beschikbare ruimte vanaf <code> index </code> aan het einde van de doelmatrix vermeldingen voor toegangsbeheer."
  platform:
  - net462
- uid: System.Messaging.AccessControlList.IndexOf(System.Messaging.AccessControlEntry)
  id: IndexOf(System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  langs:
  - csharp
  name: IndexOf(AccessControlEntry)
  nameWithType: AccessControlList.IndexOf(AccessControlEntry)
  fullName: System.Messaging.AccessControlList.IndexOf(AccessControlEntry)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Bepaalt de specifieke index van een access control entry in de toegangsbeheerlijst."
  syntax:
    content: public int IndexOf (System.Messaging.AccessControlEntry entry);
    parameters:
    - id: entry
      type: System.Messaging.AccessControlEntry
      description: "De <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> te vinden in de toegangsbeheerlijst."
    return:
      type: System.Int32
      description: "De index van de vermelding als het is gevonden in de lijst. anders wordt -1"
  overload: System.Messaging.AccessControlList.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)
  id: Insert(System.Int32,System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  langs:
  - csharp
  name: Insert(Int32,AccessControlEntry)
  nameWithType: AccessControlList.Insert(Int32,AccessControlEntry)
  fullName: System.Messaging.AccessControlList.Insert(Int32,AccessControlEntry)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hiermee voegt u een vermelding in de access control list op de opgegeven positie."
  remarks: "Als de `index` parameter gelijk is aan het aantal items in de access control list, en vervolgens de vermelding is toegevoegd aan het einde. Anders wordt omlaag de vermeldingen na de invoegpositie om het nieuwe item in de lijst onder te brengen."
  syntax:
    content: public void Insert (int index, System.Messaging.AccessControlEntry entry);
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index waarop de access control entry moet worden ingevoegd."
    - id: entry
      type: System.Messaging.AccessControlEntry
      description: "Een <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> worden ingevoegd in de toegangsbeheerlijst."
  overload: System.Messaging.AccessControlList.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> index </code> parameter is geen geldige index in deze ACL (toegangsbeheerlijst)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>entry</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)
  id: Remove(System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  langs:
  - csharp
  name: Remove(AccessControlEntry)
  nameWithType: AccessControlList.Remove(AccessControlEntry)
  fullName: System.Messaging.AccessControlList.Remove(AccessControlEntry)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hiermee verwijdert u het eerste exemplaar van een specifieke access control entry uit de toegangsbeheerlijst."
  remarks: "De vermeldingen voor toegangsbeheer die verwijderd item volgen verplaatsen omhoog naar de vrijgekomen spot in beslag nemen."
  syntax:
    content: public void Remove (System.Messaging.AccessControlEntry entry);
    parameters:
    - id: entry
      type: System.Messaging.AccessControlEntry
      description: "De <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> verwijderen uit de toegangsbeheerlijst."
  overload: System.Messaging.AccessControlList.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>entry</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.CollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Messaging.AccessControlList.#ctor
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: AccessControlList()
  nameWithType: AccessControlList.AccessControlList()
  fullName: System.Messaging.AccessControlList.AccessControlList()
- uid: System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: Add(AccessControlEntry)
  nameWithType: AccessControlList.Add(AccessControlEntry)
  fullName: System.Messaging.AccessControlList.Add(AccessControlEntry)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Messaging.AccessControlEntry
  parent: System.Messaging
  isExternal: false
  name: AccessControlEntry
  nameWithType: AccessControlEntry
  fullName: System.Messaging.AccessControlEntry
- uid: System.Messaging.AccessControlList.Contains(System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: Contains(AccessControlEntry)
  nameWithType: AccessControlList.Contains(AccessControlEntry)
  fullName: System.Messaging.AccessControlList.Contains(AccessControlEntry)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.AccessControlList.CopyTo(System.Messaging.AccessControlEntry[],System.Int32)
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: CopyTo(AccessControlEntry[],Int32)
  nameWithType: AccessControlList.CopyTo(AccessControlEntry[],Int32)
  fullName: System.Messaging.AccessControlList.CopyTo(AccessControlEntry[],Int32)
- uid: System.Messaging.AccessControlEntry[]
  parent: System.Messaging
  isExternal: false
  name: AccessControlEntry
  nameWithType: AccessControlEntry
  fullName: System.Messaging.AccessControlEntry[]
  spec.csharp:
  - uid: System.Messaging.AccessControlEntry
    name: AccessControlEntry
    nameWithType: AccessControlEntry
    fullName: AccessControlEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Messaging.AccessControlList.IndexOf(System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: IndexOf(AccessControlEntry)
  nameWithType: AccessControlList.IndexOf(AccessControlEntry)
  fullName: System.Messaging.AccessControlList.IndexOf(AccessControlEntry)
- uid: System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: Insert(Int32,AccessControlEntry)
  nameWithType: AccessControlList.Insert(Int32,AccessControlEntry)
  fullName: System.Messaging.AccessControlList.Insert(Int32,AccessControlEntry)
- uid: System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: Remove(AccessControlEntry)
  nameWithType: AccessControlList.Remove(AccessControlEntry)
  fullName: System.Messaging.AccessControlList.Remove(AccessControlEntry)
- uid: System.Messaging.AccessControlList.#ctor*
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: AccessControlList
  nameWithType: AccessControlList.AccessControlList
- uid: System.Messaging.AccessControlList.Add*
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: Add
  nameWithType: AccessControlList.Add
- uid: System.Messaging.AccessControlList.Contains*
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: Contains
  nameWithType: AccessControlList.Contains
- uid: System.Messaging.AccessControlList.CopyTo*
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: CopyTo
  nameWithType: AccessControlList.CopyTo
- uid: System.Messaging.AccessControlList.IndexOf*
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: IndexOf
  nameWithType: AccessControlList.IndexOf
- uid: System.Messaging.AccessControlList.Insert*
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: Insert
  nameWithType: AccessControlList.Insert
- uid: System.Messaging.AccessControlList.Remove*
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: Remove
  nameWithType: AccessControlList.Remove
