### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.CommandBinding
  id: CommandBinding
  children:
  - System.Windows.Input.CommandBinding.#ctor
  - System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand)
  - System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)
  - System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)
  - System.Windows.Input.CommandBinding.CanExecute
  - System.Windows.Input.CommandBinding.Command
  - System.Windows.Input.CommandBinding.Executed
  - System.Windows.Input.CommandBinding.PreviewCanExecute
  - System.Windows.Input.CommandBinding.PreviewExecuted
  langs:
  - csharp
  name: CommandBinding
  nameWithType: CommandBinding
  fullName: System.Windows.Input.CommandBinding
  type: Class
  summary: "Koppelt een <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref> aan de gebeurtenis-handlers die de opdracht implementeren."
  remarks: "Een CommandBinding wordt gekoppeld aan een opdracht met de <xref:System.Windows.Input.CommandBinding.PreviewExecuted>/<xref:System.Windows.Input.CommandBinding.Executed> en <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>/<xref:System.Windows.Input.CommandBinding.CanExecute> gebeurtenissen zijn die implementeren en de status van de opdracht bepaald.</xref:System.Windows.Input.CommandBinding.CanExecute> </xref:System.Windows.Input.CommandBinding.PreviewCanExecute> </xref:System.Windows.Input.CommandBinding.Executed> </xref:System.Windows.Input.CommandBinding.PreviewExecuted>       Wanneer de <xref:System.Windows.Input.RoutedCommand.Execute%2A>of <xref:System.Windows.Input.RoutedCommand.CanExecute%2A>methode van een <xref:System.Windows.Input.RoutedCommand>wordt aangeroepen, de <xref:System.Windows.Input.CommandBinding.PreviewExecuted>/<xref:System.Windows.Input.CommandBinding.Executed> of de <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>/<xref:System.Windows.Input.CommandBinding.CanExecute> gebeurtenissen worden gegenereerd op de doel-opdracht.</xref:System.Windows.Input.CommandBinding.CanExecute> </xref:System.Windows.Input.CommandBinding.PreviewCanExecute> </xref:System.Windows.Input.CommandBinding.Executed> </xref:System.Windows.Input.CommandBinding.PreviewExecuted> </xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.RoutedCommand.CanExecute%2A> </xref:System.Windows.Input.RoutedCommand.Execute%2A>  Als het doel van de opdracht een CommandBinding voor de opdracht heeft, worden de juiste handlers genoemd.  Als het doel van de opdracht een CommandBinding voor de opdracht niet beschikt, worden de gebeurtenissen worden gerouteerd via de element-structuur tot een element met een CommandBinding is gevonden.       Een CommandBinding heeft beperkt gebruik met een <xref:System.Windows.Input.ICommand>die niet een<xref:System.Windows.Input.RoutedCommand>.</xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.ICommand>  Dit is omdat een CommandBinding verbinding heeft de opdracht uit om de <xref:System.Windows.Input.ExecutedRoutedEventHandler>en de <xref:System.Windows.Input.CanExecuteRoutedEventHandler>die luisteren naar de <xref:System.Windows.Input.CommandManager.Executed>en <xref:System.Windows.Input.CommandManager.CanExecute>gerouteerde gebeurtenissen die deze gebeurtenis treedt op wanneer de <xref:System.Windows.Input.RoutedCommand.Execute%2A>en <xref:System.Windows.Input.RoutedCommand.CanExecute%2A>methode van de <xref:System.Windows.Input.RoutedCommand>worden genoemd.</xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.RoutedCommand.CanExecute%2A> </xref:System.Windows.Input.RoutedCommand.Execute%2A> </xref:System.Windows.Input.CommandManager.CanExecute> </xref:System.Windows.Input.CommandManager.Executed> </xref:System.Windows.Input.CanExecuteRoutedEventHandler> </xref:System.Windows.Input.ExecutedRoutedEventHandler>"
  syntax:
    content: public class CommandBinding
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.#ctor
  id: '#ctor'
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: CommandBinding()
  nameWithType: CommandBinding.CommandBinding()
  fullName: System.Windows.Input.CommandBinding.CommandBinding()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> klasse."
  syntax:
    content: public CommandBinding ();
    parameters: []
  overload: System.Windows.Input.CommandBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand)
  id: '#ctor(System.Windows.Input.ICommand)'
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: CommandBinding(ICommand)
  nameWithType: CommandBinding.CommandBinding(ICommand)
  fullName: System.Windows.Input.CommandBinding.CommandBinding(ICommand)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> klasse met behulp van de opgegeven <xref:System.Windows.Input.ICommand>.</xref:System.Windows.Input.ICommand>"
  syntax:
    content: public CommandBinding (System.Windows.Input.ICommand command);
    parameters:
    - id: command
      type: System.Windows.Input.ICommand
      description: "De opdracht op basis van de nieuwe <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref> op."
  overload: System.Windows.Input.CommandBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)
  id: '#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)'
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: CommandBinding(ICommand,ExecutedRoutedEventHandler)
  nameWithType: CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> klasse met behulp van de opgegeven <xref:System.Windows.Input.ICommand>en de opgegeven <xref href=&quot;System.Windows.Input.CommandBinding.Executed&quot;> </xref> gebeurtenis-handler.</xref:System.Windows.Input.ICommand>"
  syntax:
    content: public CommandBinding (System.Windows.Input.ICommand command, System.Windows.Input.ExecutedRoutedEventHandler executed);
    parameters:
    - id: command
      type: System.Windows.Input.ICommand
      description: "De opdracht op basis van de nieuwe <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref> op."
    - id: executed
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "De handler voor de <xref href=&quot;System.Windows.Input.CommandBinding.Executed&quot;> </xref> gebeurtenis op de nieuwe <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref>."
  overload: System.Windows.Input.CommandBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)
  id: '#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)'
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: CommandBinding(ICommand,ExecutedRoutedEventHandler,CanExecuteRoutedEventHandler)
  nameWithType: CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler,CanExecuteRoutedEventHandler)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> klasse met behulp van de opgegeven <xref:System.Windows.Input.ICommand>en de opgegeven <xref href=&quot;System.Windows.Input.CommandBinding.Executed&quot;> </xref> en <xref href=&quot;System.Windows.Input.CommandBinding.CanExecute&quot;> </xref> gebeurtenis-handlers.</xref:System.Windows.Input.ICommand>"
  syntax:
    content: public CommandBinding (System.Windows.Input.ICommand command, System.Windows.Input.ExecutedRoutedEventHandler executed, System.Windows.Input.CanExecuteRoutedEventHandler canExecute);
    parameters:
    - id: command
      type: System.Windows.Input.ICommand
      description: "De opdracht op basis van de nieuwe <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref> op."
    - id: executed
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "De handler voor de <xref href=&quot;System.Windows.Input.CommandBinding.Executed&quot;> </xref> gebeurtenis op de nieuwe <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref>."
    - id: canExecute
      type: System.Windows.Input.CanExecuteRoutedEventHandler
      description: "De handler voor de <xref href=&quot;System.Windows.Input.CommandBinding.CanExecute&quot;> </xref> gebeurtenis op de nieuwe <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref>."
  overload: System.Windows.Input.CommandBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.CanExecute
  id: CanExecute
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: CanExecute
  nameWithType: CommandBinding.CanExecute
  fullName: System.Windows.Input.CommandBinding.CanExecute
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Deze gebeurtenis treedt op wanneer de opdracht die is gekoppeld aan dit <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> initieert een uit om te bepalen of de opdracht kan worden uitgevoerd op de doel-opdracht."
  remarks: "Wanneer de <xref:System.Windows.Input.RoutedCommand.CanExecute%2A>methode op een <xref:System.Windows.Input.RoutedCommand>wordt aangeroepen, de <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>gebeurtenis is opgetreden op de doel-opdracht.</xref:System.Windows.Input.CommandBinding.PreviewCanExecute> </xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.RoutedCommand.CanExecute%2A>  Als de gebeurtenis niet verwerkt wordt, wordt de CanExecute-gebeurtenis wordt gestart.  Als het doel van de opdracht heeft een <xref:System.Windows.Input.CommandBinding>voor de opdracht, de CanExecute-handler voor die <xref:System.Windows.Input.CommandBinding>wordt aangeroepen.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding>  Als het doel van de opdracht beschikt niet over een <xref:System.Windows.Input.CommandBinding>voor de opdracht de gebeurtenis CanExecute bellen-up maken van de structuur van het element zoeken naar een element met een <xref:System.Windows.Input.CommandBinding>die zijn gekoppeld aan de opdracht.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding>      <a name=&quot;routedEventInfo_CanExecute&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.Input.CommandManager.CanExecuteEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.CanExecuteRoutedEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>.</xref:System.Windows.Input.CommandBinding.PreviewCanExecute> </xref:System.Windows.Input.CanExecuteRoutedEventHandler> </xref:System.Windows.Input.CommandManager.CanExecuteEvent>"
  example:
  - "The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.  \n  \n [!code-xml[commandwithhandler#CommandHandlerCommandBinding](~/add/codesnippet/xaml/commandWithHandler/Window1.xaml#commandhandlercommandbinding)]  \n  \n [!code-cs[CommandHandlerProcedural#CommandHandlerBindingInit](~/add/codesnippet/csharp/CommandHandlerProcedural/Window1.xaml.cs#commandhandlerbindinginit)]\n [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/add/codesnippet/visualbasic/commandhandlerprocedural/window1.xaml.vb#commandhandlerbindinginit)]  \n  \n The following shows the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> which sets <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> to `true`.  \n  \n [!code-cs[commandwithhandler#CommandHandlerCanExecuteHandler](~/add/codesnippet/csharp/commandWithHandler/Window1.xaml.cs#commandhandlercanexecutehandler)]\n [!code-vb[commandwithhandler#CommandHandlerCanExecuteHandler](~/add/codesnippet/visualbasic/commandWithHandler/Window1.xaml.vb#commandhandlercanexecutehandler)]"
  syntax:
    content: public event System.Windows.Input.CanExecuteRoutedEventHandler CanExecute;
    return:
      type: System.Windows.Input.CanExecuteRoutedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.Command
  id: Command
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: Command
  nameWithType: CommandBinding.Command
  fullName: System.Windows.Input.CommandBinding.Command
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Opgehaald of ingesteld de <xref:System.Windows.Input.ICommand>die zijn gekoppeld aan dit <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref>.</xref:System.Windows.Input.ICommand>"
  remarks: ''
  example:
  - "The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.  \n  \n [!code-xml[commandWithHandler#CommandHandlerCommandBinding](~/add/codesnippet/xaml/commandWithHandler/Window1.xaml#commandhandlercommandbinding)]  \n  \n [!code-cs[commandhandlerprocedural#CommandHandlerBindingInit](~/add/codesnippet/csharp/CommandHandlerProcedural/Window1.xaml.cs#commandhandlerbindinginit)]\n [!code-vb[commandhandlerprocedural#CommandHandlerBindingInit](~/add/codesnippet/visualbasic/commandhandlerprocedural/window1.xaml.vb#commandhandlerbindinginit)]  \n  \n The following shows the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> which sets <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> to `true`.  \n  \n [!code-cs[commandWithHandler#CommandHandlerCanExecuteHandler](~/add/codesnippet/csharp/commandWithHandler/Window1.xaml.cs#commandhandlercanexecutehandler)]\n [!code-vb[commandWithHandler#CommandHandlerCanExecuteHandler](~/add/codesnippet/visualbasic/commandWithHandler/Window1.xaml.vb#commandhandlercanexecutehandler)]  \n  \n The following shows the <xref:System.Windows.Input.ExecutedRoutedEventHandler> which creates a <xref:System.Windows.MessageBox> when the command is executed.  \n  \n [!code-cs[commandWithHandler#CommandHandlerExecutedHandler](~/add/codesnippet/csharp/commandWithHandler/Window1.xaml.cs#commandhandlerexecutedhandler)]\n [!code-vb[commandWithHandler#CommandHandlerExecutedHandler](~/add/codesnippet/visualbasic/commandWithHandler/Window1.xaml.vb#commandhandlerexecutedhandler)]"
  syntax:
    content: public System.Windows.Input.ICommand Command { get; set; }
    return:
      type: System.Windows.Input.ICommand
      description: "De opdracht die is gekoppeld aan deze binding."
  overload: System.Windows.Input.CommandBinding.Command*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.Executed
  id: Executed
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: Executed
  nameWithType: CommandBinding.Executed
  fullName: System.Windows.Input.CommandBinding.Executed
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Deze gebeurtenis treedt op wanneer de opdracht die is gekoppeld aan dit <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> wordt uitgevoerd."
  remarks: "Wanneer een <xref:System.Windows.Input.RoutedCommand>wordt uitgevoerd, wordt de <xref:System.Windows.Input.CommandBinding.PreviewExecuted>gebeurtenis op de doel-opdracht.</xref:System.Windows.Input.CommandBinding.PreviewExecuted> </xref:System.Windows.Input.RoutedCommand>  Als de <xref:System.Windows.Input.CommandBinding.PreviewExecuted>gebeurtenis is niet afgehandeld, de uitgevoerde gebeurtenis wordt geactiveerd op de doel-opdracht.</xref:System.Windows.Input.CommandBinding.PreviewExecuted>  Als het doel van de opdracht heeft een <xref:System.Windows.Input.CommandBinding>voor de specifieke opdracht, de uitgevoerde-handler voor die <xref:System.Windows.Input.CommandBinding>wordt aangeroepen.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding>  Als het doel van de opdracht beschikt niet over een <xref:System.Windows.Input.CommandBinding>voor die specifieke opdracht de gebeurtenis uitgevoerde verspreidt de element-structuur zoeken naar een element met een <xref:System.Windows.Input.CommandBinding>die zijn gekoppeld aan de opdracht.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding>  Als een <xref:System.Windows.Input.CommandBinding>niet wordt gevonden, de opdracht kan niet worden uitgevoerd.</xref:System.Windows.Input.CommandBinding>      <a name=&quot;routedEventInfo_Executed&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.Input.CommandManager.ExecutedEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.ExecutedRoutedEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.Input.CommandBinding.PreviewExecuted>.</xref:System.Windows.Input.CommandBinding.PreviewExecuted> </xref:System.Windows.Input.ExecutedRoutedEventHandler> </xref:System.Windows.Input.CommandManager.ExecutedEvent>"
  example:
  - "The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.  \n  \n [!code-xml[commandwithhandler#CommandHandlerCommandBinding](~/add/codesnippet/xaml/commandWithHandler/Window1.xaml#commandhandlercommandbinding)]  \n  \n [!code-cs[CommandHandlerProcedural#CommandHandlerBindingInit](~/add/codesnippet/csharp/CommandHandlerProcedural/Window1.xaml.cs#commandhandlerbindinginit)]\n [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/add/codesnippet/visualbasic/commandhandlerprocedural/window1.xaml.vb#commandhandlerbindinginit)]  \n  \n The following shows the <xref:System.Windows.Input.ExecutedRoutedEventHandler> which creates a <xref:System.Windows.MessageBox> when the command is executed.  \n  \n [!code-cs[commandWithHandler#CommandHandlerExecutedHandler](~/add/codesnippet/csharp/commandWithHandler/Window1.xaml.cs#commandhandlerexecutedhandler)]\n [!code-vb[commandWithHandler#CommandHandlerExecutedHandler](~/add/codesnippet/visualbasic/commandWithHandler/Window1.xaml.vb#commandhandlerexecutedhandler)]"
  syntax:
    content: public event System.Windows.Input.ExecutedRoutedEventHandler Executed;
    return:
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.PreviewCanExecute
  id: PreviewCanExecute
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: PreviewCanExecute
  nameWithType: CommandBinding.PreviewCanExecute
  fullName: System.Windows.Input.CommandBinding.PreviewCanExecute
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Deze gebeurtenis treedt op wanneer de opdracht die is gekoppeld aan dit <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> initieert een selectievakje om te bepalen of de opdracht kan worden uitgevoerd op de huidige opdracht doel."
  remarks: "Wanneer de <xref:System.Windows.Input.RoutedCommand.CanExecute%2A>methode op een <xref:System.Windows.Input.RoutedCommand>wordt aangeroepen, de PreviewCanExecute gebeurtenis is opgetreden op de doel-opdracht als het doel van de opdracht heeft een <xref:System.Windows.Input.CommandBinding>voor de opdracht.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.RoutedCommand.CanExecute%2A> Vervolgens wordt de <xref:System.Windows.Input.CommandBinding.CanExecute>-handler voor die <xref:System.Windows.Input.CommandBinding>wordt aangeroepen.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding.CanExecute>  Als het doel van de opdracht beschikt niet over een <xref:System.Windows.Input.CommandBinding>voor de opdracht de <xref:System.Windows.Input.CommandBinding.CanExecute>gebeurtenis bellen-up maken van de structuur van het element zoeken naar een element met een <xref:System.Windows.Input.CommandBinding>die zijn gekoppeld aan de opdracht.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding.CanExecute> </xref:System.Windows.Input.CommandBinding>  Als de gebeurtenis is niet afgehandeld, de <xref:System.Windows.Input.CommandBinding.CanExecute>gebeurtenis is opgetreden.</xref:System.Windows.Input.CommandBinding.CanExecute>      <a name=&quot;routedEventInfo_PreviewCanExecute&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.Input.CommandManager.PreviewCanExecuteEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.CanExecuteRoutedEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.Input.CommandBinding.CanExecute>.</xref:System.Windows.Input.CommandBinding.CanExecute> </xref:System.Windows.Input.CanExecuteRoutedEventHandler> </xref:System.Windows.Input.CommandManager.PreviewCanExecuteEvent>"
  syntax:
    content: public event System.Windows.Input.CanExecuteRoutedEventHandler PreviewCanExecute;
    return:
      type: System.Windows.Input.CanExecuteRoutedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.PreviewExecuted
  id: PreviewExecuted
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: PreviewExecuted
  nameWithType: CommandBinding.PreviewExecuted
  fullName: System.Windows.Input.CommandBinding.PreviewExecuted
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Deze gebeurtenis treedt op wanneer de opdracht die is gekoppeld aan dit <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> wordt uitgevoerd."
  remarks: "Wanneer een <xref:System.Windows.Input.RoutedCommand>wordt uitgevoerd, wordt de gebeurtenis PreviewExecuted op de doel-opdracht.</xref:System.Windows.Input.RoutedCommand>  Als het doel van de opdracht heeft een <xref:System.Windows.Input.CommandBinding>voor de opdracht de PreviewExecuted-handler voor die <xref:System.Windows.Input.CommandBinding>wordt aangeroepen.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding>  Als het doel van de opdracht beschikt niet over een <xref:System.Windows.Input.CommandBinding>voor de opdracht de gebeurtenis PreviewExecuted tunnels omlaag door de element-structuur zoeken naar een element met een <xref:System.Windows.Input.CommandBinding>die zijn gekoppeld aan de opdracht.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding>  Als de preview-gebeurtenis is niet afgehandeld, de <xref:System.Windows.Input.CommandBinding.Executed>gebeurtenis is opgetreden op het doel van de opdracht.</xref:System.Windows.Input.CommandBinding.Executed>      <a name=&quot;routedEventInfo_PreviewExecuted&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.ExecutedRoutedEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.Input.CommandBinding.Executed>.</xref:System.Windows.Input.CommandBinding.Executed> </xref:System.Windows.Input.ExecutedRoutedEventHandler> </xref:System.Windows.Input.CommandManager.PreviewExecutedEvent>"
  syntax:
    content: public event System.Windows.Input.ExecutedRoutedEventHandler PreviewExecuted;
    return:
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.CommandBinding.#ctor
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: CommandBinding()
  nameWithType: CommandBinding.CommandBinding()
  fullName: System.Windows.Input.CommandBinding.CommandBinding()
- uid: System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand)
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: CommandBinding(ICommand)
  nameWithType: CommandBinding.CommandBinding(ICommand)
  fullName: System.Windows.Input.CommandBinding.CommandBinding(ICommand)
- uid: System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: true
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: CommandBinding(ICommand,ExecutedRoutedEventHandler)
  nameWithType: CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler)
- uid: System.Windows.Input.ExecutedRoutedEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: ExecutedRoutedEventHandler
  nameWithType: ExecutedRoutedEventHandler
  fullName: System.Windows.Input.ExecutedRoutedEventHandler
- uid: System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: CommandBinding(ICommand,ExecutedRoutedEventHandler,CanExecuteRoutedEventHandler)
  nameWithType: CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler,CanExecuteRoutedEventHandler)
- uid: System.Windows.Input.CanExecuteRoutedEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: CanExecuteRoutedEventHandler
  nameWithType: CanExecuteRoutedEventHandler
  fullName: System.Windows.Input.CanExecuteRoutedEventHandler
- uid: System.Windows.Input.CommandBinding.CanExecute
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: CanExecute
  nameWithType: CommandBinding.CanExecute
  fullName: System.Windows.Input.CommandBinding.CanExecute
- uid: System.Windows.Input.CommandBinding.Command
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: Command
  nameWithType: CommandBinding.Command
  fullName: System.Windows.Input.CommandBinding.Command
- uid: System.Windows.Input.CommandBinding.Executed
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: Executed
  nameWithType: CommandBinding.Executed
  fullName: System.Windows.Input.CommandBinding.Executed
- uid: System.Windows.Input.CommandBinding.PreviewCanExecute
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: PreviewCanExecute
  nameWithType: CommandBinding.PreviewCanExecute
  fullName: System.Windows.Input.CommandBinding.PreviewCanExecute
- uid: System.Windows.Input.CommandBinding.PreviewExecuted
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: PreviewExecuted
  nameWithType: CommandBinding.PreviewExecuted
  fullName: System.Windows.Input.CommandBinding.PreviewExecuted
- uid: System.Windows.Input.CommandBinding.#ctor*
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: CommandBinding
  nameWithType: CommandBinding.CommandBinding
- uid: System.Windows.Input.CommandBinding.Command*
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: Command
  nameWithType: CommandBinding.Command
