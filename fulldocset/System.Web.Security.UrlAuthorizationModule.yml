### YamlMime:ManagedReference
items:
- uid: System.Web.Security.UrlAuthorizationModule
  id: UrlAuthorizationModule
  children:
  - System.Web.Security.UrlAuthorizationModule.#ctor
  - System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)
  - System.Web.Security.UrlAuthorizationModule.Dispose
  - System.Web.Security.UrlAuthorizationModule.Init(System.Web.HttpApplication)
  langs:
  - csharp
  name: UrlAuthorizationModule
  nameWithType: UrlAuthorizationModule
  fullName: System.Web.Security.UrlAuthorizationModule
  type: Class
  summary: "Verifieert dat de gebruiker toegang heeft tot de aangevraagde URL. Deze klasse kan niet worden overgenomen."
  remarks: "De module UrlAuthorizationModule bepaalt of de huidige gebruiker toegang is toegestaan voor de aangevraagde URL, op basis van de gebruiker <xref:System.Security.Principal.IIdentity.Name%2A>of de lijst met functies die een gebruiker lid van is.</xref:System.Security.Principal.IIdentity.Name%2A> Zie voor meer informatie over hoe de gebruikersnaam wordt bepaald [ASP.NET-verificatie](~/add/includes/ajax-current-ext-md.md). Zie voor meer informatie over het beheren van gebruikersrollen [autorisatie beheren met behulp van functies](~/add/includes/ajax-current-ext-md.md).       Autorisatie voor een gebruiker of een rol wordt beheerd met behulp van de configuratie-element. U kunt toestaan of weigeren van een gebruiker of een rol met de `allow` of `deny` subelementen, respectievelijk. De `allow` en `deny` subelementen in de volgorde waarin deze in de configuratie worden ge√Ønterpreteerd. Zodra een element geeft aan dat de toegang is toegestaan of geweigerd, wordt de controle van de autorisatie in de module UrlAuthorizationModule voltooid. Bijvoorbeeld de volgende sectie van een Web.config-bestand vereist dat gebruikers zich aanmelden (door anonieme gebruikers weigeren) en vervolgens kan alleen gebruikers in de rol beheerders toegang hebben. Gebruikers die niet in de rol Administrator zijn geweigerd.      ```   <authorization>     <deny users=&quot;?&quot; />     <allow roles=&quot;Administrators&quot; />     <deny users=&quot;*&quot; />   </authorization>   ```Een gebruiker of rol moet specifiek zijn geweigerd voor het weigeren van de gebruiker of Rolmachtiging voor een URL. Dat wil zeggen, als het vorige voorbeeld had niet is opgegeven de `<deny users=&quot;*&quot; />` element en alle geverifieerde gebruikers zou hebben is toegang te krijgen tot de aangevraagde URL, ongeacht welke rol ze lid zijn van zijn."
  example:
  - "The following code example grants access to Kim and members of the Admins role, while denying it to John and all anonymous users.  \n  \n```  \n<authorization>  \n  <allow users=\"Kim\"/>  \n  <allow roles=\"Admins\"/>  \n  <deny users=\"John\"/>  \n  <deny users=\"?\"/>  \n</authorization>  \n```"
  syntax:
    content: 'public sealed class UrlAuthorizationModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.UrlAuthorizationModule.#ctor
  id: '#ctor'
  parent: System.Web.Security.UrlAuthorizationModule
  langs:
  - csharp
  name: UrlAuthorizationModule()
  nameWithType: UrlAuthorizationModule.UrlAuthorizationModule()
  fullName: System.Web.Security.UrlAuthorizationModule.UrlAuthorizationModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Maakt een exemplaar van de <xref href=&quot;System.Web.Security.UrlAuthorizationModule&quot;> </xref> klasse."
  remarks: "Deze constructor is niet bedoeld om te worden aangeroepen vanuit de toepassingscode.       ASP.NET roept deze constructor voor het maken van een exemplaar van de <xref:System.Web.Security.UrlAuthorizationModule>klasse.</xref:System.Web.Security.UrlAuthorizationModule> Na het aanroepen van de constructor, roept de <xref:System.Web.Security.UrlAuthorizationModule.Init%2A>methode voor het initialiseren van de nieuwe <xref:System.Web.Security.UrlAuthorizationModule>object.</xref:System.Web.Security.UrlAuthorizationModule> </xref:System.Web.Security.UrlAuthorizationModule.Init%2A>"
  syntax:
    content: public UrlAuthorizationModule ();
    parameters: []
  overload: System.Web.Security.UrlAuthorizationModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)
  id: CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)
  parent: System.Web.Security.UrlAuthorizationModule
  langs:
  - csharp
  name: CheckUrlAccessForPrincipal(String,IPrincipal,String)
  nameWithType: UrlAuthorizationModule.CheckUrlAccessForPrincipal(String,IPrincipal,String)
  fullName: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(String,IPrincipal,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hiermee wordt bepaald of de gebruiker toegang tot het aangevraagde bestand heeft."
  remarks: "De methode CheckUrlAccessForPrincipal controleert of de huidige gebruiker toegang heeft tot het aangevraagde bestand in het bestand Web.config voor de toepassing.       Als de HTTP-term gebruikt voor het maken van de aanvraag is `GET`, `POST`, of `HEAD`, de methode CheckUrlAccessForPrincipal controleert leestoegang tot het bestand. Als een andere bewerking wordt gebruikt, controleert u de CheckUrlAccessForPrincipal lees-/ schrijftoegang tot het bestand.       Zie voor meer informatie en een voorbeeld Web.config-bestand, de <xref:System.Web.Security.UrlAuthorizationModule>klasse documentatie.</xref:System.Web.Security.UrlAuthorizationModule>"
  syntax:
    content: public static bool CheckUrlAccessForPrincipal (string virtualPath, System.Security.Principal.IPrincipal user, string verb);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Het virtuele pad naar het bestand."
    - id: user
      type: System.Security.Principal.IPrincipal
      description: "Een <xref:System.Security.Principal.IPrincipal>-object als de huidige gebruiker.</xref:System.Security.Principal.IPrincipal>"
    - id: verb
      type: System.String
      description: "De HTTP-term die wordt gebruikt voor het maken van de aanvraag."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de huidige gebruiker toegang heeft tot het bestand. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>user</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>verb</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code>bevindt zich buiten het pad van de hoofdmap van de toepassing."
  platform:
  - net462
- uid: System.Web.Security.UrlAuthorizationModule.Dispose
  id: Dispose
  parent: System.Web.Security.UrlAuthorizationModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: UrlAuthorizationModule.Dispose()
  fullName: System.Web.Security.UrlAuthorizationModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Versies van alle resources, dan geheugen, die wordt gebruikt door de <xref href=&quot;System.Web.Security.UrlAuthorizationModule&quot;> </xref>."
  remarks: "Deze methode is niet bedoeld om te worden aangeroepen vanuit de toepassingscode."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Security.UrlAuthorizationModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.UrlAuthorizationModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Security.UrlAuthorizationModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: UrlAuthorizationModule.Init(HttpApplication)
  fullName: System.Web.Security.UrlAuthorizationModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Initialiseert de <xref href=&quot;System.Web.Security.UrlAuthorizationModule&quot;> </xref> object."
  remarks: "Deze methode is niet bedoeld om te worden aangeroepen vanuit de toepassingscode.       De Init-methode zorgt ervoor dat de <xref:System.Web.Security.UrlAuthorizationModule>is opgenomen in de verwerking van de <xref:System.Web.HttpApplication.AuthorizeRequest>gebeurtenis.</xref:System.Web.HttpApplication.AuthorizeRequest> </xref:System.Web.Security.UrlAuthorizationModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "De huidige <xref href=&quot;System.Web.HttpApplication&quot;> </xref> exemplaar."
  overload: System.Web.Security.UrlAuthorizationModule.Init*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.Security.UrlAuthorizationModule.#ctor
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: UrlAuthorizationModule()
  nameWithType: UrlAuthorizationModule.UrlAuthorizationModule()
  fullName: System.Web.Security.UrlAuthorizationModule.UrlAuthorizationModule()
- uid: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: CheckUrlAccessForPrincipal(String,IPrincipal,String)
  nameWithType: UrlAuthorizationModule.CheckUrlAccessForPrincipal(String,IPrincipal,String)
  fullName: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(String,IPrincipal,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.Security.UrlAuthorizationModule.Dispose
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: Dispose()
  nameWithType: UrlAuthorizationModule.Dispose()
  fullName: System.Web.Security.UrlAuthorizationModule.Dispose()
- uid: System.Web.Security.UrlAuthorizationModule.Init(System.Web.HttpApplication)
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: UrlAuthorizationModule.Init(HttpApplication)
  fullName: System.Web.Security.UrlAuthorizationModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Security.UrlAuthorizationModule.#ctor*
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: UrlAuthorizationModule
  nameWithType: UrlAuthorizationModule.UrlAuthorizationModule
- uid: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal*
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: CheckUrlAccessForPrincipal
  nameWithType: UrlAuthorizationModule.CheckUrlAccessForPrincipal
- uid: System.Web.Security.UrlAuthorizationModule.Dispose*
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: Dispose
  nameWithType: UrlAuthorizationModule.Dispose
- uid: System.Web.Security.UrlAuthorizationModule.Init*
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: Init
  nameWithType: UrlAuthorizationModule.Init
