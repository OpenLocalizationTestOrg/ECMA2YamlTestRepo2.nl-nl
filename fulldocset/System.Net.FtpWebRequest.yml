### YamlMime:ManagedReference
items:
- uid: System.Net.FtpWebRequest
  id: FtpWebRequest
  children:
  - System.Net.FtpWebRequest.Abort
  - System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  - System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  - System.Net.FtpWebRequest.ClientCertificates
  - System.Net.FtpWebRequest.ConnectionGroupName
  - System.Net.FtpWebRequest.ContentLength
  - System.Net.FtpWebRequest.ContentOffset
  - System.Net.FtpWebRequest.ContentType
  - System.Net.FtpWebRequest.Credentials
  - System.Net.FtpWebRequest.DefaultCachePolicy
  - System.Net.FtpWebRequest.EnableSsl
  - System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  - System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  - System.Net.FtpWebRequest.GetRequestStream
  - System.Net.FtpWebRequest.GetResponse
  - System.Net.FtpWebRequest.Headers
  - System.Net.FtpWebRequest.KeepAlive
  - System.Net.FtpWebRequest.Method
  - System.Net.FtpWebRequest.PreAuthenticate
  - System.Net.FtpWebRequest.Proxy
  - System.Net.FtpWebRequest.ReadWriteTimeout
  - System.Net.FtpWebRequest.RenameTo
  - System.Net.FtpWebRequest.RequestUri
  - System.Net.FtpWebRequest.ServicePoint
  - System.Net.FtpWebRequest.Timeout
  - System.Net.FtpWebRequest.UseBinary
  - System.Net.FtpWebRequest.UseDefaultCredentials
  - System.Net.FtpWebRequest.UsePassive
  langs:
  - csharp
  name: FtpWebRequest
  nameWithType: FtpWebRequest
  fullName: System.Net.FtpWebRequest
  type: Class
  summary: "Een FTP File Transfer Protocol ()-client implementeert."
  remarks: "Voor een exemplaar van FtpWebRequest verkrijgen, gebruikt u de <xref:System.Net.WebRequest.Create%2A>methode.</xref:System.Net.WebRequest.Create%2A> U kunt ook de <xref:System.Net.WebClient>klasse om te uploaden en downloaden van informatie van een FTP-server.</xref:System.Net.WebClient> Met een van deze methoden, wanneer u een netwerkbron die gebruikmaakt van de FTP-schema opgeeft (bijvoorbeeld `&quot;ftp://contoso.com&quot;`) de klasse FtpWebRequest biedt de mogelijkheid om programmatische interactie met de FTP-servers.       De URI mogelijk relatief of absoluut zijn. Als de URI van het formulier `&quot;ftp://contoso.com/%2fpath&quot;` (%&2;f is een escape-teken &quot;/&quot;), klikt u vervolgens de URI is absoluut en de huidige map is `/path`. Als de URI echter van het formulier is `&quot;ftp://contoso.com/path&quot;`, eerst .NET Framework die zich aanmeldt bij de FTP-server (met de gebruikersnaam en wachtwoord ingesteld door de <xref:System.Net.FtpWebRequest.Credentials%2A>eigenschap), wordt de huidige map is ingesteld op `<UserLoginDirectory>/path`.</xref:System.Net.FtpWebRequest.Credentials%2A>       U moet een geldige gebruikersnaam en wachtwoord voor de server of de server moet toestaan anoniem. U kunt opgeven dat de referenties waarmee verbinding met de server door in te stellen de <xref:System.Net.FtpWebRequest.Credentials%2A>eigenschap of u kunt opnemen in de <xref:System.Uri.UserInfo%2A>gedeelte van de URI die is doorgegeven aan de <xref:System.Net.WebRequest.Create%2A>methode.</xref:System.Net.WebRequest.Create%2A> </xref:System.Uri.UserInfo%2A> </xref:System.Net.FtpWebRequest.Credentials%2A> Als u <xref:System.Uri.UserInfo%2A>informatie in de URI de <xref:System.Net.FtpWebRequest.Credentials%2A>eigenschap is ingesteld op een nieuwe netwerk-referentie met de opgegeven naam en het wachtwoord gebruikersgegevens.</xref:System.Net.FtpWebRequest.Credentials%2A> </xref:System.Uri.UserInfo%2A>      > [!CAUTION] > Tenzij de <xref:System.Net.FtpWebRequest.EnableSsl%2A>eigenschap is `true`, alle gegevens en opdrachten, inclusief uw gebruikersgegevens voor de naam en het wachtwoord, worden verzonden naar de server in ongecodeerde tekst.</xref:System.Net.FtpWebRequest.EnableSsl%2A> Iedereen bewaking van netwerkverkeer kan uw referenties weergeven en gebruiken om te verbinden met de server. Als u verbinding maakt met een FTP-server die zijn referenties vereist en biedt ondersteuning voor Secure Sockets Layer (SSL), moet u instellen <xref:System.Net.FtpWebRequest.EnableSsl%2A>naar `true`.</xref:System.Net.FtpWebRequest.EnableSsl%2A>       U moet hebben <xref:System.Net.WebPermission>toegang tot de FTP-bron; anders wordt een <xref:System.Security.SecurityException>uitzondering.</xref:System.Security.SecurityException> </xref:System.Net.WebPermission>       Geef de FTP-opdracht verzenden naar de server door in te stellen de <xref:System.Net.FtpWebRequest.Method%2A>eigenschap een waarde die is gedefinieerd in de <xref:System.Net.WebRequestMethods.Ftp>structuur.</xref:System.Net.WebRequestMethods.Ftp> </xref:System.Net.FtpWebRequest.Method%2A> Tekstgegevens verzendt, wijzig de <xref:System.Net.FtpWebRequest.UseBinary%2A>eigenschap van de standaardwaarde (`true`) naar `false`.</xref:System.Net.FtpWebRequest.UseBinary%2A> Zie voor meer informatie en beperkingen <xref:System.Net.FtpWebRequest.Method%2A>.</xref:System.Net.FtpWebRequest.Method%2A>       Wanneer u een object FtpWebRequest een bestand te uploaden naar een server, moet u de inhoud van het bestand schrijven naar de aanvraagstroom verkregen door het aanroepen van de <xref:System.Net.FtpWebRequest.GetRequestStream%2A>methode of de asynchrone collega&quot;s, de <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>en <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>methoden.</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A> U moet schrijven naar de stroom en de stroom te sluiten voordat u het verzoek verzendt.       Aanvragen worden verzonden naar de server door het aanroepen van de <xref:System.Net.FtpWebRequest.GetResponse%2A>methode of de asynchrone collega&quot;s, de <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>en <xref:System.Net.FtpWebRequest.EndGetResponse%2A>methoden.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> Wanneer de aangevraagde bewerking is voltooid, een <xref:System.Net.FtpWebResponse>object wordt geretourneerd.</xref:System.Net.FtpWebResponse> De <xref:System.Net.FtpWebResponse>-object biedt u de status van de bewerking en alle gegevens die zijn gedownload van de server.</xref:System.Net.FtpWebResponse>       U kunt instellen dat een time-outwaarde voor lezen of schrijven naar de server met behulp van de <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A>eigenschap.</xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> Als de time-outperiode wordt overschreden, genereert de aangeroepen methode een <xref:System.Net.WebException>met <xref:System.Net.WebExceptionStatus>ingesteld op <xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException>       Bij het downloaden van een bestand van een FTP-server als de opdracht voltooid is, is de inhoud van het aangevraagde bestand zijn beschikbaar in het object response-stroom. U kunt deze stroom openen door het aanroepen van de <xref:System.Net.FtpWebResponse.GetResponseStream%2A>methode.</xref:System.Net.FtpWebResponse.GetResponseStream%2A> Zie voor meer informatie <xref:System.Net.FtpWebResponse>.</xref:System.Net.FtpWebResponse>       Als de <xref:System.Net.FtpWebRequest.Proxy%2A>eigenschap is ingesteld, hetzij rechtstreeks of in een configuratiebestand communicatie met de FTP-server worden aangebracht via de opgegeven proxy.</xref:System.Net.FtpWebRequest.Proxy%2A> Als de opgegeven proxy een HTTP-proxy, alleen is de <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, en <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails>opdrachten worden ondersteund.</xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> </xref:System.Net.WebRequestMethods.Ftp.ListDirectory> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       Alleen gedownloade binaire inhoud in cache; dat wil zeggen inhoud ontvangen via de <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>opdracht met de <xref:System.Net.FtpWebRequest.UseBinary%2A>eigenschap ingesteld op `true`.</xref:System.Net.FtpWebRequest.UseBinary%2A> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       Meerdere FtpWebRequests hergebruiken bestaande verbindingen indien mogelijk.       Zie voor meer informatie over het FTP-protocol RFC 959, &quot;File Transfer Protocol,&quot; beschikbaar op [http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt)."
  example:
  - "The following code example demonstrates deleting a file from an FTP server.  \n  \n [!code-cpp[NCLFtpClient#4](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_1.cpp)]\n [!code-cs[NCLFtpClient#4](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_1.cs)]  \n  \n The following code example demonstrates downloading a file from an FTP server by using the <xref:System.Net.WebClient> class.  \n  \n [!code-cpp[NCLFtpClient#5](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_2.cpp)]\n [!code-cs[NCLFtpClient#5](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_2.cs)]  \n  \n The following code example demonstrates using asynchronous operations to upload a file to an FTP server.  \n  \n [!code-cs[NCLFtpAsync#1](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_3.cs)]\n [!code-cpp[NCLFtpAsync#1](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_3.cpp)]"
  syntax:
    content: 'public sealed class FtpWebRequest : System.Net.WebRequest'
  inheritance:
  - System.Net.WebRequest
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Abort
  id: Abort
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Abort()
  nameWithType: FtpWebRequest.Abort()
  fullName: System.Net.FtpWebRequest.Abort()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Een asynchrone bewerking van de FTP-beëindigt."
  remarks: "Als er geen bewerking wordt uitgevoerd is, wordt deze methode geen effect. Als een bestandsoverdracht uitgevoerd wordt, beëindigt deze methode de overdracht.      > [!NOTE] > Dit lid traceringsinformatie levert wanneer u een netwerktracering in uw toepassing inschakelt. Zie voor meer informatie [netwerk tracering in .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how the user can terminate an asynchronous upload of a file from the local directory to the server.  \n  \n [!code-cpp[NCLFtpClient#10](~/add/codesnippet/cpp/m-system.net.ftpwebreque_3_1.cpp)]\n [!code-cs[NCLFtpClient#10](~/add/codesnippet/csharp/m-system.net.ftpwebreque_3_1.cs)]"
  syntax:
    content: public override void Abort ();
    parameters: []
  overload: System.Net.FtpWebRequest.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  id: BeginGetRequestStream(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: BeginGetRequestStream(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Begint met het openen van asynchroon inhoudsstroom van een aanvraag voor schrijven."
  remarks: "U moet de asynchrone bewerking voltooien door het aanroepen van de <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>methode.</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> Normaal gesproken <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>wordt aangeroepen door de methode waarnaar wordt verwezen door `callback`.</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> Om te bepalen van de status van de bewerking, controleert u de eigenschappen de <xref:System.IAsyncResult>object dat wordt geretourneerd door deze methode.</xref:System.IAsyncResult>       Deze methode worden niet geblokkeerd tijdens het wachten op voor de stroom. Als u wilt blokkeren, aanroepen <xref:System.Net.FtpWebRequest.GetRequestStream%2A>in plaats van deze methode.</xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Zie voor gedetailleerde informatie over het gebruik van de asynchrone programmeermodel [asynchroon synchrone methoden aanroepen](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Dit lid traceringsinformatie levert wanneer u een netwerktracering in uw toepassing inschakelt. Zie voor meer informatie [netwerk tracering in .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates beginning an asynchronous operation to get a request's stream. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#4](~/add/codesnippet/csharp/7dded3fc-ce2a-466f-b201-_1.cs)]\n [!code-cpp[NCLFtpAsync#4](~/add/codesnippet/cpp/7dded3fc-ce2a-466f-b201-_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Een <xref:System.AsyncCallback>gemachtigde die verwijst naar de methode aan te roepen wanneer de bewerking voltooid is.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Een door de gebruiker gedefinieerde object dat informatie over het opnieuw bevat. Dit object wordt doorgegeven aan de `callback` delegeren wanneer de bewerking is voltooid."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>-exemplaar dat de status van de bewerking geeft.</xref:System.IAsyncResult>"
  overload: System.Net.FtpWebRequest.BeginGetRequestStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een eerdere aanroep voor deze methode of <xref:System.Net.FtpWebRequest.GetRequestStream*>is nog niet voltooid.</xref:System.Net.FtpWebRequest.GetRequestStream*>"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Geen kan verbinding maken met de FTP-server."
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "De <xref:System.Net.FtpWebRequest.Method*>eigenschap niet is ingesteld op <xref:System.Net.WebRequestMethods.Ftp.UploadFile>.</xref:System.Net.WebRequestMethods.Ftp.UploadFile> </xref:System.Net.FtpWebRequest.Method*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  id: BeginGetResponse(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: BeginGetResponse(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Begint een aanvraag verzenden en ontvangen van een antwoord van een FTP-server asynchroon."
  remarks: "U moet de asynchrone bewerking voltooien door het aanroepen van de <xref:System.Net.FtpWebRequest.EndGetResponse%2A>methode.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> Normaal gesproken <xref:System.Net.FtpWebRequest.EndGetResponse%2A>wordt aangeroepen door de methode waarnaar wordt verwezen door `callback`.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> Om te bepalen van de status van de bewerking, controleert u de eigenschappen de <xref:System.IAsyncResult>object dat wordt geretourneerd door de methode BeginGetResponse.</xref:System.IAsyncResult>       Als de <xref:System.Net.FtpWebRequest.Proxy%2A>eigenschap is ingesteld, hetzij rechtstreeks of in een configuratiebestand communicatie met de FTP-server worden aangebracht via de opgegeven proxy.</xref:System.Net.FtpWebRequest.Proxy%2A>       BeginGetResponse worden niet geblokkeerd tijdens het wachten op voor de reactie van de server. Aanroepen voor het blokkeren van, de <xref:System.Net.FtpWebRequest.GetResponse%2A>methode in plaats van BeginGetResponse.</xref:System.Net.FtpWebRequest.GetResponse%2A>       Zie voor meer informatie over het gebruik van de asynchrone programmeermodel [asynchroon synchrone methoden aanroepen](~/add/includes/ajax-current-ext-md.md).       Dit lid levert traceringsinformatie wanneer u een netwerktracering in uw toepassing inschakelt. Zie voor meer informatie [netwerk tracering in .NET Framework](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Als een <xref:System.Net.WebException>is gegenereerd, gebruiken de <xref:System.Net.WebException.Response%2A>en <xref:System.Net.WebException.Status%2A>Eigenschappen van de uitzondering om te bepalen van de reactie van de server.</xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException.Response%2A> </xref:System.Net.WebException>"
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a request's stream, and then starting a request to get the response. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#5](~/add/codesnippet/csharp/m-system.net.ftpwebreque_0_1.cs)]\n [!code-cpp[NCLFtpAsync#5](~/add/codesnippet/cpp/m-system.net.ftpwebreque_0_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Een <xref:System.AsyncCallback>gemachtigde die verwijst naar de methode aan te roepen wanneer de bewerking voltooid is.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Een door de gebruiker gedefinieerde object dat informatie over het opnieuw bevat. Dit object wordt doorgegeven aan de `callback` delegeren wanneer de bewerking is voltooid."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>-exemplaar dat de status van de bewerking geeft.</xref:System.IAsyncResult>"
  overload: System.Net.FtpWebRequest.BeginGetResponse*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Net.FtpWebRequest.GetResponse*>of BeginGetResponse is al aangeroepen voor dit exemplaar.</xref:System.Net.FtpWebRequest.GetResponse*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ClientCertificates
  id: ClientCertificates
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
  fullName: System.Net.FtpWebRequest.ClientCertificates
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld van de certificaten gebruikt voor het maken van een versleutelde verbinding met de FTP-server."
  remarks: "Clientcertificaten worden gebruikt voor verificatie van de client tijdens de eerste onderhandeling van de SSL-verbinding. Zie voor meer informatie <xref:System.Net.FtpWebRequest.EnableSsl%2A>.</xref:System.Net.FtpWebRequest.EnableSsl%2A>      > [!NOTE] > De .NET Framework SSL-sessies-cache als ze zijn gemaakt en probeert om een sessie in de cache voor een nieuwe aanvraag indien mogelijk opnieuw te gebruiken. Wanneer u probeert een SSL-sessie opnieuw wilt gebruiken, .NET Framework wordt gebruikt voor het eerste element van <xref:System.Net.HttpWebRequest.ClientCertificates%2A>(als er is een), of probeert een anonieme sessie opnieuw te gebruiken als <xref:System.Net.HttpWebRequest.ClientCertificates%2A>is leeg.</xref:System.Net.HttpWebRequest.ClientCertificates%2A> </xref:System.Net.HttpWebRequest.ClientCertificates%2A>"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "Een <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> -object dat de clientcertificaten bevat."
  overload: System.Net.FtpWebRequest.ClientCertificates*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De opgegeven waarde voor een set-bewerking is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ConnectionGroupName
  id: ConnectionGroupName
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
  fullName: System.Net.FtpWebRequest.ConnectionGroupName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld van de naam van de groep voor verbinding met de service dat wordt gebruikt om de huidige aanvraag te verzenden."
  remarks: "Een set van aanvragen koppelen verbindingsgroepen met een bepaalde verbinding of een set van verbindingen. De verbindingen in de groep van een verbinding kunnen alleen door aanvragen die afkomstig zijn in hetzelfde toepassingsdomein de referenties op de aanvraag zijn hetzelfde als de aanvraag bevat de naam van de verbinding opnieuw worden gebruikt. Wanneer een aanvraag voor de naam van een verbinding-groep niet is opgegeven, kan elke bestaande verbinding met de aangevraagde server die niet is gekoppeld aan een groep verbinding kan worden gebruikt. Wanneer de referenties niet hetzelfde zijn, de bestaande verbinding is gesloten en de nieuwe aanvraag moet worden geverifieerd.       Met behulp van verbindingsgroepen kunt u de prestaties verbeteren omdat hierdoor alle aanvragen voor een gebruiker de verbinding met de referenties van de gebruiker geverifieerd hergebruiken.       Wijzigen van de eigenschap ConnectionGroupName na het aanroepen de <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, of <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>methode veroorzaakt een <xref:System.InvalidOperationException>uitzondering.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves the value of this property.  \n  \n [!code-cpp[NCLFtpClient#16](~/add/codesnippet/cpp/p-system.net.ftpwebreque_8_1.cpp)]\n [!code-cs[NCLFtpClient#16](~/add/codesnippet/csharp/p-system.net.ftpwebreque_8_1.cs)]"
  syntax:
    content: public override string ConnectionGroupName { get; set; }
    return:
      type: System.String
      description: "Een <xref:System.String>waarde met de naam van een verbinding.</xref:System.String>"
  overload: System.Net.FtpWebRequest.ConnectionGroupName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een nieuwe waarde is opgegeven voor deze eigenschap voor een aanvraag die al wordt uitgevoerd."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentLength
  id: ContentLength
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
  fullName: System.Net.FtpWebRequest.ContentLength
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld van een waarde die wordt genegeerd door de <xref href=&quot;System.Net.FtpWebRequest&quot;> </xref> klasse."
  remarks: "De eigenschap ContentLength is alleen beschikbaar voor compatibiliteit met andere implementaties van de <xref:System.Net.WebRequest>en <xref:System.Net.WebResponse>klassen.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Er is geen reden ContentLength gebruiken."
  syntax:
    content: public override long ContentLength { get; set; }
    return:
      type: System.Int64
      description: "Een <xref:System.Int64>waarde die moet worden genegeerd.</xref:System.Int64>"
  overload: System.Net.FtpWebRequest.ContentLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentOffset
  id: ContentOffset
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
  fullName: System.Net.FtpWebRequest.ContentOffset
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld van een byte-offset in het bestand wordt gedownload door deze aanvraag."
  remarks: "Stel de eigenschap ContentOffset wanneer een bestand wordt gedownload van een FTP-server. Deze offset geeft de positie in de server-bestand dat markeert het begin van de gegevens worden gedownload. De offset is opgegeven als het aantal bytes vanaf het begin van het bestand. de offset van de eerste byte is nul.       Instelling ContentOffset oorzaken de <xref:System.Net.FtpWebRequest>opnieuw verzenden (`REST`) opdracht naar de server.</xref:System.Net.FtpWebRequest> Met deze opdracht wordt genegeerd door de meeste implementaties van de FTP-server als u gegevens naar de server uploadt.       Het wijzigen van ContentOffset na het aanroepen de <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, of <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>methode veroorzaakt een <xref:System.InvalidOperationException>uitzondering.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example demonstrates downloading part of a file from a server and appending the downloaded data to a local file.  \n  \n [!code-cpp[NclFtpClient#7](~/add/codesnippet/cpp/p-system.net.ftpwebreque_4_1.cpp)]\n [!code-cs[NclFtpClient#7](~/add/codesnippet/csharp/p-system.net.ftpwebreque_4_1.cs)]"
  syntax:
    content: public long ContentOffset { get; set; }
    return:
      type: System.Int64
      description: "Een <xref:System.Int64>-exemplaar dat de verschuiving bestand in bytes geeft.</xref:System.Int64> De standaardwaarde is nul."
  overload: System.Net.FtpWebRequest.ContentOffset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een nieuwe waarde is opgegeven voor deze eigenschap voor een aanvraag die al wordt uitgevoerd."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De opgegeven waarde voor deze eigenschap is kleiner dan nul."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentType
  id: ContentType
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
  fullName: System.Net.FtpWebRequest.ContentType
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Altijd genereert een <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "De eigenschap ContentType is alleen beschikbaar voor compatibiliteit met andere implementaties van de <xref:System.Net.WebRequest>en <xref:System.Net.WebResponse>klassen.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Er is geen reden ContentType gebruiken."
  syntax:
    content: public override string ContentType { get; set; }
    return:
      type: System.String
      description: "Altijd genereert een <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.ContentType*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Type inhoud informatie wordt niet ondersteund voor FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Credentials
  id: Credentials
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
  fullName: System.Net.FtpWebRequest.Credentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld van de referenties gebruikt voor communicatie met de FTP-server."
  remarks: "U bent niet verplicht referenties opgeven wanneer u verbinding maakt met behulp van anonieme aanmelding. U moet de eigenschap referenties instellen met behulp van een referentie van het type <xref:System.Net.NetworkCredential>; Dit zorgt ervoor dat de gebruikersnaam en het wachtwoord kunnen worden gelezen en naar de server verzonden.</xref:System.Net.NetworkCredential>      > [!CAUTION] > Referenties informatie is niet versleuteld verzonden naar de server, tenzij de <xref:System.Net.FtpWebRequest.EnableSsl%2A>eigenschap is ingesteld op `true`.</xref:System.Net.FtpWebRequest.EnableSsl%2A>       Referenties wijzigen na het aanroepen de <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, of <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>methode veroorzaakt een <xref:System.InvalidOperationException>uitzondering.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves the value of this property and uses it to display the user name.  \n  \n [!code-cpp[NCLFtpClient#14](~/add/codesnippet/cpp/p-system.net.ftpwebreque_6_1.cpp)]\n [!code-cs[NCLFtpClient#14](~/add/codesnippet/csharp/p-system.net.ftpwebreque_6_1.cs)]"
  syntax:
    content: public override System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "Een <xref:System.Net.ICredentials>exemplaar; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de eigenschap niet is ingesteld.</xref:System.Net.ICredentials>"
  overload: System.Net.FtpWebRequest.Credentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De opgegeven waarde voor een set-bewerking is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Een <xref:System.Net.ICredentials>van een type andere dan <xref:System.Net.NetworkCredential>is opgegeven voor een set-bewerking.</xref:System.Net.NetworkCredential> </xref:System.Net.ICredentials>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een nieuwe waarde is opgegeven voor deze eigenschap voor een aanvraag die al wordt uitgevoerd."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.DefaultCachePolicy
  id: DefaultCachePolicy
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
  fullName: System.Net.FtpWebRequest.DefaultCachePolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee definieert u het standaardbeleid voor cache voor alle FTP-aanvragen."
  remarks: "Alleen inhoud ontvangen via de <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>opdracht in de cache wordt opgeslagen.</xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       De volgende tabel beschrijft de gevolgen van het FTP cachebeleidsregels op <xref:System.Net.FtpWebRequest>.</xref:System.Net.FtpWebRequest>      | Beleid | Effect |   |------------|------------|   | <xref:System.Net.Cache.RequestCacheLevel>| Retourneert de in de cache-bron als de resource vers is, de inhoud langer juist is en de vervaldatum, gewijzigd en kenmerken van de lengte van de inhoud aanwezig zijn. |   | <xref:System.Net.Cache.RequestCacheLevel>| Retourneert de bron van de server. |   | <xref:System.Net.Cache.RequestCacheLevel>| Retourneert de in de cache-bron als de lengte van de inhoud aanwezig is en overeenkomt met de grootte van de vermelding; anders wordt er een <xref:System.Net.WebException>. |   | <xref:System.Net.Cache.RequestCacheLevel>| Retourneert de in de cache-bron als de lengte van de inhoud wordt aangeboden en komt overeen met de grootte van de vermelding; anders wordt de bron wordt gedownload van de server en wordt geretourneerd naar de aanroeper. |   | <xref:System.Net.Cache.RequestCacheLevel>| Retourneert de in de cache-bron als de tijdstempel van de cache-bron hetzelfde als de tijdstempel van de resource op de server is. anders wordt de resource is gedownload van de server, in de cache opgeslagen en geretourneerd naar de aanroeper. |   | <xref:System.Net.Cache.RequestCacheLevel>| Downloadt u de bron van de server, wordt opgeslagen in de cache en de resource wordt naar de aanroeper. |   | <xref:System.Net.Cache.RequestCacheLevel>| Als een resource in de cache aanwezig is, wordt deze verwijderd.</xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.WebException> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> De resource is gedownload van de server en wordt geretourneerd naar de aanroeper. |      > [!NOTE] > DefaultCachePolicy instelling overschrijft alle configuratie-instelling."
  syntax:
    content: public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }
    return:
      type: System.Net.Cache.RequestCachePolicy
      description: "Een <xref href=&quot;System.Net.Cache.RequestCachePolicy&quot;> </xref> waarmee het cachebeleid voor FTP-aanvragen worden gedefinieerd."
  overload: System.Net.FtpWebRequest.DefaultCachePolicy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De aanroeper heeft geprobeerd deze eigenschap instelt op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EnableSsl
  id: EnableSsl
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
  fullName: System.Net.FtpWebRequest.EnableSsl
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld een <xref:System.Boolean>die aangeeft dat een SSL-verbinding moet worden gebruikt.</xref:System.Boolean>"
  remarks: "> [!CAUTION]> Tenzij de eigenschap EnableSsl `true`, alle gegevens en opdrachten, inclusief uw gebruikersgegevens voor de naam en het wachtwoord, worden verzonden naar de server in ongecodeerde tekst. Iedereen bewaking van netwerkverkeer kan uw referenties weergeven en gebruiken om te verbinden met de server. Als u verbinding met een FTP-server die zijn referenties vereist en biedt ondersteuning voor SSL maakt, moet u EnableSsl instellen op `true`.       De `&quot;AUTH TLS&quot;` opdracht naar de server wordt verzonden om aan te vragen een gecodeerde sessie. Als de server met deze opdracht niet herkent, ontvangt u een <xref:System.Net.WebException>uitzondering.</xref:System.Net.WebException>"
  example:
  - "The following code example uses an encrypted connection to download the directory listing from an FTP server.  \n  \n [!code-cpp[NCLFtpClient#8](~/add/codesnippet/cpp/p-system.net.ftpwebreque_11_1.cpp)]\n [!code-cs[NCLFtpClient#8](~/add/codesnippet/csharp/p-system.net.ftpwebreque_11_1.cs)]"
  syntax:
    content: public bool EnableSsl { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het besturingselement en gegevens van gegevensoverdrachten zijn versleuteld. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.EnableSsl*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verbinding met de FTP-server is al ingesteld."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  id: EndGetRequestStream(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EndGetRequestStream(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetRequestStream(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetRequestStream(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Een wachtende asynchrone bewerking gestart met <xref:System.Net.FtpWebRequest.BeginGetRequestStream*>.</xref:System.Net.FtpWebRequest.BeginGetRequestStream*> eindigt"
  remarks: "Als de bewerking is niet voltooid, de EndGetRequestStream methodeblokken totdat de bewerking is voltooid. Om te bepalen of de bewerking is voltooid, Controleer de <xref:System.IAsyncResult.IsCompleted%2A>eigenschap voordat u EndGetRequestStream aanroept.</xref:System.IAsyncResult.IsCompleted%2A>       Naast de uitzonderingen vermeld bij &quot;Uitzonderingen&quot;, opnieuw EndGetRequestStream uitzonderingen die zijn gegenereerd tijdens het openen van de stroom voor schrijven wordt gegenereerd.      > [!NOTE] > Dit lid traceringsinformatie levert wanneer u een netwerktracering in uw toepassing inschakelt. Zie voor meer informatie [netwerk tracering in .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a request's stream. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#5](~/add/codesnippet/csharp/m-system.net.ftpwebreque_1_1.cs)]\n [!code-cpp[NCLFtpAsync#5](~/add/codesnippet/cpp/m-system.net.ftpwebreque_1_1.cpp)]"
  syntax:
    content: public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "De <xref:System.IAsyncResult>object dat geretourneerd werd toen de bewerking is gestart.</xref:System.IAsyncResult>"
    return:
      type: System.IO.Stream
      description: "Een beschrijfbare <xref:System.IO.Stream>exemplaar gekoppeld aan dit exemplaar.</xref:System.IO.Stream>"
  overload: System.Net.FtpWebRequest.EndGetRequestStream*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>is niet verkregen door het aanroepen van <xref:System.Net.FtpWebRequest.BeginGetRequestStream*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Deze methode is al aangeroepen voor de bewerking die is geïdentificeerd door <code> asyncResult </code>."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  id: EndGetResponse(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EndGetResponse(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetResponse(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetResponse(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Een wachtende asynchrone bewerking gestart met <xref:System.Net.FtpWebRequest.BeginGetResponse*>.</xref:System.Net.FtpWebRequest.BeginGetResponse*> eindigt"
  remarks: "Als de bewerking niet voltooid op het moment dat de EndGetResponse-methode wordt aangeroepen, EndGetResponse blokken totdat de bewerking is voltooid. Om te voorkomen dat blokkeren, Controleer de <xref:System.IAsyncResult.IsCompleted%2A>eigenschap voordat u EndGetResponse aanroept.</xref:System.IAsyncResult.IsCompleted%2A>       Naast de uitzonderingen vermeld bij &quot;Uitzonderingen&quot;, opnieuw EndGetResponse uitzonderingen die zijn gegenereerd tijdens het communiceren met de server wordt gegenereerd.      > [!NOTE] > Dit lid traceringsinformatie levert wanneer u een netwerktracering in uw toepassing inschakelt. Zie voor meer informatie [netwerk tracering in .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a response. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#6](~/add/codesnippet/csharp/m-system.net.ftpwebreque_5_1.cs)]\n [!code-cpp[NCLFtpAsync#6](~/add/codesnippet/cpp/m-system.net.ftpwebreque_5_1.cpp)]"
  syntax:
    content: public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "De <xref:System.IAsyncResult>die werd geretourneerd toen de bewerking is gestart.</xref:System.IAsyncResult>"
    return:
      type: System.Net.WebResponse
      description: "Een <xref:System.Net.WebResponse>verwijzing bevat naar een <xref href=&quot;System.Net.FtpWebResponse&quot;> </xref> exemplaar.</xref:System.Net.WebResponse> Dit object bevat de reactie van de FTP-server op de aanvraag."
  overload: System.Net.FtpWebRequest.EndGetResponse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>is niet verkregen door het aanroepen van <xref:System.Net.FtpWebRequest.BeginGetResponse*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Deze methode is al aangeroepen voor de bewerking die is geïdentificeerd door <code> asyncResult </code>."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Er is een fout opgetreden met behulp van een HTTP-proxy."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.GetRequestStream
  id: GetRequestStream
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: GetRequestStream()
  nameWithType: FtpWebRequest.GetRequestStream()
  fullName: System.Net.FtpWebRequest.GetRequestStream()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "De stroom die wordt gebruikt voor het uploaden van gegevens naar een FTP-server opgehaald."
  remarks: "Eigenschappen van de aanvraag ingesteld voordat de methode getrequeststream aan te roepen. Na het schrijven van de gegevens naar de stroom, moet u de stroom vóór het verzenden van de aanvraag sluiten.       Als u niet hebt ingesteld de <xref:System.Net.FtpWebRequest.Method%2A>eigenschap <xref:System.Net.WebRequestMethods.Ftp.UploadFile>of <xref:System.Net.WebRequestMethods.Ftp.AppendFile>, u de stroom kan niet ophalen.</xref:System.Net.WebRequestMethods.Ftp.AppendFile> </xref:System.Net.WebRequestMethods.Ftp.UploadFile> </xref:System.Net.FtpWebRequest.Method%2A>       Getrequeststream aan blokken tijdens het wachten op voor de stroom. Om dit te voorkomen, Roep de <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>methode in plaats van getrequeststream aan.</xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>      > [!NOTE] > Dit lid traceringsinformatie levert wanneer u een netwerktracering in uw toepassing inschakelt. Zie voor meer informatie [netwerk tracering in .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates copying a file to a request's data stream and sending a request to the server to upload the data and append it to a file.  \n  \n [!code-cpp[NCLFtpClient#3](~/add/codesnippet/cpp/m-system.net.ftpwebreque_4_1.cpp)]\n [!code-cs[NCLFtpClient#3](~/add/codesnippet/csharp/m-system.net.ftpwebreque_4_1.cs)]"
  syntax:
    content: public override System.IO.Stream GetRequestStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Een beschrijfbare <xref:System.IO.Stream>exemplaar dat wordt gebruikt voor het opslaan van gegevens naar de server worden verzonden door de huidige aanvraag.</xref:System.IO.Stream>"
  overload: System.Net.FtpWebRequest.GetRequestStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Net.FtpWebRequest.BeginGetRequestStream*> has been called and has not completed.  \n  \n \\- or -  \n  \n An HTTP proxy is enabled, and you attempted to use an FTP command other than &lt;xref:System.Net.WebRequestMethods.Ftp.DownloadFile?displayProperty=fullName&gt;, &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectory?displayProperty=fullName&gt;, or &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails?displayProperty=fullName&gt;."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Geen kan verbinding maken met de FTP-server."
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "De <xref:System.Net.FtpWebRequest.Method*>eigenschap niet is ingesteld op &lt;xref:System.Net.WebRequestMethods.Ftp.UploadFile?displayProperty=fullName&gt; of &lt;xref:System.Net.WebRequestMethods.Ftp.AppendFile?displayProperty=fullName&gt;.</xref:System.Net.FtpWebRequest.Method*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.GetResponse
  id: GetResponse
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: GetResponse()
  nameWithType: FtpWebRequest.GetResponse()
  fullName: System.Net.FtpWebRequest.GetResponse()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Retourneert de reactie van de FTP-server."
  remarks: "Voor toegang tot de FTP-specifieke eigenschappen, moet u uitbrengt het <xref:System.Net.WebResponse>object dat is geretourneerd door deze methode kan worden <xref:System.Net.FtpWebResponse>.</xref:System.Net.FtpWebResponse> </xref:System.Net.WebResponse>       GetResponse zorgt ervoor dat een verbinding met het tot stand worden gebracht, en ook een verbinding kan maken. GetResponse geblokkeerd totdat het antwoord is ontvangen. Om dit te voorkomen, kunt u deze bewerking uitvoeren asynchroon door het aanroepen van de <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>en <xref:System.Net.FtpWebRequest.EndGetResponse%2A>methoden in plaats van GetResponse.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A>       Als de <xref:System.Net.FtpWebRequest.Proxy%2A>eigenschap is ingesteld, hetzij rechtstreeks of in een configuratiebestand communicatie met de FTP-server worden aangebracht via de proxy.</xref:System.Net.FtpWebRequest.Proxy%2A>       Als een <xref:System.Net.WebException>is gegenereerd, gebruiken de <xref:System.Net.WebException.Response%2A>en <xref:System.Net.WebException.Status%2A>Eigenschappen van de uitzondering om te bepalen van de reactie van de server.</xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException.Response%2A> </xref:System.Net.WebException>       Dit lid levert traceringsinformatie wanneer u een netwerktracering in uw toepassing inschakelt. Zie voor meer informatie [netwerk tracering in .NET Framework](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Meerdere aanroepen naar GetResponse hetzelfde antwoordobject retourneren; de aanvraag is niet uitgegeven."
  example:
  - "The following code example demonstrates copying a file to a request's data stream and sending a request to append data to a file to the server. The example calls GetResponse to send the request and block until the response is returned by the server.  \n  \n [!code-cpp[NCLFtpClient#3](~/add/codesnippet/cpp/m-system.net.ftpwebreque_2_1.cpp)]\n [!code-cs[NCLFtpClient#3](~/add/codesnippet/csharp/m-system.net.ftpwebreque_2_1.cs)]"
  syntax:
    content: public override System.Net.WebResponse GetResponse ();
    parameters: []
    return:
      type: System.Net.WebResponse
      description: "Een <xref:System.Net.WebResponse>verwijzing bevat naar een <xref href=&quot;System.Net.FtpWebResponse&quot;> </xref> exemplaar.</xref:System.Net.WebResponse> Dit object bevat de reactie van de FTP-server op de aanvraag."
  overload: System.Net.FtpWebRequest.GetResponse*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "GetResponse or <xref:System.Net.FtpWebRequest.BeginGetResponse*> has already been called for this instance.  \n  \n \\- or -  \n  \n An HTTP proxy is enabled, and you attempted to use an FTP command other than &lt;xref:System.Net.WebRequestMethods.Ftp.DownloadFile?displayProperty=fullName&gt;, &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectory?displayProperty=fullName&gt;, or &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails?displayProperty=fullName&gt;."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<xref:System.Net.FtpWebRequest.EnableSsl*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but the server does not support this feature.  \n  \n \\- or -  \n  \n A <xref:System.Net.FtpWebRequest.Timeout*> was specified and the timeout has expired."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Headers
  id: Headers
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Headers
  nameWithType: FtpWebRequest.Headers
  fullName: System.Net.FtpWebRequest.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Een lege opgehaald <xref:System.Net.WebHeaderCollection>object.</xref:System.Net.WebHeaderCollection>"
  remarks: "De kop-eigenschap is alleen beschikbaar voor compatibiliteit met andere implementaties van de <xref:System.Net.WebRequest>en <xref:System.Net.WebResponse>klassen.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Er is geen reden koppen te gebruiken."
  syntax:
    content: public override System.Net.WebHeaderCollection Headers { get; set; }
    return:
      type: System.Net.WebHeaderCollection
      description: "Een lege <xref:System.Net.WebHeaderCollection>object.</xref:System.Net.WebHeaderCollection>"
  overload: System.Net.FtpWebRequest.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.KeepAlive
  id: KeepAlive
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
  fullName: System.Net.FtpWebRequest.KeepAlive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld een <xref:System.Boolean>waarde die aangeeft of de verbinding met de FTP-server is afgesloten nadat de aanvraag is voltooid.</xref:System.Boolean>"
  remarks: "Als de KeepAlive-eigenschap is ingesteld op `false`, de verbinding is gesloten bij het aanroepen van de <xref:System.Net.FtpWebResponse.Close%2A>methode.</xref:System.Net.FtpWebResponse.Close%2A>       Het wijzigen van KeepAlive na het aanroepen de <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, of <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>methode veroorzaakt een <xref:System.InvalidOperationException>uitzondering.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#15](~/add/codesnippet/cpp/p-system.net.ftpwebreque_0_1.cpp)]\n [!code-cs[NCLFtpClient#15](~/add/codesnippet/csharp/p-system.net.ftpwebreque_0_1.cs)]"
  syntax:
    content: public bool KeepAlive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de verbinding met de server moet niet worden vernietigd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.KeepAlive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een nieuwe waarde is opgegeven voor deze eigenschap voor een aanvraag die al wordt uitgevoerd."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Method
  id: Method
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Method
  nameWithType: FtpWebRequest.Method
  fullName: System.Net.FtpWebRequest.Method
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld van de opdracht verzenden naar de FTP-server."
  remarks: "De eigenschap methode bepaalt welke opdracht wordt verzonden naar de server. Stelt u de methode door de tekenreeksen die zijn gedefinieerd in de openbare veld leden van de <xref:System.Net.WebRequestMethods.Ftp>klasse.</xref:System.Net.WebRequestMethods.Ftp> Denk eraan dat de tekenreeksen die zijn gedefinieerd in de <xref:System.Net.WebRequestMethods.Ftp>klasse, zijn de enige ondersteunde opties voor de eigenschap Method.</xref:System.Net.WebRequestMethods.Ftp> De methode-eigenschap instelt op een andere waarde resulteert in een <xref:System.ArgumentException>uitzondering.</xref:System.ArgumentException>       Als u de methode op <xref:System.Net.WebRequestMethods.Ftp.UploadFile>, moet u dit doen voordat u de <xref:System.Net.FtpWebRequest.GetRequestStream%2A>methode.</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.Net.WebRequestMethods.Ftp.UploadFile> Fout bij aanroepen van deze leden in de juiste volgorde oorzaken een <xref:System.Net.ProtocolViolationException>uitzondering wanneer u probeert te krijgen van de aanvraagstroom.</xref:System.Net.ProtocolViolationException>       De opgegeven referenties voor de <xref:System.Net.FtpWebRequest>object moet gemachtigd zijn om uit te voeren van de opgegeven methode.</xref:System.Net.FtpWebRequest> Als dat niet het geval is, wordt de FTP-opdracht is mislukt.       Controleer om te bepalen het slagen of mislukken van een opdracht, de <xref:System.Net.FtpWebResponse.StatusCode%2A>en <xref:System.Net.FtpWebResponse.StatusDescription%2A>Eigenschappen.</xref:System.Net.FtpWebResponse.StatusDescription%2A> </xref:System.Net.FtpWebResponse.StatusCode%2A>"
  example:
  - "The following code example sets this property to <xref:System.Net.WebRequestMethods.Ftp.DeleteFile>.  \n  \n [!code-cpp[NCLFtpClient#4](~/add/codesnippet/cpp/p-system.net.ftpwebreque_2_1.cpp)]\n [!code-cs[NCLFtpClient#4](~/add/codesnippet/csharp/p-system.net.ftpwebreque_2_1.cs)]"
  syntax:
    content: public override string Method { get; set; }
    return:
      type: System.String
      description: "Een <xref:System.String>-waarde die de FTP-opdracht verzenden naar de server bevat.</xref:System.String> De standaardwaarde is <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>.</xref:System.Net.WebRequestMethods.Ftp.DownloadFile>"
  overload: System.Net.FtpWebRequest.Method*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een nieuwe waarde is opgegeven voor deze eigenschap voor een aanvraag die al wordt uitgevoerd."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The method is invalid.  \n  \n \\- or -  \n  \n The method is not supported.  \n  \n \\- or -  \n  \n Multiple methods were specified."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.PreAuthenticate
  id: PreAuthenticate
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
  fullName: System.Net.FtpWebRequest.PreAuthenticate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Altijd genereert een <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "De eigenschap PreAuthenticate is alleen beschikbaar voor compatibiliteit met andere implementaties van de <xref:System.Net.WebRequest>en <xref:System.Net.WebResponse>klassen.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest>"
  syntax:
    content: public override bool PreAuthenticate { get; set; }
    return:
      type: System.Boolean
      description: "Altijd genereert een <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.PreAuthenticate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Vooraf-verificatie wordt niet ondersteund voor FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Proxy
  id: Proxy
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
  fullName: System.Net.FtpWebRequest.Proxy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld van de proxy gebruikt voor communicatie met de FTP-server."
  remarks: "De Proxy-eigenschap geeft de <xref:System.Net.IWebProxy>exemplaar die met de FTP-server communiceert.</xref:System.Net.IWebProxy> De proxy is ingesteld door het systeem met behulp van configuratiebestanden en de instellingen van Internet Explorer Local Area Network. Instellen dat er geen proxy moet worden gebruikt, stellen Proxy op de proxy-exemplaar dat is geretourneerd door de <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=fullName>methode.</xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=fullName> Zie voor meer informatie over automatische detectie van proxyinstellingen [automatische detectie van proxyserver](~/add/includes/ajax-current-ext-md.md).       Proxy voor het schrijven van gegevens naar de stroom van de aanvraag of ophalen van het antwoord, moet u instellen. Het wijzigen van Proxy na het aanroepen de <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, of <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>methode veroorzaakt een <xref:System.InvalidOperationException>uitzondering.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       De <xref:System.Net.FtpWebRequest>klasse ondersteunt HTTP en ISA Firewall Client-proxy.</xref:System.Net.FtpWebRequest>       Als de opgegeven proxy een HTTP-proxy, alleen is de <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, en <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails>opdrachten worden ondersteund.</xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> </xref:System.Net.WebRequestMethods.Ftp.ListDirectory> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>"
  example:
  - "The following code example displays this property value.  \n  \n [!code-cpp[NCLFtpClient#16](~/add/codesnippet/cpp/p-system.net.ftpwebreque_1_1.cpp)]\n [!code-cs[NCLFtpClient#16](~/add/codesnippet/csharp/p-system.net.ftpwebreque_1_1.cs)]"
  syntax:
    content: public override System.Net.IWebProxy Proxy { get; set; }
    return:
      type: System.Net.IWebProxy
      description: "Een <xref:System.Net.IWebProxy>exemplaar die verantwoordelijk is voor communicatie met de FTP-server.</xref:System.Net.IWebProxy>"
  overload: System.Net.FtpWebRequest.Proxy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Deze eigenschap kan niet worden ingesteld op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een nieuwe waarde is opgegeven voor deze eigenschap voor een aanvraag die al wordt uitgevoerd."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ReadWriteTimeout
  id: ReadWriteTimeout
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
  fullName: System.Net.FtpWebRequest.ReadWriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld, is een time-out bij het lezen van of schrijven naar een stroom."
  remarks: "De ReadWriteTimeout wordt gebruikt bij het schrijven naar de stroom is geretourneerd door de <xref:System.Net.FtpWebRequest.GetRequestStream%2A>methode of bij het lezen van de stroom is geretourneerd door de <xref:System.Net.FtpWebResponse.GetResponseStream%2A>methode.</xref:System.Net.FtpWebResponse.GetResponseStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       In het bijzonder de eigenschap ReadWriteTimeout bepaalt u de time-outwaarde voor de <xref:System.IO.Stream.Read%2A>methode die wordt gebruikt voor het lezen van de stroom is geretourneerd door de <xref:System.Net.FtpWebResponse.GetResponseStream%2A>methode, en voor de <xref:System.IO.Stream.Write%2A>methode die wordt gebruikt voor het schrijven naar de stroom is geretourneerd door de <xref:System.Net.FtpWebRequest.GetRequestStream%2A>methode.</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.IO.Stream.Write%2A> </xref:System.Net.FtpWebResponse.GetResponseStream%2A> </xref:System.IO.Stream.Read%2A> Als de time-outperiode wordt overschreden, genereert de aangeroepen methode een <xref:System.Net.WebException>met <xref:System.Net.WebExceptionStatus>ingesteld op <xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException>       De hoeveelheid tijd moet worden gewacht op de aanvraag te voltooien, gebruikt u de <xref:System.Net.FtpWebRequest.Timeout%2A>eigenschap.</xref:System.Net.FtpWebRequest.Timeout%2A>"
  syntax:
    content: public int ReadWriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "Het aantal milliseconden voordat de lees- of uitschrijven tijden van. De standaardwaarde is 300.000 milliseconden (5 minuten)."
  overload: System.Net.FtpWebRequest.ReadWriteTimeout*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De aanvraag is al verzonden."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De opgegeven waarde voor een set-bewerking kleiner dan of gelijk zijn aan nul is en is niet gelijk zijn aan &lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.RenameTo
  id: RenameTo
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
  fullName: System.Net.FtpWebRequest.RenameTo
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld van de nieuwe naam van een bestand wordt gewijzigd."
  syntax:
    content: public string RenameTo { get; set; }
    return:
      type: System.String
      description: "De nieuwe naam van het bestand wordt gewijzigd."
  overload: System.Net.FtpWebRequest.RenameTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De opgegeven waarde voor een set-bewerking is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een nieuwe waarde is opgegeven voor deze eigenschap voor een aanvraag die al wordt uitgevoerd."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.RequestUri
  id: RequestUri
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
  fullName: System.Net.FtpWebRequest.RequestUri
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee haalt u de URI die is aangevraagd door dit exemplaar."
  remarks: "De waarde van de eigenschap RequestUri is de URI opgegeven wanneer de <xref:System.Net.WebRequest.Create%2A>methode is aangeroepen voor dit exemplaar.</xref:System.Net.WebRequest.Create%2A>"
  example:
  - "The following code example displays this property value.  \n  \n [!code-cpp[NCLFtpClient#14](~/add/codesnippet/cpp/p-system.net.ftpwebreque_5_1.cpp)]\n [!code-cs[NCLFtpClient#14](~/add/codesnippet/csharp/p-system.net.ftpwebreque_5_1.cs)]"
  syntax:
    content: public override Uri RequestUri { get; }
    return:
      type: System.Uri
      description: "Een <xref:System.Uri>-exemplaar dat een resource die is geopend met behulp van de File Transfer Protocol identificeert.</xref:System.Uri>"
  overload: System.Net.FtpWebRequest.RequestUri*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ServicePoint
  id: ServicePoint
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
  fullName: System.Net.FtpWebRequest.ServicePoint
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Haalt de <xref href=&quot;System.Net.ServicePoint&quot;> </xref> object waarmee verbinding met de FTP-server."
  remarks: "Als er geen <xref:System.Net.ServicePoint>object bestaat, wordt er een gemaakt voor de FTP-server.</xref:System.Net.ServicePoint> Om in te stellen het maximum aantal verbindingen dat geopend voor een FTP-server worden kan de <xref:System.Net.ServicePoint.ConnectionLimit%2A>eigenschap van de <xref:System.Net.ServicePoint>exemplaar geretourneerd door deze eigenschap.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.ConnectionLimit%2A>"
  example:
  - "The following code example retrieves the service point from a request and sets the maximum number of connections to one.  \n  \n [!code-cpp[NCLFtpClient#1](~/add/codesnippet/cpp/p-system.net.ftpwebreque_9_1.cpp)]\n [!code-cs[NCLFtpClient#1](~/add/codesnippet/csharp/p-system.net.ftpwebreque_9_1.cs)]"
  syntax:
    content: public System.Net.ServicePoint ServicePoint { get; }
    return:
      type: System.Net.ServicePoint
      description: "Een <xref href=&quot;System.Net.ServicePoint&quot;> </xref> -object dat kan worden gebruikt om het Verbindingsgedrag aanpassen."
  overload: System.Net.FtpWebRequest.ServicePoint*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Timeout
  id: Timeout
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
  fullName: System.Net.FtpWebRequest.Timeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld van het aantal milliseconden wachttijd voor een aanvraag."
  remarks: "Als u wilt een oneindige waarde opgeeft, kunt u de time-eigenschap instelt op <xref:System.Threading.Timeout.Infinite>(-1).</xref:System.Threading.Timeout.Infinite> Dit is de standaardwaarde.       Time-out is het aantal milliseconden dat een synchrone aanvraag gedaan met de <xref:System.Net.FtpWebRequest.GetResponse%2A>methode wordt gewacht op een antwoord en dat de <xref:System.Net.FtpWebRequest.GetRequestStream%2A>methode wordt gewacht op een stroom.</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> Als een bron binnen de time-outperiode niet reageert, wordt de aanvraag genereert een <xref:System.Net.WebException>met de <xref:System.Net.WebException.Status%2A>eigenschap ingesteld op <xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException>       Time-out wijzigen na het aanroepen de <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, of <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>methode veroorzaakt een <xref:System.InvalidOperationException>uitzondering.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Een Domain Name System (DNS)-query kan maximaal 15 seconden om terug te keren of time-out duren. Als de aanvraag bevat een hostnaam die oplossing vereist en u minder dan 15 seconden time-out op een waarde ingesteld, duurt het 15 seconden of langer voordat een <xref:System.Net.WebException>gegenereerd om aan te geven van een time-out op uw verzoek.</xref:System.Net.WebException>"
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[NCLFtpClient#23](~/add/codesnippet/cpp/p-system.net.ftpwebreque_3_1.cpp)]\n [!code-cs[NCLFtpClient#23](~/add/codesnippet/csharp/p-system.net.ftpwebreque_3_1.cs)]"
  syntax:
    content: public override int Timeout { get; set; }
    return:
      type: System.Int32
      description: "Een <xref:System.Int32>waarde waarin het aantal milliseconden dat moet worden gewacht voordat een aanvraag voor een optreedt time-out.</xref:System.Int32> De standaardwaarde is <xref:System.Threading.Timeout.Infinite>.</xref:System.Threading.Timeout.Infinite>"
  overload: System.Net.FtpWebRequest.Timeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De opgegeven waarde is kleiner dan nul en is niet <xref:System.Threading.Timeout.Infinite>.</xref:System.Threading.Timeout.Infinite>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een nieuwe waarde is opgegeven voor deze eigenschap voor een aanvraag die al wordt uitgevoerd."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UseBinary
  id: UseBinary
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
  fullName: System.Net.FtpWebRequest.UseBinary
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld een <xref:System.Boolean>waarde waarmee het gegevenstype voor bestandsoverdrachten.</xref:System.Boolean>"
  remarks: "Als u binaire verzendt gegevens, zoals een installatiekopie deze eigenschap instellen op `true`. Als u tekst verzendt, stel de eigenschap op `false`. Geven `true` zorgt ervoor dat de <xref:System.Net.FtpWebRequest>verzendt een `&quot;TYPE I&quot;` opdracht naar de server.</xref:System.Net.FtpWebRequest> Geven `false` zorgt ervoor dat de <xref:System.Net.FtpWebRequest>verzendt een `&quot;Type A&quot;` opdracht naar de server.</xref:System.Net.FtpWebRequest> FTP-servers kunnen negeren deze opdrachten.       Het wijzigen van UseBinary na het aanroepen de <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, of <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>methode veroorzaakt een <xref:System.InvalidOperationException>uitzondering.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#15](~/add/codesnippet/cpp/p-system.net.ftpwebreque_7_1.cpp)]\n [!code-cs[NCLFtpClient#15](~/add/codesnippet/csharp/p-system.net.ftpwebreque_7_1.cs)]"
  syntax:
    content: public bool UseBinary { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om aan te geven met de server dat de gegevens worden overgebracht binair; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om aan te geven dat de gegevens tekst. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.UseBinary*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een nieuwe waarde is opgegeven voor deze eigenschap voor een aanvraag die al wordt uitgevoerd."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
  fullName: System.Net.FtpWebRequest.UseDefaultCredentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Altijd genereert een <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "De eigenschap UseDefaultCredentials is alleen beschikbaar voor compatibiliteit met andere implementaties van de <xref:System.Net.WebRequest>en <xref:System.Net.WebResponse>klassen.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Er is geen reden UseDefaultCredentials gebruiken."
  syntax:
    content: public override bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "Altijd genereert een <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.UseDefaultCredentials*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Standaardreferenties worden niet ondersteund voor FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UsePassive
  id: UsePassive
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
  fullName: System.Net.FtpWebRequest.UsePassive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld van het gedrag van een clienttoepassing gegevens overdrachtsproces."
  remarks: "De eigenschap UsePassive `true` verzendt de &quot;`PASV&quot;` opdracht naar de server. Met deze opdracht vraagt de-server om te luisteren naar een gegevenspoort en wachten op een verbinding in plaats van een na ontvangst van een opdracht voor bestandsoverdracht initiëren.       Zie RFC 959, &quot;File Transfer Protocol,&quot; paragraaf 3.2 &quot;Gegevensverbindingen tot stand brengen van&quot; en sectie 4.1.2, &quot;Transfer Parameter opdrachten,&quot; beschikbaar voor een beschrijving van de problemen die zijn opgegeven met behulp van UsePassive [http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt).       Het wijzigen van UsePassive na het aanroepen de <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, of <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>methode veroorzaakt een <xref:System.InvalidOperationException>uitzondering.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Als UsePassive is ingesteld op `true`, de FTP-server kan de grootte van het bestand niet verzenden en Downloadvoortgang van de altijd nul kan zijn. Als UsePassive is ingesteld op `false`, een firewall kan een waarschuwing activeren en downloaden van het bestand blokkeren."
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#6](~/add/codesnippet/cpp/p-system.net.ftpwebreque_10_1.cpp)]\n [!code-cs[NCLFtpClient#6](~/add/codesnippet/csharp/p-system.net.ftpwebreque_10_1.cs)]"
  syntax:
    content: public bool UsePassive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Als de clienttoepassing gegevensoverdracht luistert proces naar een verbinding op de poort; anders <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> als de client een verbinding op de poort moet worden gestart. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.UsePassive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een nieuwe waarde is opgegeven voor deze eigenschap voor een aanvraag die al wordt uitgevoerd."
  platform:
  - net462
references:
- uid: System.Net.WebRequest
  isExternal: false
  name: System.Net.WebRequest
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.Net.ProtocolViolationException
  isExternal: true
  name: System.Net.ProtocolViolationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.FtpWebRequest.Abort
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Abort()
  nameWithType: FtpWebRequest.Abort()
  fullName: System.Net.FtpWebRequest.Abort()
- uid: System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetRequestStream(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetResponse(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
- uid: System.Net.FtpWebRequest.ClientCertificates
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
  fullName: System.Net.FtpWebRequest.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Net.FtpWebRequest.ConnectionGroupName
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
  fullName: System.Net.FtpWebRequest.ConnectionGroupName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.FtpWebRequest.ContentLength
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
  fullName: System.Net.FtpWebRequest.ContentLength
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.FtpWebRequest.ContentOffset
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
  fullName: System.Net.FtpWebRequest.ContentOffset
- uid: System.Net.FtpWebRequest.ContentType
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
  fullName: System.Net.FtpWebRequest.ContentType
- uid: System.Net.FtpWebRequest.Credentials
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
  fullName: System.Net.FtpWebRequest.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.FtpWebRequest.DefaultCachePolicy
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
  fullName: System.Net.FtpWebRequest.DefaultCachePolicy
- uid: System.Net.Cache.RequestCachePolicy
  parent: System.Net.Cache
  isExternal: false
  name: RequestCachePolicy
  nameWithType: RequestCachePolicy
  fullName: System.Net.Cache.RequestCachePolicy
- uid: System.Net.FtpWebRequest.EnableSsl
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
  fullName: System.Net.FtpWebRequest.EnableSsl
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetRequestStream(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetRequestStream(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetRequestStream(IAsyncResult)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetResponse(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetResponse(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetResponse(IAsyncResult)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.Net.FtpWebRequest.GetRequestStream
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetRequestStream()
  nameWithType: FtpWebRequest.GetRequestStream()
  fullName: System.Net.FtpWebRequest.GetRequestStream()
- uid: System.Net.FtpWebRequest.GetResponse
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetResponse()
  nameWithType: FtpWebRequest.GetResponse()
  fullName: System.Net.FtpWebRequest.GetResponse()
- uid: System.Net.FtpWebRequest.Headers
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Headers
  nameWithType: FtpWebRequest.Headers
  fullName: System.Net.FtpWebRequest.Headers
- uid: System.Net.WebHeaderCollection
  parent: System.Net
  isExternal: true
  name: WebHeaderCollection
  nameWithType: WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
- uid: System.Net.FtpWebRequest.KeepAlive
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
  fullName: System.Net.FtpWebRequest.KeepAlive
- uid: System.Net.FtpWebRequest.Method
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Method
  nameWithType: FtpWebRequest.Method
  fullName: System.Net.FtpWebRequest.Method
- uid: System.Net.FtpWebRequest.PreAuthenticate
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
  fullName: System.Net.FtpWebRequest.PreAuthenticate
- uid: System.Net.FtpWebRequest.Proxy
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
  fullName: System.Net.FtpWebRequest.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net.FtpWebRequest.ReadWriteTimeout
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
  fullName: System.Net.FtpWebRequest.ReadWriteTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.FtpWebRequest.RenameTo
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
  fullName: System.Net.FtpWebRequest.RenameTo
- uid: System.Net.FtpWebRequest.RequestUri
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
  fullName: System.Net.FtpWebRequest.RequestUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.FtpWebRequest.ServicePoint
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
  fullName: System.Net.FtpWebRequest.ServicePoint
- uid: System.Net.ServicePoint
  parent: System.Net
  isExternal: false
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
- uid: System.Net.FtpWebRequest.Timeout
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
  fullName: System.Net.FtpWebRequest.Timeout
- uid: System.Net.FtpWebRequest.UseBinary
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
  fullName: System.Net.FtpWebRequest.UseBinary
- uid: System.Net.FtpWebRequest.UseDefaultCredentials
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
  fullName: System.Net.FtpWebRequest.UseDefaultCredentials
- uid: System.Net.FtpWebRequest.UsePassive
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
  fullName: System.Net.FtpWebRequest.UsePassive
- uid: System.Net.FtpWebRequest.Abort*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Abort
  nameWithType: FtpWebRequest.Abort
- uid: System.Net.FtpWebRequest.BeginGetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetRequestStream
  nameWithType: FtpWebRequest.BeginGetRequestStream
- uid: System.Net.FtpWebRequest.BeginGetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetResponse
  nameWithType: FtpWebRequest.BeginGetResponse
- uid: System.Net.FtpWebRequest.ClientCertificates*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
- uid: System.Net.FtpWebRequest.ConnectionGroupName*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
- uid: System.Net.FtpWebRequest.ContentLength*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
- uid: System.Net.FtpWebRequest.ContentOffset*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
- uid: System.Net.FtpWebRequest.ContentType*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
- uid: System.Net.FtpWebRequest.Credentials*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
- uid: System.Net.FtpWebRequest.DefaultCachePolicy*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
- uid: System.Net.FtpWebRequest.EnableSsl*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
- uid: System.Net.FtpWebRequest.EndGetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetRequestStream
  nameWithType: FtpWebRequest.EndGetRequestStream
- uid: System.Net.FtpWebRequest.EndGetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetResponse
  nameWithType: FtpWebRequest.EndGetResponse
- uid: System.Net.FtpWebRequest.GetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetRequestStream
  nameWithType: FtpWebRequest.GetRequestStream
- uid: System.Net.FtpWebRequest.GetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetResponse
  nameWithType: FtpWebRequest.GetResponse
- uid: System.Net.FtpWebRequest.Headers*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Headers
  nameWithType: FtpWebRequest.Headers
- uid: System.Net.FtpWebRequest.KeepAlive*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
- uid: System.Net.FtpWebRequest.Method*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Method
  nameWithType: FtpWebRequest.Method
- uid: System.Net.FtpWebRequest.PreAuthenticate*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
- uid: System.Net.FtpWebRequest.Proxy*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
- uid: System.Net.FtpWebRequest.ReadWriteTimeout*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
- uid: System.Net.FtpWebRequest.RenameTo*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
- uid: System.Net.FtpWebRequest.RequestUri*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
- uid: System.Net.FtpWebRequest.ServicePoint*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
- uid: System.Net.FtpWebRequest.Timeout*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
- uid: System.Net.FtpWebRequest.UseBinary*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
- uid: System.Net.FtpWebRequest.UseDefaultCredentials*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
- uid: System.Net.FtpWebRequest.UsePassive*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
