### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.ImportAttribute
  id: ImportAttribute
  children:
  - System.ComponentModel.Composition.ImportAttribute.#ctor
  - System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)
  - System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)
  - System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.Composition.ImportAttribute.AllowDefault
  - System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  - System.ComponentModel.Composition.ImportAttribute.ContractName
  - System.ComponentModel.Composition.ImportAttribute.ContractType
  - System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  - System.ComponentModel.Composition.ImportAttribute.Source
  langs:
  - csharp
  name: ImportAttribute
  nameWithType: ImportAttribute
  fullName: System.ComponentModel.Composition.ImportAttribute
  type: Class
  summary: "Hiermee geeft u op dat een eigenschap, veld of de parameter-waarde moet worden opgegeven door de <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>.object"
  remarks: "De ImportAttribute wordt in het Model toegeschreven Programming gebruikt voor de invoer of de afhankelijkheden van een bepaald gedeelte declareren. Dit kan een eigenschap, een veld of een methode opmaken. Tijdens de samenstelling, een onderdeel invoer worden opgevuld met de <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>object waarvan het deel deel uitmaakt, met behulp van de uitvoer die aan die <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>object.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> </xref:System.ComponentModel.Composition.Hosting.CompositionContainer>       Hoofdzakelijk door de naam van het contract en het contracttype vergelijken of een import overeenkomt met een opgegeven export wordt bepaald. Normaal gesproken hoeft u niet een van deze opgeven bij het gebruik van het kenmerk importeren in de code en worden ze automatisch worden afgeleid van het type van het interne lid. Als de invoer moet overeenkomen met een uitvoer van een ander type (bijvoorbeeld, een subklasse van het type van de interne lid of een interface die door die lid is ge√Ømplementeerd), klikt u vervolgens het contracttype moet expliciet worden opgegeven. De contractnaam kan ook expliciet worden opgegeven, bijvoorbeeld onderscheid maken tussen meerdere contracten met hetzelfde type zijn, maar het is doorgaans beter om dit te doen via de metagegevens. Zie voor meer informatie over metagegevens <xref:System.ComponentModel.Composition.PartMetadataAttribute>.</xref:System.ComponentModel.Composition.PartMetadataAttribute>"
  example:
  - "The following example shows three classes with members decorated with the ImportAttribute, and three exports that match them.  \n  \n [!code-cs[ImportAndExport#1](~/add/codesnippet/csharp/consoleapplication3/program.cs#1)]\n [!code-vb[ImportAndExport#1](~/add/codesnippet/visualbasic/consoleapplication4/module1.vb#1)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=false)]

      public class ImportAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute()
  nameWithType: ImportAttribute.ImportAttribute()
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.Composition.ImportAttribute&quot;> </xref> klasse, importeert het exporteren met de standaardnaam voor het contract."
  remarks: "De standaardnaam voor het contract is het resultaat van het aanroepen van de <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>methode voor de eigenschap, veld of de parameter-type dat u met dit kenmerk is gemarkeerd.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Naam van het contract wordt vergeleken met behulp van de <xref:System.StringComparer.Ordinal%2A>eigenschap om uit te voeren van een vergelijking hoofdlettergevoelig, niet-taalkundige.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportAttribute ();
    parameters: []
  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute(String)
  nameWithType: ImportAttribute.ImportAttribute(String)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.Composition.ImportAttribute&quot;> </xref> klasse, importeert het exporteren met de naam van het opgegeven contract."
  remarks: "De standaardnaam voor het contract is het resultaat van het aanroepen van de <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>methode voor het type eigenschap, veld of de parameter die is gemarkeerd met dit kenmerk.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Naam van het contract wordt vergeleken met behulp van de <xref:System.StringComparer.Ordinal%2A>eigenschap om uit te voeren van een vergelijking hoofdlettergevoelig, niet-taalkundige.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportAttribute (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "De naam van het contract van de export wilt importeren, of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;) het contract standaardnaam wilt gebruiken."
  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute(Type)
  nameWithType: ImportAttribute.ImportAttribute(Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.Composition.ImportAttribute&quot;> </xref> klasse, importeert het exporteren met de naam van het servicecontract is afgeleid van het opgegeven type."
  remarks: "De naam van het servicecontract is het resultaat van het aanroepen van de <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>methode op `contractType`.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       De standaardnaam voor het contract is het resultaat van het aanroepen van de <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>methode voor het type eigenschap, veld of de parameter die is gemarkeerd met dit kenmerk.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Naam van het contract wordt vergeleken met behulp van de <xref:System.StringComparer.Ordinal%2A>eigenschap om uit te voeren van een vergelijking hoofdlettergevoelig, niet-taalkundige.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportAttribute (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "Het type worden afgeleid van de uitvoer van de naam van het contract of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> het contract standaardnaam wilt gebruiken."
  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute(String,Type)
  nameWithType: ImportAttribute.ImportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String,Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.Composition.ImportAttribute&quot;> </xref> klasse, importeert het exporteren met de naam van de opgegeven contract en het type."
  syntax:
    content: public ImportAttribute (string contractName, Type contractType);
    parameters:
    - id: contractName
      type: System.String
      description: "De naam van het contract van de export wilt importeren, of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;) het contract standaardnaam wilt gebruiken."
    - id: contractType
      type: System.Type
      description: "Het type van de uitvoer te importeren."
  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.AllowDefault
  id: AllowDefault
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: AllowDefault
  nameWithType: ImportAttribute.AllowDefault
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowDefault
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de eigenschap, veld of de parameter zal worden ingesteld op het type standaardwaarde bij het exporteren van een met de naam van het servicecontract is niet aanwezig in de container."
  remarks: "De standaardwaarde van het type van een eigenschap, veld of de parameter is `null` voor verwijzingstypen en nul voor numerieke waardetypen. De standaardwaarde is voor andere waardetypen elk veld van het waardetype is ingesteld op nul als het veld een waardetype is of `null` als het veld een verwijzingstype is."
  syntax:
    content: public bool AllowDefault { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de eigenschap, veld of de parameter ingesteld op het type standaardwaarde wanneer er geen uitvoer met de <xref:System.ComponentModel.Composition.ImportAttribute.ContractName*>in de <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.Composition.ImportAttribute.ContractName*> De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Composition.ImportAttribute.AllowDefault*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  id: AllowRecomposition
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: AllowRecomposition
  nameWithType: ImportAttribute.AllowRecomposition
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de eigenschap of veld zal opnieuw worden samengesteld als uitvoer met een overeenkomende contract zijn gewijzigd in de container."
  syntax:
    content: public bool AllowRecomposition { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de eigenschap of veld recomposition toestaat wanneer ge√´xporteerd met een overeenkomende <xref:System.ComponentModel.Composition.ImportAttribute.ContractName*>zijn toegevoegd of verwijderd uit de <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.Composition.ImportAttribute.ContractName*> De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.ContractName
  id: ContractName
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ContractName
  nameWithType: ImportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractName
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Hiermee haalt u de naam van het contract van de uitvoer te importeren."
  syntax:
    content: public string ContractName { get; }
    return:
      type: System.String
      description: "De naam van het contract van de uitvoer te importeren. De standaardwaarde is een lege tekenreeks (&quot;&quot;)."
  overload: System.ComponentModel.Composition.ImportAttribute.ContractName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.ContractType
  id: ContractType
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ContractType
  nameWithType: ImportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractType
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Hiermee haalt u het type van de uitvoer te importeren."
  syntax:
    content: public Type ContractType { get; }
    return:
      type: System.Type
      description: "Het type van de uitvoer te importeren."
  overload: System.ComponentModel.Composition.ImportAttribute.ContractType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  id: RequiredCreationPolicy
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: RequiredCreationPolicy
  nameWithType: ImportAttribute.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Opgehaald of ingesteld van een waarde die aangeeft dat de importfunctie vereist is voor een specifieke <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref> voor de uitvoer die wordt gebruikt om te voldoen aan deze importeren."
  syntax:
    content: public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }
    return:
      type: System.ComponentModel.Composition.CreationPolicy
      description: "Een van de volgende waarden: <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>, als de importfunctie niet een specifieke dat vereist <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>. Dit is de standaardinstelling.       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>om te vereisen dat alle gebruikte uitvoer worden gedeeld door alle onderdelen in de container.       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>om te vereisen dat alle gebruikte uitvoer niet gedeeld in een container worden. In dit geval ontvangt elk onderdeel hun eigen exemplaar."
  overload: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.Source
  id: Source
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: Source
  nameWithType: ImportAttribute.Source
  fullName: System.ComponentModel.Composition.ImportAttribute.Source
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Opgehaald of ingesteld van een waarde die aangeeft van de bereiken van waaruit deze import kan worden voldaan."
  syntax:
    content: public System.ComponentModel.Composition.ImportSource Source { get; set; }
    return:
      type: System.ComponentModel.Composition.ImportSource
      description: "Een waarde die aangeeft van de bereiken van waaruit deze import kan worden voldaan."
  overload: System.ComponentModel.Composition.ImportAttribute.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute()
  nameWithType: ImportAttribute.ImportAttribute()
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute()
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute(String)
  nameWithType: ImportAttribute.ImportAttribute(String)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute(Type)
  nameWithType: ImportAttribute.ImportAttribute(Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute(String,Type)
  nameWithType: ImportAttribute.ImportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String,Type)
- uid: System.ComponentModel.Composition.ImportAttribute.AllowDefault
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: AllowDefault
  nameWithType: ImportAttribute.AllowDefault
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowDefault
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: AllowRecomposition
  nameWithType: ImportAttribute.AllowRecomposition
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
- uid: System.ComponentModel.Composition.ImportAttribute.ContractName
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ContractName
  nameWithType: ImportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractName
- uid: System.ComponentModel.Composition.ImportAttribute.ContractType
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ContractType
  nameWithType: ImportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractType
- uid: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ImportAttribute.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.CreationPolicy
  parent: System.ComponentModel.Composition
  isExternal: false
  name: CreationPolicy
  nameWithType: CreationPolicy
  fullName: System.ComponentModel.Composition.CreationPolicy
- uid: System.ComponentModel.Composition.ImportAttribute.Source
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: Source
  nameWithType: ImportAttribute.Source
  fullName: System.ComponentModel.Composition.ImportAttribute.Source
- uid: System.ComponentModel.Composition.ImportSource
  parent: System.ComponentModel.Composition
  isExternal: false
  name: ImportSource
  nameWithType: ImportSource
  fullName: System.ComponentModel.Composition.ImportSource
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute
  nameWithType: ImportAttribute.ImportAttribute
- uid: System.ComponentModel.Composition.ImportAttribute.AllowDefault*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: AllowDefault
  nameWithType: ImportAttribute.AllowDefault
- uid: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: AllowRecomposition
  nameWithType: ImportAttribute.AllowRecomposition
- uid: System.ComponentModel.Composition.ImportAttribute.ContractName*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ContractName
  nameWithType: ImportAttribute.ContractName
- uid: System.ComponentModel.Composition.ImportAttribute.ContractType*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ContractType
  nameWithType: ImportAttribute.ContractType
- uid: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ImportAttribute.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.ImportAttribute.Source*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: Source
  nameWithType: ImportAttribute.Source
