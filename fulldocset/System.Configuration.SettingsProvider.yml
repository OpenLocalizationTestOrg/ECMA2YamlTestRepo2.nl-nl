### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsProvider
  id: SettingsProvider
  children:
  - System.Configuration.SettingsProvider.#ctor
  - System.Configuration.SettingsProvider.ApplicationName
  - System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  - System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  langs:
  - csharp
  name: SettingsProvider
  nameWithType: SettingsProvider
  fullName: System.Configuration.SettingsProvider
  type: Class
  summary: "Fungeert als een basisklasse op voor het afleiden van providers van de aangepaste instellingen in de architectuur van de instellingen van toepassing."
  remarks: "Een instellingen provider definieert het mechanisme voor het opslaan van configuratiegegevens worden gebruikt in de architectuur van de instellingen van toepassing. .NET Framework bevat een provider van de instellingen enkel standaard <xref:System.Configuration.LocalFileSettingsProvider>, waarin configuratiegegevens naar het lokale bestandssysteem wordt opgeslagen.</xref:System.Configuration.LocalFileSettingsProvider> U kunt echter alternatieve opslaggroep mechanismen maken door die zijn afgeleid van de abstracte klasse SettingsProvider. De provider die gebruikmaakt van een wrapper-klasse wordt bepaald door de wrapperklasse met de <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute> versieren Als dit kenmerk niet, de standaard opgegeven is <xref:System.Configuration.LocalFileSettingsProvider>, wordt gebruikt.</xref:System.Configuration.LocalFileSettingsProvider>       Wanneer u een provider van de aangepaste instellingen, minimaal maakt, moet u de implementaties voor de drie methoden van deze klasse opgeven: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>en <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.</xref:System.Configuration.SettingsProvider.ApplicationName%2A> </xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> </xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>       Voor client-toepassingen, kunt u meer gestandaardiseerde functionaliteit toevoegen aan een aangepaste provider door het implementeren van ook de <xref:System.Configuration.IApplicationSettingsProvider>interface.</xref:System.Configuration.IApplicationSettingsProvider> Deze interface komt overeen met methoden is gevonden in de <xref:System.Configuration.ApplicationSettingsBase>klasse, die hoofdzakelijk ondersteuning voor versiebeheer biedt.</xref:System.Configuration.ApplicationSettingsBase>       Normaal gesproken moet u ontwerpen instellingen providers worden single-instance om opslag bronconflicten te voorkomen. Providers moet ook de thread-veilige omdat ze kunnen worden aangeroepen tegelijkertijd uit meerdere wrapper-exemplaren in een domein één toepassing of meerdere toepassingen in verschillende domeinen bevinden.       Minimaal een provider van instellingen drie kenmerken moet herkennen —<xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>, en <xref:System.Configuration.DefaultSettingValueAttribute>.</xref:System.Configuration.DefaultSettingValueAttribute> </xref:System.Configuration.UserScopedSettingAttribute> </xref:System.Configuration.ApplicationScopedSettingAttribute> Zie voor een volledige lijst met kenmerken die kunnen worden toegepast op toepassingsinstellingen [toepassing instellingen kenmerken](~/add/includes/ajax-current-ext-md.md). Een aangepaste instelling provider kenmerken die zijn toegepast in de eigenschappen van de instellingen op de volgende manier moet oplossen: 1.  Als de provider de aanvraag door het kenmerk geïmpliceerde voldoen kan, moet natuurlijk dit doen.      2.  Als de provider de aanvraag niet voltooien kan, moet deze deze achtergrond negeren.      3.  Als twee of meer eigenschappen conflicteren; bijvoorbeeld: een eigenschap gedecoreerd worden met beide <xref:System.Configuration.ApplicationScopedSettingAttribute>en <xref:System.Configuration.UserScopedSettingAttribute>; de provider moet een <xref:System.Configuration.ConfigurationException>.</xref:System.Configuration.ConfigurationException> genereren</xref:System.Configuration.UserScopedSettingAttribute> </xref:System.Configuration.ApplicationScopedSettingAttribute>"
  syntax:
    content: 'public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.#ctor
  id: '#ctor'
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: SettingsProvider()
  nameWithType: SettingsProvider.SettingsProvider()
  fullName: System.Configuration.SettingsProvider.SettingsProvider()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Initialiseert een exemplaar van de <xref href=&quot;System.Configuration.SettingsProvider&quot;> </xref> klasse."
  remarks: "Dit is deze beveiligde standaardconstructor voor deze abstracte klasse. Providers van afgeleide aangepaste instellingen zijn niet vereist voor een expliciete constructor omdat de <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>methode voert alle initialisatie.</xref:System.Configuration.Provider.ProviderBase.Initialize%2A>       Clientcode doorgaans heeft geen rechtstreeks exemplaar maken van een provider van instellingen; in plaats daarvan het gebruik van de volgende procedure een provider van instellingen voor een bepaalde instellingen eigenschap vinden: 1.  Roep de <xref:System.ComponentModel.Component.GetService%2A>methode op het huidige <xref:System.ComponentModel.Component>of <xref:System.ComponentModel.ISite>een verwijzing retourneren naar de huidige <xref:System.Configuration.ISettingsProviderService>.</xref:System.Configuration.ISettingsProviderService> </xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.Component.GetService%2A>      2.  Roep de <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A>methode van de <xref:System.Configuration.ISettingsProviderService>opgehaald in de eerste stap voor het retourneren van de provider van instellingen.</xref:System.Configuration.ISettingsProviderService> </xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A>"
  syntax:
    content: protected SettingsProvider ();
    parameters: []
  overload: System.Configuration.SettingsProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.ApplicationName
  id: ApplicationName
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: SettingsProvider.ApplicationName
  fullName: System.Configuration.SettingsProvider.ApplicationName
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Opgehaald of ingesteld van de naam van de toepassing momenteel wordt uitgevoerd."
  remarks: "De ApplicationName en <xref:System.Configuration.Provider.ProviderBase.Name%2A>Eigenschappen helpen toe op dezelfde manier benoemde instellen van eigenschappen in verschillende toepassingen.</xref:System.Configuration.Provider.ProviderBase.Name%2A>"
  syntax:
    content: public abstract string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Een <xref:System.String>dat de korte naam van de toepassing, die geen een volledig pad of extensie in, bijvoorbeeld bevat, bevat `SimpleAppSettings`.</xref:System.String>"
  overload: System.Configuration.SettingsProvider.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Retourneert de verzameling instellingen eigenschapswaarden voor het opgegeven exemplaar en instellingen eigenschap toepassingsgroepen."
  remarks: "De methode GetPropertyValues moet worden geïmplementeerd voor het afhandelen van speciale instellingen, die zijn gemarkeerd met <xref:System.Configuration.SpecialSettingAttribute>, evenals toepassingen en instellingen.</xref:System.Configuration.SpecialSettingAttribute>"
  syntax:
    content: public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Een <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> met een beschrijving van het huidige gebruik van de toepassing."
    - id: collection
      type: System.Configuration.SettingsPropertyCollection
      description: "Een <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> met de eigenschap instellingengroep waarvan de waarden moeten worden opgehaald."
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "Een <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref> met de waarden voor de groep van de eigenschap opgegeven instellingen."
  overload: System.Configuration.SettingsProvider.GetPropertyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  id: SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Hiermee worden de waarden van de opgegeven groep van instellingen."
  remarks: "<xref:System.Configuration.ApplicationSettingsBase>bevat de <xref:System.Configuration.ApplicationSettingsBase.Save%2A>methode, die wordt aangeroepen om vast te leggen van de waarden van alle eigenschappen van de instellingen.</xref:System.Configuration.ApplicationSettingsBase.Save%2A></xref:System.Configuration.ApplicationSettingsBase> Deze methode wordt alle de providers voor instellingen die zijn gekoppeld aan de eigenschappen van de instellingen en de SetPropertyValues aanroept voor elk middels <xref:System.Configuration.SettingsProvider>de werkelijke serialisatie-bewerking uit te voeren.</xref:System.Configuration.SettingsProvider>       De methode SetPropertyValues moet worden geïmplementeerd met beveiligd zijn: - enkel volledig vertrouwde code moet worden toegestaan toepassingsinstellingen bijwerken. Gedeeltelijk vertrouwde code moet worden verleend om bij te werken alleen toepassingsinstellingen van gebruiker. Niet-vertrouwde code is doorgaans niet toegestaan om bij te werken toepassingsinstellingen.      -Quota voor gebruik rekening ter bescherming tegen aanvallen van de resource door gedeeltelijk vertrouwde toepassingen."
  syntax:
    content: public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Een <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> met een beschrijving van het huidige toepassingsgebruik."
    - id: collection
      type: System.Configuration.SettingsPropertyValueCollection
      description: "Een <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref> die de groep van de eigenschapsinstellingen in te stellen."
  overload: System.Configuration.SettingsProvider.SetPropertyValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: System.Configuration.Provider.ProviderBase
- uid: System.Configuration.SettingsProvider.#ctor
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SettingsProvider()
  nameWithType: SettingsProvider.SettingsProvider()
  fullName: System.Configuration.SettingsProvider.SettingsProvider()
- uid: System.Configuration.SettingsProvider.ApplicationName
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SettingsProvider.ApplicationName
  fullName: System.Configuration.SettingsProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
- uid: System.Configuration.SettingsProvider.#ctor*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SettingsProvider
  nameWithType: SettingsProvider.SettingsProvider
- uid: System.Configuration.SettingsProvider.ApplicationName*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SettingsProvider.ApplicationName
- uid: System.Configuration.SettingsProvider.GetPropertyValues*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: GetPropertyValues
  nameWithType: SettingsProvider.GetPropertyValues
- uid: System.Configuration.SettingsProvider.SetPropertyValues*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SetPropertyValues
  nameWithType: SettingsProvider.SetPropertyValues
