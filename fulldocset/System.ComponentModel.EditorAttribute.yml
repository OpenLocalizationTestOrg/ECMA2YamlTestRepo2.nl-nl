### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.EditorAttribute
  id: EditorAttribute
  children:
  - System.ComponentModel.EditorAttribute.#ctor
  - System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)
  - System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)
  - System.ComponentModel.EditorAttribute.EditorBaseTypeName
  - System.ComponentModel.EditorAttribute.EditorTypeName
  - System.ComponentModel.EditorAttribute.Equals(System.Object)
  - System.ComponentModel.EditorAttribute.GetHashCode
  - System.ComponentModel.EditorAttribute.TypeId
  langs:
  - csharp
  name: EditorAttribute
  nameWithType: EditorAttribute
  fullName: System.ComponentModel.EditorAttribute
  type: Class
  summary: "Hiermee geeft u de editor te gebruiken om een eigenschap te wijzigen. Deze klasse kan niet worden overgenomen."
  remarks: "Bij het bewerken van de eigenschap moet een visuele ontwerper een nieuw exemplaar van de opgegeven editor door een dialoogvenster of Vervolgkeuze-venster maken.       Gebruik de <xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A>eigenschap vinden van deze editor basistype.</xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A> Het basistype dat is alleen beschikbaar is <xref:System.Drawing.Design.UITypeEditor>.</xref:System.Drawing.Design.UITypeEditor>       Gebruik de <xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A>eigenschap in op de naam van het type editor die zijn gekoppeld aan dit kenmerk.</xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A>       Voor algemene informatie over het gebruik van kenmerken. Zie [kenmerken](~/add/includes/ajax-current-ext-md.md). Zie voor meer informatie over ontwerptijd kenmerken [kenmerken en het moment van ontwerp ondersteuning](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates the `MyImage` class. The class is marked with an EditorAttribute that specifies the <xref:System.Drawing.Design.ImageEditor> as its editor.  \n  \n [!code-cs[Classic EditorAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._81_1.cs)]\n [!code-cpp[Classic EditorAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._81_1.cpp)]\n [!code-vb[Classic EditorAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._81_1.vb)]  \n  \n The following code example creates an instance of the `MyImage` class, gets the attributes for the class, and then prints the name of the editor used by `myNewImage`.  \n  \n [!code-cs[Classic EditorAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._81_2.cs)]\n [!code-cpp[Classic EditorAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._81_2.cpp)]\n [!code-vb[Classic EditorAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._81_2.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=true, Inherited=true)]

      public sealed class EditorAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute()
  nameWithType: EditorAttribute.EditorAttribute()
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.EditorAttribute&quot;> </xref> klasse met de standaard-editor, geen editor is."
  syntax:
    content: public EditorAttribute ();
    parameters: []
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute(String,String)
  nameWithType: EditorAttribute.EditorAttribute(String,String)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.EditorAttribute&quot;> </xref> klasse met de naam en het basistype naam van de editor."
  remarks: "De `typeName` parameter moet binnen het <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>indeling.</xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>       De <xref:System.Type>dat wordt vertegenwoordigd door de `typeName` parameter moet zijn afgeleid van of implementeren van de basis van de klasse</xref:System.Type>       De <xref:System.Type>dat wordt vertegenwoordigd door de `baseTypeName` parameter wordt gebruikt als een sleutel vinden van een bepaalde editor, omdat er een gegevenstype dat is meer dan een editor die zijn gekoppeld aan de</xref:System.Type> Dit kan een klasse, maar is meestal <xref:System.Drawing.Design.UITypeEditor>of <xref:System.ComponentModel.ComponentEditor>.</xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>"
  syntax:
    content: public EditorAttribute (string typeName, string baseTypeName);
    parameters:
    - id: typeName
      type: System.String
      description: "De volledig gekwalificeerde typenaam van de editor."
    - id: baseTypeName
      type: System.String
      description: "De volledig gekwalificeerde typenaam van de basisklasse of interface moet worden gebruikt als een lookup-sleutel voor de editor. Deze klasse moet of zijn afgeleid van <xref href=&quot;System.Drawing.Design.UITypeEditor&quot;> </xref>."
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute(String,Type)
  nameWithType: EditorAttribute.EditorAttribute(String,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.EditorAttribute&quot;> </xref> klasse met naam van het type en het basistype."
  remarks: "De `typeName` parameter moet binnen het <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>indeling.</xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>       De <xref:System.Type>dat wordt vertegenwoordigd door de `typeName` moeten zijn afgeleid van of implementeren van de basis van de klasse</xref:System.Type>       De `baseType` parameter wordt gebruikt als een sleutel vinden van een bepaalde editor, omdat een gegevenstype kan meer dan één editor gekoppeld hebben."
  syntax:
    content: public EditorAttribute (string typeName, Type baseType);
    parameters:
    - id: typeName
      type: System.String
      description: "De volledig gekwalificeerde typenaam van de editor."
    - id: baseType
      type: System.Type
      description: "De <xref:System.Type>van de basisklasse of interface moet worden gebruikt als een lookup-sleutel voor de editor.</xref:System.Type> Deze klasse moet of zijn afgeleid van <xref href=&quot;System.Drawing.Design.UITypeEditor&quot;> </xref>."
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)
  id: '#ctor(System.Type,System.Type)'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute(Type,Type)
  nameWithType: EditorAttribute.EditorAttribute(Type,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(Type,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.EditorAttribute&quot;> </xref> klasse met het type en het basistype."
  remarks: "De <xref:System.Type>dat wordt vertegenwoordigd door de `type` parameter moet zijn afgeleid van of implementeren van de basis van de klasse</xref:System.Type>       De `baseType` parameter wordt gebruikt als een sleutel vinden van een bepaalde editor, omdat een gegevenstype kan meer dan één editor gekoppeld hebben."
  syntax:
    content: public EditorAttribute (Type type, Type baseType);
    parameters:
    - id: type
      type: System.Type
      description: "Een <xref:System.Type>die staat voor het type van de editor.</xref:System.Type>"
    - id: baseType
      type: System.Type
      description: "De <xref:System.Type>van de basisklasse of interface moet worden gebruikt als een lookup-sleutel voor de editor.</xref:System.Type> Deze klasse moet of zijn afgeleid van <xref href=&quot;System.Drawing.Design.UITypeEditor&quot;> </xref>."
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.EditorBaseTypeName
  id: EditorBaseTypeName
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorBaseTypeName
  nameWithType: EditorAttribute.EditorBaseTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorBaseTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee haalt u de naam van de basisklasse of interface fungeren als een lookup-sleutel voor deze editor."
  remarks: "De eigenschap EditorBaseTypeName is een assembly gekwalificeerde typenaam. De [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] biedt <xref:System.Drawing.Design.UITypeEditor>en <xref:System.ComponentModel.ComponentEditor>omdat geldig basisklassen, maar de waarde van een geldig hier.</xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>"
  syntax:
    content: public string EditorBaseTypeName { get; }
    return:
      type: System.String
      description: "De naam van de basisklasse of interface fungeren als een lookup-sleutel voor deze editor."
  overload: System.ComponentModel.EditorAttribute.EditorBaseTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.EditorTypeName
  id: EditorTypeName
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorTypeName
  nameWithType: EditorAttribute.EditorTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee wordt de naam van de klasse editor in de &lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt; indeling."
  syntax:
    content: public string EditorTypeName { get; }
    return:
      type: System.String
      description: "De naam van de klasse editor in de &lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt; indeling."
  overload: System.ComponentModel.EditorAttribute.EditorTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: EditorAttribute.Equals(Object)
  fullName: System.ComponentModel.EditorAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Retourneert of de waarde van het gegeven object gelijk aan de huidige is <xref href=&quot;System.ComponentModel.EditorAttribute&quot;> </xref>."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Het object voor het testen van de gelijkheid van de waarde van."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarde van het gegeven object gelijk aan die van het huidige object is. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.EditorAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: EditorAttribute.GetHashCode()
  fullName: System.ComponentModel.EditorAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Retourneert de hash-code voor dit exemplaar."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Een 32-bits geheel getal met teken hash-code."
  overload: System.ComponentModel.EditorAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.TypeId
  id: TypeId
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: TypeId
  nameWithType: EditorAttribute.TypeId
  fullName: System.ComponentModel.EditorAttribute.TypeId
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee wordt een unieke ID voor dit kenmerktype."
  remarks: "De eigenschap TypeId wordt gebruikt door het filteren van algoritmen voor het identificeren van de twee kenmerken die zijn van hetzelfde type. Voor de meeste kenmerken dit net retourneert de <xref:System.Type>-exemplaar voor het kenmerk.</xref:System.Type> <xref:System.ComponentModel.EditorAttribute>overschrijft dit zodanig dat het type van het basistype editor.</xref:System.ComponentModel.EditorAttribute>"
  syntax:
    content: public override object TypeId { get; }
    return:
      type: System.Object
      description: "Een unieke ID voor dit kenmerktype."
  overload: System.ComponentModel.EditorAttribute.TypeId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.EditorAttribute.#ctor
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute()
  nameWithType: EditorAttribute.EditorAttribute()
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute()
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute(String,String)
  nameWithType: EditorAttribute.EditorAttribute(String,String)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute(String,Type)
  nameWithType: EditorAttribute.EditorAttribute(String,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute(Type,Type)
  nameWithType: EditorAttribute.EditorAttribute(Type,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(Type,Type)
- uid: System.ComponentModel.EditorAttribute.EditorBaseTypeName
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorBaseTypeName
  nameWithType: EditorAttribute.EditorBaseTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorBaseTypeName
- uid: System.ComponentModel.EditorAttribute.EditorTypeName
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorTypeName
  nameWithType: EditorAttribute.EditorTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorTypeName
- uid: System.ComponentModel.EditorAttribute.Equals(System.Object)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: EditorAttribute.Equals(Object)
  fullName: System.ComponentModel.EditorAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.EditorAttribute.GetHashCode
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: EditorAttribute.GetHashCode()
  fullName: System.ComponentModel.EditorAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.EditorAttribute.TypeId
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: TypeId
  nameWithType: EditorAttribute.TypeId
  fullName: System.ComponentModel.EditorAttribute.TypeId
- uid: System.ComponentModel.EditorAttribute.#ctor*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute
  nameWithType: EditorAttribute.EditorAttribute
- uid: System.ComponentModel.EditorAttribute.EditorBaseTypeName*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorBaseTypeName
  nameWithType: EditorAttribute.EditorBaseTypeName
- uid: System.ComponentModel.EditorAttribute.EditorTypeName*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorTypeName
  nameWithType: EditorAttribute.EditorTypeName
- uid: System.ComponentModel.EditorAttribute.Equals*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: Equals
  nameWithType: EditorAttribute.Equals
- uid: System.ComponentModel.EditorAttribute.GetHashCode*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: EditorAttribute.GetHashCode
- uid: System.ComponentModel.EditorAttribute.TypeId*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: TypeId
  nameWithType: EditorAttribute.TypeId
