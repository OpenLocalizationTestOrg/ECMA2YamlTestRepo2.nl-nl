### YamlMime:ManagedReference
items:
- uid: System.IO.Ports.SerialPort
  id: SerialPort
  children:
  - System.IO.Ports.SerialPort.#ctor
  - System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)
  - System.IO.Ports.SerialPort.#ctor(System.String)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  - System.IO.Ports.SerialPort.BaseStream
  - System.IO.Ports.SerialPort.BaudRate
  - System.IO.Ports.SerialPort.BreakState
  - System.IO.Ports.SerialPort.BytesToRead
  - System.IO.Ports.SerialPort.BytesToWrite
  - System.IO.Ports.SerialPort.CDHolding
  - System.IO.Ports.SerialPort.Close
  - System.IO.Ports.SerialPort.CtsHolding
  - System.IO.Ports.SerialPort.DataBits
  - System.IO.Ports.SerialPort.DataReceived
  - System.IO.Ports.SerialPort.DiscardInBuffer
  - System.IO.Ports.SerialPort.DiscardNull
  - System.IO.Ports.SerialPort.DiscardOutBuffer
  - System.IO.Ports.SerialPort.Dispose(System.Boolean)
  - System.IO.Ports.SerialPort.DsrHolding
  - System.IO.Ports.SerialPort.DtrEnable
  - System.IO.Ports.SerialPort.Encoding
  - System.IO.Ports.SerialPort.ErrorReceived
  - System.IO.Ports.SerialPort.GetPortNames
  - System.IO.Ports.SerialPort.Handshake
  - System.IO.Ports.SerialPort.InfiniteTimeout
  - System.IO.Ports.SerialPort.IsOpen
  - System.IO.Ports.SerialPort.NewLine
  - System.IO.Ports.SerialPort.Open
  - System.IO.Ports.SerialPort.Parity
  - System.IO.Ports.SerialPort.ParityReplace
  - System.IO.Ports.SerialPort.PinChanged
  - System.IO.Ports.SerialPort.PortName
  - System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.ReadBufferSize
  - System.IO.Ports.SerialPort.ReadByte
  - System.IO.Ports.SerialPort.ReadChar
  - System.IO.Ports.SerialPort.ReadExisting
  - System.IO.Ports.SerialPort.ReadLine
  - System.IO.Ports.SerialPort.ReadTimeout
  - System.IO.Ports.SerialPort.ReadTo(System.String)
  - System.IO.Ports.SerialPort.ReceivedBytesThreshold
  - System.IO.Ports.SerialPort.RtsEnable
  - System.IO.Ports.SerialPort.StopBits
  - System.IO.Ports.SerialPort.Write(System.String)
  - System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.WriteBufferSize
  - System.IO.Ports.SerialPort.WriteLine(System.String)
  - System.IO.Ports.SerialPort.WriteTimeout
  langs:
  - csharp
  name: SerialPort
  nameWithType: SerialPort
  fullName: System.IO.Ports.SerialPort
  type: Class
  summary: "Vertegenwoordigt een seriële poortbron.       Om te bladeren naar de broncode van .NET Framework voor dit type, Zie de [Verwijzingsbron](http://referencesource.microsoft.com/#System/sys/system/io/ports/SerialPort.cs#ae0a3218c6c9f7fe)."
  remarks: "> [!NOTE]> Zie om weer te geven de broncode van .NET Framework voor dit type, de [Verwijzingsbron](http://referencesource.microsoft.com/#System/sys/system/io/ports/SerialPort.cs#ae0a3218c6c9f7fe). Blader door de broncode online, downloaden de verwijzing voor offline te bekijken en doorloop de bronnen (met inbegrip van patches en updates) tijdens de foutopsporing; Zie [instructies](http://referencesource.microsoft.com/).       Deze klasse gebruiken om te bepalen van een seriële poortbron bestand. Deze klasse biedt synchrone en gebeurtenisafhankelijke i/o-toegang tot de pincode en einde statussen en toegang tot de eigenschappen van de seriële stuurprogramma. Bovendien kan de functionaliteit van deze klasse worden verpakt in een interne <xref:System.IO.Stream>object, toegankelijk via de <xref:System.IO.Ports.SerialPort.BaseStream%2A>-eigenschap en doorgegeven aan de klassen die teruglopen of gebruik van streams.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Stream>       De klasse SerialPort ondersteunt de volgende coderingen: <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF32Encoding>, en alle codering in mscorlib.dll waarbij de codetabel is minder dan 50000 of de codetabel 54936 is gedefinieerd.</xref:System.Text.UTF32Encoding> </xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF8Encoding> </xref:System.Text.ASCIIEncoding>  Kunt u alternatieve coderingen, maar moet u de <xref:System.IO.Ports.SerialPort.ReadByte%2A>of <xref:System.IO.Ports.SerialPort.Write%2A>methode en de codering zelf uit te voeren.</xref:System.IO.Ports.SerialPort.Write%2A> </xref:System.IO.Ports.SerialPort.ReadByte%2A>       U gebruikt de <xref:System.IO.Ports.SerialPort.GetPortNames%2A>methode voor het ophalen van de geldige poorten voor de huidige computer.</xref:System.IO.Ports.SerialPort.GetPortNames%2A>       Als een object SerialPort wordt geblokkeerd tijdens een leesbewerking, niet afbreken van de thread. In plaats daarvan ofwel de base sluiten streamen of te verwijderen van het object SerialPort."
  example:
  - "The following code example demonstrates the use of the SerialPort class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. Both computers must be executing the program to achieve full functionality of this example.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#10](~/add/codesnippet/cpp/t-system.io.ports.serial_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#10](~/add/codesnippet/csharp/t-system.io.ports.serial_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#10](~/add/codesnippet/visualbasic/t-system.io.ports.serial_1.vb)]"
  syntax:
    content: >-
      [System.Diagnostics.MonitoringDescription("SerialPortDesc")]

      public class SerialPort : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor
  id: '#ctor'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort()
  nameWithType: SerialPort.SerialPort()
  fullName: System.IO.Ports.SerialPort.SerialPort()
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> klasse."
  remarks: "Deze constructor worden de standaardwaarden voor de eigenschap gebruikt als geen zijn opgegeven. Bijvoorbeeld, de <xref:System.IO.Ports.SerialPort.DataBits%2A>eigenschap standaard ingesteld op 8, de <xref:System.IO.Ports.SerialPort.Parity%2A>eigenschap standaard ingesteld op de `None` -opsommingswaarde de <xref:System.IO.Ports.SerialPort.StopBits%2A>eigenschap standaard ingesteld op 1 en de standaardnaam poort COM1.</xref:System.IO.Ports.SerialPort.StopBits%2A> </xref:System.IO.Ports.SerialPort.Parity%2A> </xref:System.IO.Ports.SerialPort.DataBits%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_4_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_4_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_4_1.vb)]"
  syntax:
    content: public SerialPort ();
    parameters: []
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)
  id: '#ctor(System.ComponentModel.IContainer)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(IContainer)
  nameWithType: SerialPort.SerialPort(IContainer)
  fullName: System.IO.Ports.SerialPort.SerialPort(IContainer)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> met behulp van de opgegeven klasse <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> object."
  remarks: "Deze constructor worden de standaardwaarden voor de eigenschap gebruikt als geen zijn opgegeven. Bijvoorbeeld, de <xref:System.IO.Ports.SerialPort.DataBits%2A>eigenschap standaard ingesteld op 8, de <xref:System.IO.Ports.SerialPort.Parity%2A>eigenschap standaard ingesteld op de `None` -opsommingswaarde de <xref:System.IO.Ports.SerialPort.StopBits%2A>eigenschap standaard ingesteld op 1 en de standaardnaam poort COM1.</xref:System.IO.Ports.SerialPort.StopBits%2A> </xref:System.IO.Ports.SerialPort.Parity%2A> </xref:System.IO.Ports.SerialPort.DataBits%2A>"
  syntax:
    content: public SerialPort (System.ComponentModel.IContainer container);
    parameters:
    - id: container
      type: System.ComponentModel.IContainer
      description: "Een interface naar een container."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De opgegeven poort kan niet worden gevonden of geopend."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String)
  nameWithType: SerialPort.SerialPort(String)
  fullName: System.IO.Ports.SerialPort.SerialPort(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> klasse met de naam van de opgegeven poort."
  remarks: "Deze constructor gebruiken voor het maken van een nieuw exemplaar van de <xref:System.IO.Ports.SerialPort>klasse als u wilt de poortnaam opgeven.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName);
    parameters:
    - id: portName
      type: System.String
      description: "De poort te gebruiken (bijvoorbeeld COM1)."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De opgegeven poort kan niet worden gevonden of geopend."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> klasse met behulp van de opgegeven poort naam en baud-snelheid."
  remarks: "Deze constructor gebruiken voor het maken van een nieuw exemplaar van de <xref:System.IO.Ports.SerialPort>klasse wanneer u opgeven wilt, de poortnaam van de en de baud-rate.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate);
    parameters:
    - id: portName
      type: System.String
      description: "De poort te gebruiken (bijvoorbeeld COM1)."
    - id: baudRate
      type: System.Int32
      description: "De baud-rate."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De opgegeven poort kan niet worden gevonden of geopend."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)
  id: '#ctor(System.String,System.Int32,System.IO.Ports.Parity)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32,Parity)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> klasse met de opgegeven poortnaam, baud-rate en pariteit bits."
  remarks: "Deze constructor gebruiken voor het maken van een nieuw exemplaar van de <xref:System.IO.Ports.SerialPort>klasse als u wilt de poortnaam, de baud-rate en het bit pariteit opgeven.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);
    parameters:
    - id: portName
      type: System.String
      description: "De poort te gebruiken (bijvoorbeeld COM1)."
    - id: baudRate
      type: System.Int32
      description: "De baud-rate."
    - id: parity
      type: System.IO.Ports.Parity
      description: "Een van de <xref:System.IO.Ports.SerialPort.Parity*>waarden.</xref:System.IO.Ports.SerialPort.Parity*>"
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De opgegeven poort kan niet worden gevonden of geopend."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  id: '#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32,Parity,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> klasse met behulp van de opgegeven poortnaam, baud-rate, pariteit bits en gegevensbits."
  remarks: "Deze constructor gebruiken voor het maken van een nieuw exemplaar van de <xref:System.IO.Ports.SerialPort>klasse als u wilt opgeven van de naam van de poort, de baud-rate, pariteit bits en gegevensbits.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);
    parameters:
    - id: portName
      type: System.String
      description: "De poort te gebruiken (bijvoorbeeld COM1)."
    - id: baudRate
      type: System.Int32
      description: "De baud-rate."
    - id: parity
      type: System.IO.Ports.Parity
      description: "Een van de <xref:System.IO.Ports.SerialPort.Parity*>waarden.</xref:System.IO.Ports.SerialPort.Parity*>"
    - id: dataBits
      type: System.Int32
      description: "De gegevenswaarde bits."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De opgegeven poort kan niet worden gevonden of geopend."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  id: '#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32,Parity,Int32,StopBits)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> klasse met de opgegeven poortnaam, baud-rate, pariteit bits, gegevensbits en stoppen van bits."
  remarks: "Deze constructor gebruiken voor het maken van een nieuw exemplaar van de <xref:System.IO.Ports.SerialPort>klasse als u wilt de poortnaam, de baud-rate, de pariteit bits, gegevensbits opgeven en stoppen van bits.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);
    parameters:
    - id: portName
      type: System.String
      description: "De poort te gebruiken (bijvoorbeeld COM1)."
    - id: baudRate
      type: System.Int32
      description: "De baud-rate."
    - id: parity
      type: System.IO.Ports.Parity
      description: "Een van de <xref:System.IO.Ports.SerialPort.Parity*>waarden.</xref:System.IO.Ports.SerialPort.Parity*>"
    - id: dataBits
      type: System.Int32
      description: "De gegevenswaarde bits."
    - id: stopBits
      type: System.IO.Ports.StopBits
      description: "Een van de <xref:System.IO.Ports.SerialPort.StopBits*>waarden.</xref:System.IO.Ports.SerialPort.StopBits*>"
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De opgegeven poort kan niet worden gevonden of geopend."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BaseStream
  id: BaseStream
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BaseStream
  nameWithType: SerialPort.BaseStream
  fullName: System.IO.Ports.SerialPort.BaseStream
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Haalt de onderliggende <xref:System.IO.Stream>object voor een <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> object.</xref:System.IO.Stream>"
  remarks: "Deze eigenschap gebruiken voor expliciete asynchrone i/o-bewerkingen of het <xref:System.IO.Ports.SerialPort>object met een <xref:System.IO.Stream>wrapperklasse zoals <xref:System.IO.StreamWriter>.</xref:System.IO.StreamWriter> </xref:System.IO.Stream> </xref:System.IO.Ports.SerialPort> doorgeven       Een seriële poort BaseStream eigenschap retourneert een object dat is afgeleid van de samenvatting openen <xref:System.IO.Stream>klasse en implementeert lezen en schrijven van methoden met behulp van de prototypen overgenomen van de <xref:System.IO.Stream>klasse: <xref:System.IO.Stream.BeginRead%2A>, <xref:System.IO.Stream.BeginWrite%2A>, <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, <xref:System.IO.Stream.Write%2A>, en <xref:System.IO.Stream.WriteByte%2A>.</xref:System.IO.Stream.WriteByte%2A> </xref:System.IO.Stream.Write%2A> </xref:System.IO.Stream.ReadByte%2A> </xref:System.IO.Stream.Read%2A> </xref:System.IO.Stream.BeginWrite%2A> </xref:System.IO.Stream.BeginRead%2A> </xref:System.IO.Stream> </xref:System.IO.Stream> Deze methoden kunnen nuttig zijn wanneer u een ingepakte seriële resource wordt doorgegeven aan een <xref:System.IO.Stream>wrapper-klasse.</xref:System.IO.Stream>       Vanwege de inaccessibility van de ingepakte bestandsingang het <xref:System.IO.Stream.Length%2A>en <xref:System.IO.Stream.Position%2A>Eigenschappen worden niet ondersteund, en de <xref:System.IO.Stream.Seek%2A>en <xref:System.IO.Stream.SetLength%2A>methoden worden niet ondersteund.</xref:System.IO.Stream.SetLength%2A> </xref:System.IO.Stream.Seek%2A> </xref:System.IO.Stream.Position%2A> </xref:System.IO.Stream.Length%2A>"
  syntax:
    content: public System.IO.Stream BaseStream { get; }
    return:
      type: System.IO.Stream
      description: "Een <xref:System.IO.Stream>object.</xref:System.IO.Stream>"
  overload: System.IO.Ports.SerialPort.BaseStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De stroom is gesloten. Dit kan gebeuren als de <> </> *> methode is niet aangeroepen of de <> </> *> methode is aangeroepen."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De stroom is in een toepassing .NET Compact Framework en een van de volgende methoden is aangeroepen: <> </> *> <> </> *> <> </> *> <> </> *> het .NET Compact Framework biedt geen ondersteuning voor het asynchrone model met base stromen."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BaudRate
  id: BaudRate
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BaudRate
  nameWithType: SerialPort.BaudRate
  fullName: System.IO.Ports.SerialPort.BaudRate
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Opgehaald of ingesteld van de seriële baud-rate."
  remarks: "De baud-rate moet worden ondersteund door de gebruiker serial-stuurprogramma. De standaardwaarde is 9600 bits per seconde (bps)."
  example:
  - "The following example shows how to set the BaudRate property to `9600`.  \n  \n [!code-cs[System.IO.Ports.SerialPort#20](~/add/codesnippet/csharp/p-system.io.ports.serial_3_1.cs)]\n [!code-cpp[System.IO.Ports.SerialPort#20](~/add/codesnippet/cpp/p-system.io.ports.serial_3_1.cpp)]\n [!code-vb[System.IO.Ports.SerialPort#20](~/add/codesnippet/visualbasic/p-system.io.ports.serial_3_1.vb)]  \n  \n The following example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_3_2.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_3_2.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_3_2.vb)]"
  syntax:
    content: public int BaudRate { get; set; }
    return:
      type: System.Int32
      description: "De baud-rate."
  overload: System.IO.Ports.SerialPort.BaudRate*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De opgegeven baud-rate is kleiner dan of gelijk zijn aan nul of groter is dan de maximale toegestane baud-rate van het apparaat."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BreakState
  id: BreakState
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BreakState
  nameWithType: SerialPort.BreakState
  fullName: System.IO.Ports.SerialPort.BreakState
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Opgehaald of ingesteld van het signaal break-status."
  remarks: "De status van de break-signaal treedt op wanneer een overdracht is onderbroken en de regel wordt geplaatst in een break-status (alle laag, geen stop-bits) tot vrijgegeven. Als u wilt een break-status invoeren, kunt u deze eigenschap instellen op `true`. Als de poort al in een break-status is, instellen van deze eigenschap opnieuw aan bij `true` resulteert niet in een uitzondering. Het is niet mogelijk om te schrijven naar de <xref:System.IO.Ports.SerialPort>object terwijl BreakState `true`.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public bool BreakState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de poort in een break-status is anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.BreakState*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De stroom is gesloten. Dit kan gebeuren als de <> </> *> methode is niet aangeroepen of de <> </> *> methode is aangeroepen."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BytesToRead
  id: BytesToRead
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BytesToRead
  nameWithType: SerialPort.BytesToRead
  fullName: System.IO.Ports.SerialPort.BytesToRead
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Hiermee haalt het aantal bytes van gegevens in de ontvangstbuffer die is."
  remarks: "De ontvangstbuffer omvat het seriële stuurprogramma ontvangstbuffer, evenals een interne buffer het <xref:System.IO.Ports.SerialPort>object zelf.</xref:System.IO.Ports.SerialPort>       Omdat de eigenschap BytesToRead zowel vertegenwoordigt de <xref:System.IO.Ports.SerialPort>en de buffer Windows gemaakt in een buffer, kan een waarde groter dan wel terugkeren de <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>eigenschap aanduiden, waarbij alleen de Windows-gemaakt buffer vertegenwoordigt.</xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> </xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public int BytesToRead { get; }
    return:
      type: System.Int32
      description: "Het aantal bytes aan gegevens in de ontvangstbuffer die is."
  overload: System.IO.Ports.SerialPort.BytesToRead*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De poort is niet geopend."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BytesToWrite
  id: BytesToWrite
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BytesToWrite
  nameWithType: SerialPort.BytesToWrite
  fullName: System.IO.Ports.SerialPort.BytesToWrite
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Hiermee haalt het aantal bytes van gegevens in de verzendbuffer."
  remarks: "De verzendbuffer omvat het seriële stuurprogramma verzendbuffer, evenals een interne buffer het <xref:System.IO.Ports.SerialPort>object zelf.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public int BytesToWrite { get; }
    return:
      type: System.Int32
      description: "Het aantal bytes aan gegevens in de verzendbuffer."
  overload: System.IO.Ports.SerialPort.BytesToWrite*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De poort is een ongeldige status."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De stroom is gesloten. Dit kan gebeuren als de <> </> *> methode is niet aangeroepen of de <> </> *> methode is aangeroepen."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.CDHolding
  id: CDHolding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: CDHolding
  nameWithType: SerialPort.CDHolding
  fullName: System.IO.Ports.SerialPort.CDHolding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Hiermee wordt de status van de regel draagsignaaldetectie voor de poort."
  remarks: "Deze eigenschap kan worden gebruikt voor het bewaken van de status van de provider detectie-regel voor een poort. Er is geen carrier geeft meestal aan dat de ontvanger heeft opgehangen en de provider is verwijderd."
  syntax:
    content: public bool CDHolding { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de provider wordt gedetecteerd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.CDHolding*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De stroom is gesloten. Dit kan gebeuren als de <> </> *> methode is niet aangeroepen of de <> </> *> methode is aangeroepen."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Close
  id: Close
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Close()
  nameWithType: SerialPort.Close()
  fullName: System.IO.Ports.SerialPort.Close()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "De poortverbinding wordt gesloten, wordt de <xref:System.IO.Ports.SerialPort.IsOpen*>eigenschap <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, en verwijdert van de interne <xref:System.IO.Stream>object.</xref:System.IO.Stream> </xref:System.IO.Ports.SerialPort.IsOpen*>"
  remarks: "Deze methode aanroept, sluit u de <xref:System.IO.Ports.SerialPort>object en Hiermee wist u de beide ontvangen en verzendbuffers.</xref:System.IO.Ports.SerialPort> Deze methode roept de <xref:System.ComponentModel.Component.Dispose?displayProperty=fullName>methode, waarmee de beveiligde roept <xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=fullName>methode met de `disposing` parameter ingesteld op `true`.</xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=fullName> </xref:System.ComponentModel.Component.Dispose?displayProperty=fullName>       De aanbevolen procedure voor elke toepassing moet worden gewacht op een bepaalde tijdsduur na de Close-methode aanroepen voordat u probeert aan te roepen is de <xref:System.IO.Ports.SerialPort.Open%2A>methode, als de poort kan niet worden gesloten onmiddellijk.</xref:System.IO.Ports.SerialPort.Open%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_5_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_5_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_5_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.IO.Ports.SerialPort.Close*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.CtsHolding
  id: CtsHolding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: CtsHolding
  nameWithType: SerialPort.CtsHolding
  fullName: System.IO.Ports.SerialPort.CtsHolding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Hiermee haalt u de status van de regel wissen wilt verzenden."
  remarks: "De regel wissen to Send (CTS) wordt gebruikt in de aanvraag voor het verzenden/wissen (RTS/CTS) hardwarehandshaking verzenden. De lijn voor CTS een query wordt uitgevoerd door een poort voordat gegevens worden verzonden."
  syntax:
    content: public bool CtsHolding { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de regel wissen to Send wordt gedetecteerd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.CtsHolding*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De stroom is gesloten. Dit kan gebeuren als de <> </> *> methode is niet aangeroepen of de <> </> *> methode is aangeroepen."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DataBits
  id: DataBits
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DataBits
  nameWithType: SerialPort.DataBits
  fullName: System.IO.Ports.SerialPort.DataBits
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Opgehaald of ingesteld van de standaard lengte gegevensbits per byte."
  remarks: "Het bereik van waarden voor deze eigenschap is van 5 tot en met 8. De standaardwaarde is 8."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_7_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_7_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_7_1.vb)]"
  syntax:
    content: public int DataBits { get; set; }
    return:
      type: System.Int32
      description: "De lengte van bits."
  overload: System.IO.Ports.SerialPort.DataBits*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De bits-waarde is kleiner dan 5 of meer dan 8."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DataReceived
  id: DataReceived
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DataReceived
  nameWithType: SerialPort.DataReceived
  fullName: System.IO.Ports.SerialPort.DataReceived
  type: Event
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Hiermee wordt aangegeven dat de gegevens zijn ontvangen via een poort die wordt vertegenwoordigd door de <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> object."
  remarks: "Data-gebeurtenissen kunnen zijn veroorzaakt door een van de items in de <xref:System.IO.Ports.SerialData>opsomming.</xref:System.IO.Ports.SerialData> Omdat het besturingssysteem of u bepaalt wilt genereren van deze gebeurtenis of niet, kunnen niet alle pariteitsfouten worden gerapporteerd.       De gebeurtenis DataReceived ook treedt op als een Eof-teken wordt ontvangen, ongeacht het aantal bytes in de interne invoerbuffer en de waarde van de <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A>eigenschap.</xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A>       <xref:System.IO.Ports.SerialPort.PinChanged>, DataReceived, en <xref:System.IO.Ports.SerialPort.ErrorReceived>gebeurtenissen volgorde kunnen worden aangeroepen en kan er een kleine vertraging tussen wanneer de onderliggende stroom rapporteert de fout en wanneer de gebeurtenis-handler wordt uitgevoerd.</xref:System.IO.Ports.SerialPort.ErrorReceived></xref:System.IO.Ports.SerialPort.PinChanged> Slechts één gebeurtenis-handler kan worden uitgevoerd op een tijdstip.       De gebeurtenis DataReceived kan niet worden gegarandeerd wordt gegenereerd voor elke ontvangen byte. Gebruik de <xref:System.IO.Ports.SerialPort.BytesToRead%2A>eigenschap om te bepalen hoeveel gegevens nog in de buffer worden gelezen.</xref:System.IO.Ports.SerialPort.BytesToRead%2A>       De gebeurtenis DataReceived optreedt op een secundaire thread wanneer gegevens worden ontvangen van de <xref:System.IO.Ports.SerialPort>object.</xref:System.IO.Ports.SerialPort> Omdat deze gebeurtenis wordt geactiveerd op een secundaire thread en niet de hoofdthread, probeert te wijzigen van een aantal elementen in de hoofdthread, zoals UI-elementen, een thread-uitzondering kan verhogen. Als het nodig is om te wijzigen van de elementen in het hoofdvenster <xref:System.Windows.Forms.Form>of <xref:System.Windows.Forms.Control>, post wijzigingsaanvragen terug met behulp van <xref:System.Windows.Forms.Control.Invoke%2A>, die het werk op de juiste thread doet.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Form>       Zie voor meer informatie over het verwerken van gebeurtenissen [gebeurtenissen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example adds a <xref:System.IO.Ports.SerialDataReceivedEventHandler> to DataReceived to read all the available data received on the COM1 port. Note that to test this code it is necessary to have hardware attached to COM1 that will send data.  \n  \n [!code-cs[System.IO.Ports.SerialPort#06](~/add/codesnippet/csharp/e-system.io.ports.serial_1.cs)]\n [!code-cpp[System.IO.Ports.SerialPort#06](~/add/codesnippet/cpp/e-system.io.ports.serial_1.cpp)]\n [!code-vb[System.IO.Ports.SerialPort#06](~/add/codesnippet/visualbasic/e-system.io.ports.serial_1.vb)]"
  syntax:
    content: public event System.IO.Ports.SerialDataReceivedEventHandler DataReceived;
    return:
      type: System.IO.Ports.SerialDataReceivedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DiscardInBuffer
  id: DiscardInBuffer
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DiscardInBuffer()
  nameWithType: SerialPort.DiscardInBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardInBuffer()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ontvangstbuffer verwijderingen gegevens uit het seriële stuurprogramma."
  remarks: 'Deze methode is gelijk aan de volgende code in de Visual Basic: `MSComm1.InBufferCount = 0`. Hiermee wist u de ontvangstbuffer, maar heeft geen invloed op de verzendbuffer.'
  syntax:
    content: public void DiscardInBuffer ();
    parameters: []
  overload: System.IO.Ports.SerialPort.DiscardInBuffer*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De stroom is gesloten. Dit kan gebeuren als de <> </> *> methode is niet aangeroepen of de <> </> *> methode is aangeroepen."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DiscardNull
  id: DiscardNull
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DiscardNull
  nameWithType: SerialPort.DiscardNull
  fullName: System.IO.Ports.SerialPort.DiscardNull
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of null-bytes verzonden tussen de poort en de ontvangstbuffer worden genegeerd."
  remarks: "Deze waarde moet normaal gesproken worden ingesteld op `false`, met name voor binaire gegevensoverdrachten.  Deze eigenschap instelt op `true` kan leiden tot onverwachte resultaten voor bytes UTF32 - en UTF16-codering."
  syntax:
    content: public bool DiscardNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als null-bytes genegeerd. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.DiscardNull*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De stroom is gesloten. Dit kan gebeuren als de <> </> *> methode is niet aangeroepen of de <> </> *> methode is aangeroepen."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DiscardOutBuffer
  id: DiscardOutBuffer
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DiscardOutBuffer()
  nameWithType: SerialPort.DiscardOutBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardOutBuffer()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Verzendbuffer verwijderingen gegevens uit het seriële stuurprogramma."
  remarks: 'Deze methode is gelijk aan de volgende code in de Visual Basic: `MSComm1.OutBufferCount = 0`. Hiermee wist u de verzendbuffer worden verwijderd, maar heeft geen invloed op de ontvangstbuffer.'
  syntax:
    content: public void DiscardOutBuffer ();
    parameters: []
  overload: System.IO.Ports.SerialPort.DiscardOutBuffer*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De stroom is gesloten. Dit kan gebeuren als de <> </> *> methode is niet aangeroepen of de <> </> *> methode is aangeroepen."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SerialPort.Dispose(Boolean)
  fullName: System.IO.Ports.SerialPort.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Heft de niet-beheerde bronnen worden gebruikt door de <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> en eventueel de beheerde bronnen vrij."
  remarks: "Deze methode wordt aangeroepen door het publiek <xref:System.ComponentModel.Component.Dispose%2A>methode en de <xref:System.Object.Finalize%2A>methode.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> <xref:System.ComponentModel.Component.Dispose%2A>de beveiligde methode Dispose met roept de `disposing` parameter ingesteld op `true`.</xref:System.ComponentModel.Component.Dispose%2A> <xref:System.Object.Finalize%2A>roept Dispose met `disposing` ingesteld op `false`.</xref:System.Object.Finalize%2A>       Wanneer de `disposing` parameter `true`, deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit <xref:System.IO.Ports.SerialPort>verwijzingen.</xref:System.IO.Ports.SerialPort> Deze methode roept de <xref:System.ComponentModel.Component.Dispose%2A>methode van elk object waarnaar wordt verwezen.</xref:System.ComponentModel.Component.Dispose%2A>       Deze methode leegmaakacties en sluit u het stream-object in de <xref:System.IO.Ports.SerialPort.BaseStream%2A>eigenschap.</xref:System.IO.Ports.SerialPort.BaseStream%2A>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om alleen niet-beheerde bronnen vrij te geven."
  overload: System.IO.Ports.SerialPort.Dispose*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DsrHolding
  id: DsrHolding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DsrHolding
  nameWithType: SerialPort.DsrHolding
  fullName: System.IO.Ports.SerialPort.DsrHolding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Hiermee haalt u de status van het signaal gegevensset Ready (DSR)."
  remarks: "Deze eigenschap wordt gebruikt in de gegevensset gereed/Data Terminal Ready (DSR/DTR) handshaking. Het signaal gegevensset Ready (DSR) meestal wordt verzonden door een modem op een poort om aan te geven dat deze gereed voor gegevensoverdracht of ontvangst van gegevens is."
  syntax:
    content: public bool DsrHolding { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een gegevensset gereed signaal is verzonden naar de poort; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.DsrHolding*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De stroom is gesloten. Dit kan gebeuren als de <> </> *> methode is niet aangeroepen of de <> </> *> methode is aangeroepen."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DtrEnable
  id: DtrEnable
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DtrEnable
  nameWithType: SerialPort.DtrEnable
  fullName: System.IO.Ports.SerialPort.DtrEnable
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Opgehaald of ingesteld van een waarde waarmee de DTR Data Terminal Ready ()-signaal tijdens seriële communicatie."
  remarks: "DTR Data Terminal Ready () wordt gewoonlijk ingeschakeld tijdens XON/XOFF software handshaking en de aanvraag te verzenden/wissen om de hardware-handshaking (RTS/CTS) en modem communicatie te verzenden."
  syntax:
    content: public bool DtrEnable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om in te schakelen DTR Data Terminal Ready (); anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.DtrEnable*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Encoding
  id: Encoding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Encoding
  nameWithType: SerialPort.Encoding
  fullName: System.IO.Ports.SerialPort.Encoding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Opgehaald of ingesteld van de bytecodering voor vóór en na verzending conversie van tekst."
  syntax:
    content: public System.Text.Encoding Encoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "Een <xref:System.Text.Encoding>object.</xref:System.Text.Encoding> De standaardwaarde is <xref:System.Text.ASCIIEncoding>.</xref:System.Text.ASCIIEncoding>"
  overload: System.IO.Ports.SerialPort.Encoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De eigenschap Encoding is ingesteld op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De eigenschap Encoding is ingesteld op een codering die geen <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, <xref:System.Text.UnicodeEncoding>, wordt er één van de Windows enkele byte coderingen, of een van de Windows-double-byte-coderingen.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.Text.ASCIIEncoding>"
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ErrorReceived
  id: ErrorReceived
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ErrorReceived
  nameWithType: SerialPort.ErrorReceived
  fullName: System.IO.Ports.SerialPort.ErrorReceived
  type: Event
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Hiermee wordt aangegeven dat er een fout is opgetreden met een poort die wordt vertegenwoordigd door een <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> object."
  remarks: "Foutgebeurtenissen kunnen zijn veroorzaakt door een van de items in de <xref:System.IO.Ports.SerialError>opsomming.</xref:System.IO.Ports.SerialError> Omdat het besturingssysteem of u bepaalt wilt genereren van deze gebeurtenis of niet, kunnen niet alle pariteitsfouten worden gerapporteerd.       <xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, ErrorReceived gebeurtenissen volgorde kunnen worden aangeroepen en kan er een kleine vertraging tussen wanneer de onderliggende stroom rapporteert de fout en wanneer code kunt wanneer de gebeurtenis-handler wordt uitgevoerd.</xref:System.IO.Ports.SerialPort.DataReceived></xref:System.IO.Ports.SerialPort.PinChanged> Slechts één gebeurtenis-handler kan worden uitgevoerd op een tijdstip.       Als een pariteitsfout in de afsluitende byte van een stream optreedt, wordt een extra byte worden toegevoegd aan de invoerbuffer met een waarde van 126.       De gebeurtenis ErrorReceived optreedt op een secundaire thread wanneer een fout wordt ontvangen van de <xref:System.IO.Ports.SerialPort>object.</xref:System.IO.Ports.SerialPort> Omdat deze gebeurtenis wordt geactiveerd op een secundaire thread en niet de hoofdthread, probeert te wijzigen van een aantal elementen in de hoofdthread, zoals UI-elementen, een thread-uitzondering kan verhogen. Als het nodig is om te wijzigen van de elementen in het hoofdvenster <xref:System.Windows.Forms.Form>of <xref:System.Windows.Forms.Control>, post wijzigingsaanvragen terug met behulp van <xref:System.Windows.Forms.Control.Invoke%2A>, die het werk op de juiste thread doet.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Form>       Zie voor meer informatie over het verwerken van gebeurtenissen [gebeurtenissen](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.IO.Ports.SerialErrorReceivedEventHandler ErrorReceived;
    return:
      type: System.IO.Ports.SerialErrorReceivedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.GetPortNames
  id: GetPortNames
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: GetPortNames()
  nameWithType: SerialPort.GetPortNames()
  fullName: System.IO.Ports.SerialPort.GetPortNames()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Hiermee haalt u een matrix met namen van de seriële poort voor de huidige computer."
  remarks: "The order of port names returned from GetPortNames is not specified.  \n  \n Use the GetPortNames method to query the current computer for a list of valid serial port names. For example, you can use this method to determine whether COM1 and COM2 are valid serial ports for the current computer.  \n  \n The port names are obtained from the system registry (for example, HKEY_LOCAL_MACHINE\\HARDWARE\\DEVICEMAP\\SERIALCOMM). If the registry contains stale or otherwise incorrect data then the GetPortNames method will return incorrect data."
  example:
  - "The following code example uses the GetPortNames method to display serial port names to the console.  \n  \n [!code-cs[IO.Ports.GetPortNames#1](~/add/codesnippet/csharp/m-system.io.ports.serial_3_1.cs)]\n [!code-cpp[IO.Ports.GetPortNames#1](~/add/codesnippet/cpp/m-system.io.ports.serial_3_1.cpp)]\n [!code-vb[IO.Ports.GetPortNames#1](~/add/codesnippet/visualbasic/m-system.io.ports.serial_3_1.vb)]"
  syntax:
    content: public static string[] GetPortNames ();
    parameters: []
    return:
      type: System.String[]
      description: "Een matrix met namen van de seriële poort voor de huidige computer."
  overload: System.IO.Ports.SerialPort.GetPortNames*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "De namen van de seriële poort kunnen niet worden opgevraagd."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Handshake
  id: Handshake
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Handshake
  nameWithType: SerialPort.Handshake
  fullName: System.IO.Ports.SerialPort.Handshake
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Opgehaald of ingesteld van het handshaking-protocol voor de seriële poort overdracht van gegevens met behulp van een waarde van <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref>."
  remarks: "Wanneer handshaking wordt gebruikt, het apparaat moet worden verbonden met de <xref:System.IO.Ports.SerialPort>object is geïnstrueerd om te stoppen met het verzenden van gegevens als er ten minste (<xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>-1024) bytes in de buffer.</xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> </xref:System.IO.Ports.SerialPort> Het apparaat is geïnstrueerd om te beginnen met het verzenden van gegevens opnieuw wanneer er 1024 of minder bytes in de buffer. Als het apparaat gegevens in blokken die groter dan 1024 bytes verzendt zijn, kan dit ertoe leiden dat de buffer overloop.       Als de eigenschap Handshake is ingesteld op <xref:System.IO.Ports.Handshake>en <xref:System.IO.Ports.SerialPort.CtsHolding%2A>is ingesteld op `false`, het teken XOff wordt niet verzonden.</xref:System.IO.Ports.SerialPort.CtsHolding%2A> </xref:System.IO.Ports.Handshake> Als <xref:System.IO.Ports.SerialPort.CtsHolding%2A>wordt vervolgens ingesteld op `true`, meer gegevens moeten worden verzonden, voordat het teken XOff wordt verzonden.</xref:System.IO.Ports.SerialPort.CtsHolding%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_0_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_0_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_0_1.vb)]"
  syntax:
    content: public System.IO.Ports.Handshake Handshake { get; set; }
    return:
      type: System.IO.Ports.Handshake
      description: "Een van de <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> waarden. De standaardwaarde is <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.Handshake*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven waarde is geen geldige waarde in de <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> opsomming."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.InfiniteTimeout
  id: InfiniteTimeout
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: InfiniteTimeout
  nameWithType: SerialPort.InfiniteTimeout
  fullName: System.IO.Ports.SerialPort.InfiniteTimeout
  type: Field
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Hiermee wordt aangegeven dat er geen time-out moet worden uitgevoerd."
  remarks: "Deze waarde wordt gebruikt met de <xref:System.IO.Ports.SerialPort.ReadTimeout%2A>en <xref:System.IO.Ports.SerialPort.WriteTimeout%2A>Eigenschappen.</xref:System.IO.Ports.SerialPort.WriteTimeout%2A> </xref:System.IO.Ports.SerialPort.ReadTimeout%2A>"
  syntax:
    content: public const int InfiniteTimeout = -1;
    return:
      type: System.Int32
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.IsOpen
  id: IsOpen
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: IsOpen
  nameWithType: SerialPort.IsOpen
  fullName: System.IO.Ports.SerialPort.IsOpen
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Hiermee wordt een waarde die de status open of closed van de <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> object."
  remarks: "De eigenschap IsOpen wordt bijgehouden of de poort geopend voor gebruik door de aanroeper is, niet of de poort is geopend door een toepassing op de machine."
  syntax:
    content: public bool IsOpen { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de seriële poort geopend is. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.IsOpen*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De doorgegeven waarde voor IsOpen is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De doorgegeven waarde voor IsOpen is een lege tekenreeks (&quot;&quot;)."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.NewLine
  id: NewLine
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: NewLine
  nameWithType: SerialPort.NewLine
  fullName: System.IO.Ports.SerialPort.NewLine
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Opgehaald of ingesteld van de waarde die het einde van een aanroep naar interpreteren de <> </> *> en <> </> *> methoden."
  remarks: "Deze eigenschap bepaalt welke waarde (byte) definieert het einde van een regel voor de <xref:System.IO.Ports.SerialPort.ReadLine%2A>en <xref:System.IO.Ports.SerialPort.WriteLine%2A>methoden.</xref:System.IO.Ports.SerialPort.WriteLine%2A> </xref:System.IO.Ports.SerialPort.ReadLine%2A> De waarde van het einde van regel is standaard <xref:System.Environment.NewLine%2A>.</xref:System.Environment.NewLine%2A> U zou dit wijzigen in een andere waarde als het desbetreffende seriële apparaat dat u met werkt een andere waarde voor hetzelfde doel gebruikt."
  syntax:
    content: public string NewLine { get; set; }
    return:
      type: System.String
      description: "Een waarde die het einde van een regel vertegenwoordigt. De standaardwaarde is een nieuwe regel, <xref:System.Environment.NewLine*>.</xref:System.Environment.NewLine*>"
  overload: System.IO.Ports.SerialPort.NewLine*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De eigenschapswaarde is leeg."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De waarde van de eigenschap <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Open
  id: Open
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Open()
  nameWithType: SerialPort.Open()
  fullName: System.IO.Ports.SerialPort.Open()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Hiermee opent u een nieuwe verbinding voor de seriële poort."
  remarks: "Slechts één open verbinding per kan zijn <xref:System.IO.Ports.SerialPort>object.</xref:System.IO.Ports.SerialPort>       De aanbevolen procedure voor elke toepassing moet worden gewacht op een bepaalde hoeveelheid tijd na het aanroepen is de <xref:System.IO.Ports.SerialPort.Close%2A>methode voordat u de methode Open aanroepen als de poort niet onmiddellijk afgesloten.</xref:System.IO.Ports.SerialPort.Close%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_2_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_2_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_2_1.vb)]"
  syntax:
    content: public void Open ();
    parameters: []
  overload: System.IO.Ports.SerialPort.Open*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Access is denied to the port.  \n  \n \\- or -  \n  \n The current process, or another process on the system, already has the specified COM port open either by a <xref href=\"System.IO.Ports.SerialPort\"></xref> instance or in unmanaged code."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Een of meer van de eigenschappen voor dit exemplaar zijn ongeldig. Bijvoorbeeld, de <> </> *>, <> </> *>, of <> </> *> eigenschappen zijn niet geldig waarden; de <> </> *> is kleiner dan of gelijk zijn aan nul; de <> </> *> of <> </> *> is kleiner dan nul en is geen eigenschap <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The port name does not begin with \"COM\".  \n  \n \\- or -  \n  \n The file type of the port is not supported."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De opgegeven poort voor het huidige exemplaar van de <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> is al geopend."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Parity
  id: Parity
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Parity
  nameWithType: SerialPort.Parity
  fullName: System.IO.Ports.SerialPort.Parity
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Opgehaald of ingesteld van het protocol pariteit controleren."
  remarks: "Pariteit is een foutcontrole procedure waarin het aantal 1s moet altijd hetzelfde zijn, even of oneven: voor elke groep bits die zonder fouten is verzonden. Bij de communicatie naar modems is pariteit vaak een van de parameters die moeten worden overeengekomen partijen verzenden en ontvangen van partijen voordat gegevens kunnen worden geplaatst.       Als een pariteitsfout in de afsluitende byte van een stream optreedt, wordt een extra byte worden toegevoegd aan de invoerbuffer met een waarde van 126."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_6_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_6_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_6_1.vb)]"
  syntax:
    content: public System.IO.Ports.Parity Parity { get; set; }
    return:
      type: System.IO.Ports.Parity
      description: "Een van de opsommingswaarden die staat voor het controleren van de pariteit-protocol. De standaardwaarde is <xref href=&quot;System.IO.Ports.Parity&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.Parity*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven waarde voor pariteit is geen geldige waarde in de <xref href=&quot;System.IO.Ports.Parity&quot;> </xref> opsomming."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ParityReplace
  id: ParityReplace
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ParityReplace
  nameWithType: SerialPort.ParityReplace
  fullName: System.IO.Ports.SerialPort.ParityReplace
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Opgehaald of ingesteld van de byte die ongeldige bytes in een gegevensstroom vervangt wanneer een pariteitsfout optreedt."
  remarks: "Als de waarde is ingesteld op null-teken, is pariteit vervanging uitgeschakeld."
  syntax:
    content: public byte ParityReplace { get; set; }
    return:
      type: System.Byte
      description: "Een byte ter vervanging van ongeldige bytes."
  overload: System.IO.Ports.SerialPort.ParityReplace*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.PinChanged
  id: PinChanged
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: PinChanged
  nameWithType: SerialPort.PinChanged
  fullName: System.IO.Ports.SerialPort.PinChanged
  type: Event
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Hiermee wordt aangegeven dat een niet-gegevensgebieden signaalgebeurtenis is opgetreden op de poort die wordt vertegenwoordigd door de <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> object."
  remarks: "Seriële pincode gewijzigd gebeurtenissen kunnen zijn veroorzaakt door een van de items in de <xref:System.IO.Ports.SerialPinChange>opsomming.</xref:System.IO.Ports.SerialPinChange> Omdat het besturingssysteem of u bepaalt wilt genereren van deze gebeurtenis of niet, kunnen niet alle pariteitsfouten worden gerapporteerd. Als onderdeel van de gebeurtenis, is de nieuwe waarde van de pincode ingesteld.       De PinChanged gebeurtenis treedt op wanneer een <xref:System.IO.Ports.SerialPort>object voert de <xref:System.IO.Ports.SerialPort.BreakState%2A>, maar niet wanneer de poort de <xref:System.IO.Ports.SerialPort.BreakState%2A>.</xref:System.IO.Ports.SerialPort.BreakState%2A> verlaat</xref:System.IO.Ports.SerialPort.BreakState%2A> </xref:System.IO.Ports.SerialPort> Dit gedrag is niet van toepassing op andere waarden in de <xref:System.IO.Ports.SerialPinChange>opsomming.</xref:System.IO.Ports.SerialPinChange>       PinChanged, <xref:System.IO.Ports.SerialPort.DataReceived>, en <xref:System.IO.Ports.SerialPort.ErrorReceived>gebeurtenissen volgorde kunnen worden aangeroepen en kan er een kleine vertraging tussen wanneer de onderliggende stroom rapporteert de fout en wanneer de gebeurtenis-handler wordt uitgevoerd.</xref:System.IO.Ports.SerialPort.ErrorReceived> </xref:System.IO.Ports.SerialPort.DataReceived> Slechts één gebeurtenis-handler kan worden uitgevoerd op een tijdstip.       De gebeurtenis PinChanged optreedt op een secundaire thread. Omdat deze gebeurtenis wordt geactiveerd op een secundaire thread en niet de hoofdthread, probeert te wijzigen van een aantal elementen in de hoofdthread, zoals UI-elementen, een thread-uitzondering kan verhogen. Als het nodig is om te wijzigen van de elementen in het hoofdvenster <xref:System.Windows.Forms.Form>of <xref:System.Windows.Forms.Control>, post wijzigingsaanvragen terug met behulp van <xref:System.Windows.Forms.Control.Invoke%2A>, die het werk op de juiste thread doet.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Form>       Zie voor meer informatie over het verwerken van gebeurtenissen [gebeurtenissen](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.IO.Ports.SerialPinChangedEventHandler PinChanged;
    return:
      type: System.IO.Ports.SerialPinChangedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.PortName
  id: PortName
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: PortName
  nameWithType: SerialPort.PortName
  fullName: System.IO.Ports.SerialPort.PortName
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Opgehaald of ingesteld van de poort voor communicatie, inclusief maar niet beperkt tot alle beschikbare COM-poorten."
  remarks: "Een lijst met geldige poortnamen kan worden verkregen met de <xref:System.IO.Ports.SerialPort.GetPortNames%2A>methode.</xref:System.IO.Ports.SerialPort.GetPortNames%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_4_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_4_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_4_1.vb)]"
  syntax:
    content: public string PortName { get; set; }
    return:
      type: System.String
      description: "De communicatiepoort. De standaardwaarde is COM1."
  overload: System.IO.Ports.SerialPort.PortName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The PortName property was set to a value with a length of zero.  \n  \n -or-  \n  \n The PortName property was set to a value that starts with \"\\\\\\\\\".  \n  \n -or-  \n  \n The port name was not valid."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De PortName-eigenschap is ingesteld op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De opgegeven poort is geopend."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: SerialPort.Read(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Een aantal bytes van leest de <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> invoerbuffer en schrijft deze bytes naar een bytematrix bij de opgegeven offset."
  remarks: "Als het nodig is om over te schakelen tussen het lezen van tekst en binaire gegevens lezen uit de stroom is, selecteert u een protocol dat zorgvuldig de grens tussen tekst en binaire gegevens definieert, zoals handmatig bytes zijn gelezen en de gegevens decoderen.       Omdat de <xref:System.IO.Ports.SerialPort>klasse buffert gegevens en de stream in de <xref:System.IO.Ports.SerialPort.BaseStream%2A>heeft geen eigenschap, de twee conflicteren over hoeveel bytes beschikbaar zijn voor lezen.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  De <xref:System.IO.Ports.SerialPort.BytesToRead%2A>eigenschap kan erop wijzen dat er bytes zijn lezen, maar deze bytes mogelijk niet toegankelijk is voor de stroom die is opgenomen in de <xref:System.IO.Ports.SerialPort.BaseStream%2A>eigenschap omdat ze hebben zijn gebufferd tot de <xref:System.IO.Ports.SerialPort>klasse</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>       Andere bewerkingen worden niet door de methode Read worden geblokkeerd wanneer het aantal bytes gelezen is gelijk aan `count` maar er nog steeds ongelezen bytes beschikbaar op de seriële poort zijn."
  syntax:
    content: public int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "De bytematrix die de invoer voor schrijven."
    - id: offset
      type: System.Int32
      description: "De verschuiving in `buffer` waarmee de bytes schrijven."
    - id: count
      type: System.Int32
      description: "Het maximum aantal bytes te lezen. Minder bytes zijn gelezen als `count` is groter dan het aantal bytes in de invoerbuffer."
    return:
      type: System.Int32
      description: "Het aantal bytes dat is gelezen."
  overload: System.IO.Ports.SerialPort.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De doorgegeven buffer is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De opgegeven poort is niet geopend."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> offset </code> of <code> count </code> parameters zijn buiten een geldig gebied van de <code> buffer </code> worden doorgegeven. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>plus <code>count</code> groter is dan de lengte van de <code>buffer</code>."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "Er zijn geen bytes beschikbaar om te lezen."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)
  id: Read(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Read(Char[],Int32,Int32)
  nameWithType: SerialPort.Read(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Leest een aantal tekens vanaf de <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> invoerbuffer en schrijft deze naar een matrix met tekens op een opgegeven offset."
  remarks: "Gebruik deze methode voor het lezen van tekens van de seriële poort.       Als het nodig is om over te schakelen tussen het lezen van tekst en binaire gegevens lezen uit de stroom is, selecteert u een protocol dat zorgvuldig de grens tussen tekst en binaire gegevens definieert, zoals handmatig bytes zijn gelezen en de gegevens decoderen.       Omdat de <xref:System.IO.Ports.SerialPort>klasse buffert gegevens en de stream in de <xref:System.IO.Ports.SerialPort.BaseStream%2A>heeft geen eigenschap, de twee conflicteren over hoeveel tekens zijn beschikbaar om te lezen.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  De <xref:System.IO.Ports.SerialPort.BytesToRead%2A>eigenschap kan erop wijzen dat er zijn te lezen tekens, maar deze tekens mogelijk niet toegankelijk is voor de stroom die is opgenomen in de <xref:System.IO.Ports.SerialPort.BaseStream%2A>eigenschap omdat ze hebben zijn gebufferd tot de <xref:System.IO.Ports.SerialPort>klasse</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>       Andere bewerkingen worden niet door de methode Read worden geblokkeerd wanneer het aantal bytes gelezen is gelijk aan `count` maar er nog steeds ongelezen bytes beschikbaar op de seriële poort zijn."
  syntax:
    content: public int Read (char[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "De tekenmatrix de invoer voor schrijven."
    - id: offset
      type: System.Int32
      description: "De verschuiving in `buffer` waarmee de tekens schrijven."
    - id: count
      type: System.Int32
      description: "Het maximum aantal tekens dat moet worden gelezen. Minder tekens worden gelezen als `count` is groter dan het aantal tekens in de invoerbuffer."
    return:
      type: System.Int32
      description: "Het aantal tekens is gelezen."
  overload: System.IO.Ports.SerialPort.Read*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code> plus <code>count</code> is greater than the length of the buffer.  \n  \n \\- or -  \n  \n <code>count</code> is 1 and there is a surrogate character in the buffer."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>buffer</code> passed is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> offset </code> of <code> count </code> parameters zijn buiten een geldig gebied van de <code> buffer </code> worden doorgegeven. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De opgegeven poort is niet geopend."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "Er worden geen tekens zijn beschikbaar om te lezen."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadBufferSize
  id: ReadBufferSize
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadBufferSize
  nameWithType: SerialPort.ReadBufferSize
  fullName: System.IO.Ports.SerialPort.ReadBufferSize
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Opgehaald of ingesteld van de grootte van de <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> invoerbuffer."
  remarks: "De eigenschap ReadBufferSize negeert de waarde die kleiner is dan 4096.       Omdat de eigenschap ReadBufferSize alleen de buffer Windows heeft gemaakt geeft, kan een kleinere waarde dan wel terugkeren de <xref:System.IO.Ports.SerialPort.BytesToRead%2A>eigenschap, die beide vertegenwoordigt de <xref:System.IO.Ports.SerialPort>buffer en de buffer die is gemaakt van Windows.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public int ReadBufferSize { get; set; }
    return:
      type: System.Int32
      description: "De buffergrootte in bytes. De standaardwaarde is 4096; de maximale waarde is van een positieve int of 2147483647."
  overload: System.IO.Ports.SerialPort.ReadBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De waarde ReadBufferSize set is kleiner dan of gelijk zijn aan nul."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De eigenschap ReadBufferSize is ingesteld terwijl de stroom geopend was."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De eigenschap ReadBufferSize is ingesteld op een oneven geheel getal."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadByte
  id: ReadByte
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadByte()
  nameWithType: SerialPort.ReadByte()
  fullName: System.IO.Ports.SerialPort.ReadByte()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Synchroon leest één byte van de <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> invoerbuffer."
  remarks: "Deze methode wordt gelezen van één byte.       Wees voorzichtig bij het gebruik van ReadByte en <xref:System.IO.Ports.SerialPort.ReadChar%2A>samen.</xref:System.IO.Ports.SerialPort.ReadChar%2A> Schakelen tussen bytes leest en lezen tekens kan leiden tot extra gegevens moeten worden gelezen en/of andere onbedoeld gedrag. Als het nodig is om over te schakelen tussen het lezen van tekst en binaire gegevens lezen uit de stroom is, selecteert u een protocol dat zorgvuldig de grens tussen tekst en binaire gegevens definieert, zoals handmatig bytes zijn gelezen en de gegevens decoderen.      > [!NOTE] > Omdat de <xref:System.IO.Ports.SerialPort>klasse buffert gegevens en de stream in de <xref:System.IO.Ports.SerialPort.BaseStream%2A>heeft geen eigenschap, de twee conflicteren over hoeveel bytes beschikbaar zijn voor lezen.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  De <xref:System.IO.Ports.SerialPort.BytesToRead%2A>eigenschap kan erop wijzen dat er bytes zijn lezen, maar deze bytes mogelijk niet toegankelijk is voor de stroom die is opgenomen in de <xref:System.IO.Ports.SerialPort.BaseStream%2A>eigenschap omdat ze hebben zijn gebufferd tot de <xref:System.IO.Ports.SerialPort>klasse</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: "De byte geconverteerd naar een <xref:System.Int32>, of -1 als het einde van de stroom is gelezen.</xref:System.Int32>"
  overload: System.IO.Ports.SerialPort.ReadByte*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De opgegeven poort is niet geopend."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "The operation did not complete before the time-out period ended.  \n  \n \\- or -  \n  \n No byte was read."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadChar
  id: ReadChar
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadChar()
  nameWithType: SerialPort.ReadChar()
  fullName: System.IO.Ports.SerialPort.ReadChar()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Synchroon leest één teken van de <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> invoerbuffer."
  remarks: "Deze methode wordt gelezen één volledig teken op basis van de codering.       Wees voorzichtig bij het gebruik van <xref:System.IO.Ports.SerialPort.ReadByte%2A>en ReadChar samen.</xref:System.IO.Ports.SerialPort.ReadByte%2A> Schakelen tussen bytes leest en lezen tekens kan leiden tot extra gegevens moeten worden gelezen en/of andere onbedoeld gedrag. Als het nodig is om over te schakelen tussen het lezen van tekst en binaire gegevens lezen uit de stroom is, selecteert u een protocol dat zorgvuldig de grens tussen tekst en binaire gegevens definieert, zoals handmatig bytes zijn gelezen en de gegevens decoderen.      > [!NOTE] > Omdat de <xref:System.IO.Ports.SerialPort>klasse buffert gegevens en de stream in de <xref:System.IO.Ports.SerialPort.BaseStream%2A>heeft geen eigenschap, de twee conflicteren over hoeveel bytes beschikbaar zijn voor lezen.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  De <xref:System.IO.Ports.SerialPort.BytesToRead%2A>eigenschap kan erop wijzen dat er bytes zijn lezen, maar deze bytes mogelijk niet toegankelijk is voor de stroom die is opgenomen in de <xref:System.IO.Ports.SerialPort.BaseStream%2A>eigenschap omdat ze hebben zijn gebufferd tot de <xref:System.IO.Ports.SerialPort>klasse</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public int ReadChar ();
    parameters: []
    return:
      type: System.Int32
      description: "Het teken dat is gelezen."
  overload: System.IO.Ports.SerialPort.ReadChar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De opgegeven poort is niet geopend."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "The operation did not complete before the time-out period ended.  \n  \n \\- or -  \n  \n No character was available in the allotted time-out period."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadExisting
  id: ReadExisting
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadExisting()
  nameWithType: SerialPort.ReadExisting()
  fullName: System.IO.Ports.SerialPort.ReadExisting()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Alle op basis van de codering in de stroom en de invoerbuffer van onmiddellijk beschikbaar bytes leest de <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> object."
  remarks: "Deze methode retourneert de inhoud van de stroom en de interne buffer van de <xref:System.IO.Ports.SerialPort>object als een tekenreeks.</xref:System.IO.Ports.SerialPort> Deze methode gebruikt geen is een time-out. Houd er rekening mee dat deze methode kunt laten afsluitende lead bytes in de interne buffer, waardoor de <xref:System.IO.Ports.SerialPort.BytesToRead%2A>waarde groter dan nul.</xref:System.IO.Ports.SerialPort.BytesToRead%2A>       Als het nodig is om over te schakelen tussen het lezen van tekst en binaire gegevens lezen uit de stroom is, selecteert u een protocol dat zorgvuldig de grens tussen tekst en binaire gegevens definieert, zoals handmatig bytes zijn gelezen en de gegevens decoderen.      > [!NOTE] > De <xref:System.IO.Ports.SerialPort>klasse buffert gegevens, maar het streamobject opgenomen in de <xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=fullName>heeft geen eigenschap.</xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=fullName> </xref:System.IO.Ports.SerialPort> Daarom de <xref:System.IO.Ports.SerialPort>verschillen van het aantal bytes die beschikbaar zijn voor lezen object en de stroomobject.</xref:System.IO.Ports.SerialPort> Wanneer bytes zijn gebufferd tot de <xref:System.IO.Ports.SerialPort>object, de <xref:System.IO.Ports.SerialPort.BytesToRead%2A>eigenschap bevat deze bytes in de waarde ervan; echter deze bytes mogelijk niet toegankelijk is voor de stroom die is opgenomen in de <xref:System.IO.Ports.SerialPort.BaseStream%2A>eigenschap.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A> </xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public string ReadExisting ();
    parameters: []
    return:
      type: System.String
      description: "De inhoud van de stroom en de invoerbuffer van de <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> object."
  overload: System.IO.Ports.SerialPort.ReadExisting*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De opgegeven poort is niet geopend."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadLine
  id: ReadLine
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadLine()
  nameWithType: SerialPort.ReadLine()
  fullName: System.IO.Ports.SerialPort.ReadLine()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Maximaal leest de <xref:System.IO.Ports.SerialPort.NewLine*>waarde in de invoerbuffer.</xref:System.IO.Ports.SerialPort.NewLine*>"
  remarks: "Houd er rekening mee dat bij deze methode geen retourneert de <xref:System.IO.Ports.SerialPort.NewLine%2A>waarde, de <xref:System.IO.Ports.SerialPort.NewLine%2A>waarde wordt verwijderd uit de invoerbuffer.</xref:System.IO.Ports.SerialPort.NewLine%2A> </xref:System.IO.Ports.SerialPort.NewLine%2A>       Standaard wordt de methode ReadLine geblokkeerd totdat er een regel is ontvangen. Als dit probleem ongewenste is, stelt u de <xref:System.IO.Ports.SerialPort.ReadTimeout%2A>eigenschap in op een andere waarde dan nul om af te dwingen van de methode ReadLine op dat moet optreden van een <xref:System.TimeoutException>als een regel niet beschikbaar op de poort is.</xref:System.TimeoutException> </xref:System.IO.Ports.SerialPort.ReadTimeout%2A>       Als het nodig is om over te schakelen tussen het lezen van tekst en binaire gegevens lezen uit de stroom is, selecteert u een protocol dat zorgvuldig de grens tussen tekst en binaire gegevens definieert, zoals handmatig bytes zijn gelezen en de gegevens decoderen.      > [!NOTE] > Omdat de <xref:System.IO.Ports.SerialPort>klasse buffert gegevens en de stream in de <xref:System.IO.Ports.SerialPort.BaseStream%2A>heeft geen eigenschap, de twee conflicteren over hoeveel bytes beschikbaar zijn voor lezen.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  De <xref:System.IO.Ports.SerialPort.BytesToRead%2A>eigenschap kan erop wijzen dat er bytes zijn lezen, maar deze bytes mogelijk niet toegankelijk is voor de stroom die is opgenomen in de <xref:System.IO.Ports.SerialPort.BaseStream%2A>eigenschap omdat ze hebben zijn gebufferd tot de <xref:System.IO.Ports.SerialPort>klasse</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_0_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_0_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_0_1.vb)]"
  syntax:
    content: public string ReadLine ();
    parameters: []
    return:
      type: System.String
      description: "De inhoud van de invoerbuffer tot het eerste exemplaar van een <xref:System.IO.Ports.SerialPort.NewLine*>waarde.</xref:System.IO.Ports.SerialPort.NewLine*>"
  overload: System.IO.Ports.SerialPort.ReadLine*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De opgegeven poort is niet geopend."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "The operation did not complete before the time-out period ended.  \n  \n \\- or -  \n  \n No bytes were read."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadTimeout
  id: ReadTimeout
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: SerialPort.ReadTimeout
  fullName: System.IO.Ports.SerialPort.ReadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Opgehaald of ingesteld van het aantal milliseconden voordat een time-out optreedt bij een leesbewerking niet is voltooid."
  remarks: "De lezen time-outwaarde is oorspronkelijk ingesteld op 500 milliseconden in de Win32-API voor communicatie. Deze eigenschap kunt u deze waarde instellen. De time-outwaarde worden ingesteld op een willekeurige waarde groter dan nul of worden ingesteld op <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, in welk geval geen time-out optreedt.</xref:System.IO.Ports.SerialPort.InfiniteTimeout> <xref:System.IO.Ports.SerialPort.InfiniteTimeout>de standaardwaarde is.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>      > [!NOTE] > Gebruikers van de niet-beheerde `COMMTIMEOUTS` structuur verwacht dat de time-outwaarde ingesteld op nul time-outs onderdrukken. Als u wilt onderdrukken voor time-outs met de eigenschap ReadTimeout, moet u echter opgeven <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>       Deze eigenschap heeft geen invloed op de <xref:System.IO.Stream.BeginRead%2A>methode van de stroom is geretourneerd door de <xref:System.IO.Ports.SerialPort.BaseStream%2A>eigenschap.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Stream.BeginRead%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_1_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_1_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_1_1.vb)]"
  syntax:
    content: public int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: "Het aantal milliseconden voordat een time-out optreedt bij een leesbewerking niet is voltooid."
  overload: System.IO.Ports.SerialPort.ReadTimeout*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De lezen time-outwaarde is kleiner dan nul en niet gelijk is aan <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadTo(System.String)
  id: ReadTo(System.String)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadTo(String)
  nameWithType: SerialPort.ReadTo(String)
  fullName: System.IO.Ports.SerialPort.ReadTo(String)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Een tekenreeks naar de opgegeven leest <code> value </code> in de invoerbuffer."
  remarks: "Deze methode tekenreeksen tot maximaal de opgegeven `value`. Terwijl de geretourneerde tekenreeks geen bevat de `value`, wordt de `value` wordt verwijderd uit de invoerbuffer.       Als het nodig is om over te schakelen tussen het lezen van tekst en binaire gegevens lezen uit de stroom is, selecteert u een protocol dat zorgvuldig de grens tussen tekst en binaire gegevens definieert, zoals handmatig bytes zijn gelezen en de gegevens decoderen.      > [!NOTE] > Omdat de <xref:System.IO.Ports.SerialPort>klasse buffert gegevens en de stream in de <xref:System.IO.Ports.SerialPort.BaseStream%2A>heeft geen eigenschap, de twee conflicteren over hoeveel bytes beschikbaar zijn voor lezen.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  De <xref:System.IO.Ports.SerialPort.BytesToRead%2A>eigenschap kan erop wijzen dat er bytes zijn lezen, maar deze bytes mogelijk niet toegankelijk is voor de stroom die is opgenomen in de <xref:System.IO.Ports.SerialPort.BaseStream%2A>eigenschap omdat ze hebben zijn gebufferd tot de <xref:System.IO.Ports.SerialPort>klasse</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public string ReadTo (string value);
    parameters:
    - id: value
      type: System.String
      description: "Een waarde die aangeeft waar de leesbewerking wordt gestopt."
    return:
      type: System.String
      description: "De inhoud van de invoerbuffer tot maximaal de opgegeven <code> value </code>."
  overload: System.IO.Ports.SerialPort.ReadTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De lengte van de <code> value </code> parameter is 0."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De opgegeven poort is niet geopend."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "De bewerking is niet voltooid voordat de time-outperiode is beëindigd."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReceivedBytesThreshold
  id: ReceivedBytesThreshold
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReceivedBytesThreshold
  nameWithType: SerialPort.ReceivedBytesThreshold
  fullName: System.IO.Ports.SerialPort.ReceivedBytesThreshold
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Opgehaald of ingesteld van het aantal bytes in de interne invoerbuffer voordat een <xref href=&quot;System.IO.Ports.SerialPort.DataReceived&quot;> </xref> gebeurtenis plaatsvindt."
  remarks: "De <xref:System.IO.Ports.SerialPort.DataReceived>gebeurtenis ook treedt op als een <xref:System.IO.Ports.SerialData>teken wordt ontvangen, ongeacht het aantal bytes in de interne invoerbuffer en de waarde van de eigenschap ReceivedBytesThreshold.</xref:System.IO.Ports.SerialData> </xref:System.IO.Ports.SerialPort.DataReceived>"
  syntax:
    content: public int ReceivedBytesThreshold { get; set; }
    return:
      type: System.Int32
      description: "Het aantal bytes in de interne invoerbuffer voordat een <xref href=&quot;System.IO.Ports.SerialPort.DataReceived&quot;> </xref> gebeurtenis wordt geactiveerd. De standaardwaarde is 1."
  overload: System.IO.Ports.SerialPort.ReceivedBytesThreshold*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De waarde ReceivedBytesThreshold is kleiner dan of gelijk is aan nul."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.RtsEnable
  id: RtsEnable
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: RtsEnable
  nameWithType: SerialPort.RtsEnable
  fullName: System.IO.Ports.SerialPort.RtsEnable
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de aanvraag voor Send (RTS) signaal tijdens seriële communicatie is ingeschakeld."
  remarks: "De aanvraag te verzenden (RTS)-signaal wordt doorgaans gebruikt in de aanvraag voor het verzenden/wissen voor het verzenden van de hardware-handshaking (RTS/CTS)."
  syntax:
    content: public bool RtsEnable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>inschakelen van de aanvraag te verzenden (RTS); anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.RtsEnable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De waarde van de eigenschap RtsEnable is ingesteld of opgehaald terwijl de <xref:System.IO.Ports.SerialPort.Handshake*>eigenschap is ingesteld op de <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> waarde of de <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> waarde.</xref:System.IO.Ports.SerialPort.Handshake*>"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.StopBits
  id: StopBits
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: StopBits
  nameWithType: SerialPort.StopBits
  fullName: System.IO.Ports.SerialPort.StopBits
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Opgehaald of ingesteld van het standaard aantal stopbits per byte."
  remarks: "De standaardwaarde voor StopBits is <xref:System.IO.Ports.StopBits>.</xref:System.IO.Ports.StopBits>       De <xref:System.IO.Ports.StopBits?displayProperty=fullName>waarde wordt niet ondersteund.</xref:System.IO.Ports.StopBits?displayProperty=fullName>"
  example:
  - "The following example shows how to set the StopBits property to `One`.  \n  \n [!code-cs[System.IO.Ports.SerialPort#20](~/add/codesnippet/csharp/p-system.io.ports.serial_2_1.cs)]\n [!code-cpp[System.IO.Ports.SerialPort#20](~/add/codesnippet/cpp/p-system.io.ports.serial_2_1.cpp)]\n [!code-vb[System.IO.Ports.SerialPort#20](~/add/codesnippet/visualbasic/p-system.io.ports.serial_2_1.vb)]  \n  \n The following example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_2_2.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_2_2.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_2_2.vb)]"
  syntax:
    content: public System.IO.Ports.StopBits StopBits { get; set; }
    return:
      type: System.IO.Ports.StopBits
      description: "Een van de <xref href=&quot;System.IO.Ports.StopBits&quot;> </xref> waarden."
  overload: System.IO.Ports.SerialPort.StopBits*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De waarde StopBits <xref href=&quot;System.IO.Ports.StopBits&quot;> </xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Write(System.String)
  id: Write(System.String)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Write(String)
  nameWithType: SerialPort.Write(String)
  fullName: System.IO.Ports.SerialPort.Write(String)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "De opgegeven tekenreeks schrijft naar de seriële poort."
  remarks: "Gebruik deze methode wanneer u wilt een tekenreeks als uitvoer schrijven naar een seriële poort.       Als er te veel bytes beschikbaar in de uitvoerbuffer zijn en <xref:System.IO.Ports.SerialPort.Handshake%2A>is ingesteld op <xref:System.IO.Ports.Handshake>de <xref:System.IO.Ports.SerialPort>object kan verhogen een <xref:System.ServiceProcess.TimeoutException>tijdens het wachten op het apparaat klaar is om meer gegevens te accepteren.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       Standaard <xref:System.IO.Ports.SerialPort>gebruikt <xref:System.Text.ASCIIEncoding>voor het coderen van de tekens.</xref:System.Text.ASCIIEncoding> </xref:System.IO.Ports.SerialPort> <xref:System.Text.ASCIIEncoding>codeert alle groter zijn dan 127 tekens als (char) 63 of &quot;?&quot;.</xref:System.Text.ASCIIEncoding> Ter ondersteuning van extra tekens in dat bereik, stel <xref:System.IO.Ports.SerialPort.Encoding%2A>naar <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, of <xref:System.Text.UnicodeEncoding>.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.IO.Ports.SerialPort.Encoding%2A>"
  syntax:
    content: public void Write (string text);
    parameters:
    - id: text
      type: System.String
      description: "De tekenreeks voor uitvoer."
  overload: System.IO.Ports.SerialPort.Write*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De opgegeven poort is niet geopend."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>str</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "De bewerking is niet voltooid voordat de time-outperiode is beëindigd."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: SerialPort.Write(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Schrijft een opgegeven aantal bytes naar de seriële poort met gegevens uit een buffer."
  remarks: "Gebruik deze methode wanneer u schrijven naar een byte-buffer wilt voor het maken van uitvoer naar een seriële poort.       Als er te veel bytes beschikbaar in de uitvoerbuffer zijn en <xref:System.IO.Ports.SerialPort.Handshake%2A>is ingesteld op <xref:System.IO.Ports.Handshake>de <xref:System.IO.Ports.SerialPort>object kan verhogen een <xref:System.ServiceProcess.TimeoutException>tijdens het wachten op het apparaat klaar is om meer gegevens te accepteren.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       Standaard <xref:System.IO.Ports.SerialPort>gebruikt <xref:System.Text.ASCIIEncoding>voor het coderen van de tekens.</xref:System.Text.ASCIIEncoding> </xref:System.IO.Ports.SerialPort> <xref:System.Text.ASCIIEncoding>codeert alle groter zijn dan 127 tekens als (char) 63 of &quot;?&quot;.</xref:System.Text.ASCIIEncoding> Ter ondersteuning van extra tekens in dat bereik, stel <xref:System.IO.Ports.SerialPort.Encoding%2A>naar <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, of <xref:System.Text.UnicodeEncoding>.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.IO.Ports.SerialPort.Encoding%2A>"
  syntax:
    content: public void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "De bytematrix die de gegevens schrijven naar de poort bevat."
    - id: offset
      type: System.Int32
      description: "De op nul gebaseerde byte-offset in de `buffer` parameter waarop u wilt beginnen met het kopiëren van bytes op de poort."
    - id: count
      type: System.Int32
      description: "Het aantal bytes te schrijven."
  overload: System.IO.Ports.SerialPort.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>buffer</code> passed is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De opgegeven poort is niet geopend."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> offset </code> of <code> count </code> parameters zijn buiten een geldig gebied van de <code> buffer </code> worden doorgegeven. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>plus <code>count</code> groter is dan de lengte van de <code>buffer</code>."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "De bewerking is niet voltooid voordat de time-outperiode is beëindigd."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Write(Char[],Int32,Int32)
  nameWithType: SerialPort.Write(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Schrijft een opgegeven aantal tekens in de seriële poort met gegevens uit een buffer."
  remarks: "Gebruik deze methode wanneer u schrijven naar een buffer teken wilt voor het maken van uitvoer naar een seriële poort.       Als er te veel bytes beschikbaar in de uitvoerbuffer zijn en <xref:System.IO.Ports.SerialPort.Handshake%2A>is ingesteld op <xref:System.IO.Ports.Handshake>de <xref:System.IO.Ports.SerialPort>object kan verhogen een <xref:System.ServiceProcess.TimeoutException>tijdens het wachten op het apparaat klaar is om meer gegevens te accepteren.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       Standaard <xref:System.IO.Ports.SerialPort>gebruikt <xref:System.Text.ASCIIEncoding>voor het coderen van de tekens.</xref:System.Text.ASCIIEncoding> </xref:System.IO.Ports.SerialPort> <xref:System.Text.ASCIIEncoding>codeert alle groter zijn dan 127 tekens als (char) 63 of &quot;?&quot;.</xref:System.Text.ASCIIEncoding> Ter ondersteuning van extra tekens in dat bereik, stel <xref:System.IO.Ports.SerialPort.Encoding%2A>naar <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, of <xref:System.Text.UnicodeEncoding>.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.IO.Ports.SerialPort.Encoding%2A>"
  syntax:
    content: public void Write (char[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "De tekenmatrix dat de gegevens schrijven naar de poort bevat."
    - id: offset
      type: System.Int32
      description: "De op nul gebaseerde byte-offset in de `buffer` parameter waarop u wilt beginnen met het kopiëren van bytes op de poort."
    - id: count
      type: System.Int32
      description: "Het aantal tekens te schrijven."
  overload: System.IO.Ports.SerialPort.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>buffer</code> passed is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De opgegeven poort is niet geopend."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> offset </code> of <code> count </code> parameters zijn buiten een geldig gebied van de <code> buffer </code> worden doorgegeven. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>plus <code>count</code> groter is dan de lengte van de <code>buffer</code>."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "De bewerking is niet voltooid voordat de time-outperiode is beëindigd."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.WriteBufferSize
  id: WriteBufferSize
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: WriteBufferSize
  nameWithType: SerialPort.WriteBufferSize
  fullName: System.IO.Ports.SerialPort.WriteBufferSize
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Opgehaald of ingesteld van de grootte van uitvoerbuffer seriële poort."
  remarks: "De eigenschap WriteBufferSize negeert de waarde die kleiner is dan 2048."
  syntax:
    content: public int WriteBufferSize { get; set; }
    return:
      type: System.Int32
      description: "De grootte van uitvoerbuffer. De standaardwaarde is 2048."
  overload: System.IO.Ports.SerialPort.WriteBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De waarde WriteBufferSize is kleiner dan of gelijk is aan nul."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De eigenschap WriteBufferSize is ingesteld terwijl de stroom geopend was."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De eigenschap WriteBufferSize is ingesteld op een oneven geheel getal."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: SerialPort.WriteLine(String)
  fullName: System.IO.Ports.SerialPort.WriteLine(String)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "De opgegeven tekenreeks schrijft en de <xref:System.IO.Ports.SerialPort.NewLine*>waarde naar de uitvoerbuffer.</xref:System.IO.Ports.SerialPort.NewLine*>"
  remarks: "Als er te veel bytes in de invoerbuffer en <xref:System.IO.Ports.SerialPort.Handshake%2A>is ingesteld op <xref:System.IO.Ports.Handshake>de <xref:System.IO.Ports.SerialPort>object kan verhogen een <xref:System.ServiceProcess.TimeoutException>tijdens het wachten op het apparaat klaar is om meer gegevens te accepteren.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       De uitvoer geschreven bevat de <xref:System.IO.Ports.SerialPort.NewLine%2A>tekenreeks.</xref:System.IO.Ports.SerialPort.NewLine%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_1_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_1_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_1_1.vb)]"
  syntax:
    content: public void WriteLine (string text);
    parameters:
    - id: text
      type: System.String
      description: "De tekenreeks om te schrijven naar de uitvoerbuffer."
  overload: System.IO.Ports.SerialPort.WriteLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>str</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De opgegeven poort is niet geopend."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "De methode WriteLine kan niet schrijven naar de stroom."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.WriteTimeout
  id: WriteTimeout
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: SerialPort.WriteTimeout
  fullName: System.IO.Ports.SerialPort.WriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Opgehaald of ingesteld van het aantal milliseconden voordat een time-out optreedt bij een schrijfbewerking niet is voltooid."
  remarks: "De time-outwaarde voor schrijven is oorspronkelijk ingesteld op 500 milliseconden in de Win32-API voor communicatie. Deze eigenschap kunt u deze waarde instellen. De time-outwaarde worden ingesteld op een willekeurige waarde groter dan nul of worden ingesteld op <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, in welk geval geen time-out optreedt.</xref:System.IO.Ports.SerialPort.InfiniteTimeout> <xref:System.IO.Ports.SerialPort.InfiniteTimeout>de standaardwaarde is.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>      > [!NOTE] > Gebruikers van de niet-beheerde `COMMTIMEOUTS` structuur verwacht dat de time-outwaarde ingesteld op nul time-outs onderdrukken. Als u wilt onderdrukken voor time-outs met de eigenschap WriteTimeout, moet u echter opgeven <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>       Deze eigenschap heeft geen invloed op de <xref:System.IO.Stream.BeginWrite%2A>methode van de stroom is geretourneerd door de <xref:System.IO.Ports.SerialPort.BaseStream%2A>eigenschap.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Stream.BeginWrite%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_5_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_5_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_5_1.vb)]"
  syntax:
    content: public int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "Het aantal milliseconden voordat een time-out optreedt. De standaardwaarde is <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.WriteTimeout*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De waarde WriteTimeout is kleiner dan nul en niet gelijk is aan <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.TimeoutException
  isExternal: true
  name: System.TimeoutException
- uid: System.ServiceProcess.TimeoutException
  parent: System.ServiceProcess
  isExternal: false
  name: TimeoutException
  nameWithType: TimeoutException
  fullName: System.ServiceProcess.TimeoutException
- uid: System.IO.Ports.SerialPort.#ctor
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort()
  nameWithType: SerialPort.SerialPort()
  fullName: System.IO.Ports.SerialPort.SerialPort()
- uid: System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(IContainer)
  nameWithType: SerialPort.SerialPort(IContainer)
  fullName: System.IO.Ports.SerialPort.SerialPort(IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.IO.Ports.SerialPort.#ctor(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String)
  nameWithType: SerialPort.SerialPort(String)
  fullName: System.IO.Ports.SerialPort.SerialPort(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32,Parity)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity)
- uid: System.IO.Ports.Parity
  parent: System.IO.Ports
  isExternal: false
  name: Parity
  nameWithType: Parity
  fullName: System.IO.Ports.Parity
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32,Parity,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32)
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32,Parity,Int32,StopBits)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
- uid: System.IO.Ports.StopBits
  parent: System.IO.Ports
  isExternal: false
  name: StopBits
  nameWithType: StopBits
  fullName: System.IO.Ports.StopBits
- uid: System.IO.Ports.SerialPort.BaseStream
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaseStream
  nameWithType: SerialPort.BaseStream
  fullName: System.IO.Ports.SerialPort.BaseStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Ports.SerialPort.BaudRate
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaudRate
  nameWithType: SerialPort.BaudRate
  fullName: System.IO.Ports.SerialPort.BaudRate
- uid: System.IO.Ports.SerialPort.BreakState
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BreakState
  nameWithType: SerialPort.BreakState
  fullName: System.IO.Ports.SerialPort.BreakState
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Ports.SerialPort.BytesToRead
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToRead
  nameWithType: SerialPort.BytesToRead
  fullName: System.IO.Ports.SerialPort.BytesToRead
- uid: System.IO.Ports.SerialPort.BytesToWrite
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToWrite
  nameWithType: SerialPort.BytesToWrite
  fullName: System.IO.Ports.SerialPort.BytesToWrite
- uid: System.IO.Ports.SerialPort.CDHolding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CDHolding
  nameWithType: SerialPort.CDHolding
  fullName: System.IO.Ports.SerialPort.CDHolding
- uid: System.IO.Ports.SerialPort.Close
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Close()
  nameWithType: SerialPort.Close()
  fullName: System.IO.Ports.SerialPort.Close()
- uid: System.IO.Ports.SerialPort.CtsHolding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CtsHolding
  nameWithType: SerialPort.CtsHolding
  fullName: System.IO.Ports.SerialPort.CtsHolding
- uid: System.IO.Ports.SerialPort.DataBits
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DataBits
  nameWithType: SerialPort.DataBits
  fullName: System.IO.Ports.SerialPort.DataBits
- uid: System.IO.Ports.SerialPort.DataReceived
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DataReceived
  nameWithType: SerialPort.DataReceived
  fullName: System.IO.Ports.SerialPort.DataReceived
- uid: System.IO.Ports.SerialDataReceivedEventHandler
  parent: System.IO.Ports
  isExternal: false
  name: SerialDataReceivedEventHandler
  nameWithType: SerialDataReceivedEventHandler
  fullName: System.IO.Ports.SerialDataReceivedEventHandler
- uid: System.IO.Ports.SerialPort.DiscardInBuffer
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardInBuffer()
  nameWithType: SerialPort.DiscardInBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardInBuffer()
- uid: System.IO.Ports.SerialPort.DiscardNull
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardNull
  nameWithType: SerialPort.DiscardNull
  fullName: System.IO.Ports.SerialPort.DiscardNull
- uid: System.IO.Ports.SerialPort.DiscardOutBuffer
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardOutBuffer()
  nameWithType: SerialPort.DiscardOutBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardOutBuffer()
- uid: System.IO.Ports.SerialPort.Dispose(System.Boolean)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SerialPort.Dispose(Boolean)
  fullName: System.IO.Ports.SerialPort.Dispose(Boolean)
- uid: System.IO.Ports.SerialPort.DsrHolding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DsrHolding
  nameWithType: SerialPort.DsrHolding
  fullName: System.IO.Ports.SerialPort.DsrHolding
- uid: System.IO.Ports.SerialPort.DtrEnable
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DtrEnable
  nameWithType: SerialPort.DtrEnable
  fullName: System.IO.Ports.SerialPort.DtrEnable
- uid: System.IO.Ports.SerialPort.Encoding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Encoding
  nameWithType: SerialPort.Encoding
  fullName: System.IO.Ports.SerialPort.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.Ports.SerialPort.ErrorReceived
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ErrorReceived
  nameWithType: SerialPort.ErrorReceived
  fullName: System.IO.Ports.SerialPort.ErrorReceived
- uid: System.IO.Ports.SerialErrorReceivedEventHandler
  parent: System.IO.Ports
  isExternal: false
  name: SerialErrorReceivedEventHandler
  nameWithType: SerialErrorReceivedEventHandler
  fullName: System.IO.Ports.SerialErrorReceivedEventHandler
- uid: System.IO.Ports.SerialPort.GetPortNames
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: GetPortNames()
  nameWithType: SerialPort.GetPortNames()
  fullName: System.IO.Ports.SerialPort.GetPortNames()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Ports.SerialPort.Handshake
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Handshake
  nameWithType: SerialPort.Handshake
  fullName: System.IO.Ports.SerialPort.Handshake
- uid: System.IO.Ports.Handshake
  parent: System.IO.Ports
  isExternal: false
  name: Handshake
  nameWithType: Handshake
  fullName: System.IO.Ports.Handshake
- uid: System.IO.Ports.SerialPort.InfiniteTimeout
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: InfiniteTimeout
  nameWithType: SerialPort.InfiniteTimeout
  fullName: System.IO.Ports.SerialPort.InfiniteTimeout
- uid: System.IO.Ports.SerialPort.IsOpen
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: IsOpen
  nameWithType: SerialPort.IsOpen
  fullName: System.IO.Ports.SerialPort.IsOpen
- uid: System.IO.Ports.SerialPort.NewLine
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: NewLine
  nameWithType: SerialPort.NewLine
  fullName: System.IO.Ports.SerialPort.NewLine
- uid: System.IO.Ports.SerialPort.Open
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Open()
  nameWithType: SerialPort.Open()
  fullName: System.IO.Ports.SerialPort.Open()
- uid: System.IO.Ports.SerialPort.Parity
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Parity
  nameWithType: SerialPort.Parity
  fullName: System.IO.Ports.SerialPort.Parity
- uid: System.IO.Ports.SerialPort.ParityReplace
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ParityReplace
  nameWithType: SerialPort.ParityReplace
  fullName: System.IO.Ports.SerialPort.ParityReplace
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.IO.Ports.SerialPort.PinChanged
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: PinChanged
  nameWithType: SerialPort.PinChanged
  fullName: System.IO.Ports.SerialPort.PinChanged
- uid: System.IO.Ports.SerialPinChangedEventHandler
  parent: System.IO.Ports
  isExternal: false
  name: SerialPinChangedEventHandler
  nameWithType: SerialPinChangedEventHandler
  fullName: System.IO.Ports.SerialPinChangedEventHandler
- uid: System.IO.Ports.SerialPort.PortName
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: PortName
  nameWithType: SerialPort.PortName
  fullName: System.IO.Ports.SerialPort.PortName
- uid: System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: SerialPort.Read(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Read(Char[],Int32,Int32)
  nameWithType: SerialPort.Read(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Ports.SerialPort.ReadBufferSize
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadBufferSize
  nameWithType: SerialPort.ReadBufferSize
  fullName: System.IO.Ports.SerialPort.ReadBufferSize
- uid: System.IO.Ports.SerialPort.ReadByte
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadByte()
  nameWithType: SerialPort.ReadByte()
  fullName: System.IO.Ports.SerialPort.ReadByte()
- uid: System.IO.Ports.SerialPort.ReadChar
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadChar()
  nameWithType: SerialPort.ReadChar()
  fullName: System.IO.Ports.SerialPort.ReadChar()
- uid: System.IO.Ports.SerialPort.ReadExisting
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadExisting()
  nameWithType: SerialPort.ReadExisting()
  fullName: System.IO.Ports.SerialPort.ReadExisting()
- uid: System.IO.Ports.SerialPort.ReadLine
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadLine()
  nameWithType: SerialPort.ReadLine()
  fullName: System.IO.Ports.SerialPort.ReadLine()
- uid: System.IO.Ports.SerialPort.ReadTimeout
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTimeout
  nameWithType: SerialPort.ReadTimeout
  fullName: System.IO.Ports.SerialPort.ReadTimeout
- uid: System.IO.Ports.SerialPort.ReadTo(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTo(String)
  nameWithType: SerialPort.ReadTo(String)
  fullName: System.IO.Ports.SerialPort.ReadTo(String)
- uid: System.IO.Ports.SerialPort.ReceivedBytesThreshold
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReceivedBytesThreshold
  nameWithType: SerialPort.ReceivedBytesThreshold
  fullName: System.IO.Ports.SerialPort.ReceivedBytesThreshold
- uid: System.IO.Ports.SerialPort.RtsEnable
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: RtsEnable
  nameWithType: SerialPort.RtsEnable
  fullName: System.IO.Ports.SerialPort.RtsEnable
- uid: System.IO.Ports.SerialPort.StopBits
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: StopBits
  nameWithType: SerialPort.StopBits
  fullName: System.IO.Ports.SerialPort.StopBits
- uid: System.IO.Ports.SerialPort.Write(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write(String)
  nameWithType: SerialPort.Write(String)
  fullName: System.IO.Ports.SerialPort.Write(String)
- uid: System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: SerialPort.Write(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Byte[],Int32,Int32)
- uid: System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write(Char[],Int32,Int32)
  nameWithType: SerialPort.Write(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Char[],Int32,Int32)
- uid: System.IO.Ports.SerialPort.WriteBufferSize
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteBufferSize
  nameWithType: SerialPort.WriteBufferSize
  fullName: System.IO.Ports.SerialPort.WriteBufferSize
- uid: System.IO.Ports.SerialPort.WriteLine(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteLine(String)
  nameWithType: SerialPort.WriteLine(String)
  fullName: System.IO.Ports.SerialPort.WriteLine(String)
- uid: System.IO.Ports.SerialPort.WriteTimeout
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteTimeout
  nameWithType: SerialPort.WriteTimeout
  fullName: System.IO.Ports.SerialPort.WriteTimeout
- uid: System.IO.Ports.SerialPort.#ctor*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort
  nameWithType: SerialPort.SerialPort
- uid: System.IO.Ports.SerialPort.BaseStream*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaseStream
  nameWithType: SerialPort.BaseStream
- uid: System.IO.Ports.SerialPort.BaudRate*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaudRate
  nameWithType: SerialPort.BaudRate
- uid: System.IO.Ports.SerialPort.BreakState*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BreakState
  nameWithType: SerialPort.BreakState
- uid: System.IO.Ports.SerialPort.BytesToRead*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToRead
  nameWithType: SerialPort.BytesToRead
- uid: System.IO.Ports.SerialPort.BytesToWrite*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToWrite
  nameWithType: SerialPort.BytesToWrite
- uid: System.IO.Ports.SerialPort.CDHolding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CDHolding
  nameWithType: SerialPort.CDHolding
- uid: System.IO.Ports.SerialPort.Close*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Close
  nameWithType: SerialPort.Close
- uid: System.IO.Ports.SerialPort.CtsHolding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CtsHolding
  nameWithType: SerialPort.CtsHolding
- uid: System.IO.Ports.SerialPort.DataBits*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DataBits
  nameWithType: SerialPort.DataBits
- uid: System.IO.Ports.SerialPort.DiscardInBuffer*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardInBuffer
  nameWithType: SerialPort.DiscardInBuffer
- uid: System.IO.Ports.SerialPort.DiscardNull*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardNull
  nameWithType: SerialPort.DiscardNull
- uid: System.IO.Ports.SerialPort.DiscardOutBuffer*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardOutBuffer
  nameWithType: SerialPort.DiscardOutBuffer
- uid: System.IO.Ports.SerialPort.Dispose*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Dispose
  nameWithType: SerialPort.Dispose
- uid: System.IO.Ports.SerialPort.DsrHolding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DsrHolding
  nameWithType: SerialPort.DsrHolding
- uid: System.IO.Ports.SerialPort.DtrEnable*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DtrEnable
  nameWithType: SerialPort.DtrEnable
- uid: System.IO.Ports.SerialPort.Encoding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Encoding
  nameWithType: SerialPort.Encoding
- uid: System.IO.Ports.SerialPort.GetPortNames*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: GetPortNames
  nameWithType: SerialPort.GetPortNames
- uid: System.IO.Ports.SerialPort.Handshake*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Handshake
  nameWithType: SerialPort.Handshake
- uid: System.IO.Ports.SerialPort.IsOpen*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: IsOpen
  nameWithType: SerialPort.IsOpen
- uid: System.IO.Ports.SerialPort.NewLine*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: NewLine
  nameWithType: SerialPort.NewLine
- uid: System.IO.Ports.SerialPort.Open*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Open
  nameWithType: SerialPort.Open
- uid: System.IO.Ports.SerialPort.Parity*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Parity
  nameWithType: SerialPort.Parity
- uid: System.IO.Ports.SerialPort.ParityReplace*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ParityReplace
  nameWithType: SerialPort.ParityReplace
- uid: System.IO.Ports.SerialPort.PortName*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: PortName
  nameWithType: SerialPort.PortName
- uid: System.IO.Ports.SerialPort.Read*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Read
  nameWithType: SerialPort.Read
- uid: System.IO.Ports.SerialPort.ReadBufferSize*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadBufferSize
  nameWithType: SerialPort.ReadBufferSize
- uid: System.IO.Ports.SerialPort.ReadByte*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadByte
  nameWithType: SerialPort.ReadByte
- uid: System.IO.Ports.SerialPort.ReadChar*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadChar
  nameWithType: SerialPort.ReadChar
- uid: System.IO.Ports.SerialPort.ReadExisting*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadExisting
  nameWithType: SerialPort.ReadExisting
- uid: System.IO.Ports.SerialPort.ReadLine*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadLine
  nameWithType: SerialPort.ReadLine
- uid: System.IO.Ports.SerialPort.ReadTimeout*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTimeout
  nameWithType: SerialPort.ReadTimeout
- uid: System.IO.Ports.SerialPort.ReadTo*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTo
  nameWithType: SerialPort.ReadTo
- uid: System.IO.Ports.SerialPort.ReceivedBytesThreshold*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReceivedBytesThreshold
  nameWithType: SerialPort.ReceivedBytesThreshold
- uid: System.IO.Ports.SerialPort.RtsEnable*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: RtsEnable
  nameWithType: SerialPort.RtsEnable
- uid: System.IO.Ports.SerialPort.StopBits*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: StopBits
  nameWithType: SerialPort.StopBits
- uid: System.IO.Ports.SerialPort.Write*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write
  nameWithType: SerialPort.Write
- uid: System.IO.Ports.SerialPort.WriteBufferSize*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteBufferSize
  nameWithType: SerialPort.WriteBufferSize
- uid: System.IO.Ports.SerialPort.WriteLine*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteLine
  nameWithType: SerialPort.WriteLine
- uid: System.IO.Ports.SerialPort.WriteTimeout*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteTimeout
  nameWithType: SerialPort.WriteTimeout
