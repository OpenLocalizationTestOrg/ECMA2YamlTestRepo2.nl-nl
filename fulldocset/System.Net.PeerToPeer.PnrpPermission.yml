### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.PnrpPermission
  id: PnrpPermission
  children:
  - System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Net.PeerToPeer.PnrpPermission.Copy
  - System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)
  - System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)
  - System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)
  - System.Net.PeerToPeer.PnrpPermission.IsUnrestricted
  - System.Net.PeerToPeer.PnrpPermission.ToXml
  - System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: PnrpPermission
  nameWithType: PnrpPermission
  fullName: System.Net.PeerToPeer.PnrpPermission
  type: Class
  summary: "Hiermee geeft u de waarden die worden gebruikt in <xref href=&quot;System.Net.PeerToPeer&quot;> </xref> object machtigingen."
  remarks: "De standaardmachtigingen van alle lokale en Intranet zone toepassingen voor toegang tot PNRP-services toestaan. Als de standaardmachtigingen zijn niet gewijzigd, alle link-local en site-local toepassingen hebben toegang tot Peer-to-Peer-services, maar hebben geen toegang meer globale (internet)-toepassingen.       Exemplaren van dit type hebben twee statussen van de machtiging: ze hebben geen toegang tot de resources die zijn beveiligd door de machtiging of ze onbeperkte volledige toegang hebben tot deze bronnen."
  syntax:
    content: 'public sealed class PnrpPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Net.PeerToPeer.PnrpPermission
  langs:
  - csharp
  name: PnrpPermission(PermissionState)
  nameWithType: PnrpPermission.PnrpPermission(PermissionState)
  fullName: System.Net.PeerToPeer.PnrpPermission.PnrpPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Net.PeerToPeer.PnrpPermission&quot;> </xref> klasse met de machtigingsstatus van de opgegeven initiÃ«le."
  remarks: "Exemplaren van dit type hebben twee statussen van de machtiging: ze hebben geen toegang tot de resources die zijn beveiligd door de machtiging of ze onbeperkte volledige toegang hebben tot deze bronnen.       Als `state` is onbeperkte, wordt het exemplaar PnrpPermission doorgegeven alle aanvragen. Als `state` waarde, bevat de PnrpPermission-exemplaar niet alle aanvragen."
  syntax:
    content: public PnrpPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Een van de waarden in de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> opsomming."
  overload: System.Net.PeerToPeer.PnrpPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PnrpPermission.Copy
  id: Copy
  parent: System.Net.PeerToPeer.PnrpPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: PnrpPermission.Copy()
  fullName: System.Net.PeerToPeer.PnrpPermission.Copy()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Maakt en retourneert een identieke kopie van de huidige <xref href=&quot;System.Net.PeerToPeer.PnrpPermission&quot;> </xref>."
  remarks: "Een kopie van een machtiging vertegenwoordigt dezelfde toegang tot bronnen als de oorspronkelijke machtiging.       Exemplaren van dit type hebben twee statussen van de machtiging: ze hebben geen toegang tot de resources die zijn beveiligd door de machtiging of ze onbeperkte volledige toegang hebben tot deze bronnen."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Een object met een interface IPermission waarvan exemplaar een kopie van het huidige exemplaar van bevat <xref href=&quot;System.Net.PeerToPeer.PnrpPermission&quot;> </xref>."
  overload: System.Net.PeerToPeer.PnrpPermission.Copy*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-De parameter is geen geldige <xref href=&quot;System.Net.PeerToPeer.PnrpPermission&quot;> </xref> element.      -De parameter-versienummer wordt niet ondersteund."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De parameter is een <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Net.PeerToPeer.PnrpPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: PnrpPermission.FromXml(SecurityElement)
  fullName: System.Net.PeerToPeer.PnrpPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Hiermee reconstrueert een beveiligingsobject met een opgegeven status van een XML-codering."
  remarks: "Hiermee geeft u het XML-objectmodel voor het coderen van beveiligingsobjecten. Deze klasse kan niet worden overgenomen.       Deze klasse is bedoeld als een eenvoudige implementatie van een eenvoudige XML-objectmodel voor gebruik binnen het beveiligingssysteem en niet voor gebruik als een algemene XML-objectmodel."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement e);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: "De XML-codering voor het gebruik van de machtiging opnieuw."
  overload: System.Net.PeerToPeer.PnrpPermission.FromXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-De parameter is geen geldige <xref href=&quot;System.Net.PeerToPeer.PnrpPermission&quot;> </xref> element.      -De parameter-versienummer wordt niet ondersteund."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De parameter is een <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Net.PeerToPeer.PnrpPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: PnrpPermission.Intersect(IPermission)
  fullName: System.Net.PeerToPeer.PnrpPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Maakt en retourneert een machtiging die is het snijpunt van de huidige <xref href=&quot;System.Net.PeerToPeer.PnrpPermission&quot;> </xref> en de opgegeven machtiging."
  remarks: "Het snijpunt van twee machtigingen is een machtiging die wordt beschreven welke bewerkingen die ze beide gemeenschappelijk beschrijven. Alleen een vraag die wordt doorgegeven zowel oorspronkelijke machtigingen geeft het snijpunt.       De volgende instructies zijn vereist om te worden `true` voor alle implementaties van de methode Intersect. X en Y vertegenwoordigen <xref:System.Security.IPermission>objectverwijzingen die niet een `null` verwijzing (Nothing in Visual Basic).</xref:System.Security.IPermission>      -X.Intersect(X) retourneert een waarde die gelijk is aan X.      -X.Intersect(Y) retourneert dezelfde waarde als Y.Intersect(X).      -X.Intersect(a `null` reference (`Nothing` in Visual Basic)) retourneert een `null` verwijzing (`Nothing` in Visual Basic)."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Een machtiging voor Intersect met de huidige machtiging. Deze moeten van hetzelfde type als de huidige machtiging."
    return:
      type: System.Security.IPermission
      description: "Een nieuwe machtiging waarmee het snijpunt van de huidige <xref href=&quot;System.Net.PeerToPeer.PnrpPermission&quot;> </xref> en de opgegeven machtiging. Deze nieuwe machtiging is een <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic) als het snijpunt leeg is."
  overload: System.Net.PeerToPeer.PnrpPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De parameter target is niet een <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic) en is niet een exemplaar van dezelfde klasse als de huidige machtiging."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Net.PeerToPeer.PnrpPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: PnrpPermission.IsSubsetOf(IPermission)
  fullName: System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Hiermee wordt bepaald of de huidige <xref href=&quot;System.Net.PeerToPeer.PnrpPermission&quot;> </xref> is een subset van de opgegeven machtiging."
  remarks: "The current <xref:System.Net.PeerToPeer.PnrpPermission> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to \"*C:\\example.txt*\" is a subset of a permission that represents access to \"*C:\\\\*\". If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.  \n  \n The following statements are required to be `true` for all implementations of the IsSubsetOf method. X, Y, and Z represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).  \n  \n-   X.IsSubsetOf(X) returns `true`.  \n  \n-   X.IsSubsetOf(Y) returns the same value as Y.IsSubsetOf(X) if and only if X and Y represent the same set of permissions.  \n  \n-   If X.IsSubsetOf(Y) and Y.IsSubsetOf(Z) both return `true`, X.IsSubsetOf(Z) returns `true`.  \n  \n-  \n  \n If X represents an empty IPermission object with a permission state of *None* and Y represents an IPermission object that is a `null` reference (`Nothing` in Visual Basic), X.IsSubsetOf(Y) returns `true`. If Z is also an empty permission, the compound set operation X.Union(Z).IsSubsetOf(Y) also returns `true` because the <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> of two empty permissions is an empty permission."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Een machtiging die moet worden getest voor de relatie subset. Deze machtiging moet van hetzelfde type als de huidige machtiging."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Als de huidige <xref href=&quot;System.Net.PeerToPeer.PnrpPermission&quot;> </xref> is een subset van de opgegeven machtiging; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.PnrpPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De parameter target is niet een <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic) en is niet een exemplaar van dezelfde klasse als de huidige machtiging."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PnrpPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Net.PeerToPeer.PnrpPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: PnrpPermission.IsUnrestricted()
  fullName: System.Net.PeerToPeer.PnrpPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Retourneert een waarde die aangeeft of de huidige <xref href=&quot;System.Net.PeerToPeer.PnrpPermission&quot;> </xref> onbeperkt."
  remarks: "Een onbeperkte machtiging geeft toegang tot alle bronnen die zijn beveiligd door de machtiging."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Als de huidige machtiging onbeperkt is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.PnrpPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PnrpPermission.ToXml
  id: ToXml
  parent: System.Net.PeerToPeer.PnrpPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: PnrpPermission.ToXml()
  fullName: System.Net.PeerToPeer.PnrpPermission.ToXml()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Hiermee maakt u een XML-codering van de <xref href=&quot;System.Net.PeerToPeer.PnrpPermission&quot;> </xref> en de huidige status."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Een <xref href=&quot;System.Security.SecurityElement&quot;> </xref> object met een XML-codering van de machtiging, met inbegrip van eventuele statusgegevens."
  overload: System.Net.PeerToPeer.PnrpPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Net.PeerToPeer.PnrpPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: PnrpPermission.Union(IPermission)
  fullName: System.Net.PeerToPeer.PnrpPermission.Union(IPermission)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Hiermee maakt u een machtiging die is de vereniging van de huidige <xref href=&quot;System.Net.PeerToPeer.PnrpPermission&quot;> </xref> en de opgegeven machtiging."
  remarks: "Het resultaat van een aanroep naar Union is een machtiging die staat voor alle bewerkingen die worden vertegenwoordigd door zowel de huidige <xref:System.Net.PeerToPeer.PnrpPermission>en de opgegeven machtiging.</xref:System.Net.PeerToPeer.PnrpPermission> Elke vraag die beide toestemming geeft hun union is geslaagd.       De volgende instructies zijn vereist om te worden `true` voor alle implementaties van de methode Union. X en Y vertegenwoordigen <xref:System.Security.IPermission>objecten die niet een `null` verwijzing (`Nothing` in Visual Basic).</xref:System.Security.IPermission>      -X.Union(X) retourneert een object met dezelfde waarde als X.      -X.Union(Y) retourneert een object met dezelfde waarde als het object dat wordt geretourneerd door Y.Union(X).      -X.Union(a `null` reference (`Nothing` in Visual Basic)) retourneert een object met dezelfde waarde als X."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Een machtiging te combineren met de huidige machtiging. Deze moeten van hetzelfde type als de huidige machtiging."
    return:
      type: System.Security.IPermission
      description: "Een nieuwe machtiging die staat voor de samenvoeging van de huidige <xref href=&quot;System.Net.PeerToPeer.PnrpPermission&quot;> </xref> en de opgegeven machtiging."
  overload: System.Net.PeerToPeer.PnrpPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>parameter is ongeldig."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Net.PeerToPeer.PnrpPermission
  isExternal: false
  name: PnrpPermission(PermissionState)
  nameWithType: PnrpPermission.PnrpPermission(PermissionState)
  fullName: System.Net.PeerToPeer.PnrpPermission.PnrpPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Net.PeerToPeer.PnrpPermission.Copy
  parent: System.Net.PeerToPeer.PnrpPermission
  isExternal: false
  name: Copy()
  nameWithType: PnrpPermission.Copy()
  fullName: System.Net.PeerToPeer.PnrpPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)
  parent: System.Net.PeerToPeer.PnrpPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: PnrpPermission.FromXml(SecurityElement)
  fullName: System.Net.PeerToPeer.PnrpPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)
  parent: System.Net.PeerToPeer.PnrpPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: PnrpPermission.Intersect(IPermission)
  fullName: System.Net.PeerToPeer.PnrpPermission.Intersect(IPermission)
- uid: System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Net.PeerToPeer.PnrpPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: PnrpPermission.IsSubsetOf(IPermission)
  fullName: System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.PnrpPermission.IsUnrestricted
  parent: System.Net.PeerToPeer.PnrpPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: PnrpPermission.IsUnrestricted()
  fullName: System.Net.PeerToPeer.PnrpPermission.IsUnrestricted()
- uid: System.Net.PeerToPeer.PnrpPermission.ToXml
  parent: System.Net.PeerToPeer.PnrpPermission
  isExternal: false
  name: ToXml()
  nameWithType: PnrpPermission.ToXml()
  fullName: System.Net.PeerToPeer.PnrpPermission.ToXml()
- uid: System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)
  parent: System.Net.PeerToPeer.PnrpPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: PnrpPermission.Union(IPermission)
  fullName: System.Net.PeerToPeer.PnrpPermission.Union(IPermission)
- uid: System.Net.PeerToPeer.PnrpPermission.#ctor*
  parent: System.Net.PeerToPeer.PnrpPermission
  isExternal: false
  name: PnrpPermission
  nameWithType: PnrpPermission.PnrpPermission
- uid: System.Net.PeerToPeer.PnrpPermission.Copy*
  parent: System.Net.PeerToPeer.PnrpPermission
  isExternal: false
  name: Copy
  nameWithType: PnrpPermission.Copy
- uid: System.Net.PeerToPeer.PnrpPermission.FromXml*
  parent: System.Net.PeerToPeer.PnrpPermission
  isExternal: false
  name: FromXml
  nameWithType: PnrpPermission.FromXml
- uid: System.Net.PeerToPeer.PnrpPermission.Intersect*
  parent: System.Net.PeerToPeer.PnrpPermission
  isExternal: false
  name: Intersect
  nameWithType: PnrpPermission.Intersect
- uid: System.Net.PeerToPeer.PnrpPermission.IsSubsetOf*
  parent: System.Net.PeerToPeer.PnrpPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: PnrpPermission.IsSubsetOf
- uid: System.Net.PeerToPeer.PnrpPermission.IsUnrestricted*
  parent: System.Net.PeerToPeer.PnrpPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: PnrpPermission.IsUnrestricted
- uid: System.Net.PeerToPeer.PnrpPermission.ToXml*
  parent: System.Net.PeerToPeer.PnrpPermission
  isExternal: false
  name: ToXml
  nameWithType: PnrpPermission.ToXml
- uid: System.Net.PeerToPeer.PnrpPermission.Union*
  parent: System.Net.PeerToPeer.PnrpPermission
  isExternal: false
  name: Union
  nameWithType: PnrpPermission.Union
