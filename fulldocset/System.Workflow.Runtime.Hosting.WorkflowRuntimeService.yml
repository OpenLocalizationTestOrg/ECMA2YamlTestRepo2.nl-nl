### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  id: WorkflowRuntimeService
  children:
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  langs:
  - csharp
  name: WorkflowRuntimeService
  nameWithType: WorkflowRuntimeService
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  type: Class
  summary: "Hiermee geeft u de abstracte basisklasse waarvan de workflow runtime engine core services zijn afgeleid."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Services die zijn afgeleid van de klasse WorkflowRuntimeService kunnen worden gestart en gestopt door de workflow runtime engine. De volgorde waarin de services worden gestart en gestopt, is echter onbepaalde, en services kunnen de ondersteuning van andere services om te kunnen zelf juist initialiseren wanneer ze worden gestart en, als u daarentegen mogelijk de ter ondersteuning van andere services om correct afsluiten wanneer ze zijn gestopt. Om dit probleem op te lossen, biedt de workflow runtime engine in twee fasen mechanismen voor het starten en stoppen van services. Wanneer <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>wordt aangeroepen, de workflow runtime engine roept de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>methode voor elk van de services die zijn afgeleid van de klasse WorkflowRuntimeService</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>  Nadat alle services zijn gestart, wordt de workflow runtime engine gegeven de <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>gebeurtenis, waardoor de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>methode worden aangeroepen voor elke workflow runtime engine-service.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName> Uw service kunt overschrijven de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>methode deelnemen aan dit proces met twee fase.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> Op dezelfde manier als <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>wordt aangeroepen, de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>methode, de <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>gebeurtenis, en de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>methode levert dit mechanisme in twee fasen.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>  De eigenschap State bevat een <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>waarde die aangeeft of de service is bezig te starten of stoppen of volledig gestart of gestopt is.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>       Services die zijn afgeleid van de klasse WorkflowRuntimeService kunnen de <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName>gebeurtenis bij het optreden van een voorwaarde die ervoor zorgt een niet-verwerkte uitzondering dat door het aanroepen van <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName> genereren       Services die zijn afgeleid van de <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>klasse, de <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>klasse, de <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>klasse, en de <xref:System.Workflow.Runtime.Tracking.TrackingService>klasse uiteindelijk is afgeleid van de klasse WorkflowRuntimeService.</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class WorkflowRuntimeService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: WorkflowRuntimeService()
  nameWithType: WorkflowRuntimeService.WorkflowRuntimeService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.WorkflowRuntimeService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Wanneer een geïmplementeerd in een afgeleide klasse, initialiseert een nieuw exemplaar van de <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;> </xref> klasse."
  remarks: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>tot <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> is geïnitialiseerd</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>"
  syntax:
    content: protected WorkflowRuntimeService ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  id: OnStarted
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: OnStarted()
  nameWithType: WorkflowRuntimeService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Hiermee geeft u de methode die wordt aangeroepen wanneer de werkstroom-runtime-engine wordt gegeven wanneer overschreven in een afgeleide klasse, de <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime.Started&quot;> </xref> gebeurtenis."
  remarks: "De <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klasse implementeert een mechanisme voor in twee fasen begin zodat workflow runtime engine-services kunnen initialisatie die afhankelijk zijn van andere services nadat de workflow runtime engine is aangeroepen uitvoeren de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>methode voor alle van de workflow runtime engine-services.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Na de workflowruntime engine is aangeroepen de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>methode van alle van de workflow runtime engine-services, wordt de <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>gebeurtenis.</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> U kunt de methode OnStarted voor starten van de laatste functionaliteit vereist zijn voor uw service negeren wanneer de <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>gebeurtenis is opgetreden.</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName> Het mechanisme van abonneren en u zich afmeldt bij de <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>gebeurtenis intern wordt verwerkt.</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>      > [!NOTE] > Als uw service wordt toegevoegd aan de workflow runtime engine door een aanroep naar <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>nadat de workflow runtime engine al gestart is, de workflow runtime engine belt <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>op uw service.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> In dit geval kan echter de <xref:System.Workflow.Runtime.WorkflowRuntime.Started>gebeurtenis al is gebeurd, daarom uw service mogelijk moet u de initialisatie die het normaal zou uitvoeren in OnStarted uit binnen de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>methode.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Started> U kunt testen <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>om te bepalen of de workflow runtime engine is gestart.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>is ingesteld op <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>voordat OnStarted wordt aangeroepen.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>  De standaardimplementatie van OnStarted uitvoert geen actie."
  syntax:
    content: protected virtual void OnStarted ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  id: OnStopped
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: OnStopped()
  nameWithType: WorkflowRuntimeService.OnStopped()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Hiermee geeft u de methode die wordt aangeroepen wanneer de werkstroom-runtime-engine wordt gegeven wanneer overschreven in een afgeleide klasse, de <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime.Stopped&quot;> </xref> gebeurtenis."
  remarks: "De <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klasse implementeert een mechanisme in twee fasen moet worden gestopt zodat workflow runtime engine-services kunnen bepaalde functionaliteit na behouden hun <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>methode wordt aangeroepen door de workflow runtime engine ervoor te zorgen dat ze kunnen, indien nodig, ondersteuning voor het afsluiten van andere services.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Na de workflowruntime engine is aangeroepen de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>methode van alle van de workflow runtime engine-services, wordt de <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>gebeurtenis.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> U kunt de methode OnStopped voor laatste afsluiten functionaliteit vereist zijn voor uw service negeren wanneer de <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>gebeurtenis is opgetreden.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> Het mechanisme van abonneren en u zich afmeldt bij de <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>gebeurtenis intern wordt verwerkt.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>      > [!NOTE] > Als uw <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>wordt verwijderd uit de workflow runtime engine door een aanroep naar <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>terwijl de workflow runtime engine wordt uitgevoerd, de workflow runtime engine roept <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>op uw service.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Echter, in dit geval kan de methode OnStopped wordt niet worden aangeroepen voor uw service. Daarom uw service heeft misschien definitieve afsluiten die het normaal zou uitvoeren in OnStopped uit binnen de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>methode.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> U kunt testen <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>om te bepalen of de workflow runtime engine wordt uitgevoerd.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>is ingesteld op <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>voordat OnStopped wordt aangeroepen.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>  De standaardimplementatie van OnStopped uitvoert geen actie."
  syntax:
    content: protected virtual void OnStopped ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  id: RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  nameWithType: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Geeft de <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&quot;> </xref> gebeurtenis."
  remarks: "Uw service kunt aanroepen RaiseServicesExceptionNotHandledEvent om te genereren voor de <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName>-gebeurtenis geactiveerd wanneer er een uitzondering die deze niet kan tijdens de uitvoering verwerken wordt aangetroffen.</xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName> U moet doorgeven in de <xref:System.Guid>van het workflowexemplaar gekoppeld aan de niet-verwerkte uitzondering.</xref:System.Guid> Bijvoorbeeld, een timer-service mogelijk slaagt de <xref:System.Guid>die zijn gekoppeld aan de timer waarvoor de uitzondering is opgetreden.</xref:System.Guid>"
  syntax:
    content: protected void RaiseServicesExceptionNotHandledEvent (Exception exception, Guid instanceId);
    parameters:
    - id: exception
      type: System.Exception
      description: "De uitzondering die kan niet worden verwerkt."
    - id: instanceId
      type: System.Guid
      description: "De <xref:System.Guid>van het workflowexemplaar gekoppeld aan de niet-verwerkte uitzondering.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  id: Runtime
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: Runtime
  nameWithType: WorkflowRuntimeService.Runtime
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Haalt de <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> voor deze service."
  remarks: "De workflow runtime engine deze eigenschap wordt ingesteld voordat deze roept <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>op de service.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>"
  syntax:
    content: protected System.Workflow.Runtime.WorkflowRuntime Runtime { get; }
    return:
      type: System.Workflow.Runtime.WorkflowRuntime
      description: "De <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;> </xref> object."
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  id: Start
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: Start()
  nameWithType: WorkflowRuntimeService.Start()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Wanneer in een afgeleide klasse genegeerd, start de service en de wijzigingen de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*>naar <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&quot;> </xref>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*>"
  remarks: "Start wordt aangeroepen door de workflow runtime engine op alle bijbehorende services die zijn afgeleid van de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klasse wanneer <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>wordt aangeroepen.</xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>       Start, wordt ook aangeroepen door de workflow runtime engine wanneer een workflow runtime engine-service wordt toegevoegd aan de workflow runtime engine door een aanroep naar <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>nadat de workflow runtime engine is al gestart.</xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> De standaardimplementatie van starten verifieert of de service is gestart en deze informatie gebruikt om de juiste uitzondering te genereren als de service is gestart, terwijl het al wordt uitgevoerd.       U kunt aanvullende functionaliteit die nodig zijn voor uw service gestart door de workflow runtime engine deze methode overschrijft opgeven. Er is geen garantie over welke, indien van toepassing, services worden uitgevoerd wanneer de workflow runtime engine Start in de service aanroept. Daarom in de methode Start uitvoeren u alleen elke initialisatie die is niet afhankelijk van functionaliteit die door andere services. Dit omvat de functionaliteit van core services, zoals de scheduler-service. De workflow runtime engine verhoogt de <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>gebeurtenis nadat deze is aangeroepen met de methode Start van alle van de workflow runtime engine-services.</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName> Als uw service aanvullende initialisatie vereist nadat alle workflow runtime engine-services zijn gestart, kunt u overschrijven de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>methode om te kunnen deze initialisatie uitvoeren wanneer de begin-gebeurtenis wordt geactiveerd.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>      > [!NOTE] > Als uw service wordt toegevoegd aan de workflow runtime engine door een aanroep naar <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>nadat de workflow runtime engine al gestart is, Start op uw service op de workflow runtime engine belt.</xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> In dit geval kan echter de <xref:System.Workflow.Runtime.WorkflowRuntime.Started>gebeurtenis al is gebeurd, daarom uw service mogelijk moet u de initialisatie die het normaal zou uitvoeren in <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>uit binnen de begin-methode.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Started> U kunt testen <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>om te bepalen of de workflow runtime engine is gestart.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       Start mag alleen worden aangeroepen door de workflow runtime engine."
  example:
  - "The following example demonstrates calling the Start method on an object derived from <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>, TerminationTrackingService.  This example is from the Termination Tracking Service SDK sample.  For more information, see [Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#112](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#112)]\n [!code-vb[WF_Samples#112](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#112)]"
  syntax:
    content: protected virtual void Start ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic) - of - de service is al gestart.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>"
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  id: State
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: State
  nameWithType: WorkflowRuntimeService.State
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Hiermee wordt de status van de <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;> </xref>."
  remarks: "De <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klasse implementeert in twee fasen mechanismen voor zowel starten en stoppen van een workflow runtime engine-service.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> De eerste fase van het mechanisme voor begin begint wanneer de werkstroom-runtime-engine de uitvoering van roept de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>methode voor de service.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> Deze methode moet aanroepen de basisimplementatie van <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>, die de status <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> ingesteld</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> De tweede fase vindt plaats nadat de workflow runtime engine alle van de workflow runtime engine-services start wanneer er wordt een gegeven de <xref:System.Workflow.Runtime.WorkflowRuntime.Started>gebeurtenis.</xref:System.Workflow.Runtime.WorkflowRuntime.Started> De <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>intern beheert een abonnement op deze gebeurtenis en de handler kan de status wordt ingesteld op <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>       Het mechanisme voor in twee fasen voor het stoppen van een workflow runtime engine-service wordt gestart wanneer de werkstroom-runtime-engine de uitvoering van roept de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>methode voor de service.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> Deze methode moet aanroepen de basisimplementatie van <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>, die de status <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> ingesteld</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> Nadat het alle van de workflow runtime engine-service is gestopt, worden de workflow runtime engine gegeven de <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped>gebeurtenis.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> De <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>intern beheert een abonnement op deze gebeurtenis en de handler kan de status wordt ingesteld op <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>"
  syntax:
    content: protected System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState State { get; }
    return:
      type: System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState
      description: "Een van de <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&quot;> </xref> waarden."
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  id: Stop
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: Stop()
  nameWithType: WorkflowRuntimeService.Stop()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Wanneer in een afgeleide klasse genegeerd, stopt de service en de wijzigingen de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*>naar <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&quot;> </xref>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*>"
  remarks: "Stop is aangeroepen door de workflow runtime engine op alle bijbehorende services die zijn afgeleid van de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klasse wanneer <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>wordt aangeroepen.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>  Stop wordt ook aangeroepen door de workflow runtime engine wanneer een workflow runtime engine-service wordt verwijderd uit de workflow runtime engine door een aanroep naar <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> De standaardimplementatie van Stop verifieert of de service is gestart en deze informatie gebruikt om de juiste uitzondering te genereren als de service wordt gestopt voordat deze wordt gestart.       U kunt aanvullende functionaliteit die nodig is om de service is gestopt door de workflow runtime engine deze methode overschrijft opgeven. Er is geen garantie over welke, indien aanwezig, worden services worden gestopt of het uitvoeren wanneer Stop is aangeroepen in de service. De workflow runtime engine verhoogt de <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>gebeurtenis nadat deze is aangeroepen de methode stoppen van alle van de workflow runtime engine-services.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> Uw service moet mogelijk bepaalde achtergebleven functionaliteit ter ondersteuning van andere services totdat alle workflow runtime engine-services hebben gehad hun stopmethoden is aangeroepen door de workflow runtime engine behouden. Als uw service een dergelijke functionaliteit behouden moet, kunt u overschrijven de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>verdere actie vereist voor het voltooien van uw service wordt gestopt uitvoeren wanneer de <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>gebeurtenis is opgetreden.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>      > [!NOTE] > Als uw <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>wordt verwijderd uit de workflow runtime engine door een aanroep naar <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>terwijl de workflow runtime engine wordt uitgevoerd, de workflow runtime engine stoppen wordt gebeld op uw service.</xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> In dit geval kan echter de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>methode wordt niet aangeroepen voor uw service.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> Daarom uw service mogelijk moet u extra afsluiten functionaliteit die het normaal zou uitvoeren in <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>uit binnen de methode stoppen.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> U kunt testen <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>om te bepalen of de workflow runtime engine wordt uitgevoerd.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       Stop mag alleen worden aangeroepen door de workflow runtime engine."
  syntax:
    content: protected virtual void Stop ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic).</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>       - of - de service nog niet is gestart."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: WorkflowRuntimeService()
  nameWithType: WorkflowRuntimeService.WorkflowRuntimeService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.WorkflowRuntimeService()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStarted()
  nameWithType: WorkflowRuntimeService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStopped()
  nameWithType: WorkflowRuntimeService.OnStopped()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  nameWithType: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Runtime
  nameWithType: WorkflowRuntimeService.Runtime
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
- uid: System.Workflow.Runtime.WorkflowRuntime
  parent: System.Workflow.Runtime
  isExternal: false
  name: WorkflowRuntime
  nameWithType: WorkflowRuntime
  fullName: System.Workflow.Runtime.WorkflowRuntime
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Start()
  nameWithType: WorkflowRuntimeService.Start()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: State
  nameWithType: WorkflowRuntimeService.State
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState
  parent: System.Workflow.Runtime.Hosting
  isExternal: false
  name: WorkflowRuntimeServiceState
  nameWithType: WorkflowRuntimeServiceState
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Stop()
  nameWithType: WorkflowRuntimeService.Stop()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: WorkflowRuntimeService
  nameWithType: WorkflowRuntimeService.WorkflowRuntimeService
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStarted
  nameWithType: WorkflowRuntimeService.OnStarted
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStopped
  nameWithType: WorkflowRuntimeService.OnStopped
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: RaiseServicesExceptionNotHandledEvent
  nameWithType: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Runtime
  nameWithType: WorkflowRuntimeService.Runtime
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Start
  nameWithType: WorkflowRuntimeService.Start
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: State
  nameWithType: WorkflowRuntimeService.State
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Stop
  nameWithType: WorkflowRuntimeService.Stop
