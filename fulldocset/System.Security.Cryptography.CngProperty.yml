### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngProperty
  id: CngProperty
  children:
  - System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)
  - System.Security.Cryptography.CngProperty.Equals(System.Object)
  - System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngProperty.GetHashCode
  - System.Security.Cryptography.CngProperty.GetValue
  - System.Security.Cryptography.CngProperty.Name
  - System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngProperty.Options
  langs:
  - csharp
  name: CngProperty
  nameWithType: CngProperty
  fullName: System.Security.Cryptography.CngProperty
  type: Struct
  summary: "Een eigenschap van een Cryptography Next Generation (CNG)-sleutel of de provider ingekapseld."
  remarks: "Deze klasse ingekapseld in een eigenschapsnaam (een tekenreeks), een waarde (bytematrix), een <xref:System.Security.Cryptography.CngPropertyOptions>vlag, accessor-eigenschappen en vergelijking en hash-functies.</xref:System.Security.Cryptography.CngPropertyOptions>       Deze klasse wordt gebruikt met de <xref:System.Security.Cryptography.CngKey.SetProperty%2A>en <xref:System.Security.Cryptography.CngKey.GetProperty%2A>methoden.</xref:System.Security.Cryptography.CngKey.GetProperty%2A> </xref:System.Security.Cryptography.CngKey.SetProperty%2A>"
  syntax:
    content: 'public struct CngProperty : IEquatable<System.Security.Cryptography.CngProperty>'
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Security.Cryptography.CngProperty>
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)
  id: '#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)'
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: CngProperty(String,Byte[],CngPropertyOptions)
  nameWithType: CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
  fullName: System.Security.Cryptography.CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> klasse."
  remarks: "Eigenschappen die zijn opgeslagen op een specifieke set <xref:System.Security.Cryptography.CngPropertyOptions>vlaggen moeten dezelfde set vlaggen wanneer ze worden opgehaald.</xref:System.Security.Cryptography.CngPropertyOptions>"
  syntax:
    content: public CngProperty (string name, byte[] value, System.Security.Cryptography.CngPropertyOptions options);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de eigenschap worden geïnitialiseerd."
    - id: value
      type: System.Byte[]
      description: "De waarde van de eigenschap worden geïnitialiseerd."
    - id: options
      type: System.Security.Cryptography.CngPropertyOptions
      description: "Een bitsgewijze combinatie van de opsommingswaarden die opgeeft hoe de eigenschap worden opgeslagen."
  overload: System.Security.Cryptography.CngProperty.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CngProperty.Equals(Object)
  fullName: System.Security.Cryptography.CngProperty.Equals(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Het opgegeven object naar de huidige vergelijkt <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> object."
  remarks: "<xref:System.Security.Cryptography.CngProperty>objecten worden beschouwd als gelijk als hun namen, waarden en opties gelijk zijn.</xref:System.Security.Cryptography.CngProperty> Naam vergelijking wordt uitgevoerd in een combinatie van hoofdletters."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Een object moet worden vergeleken met de huidige <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <code> obj </code> -parameter is een <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> -object dat dezelfde eigenschap als het huidige object; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProperty.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)
  id: Equals(System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Equals(CngProperty)
  nameWithType: CngProperty.Equals(CngProperty)
  fullName: System.Security.Cryptography.CngProperty.Equals(CngProperty)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "De opgegeven vergelijkt <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> -object op voor de huidige <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> object."
  remarks: "<xref:System.Security.Cryptography.CngProperty>objecten worden beschouwd als gelijk als hun namen, waarden en opties gelijk zijn.</xref:System.Security.Cryptography.CngProperty> Naam vergelijking wordt uitgevoerd in een combinatie van hoofdletters."
  syntax:
    content: public bool Equals (System.Security.Cryptography.CngProperty other);
    parameters:
    - id: other
      type: System.Security.Cryptography.CngProperty
      description: "Een object moet worden vergeleken met de huidige <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <code> other </code> parameter vertegenwoordigt dezelfde eigenschap als het huidige object; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProperty.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CngProperty.GetHashCode()
  fullName: System.Security.Cryptography.CngProperty.GetHashCode()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Genereert een hash-waarde voor de huidige <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> object."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "De hash-waarde van het huidige <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> object."
  overload: System.Security.Cryptography.CngProperty.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.GetValue
  id: GetValue
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: GetValue()
  nameWithType: CngProperty.GetValue()
  fullName: System.Security.Cryptography.CngProperty.GetValue()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "De waarde van eigenschap opgehaald die de huidige <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> object bevat."
  syntax:
    content: public byte[] GetValue ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Een matrix die de waarde die is opgeslagen in de eigenschap vertegenwoordigt."
  overload: System.Security.Cryptography.CngProperty.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Name
  id: Name
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Name
  nameWithType: CngProperty.Name
  fullName: System.Security.Cryptography.CngProperty.Name
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "De eigenschap opgehaald die de huidige naam <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> object bevat."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "De naam van de eigenschap die is ingesteld in de huidige <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> object."
  overload: System.Security.Cryptography.CngProperty.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  id: op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: op_Equality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Equality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Equality(CngProperty,CngProperty)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hiermee wordt bepaald of twee <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> objecten Geef de naam van dezelfde eigenschap, de waarde en de opties."
  remarks: "<xref:System.Security.Cryptography.CngProperty>objecten worden beschouwd als gelijk als hun namen, waarden en opties gelijk zijn.</xref:System.Security.Cryptography.CngProperty> Naam vergelijking wordt uitgevoerd in een combinatie van hoofdletters."
  syntax:
    content: public static bool op_Equality (System.Security.Cryptography.CngProperty left, System.Security.Cryptography.CngProperty right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngProperty
      description: "Een object dat Hiermee geeft u een eigenschap van een Cryptography Next Generation (CNG)-sleutel of de provider."
    - id: right
      type: System.Security.Cryptography.CngProperty
      description: "Een tweede-object moet worden vergeleken met het object dat wordt geïdentificeerd door de `left` parameter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de twee objecten dezelfde eigenschap opgeeft; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProperty.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  id: op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: op_Inequality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Inequality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Inequality(CngProperty,CngProperty)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hiermee wordt bepaald of twee <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> objecten Geef de naam van dezelfde eigenschap, waarde en opties."
  remarks: "<xref:System.Security.Cryptography.CngProperty>objecten worden beschouwd als gelijk als hun namen, waarden en opties gelijk zijn.</xref:System.Security.Cryptography.CngProperty> Naam vergelijking wordt uitgevoerd in een combinatie van hoofdletters."
  syntax:
    content: public static bool op_Inequality (System.Security.Cryptography.CngProperty left, System.Security.Cryptography.CngProperty right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngProperty
      description: "Een object dat Hiermee geeft u een eigenschap van een Cryptography Next Generation (CNG)-sleutel of de provider."
    - id: right
      type: System.Security.Cryptography.CngProperty
      description: "Een tweede-object moet worden vergeleken met het object dat wordt geïdentificeerd door de `left` parameter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de twee objecten niet dezelfde eigenschap opgeeft; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProperty.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Options
  id: Options
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Options
  nameWithType: CngProperty.Options
  fullName: System.Security.Cryptography.CngProperty.Options
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "De eigenschap opties opgehaald die de huidige <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> object bevat."
  remarks: "<xref:System.Security.Cryptography.CngKey>objecten bevatten <xref:System.Security.Cryptography.CngProperty>-objecten bevatten de <xref:System.Security.Cryptography.CngPropertyOptions>die de eigenschap zijn opgeslagen met.</xref:System.Security.Cryptography.CngPropertyOptions> </xref:System.Security.Cryptography.CngProperty></xref:System.Security.Cryptography.CngKey>"
  syntax:
    content: public System.Security.Cryptography.CngPropertyOptions Options { get; }
    return:
      type: System.Security.Cryptography.CngPropertyOptions
      description: "Een object dat Hiermee geeft u de opties die zijn ingesteld in de huidige <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> object."
  overload: System.Security.Cryptography.CngProperty.Options*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: CngProperty(String,Byte[],CngPropertyOptions)
  nameWithType: CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
  fullName: System.Security.Cryptography.CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.CngPropertyOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngPropertyOptions
  nameWithType: CngPropertyOptions
  fullName: System.Security.Cryptography.CngPropertyOptions
- uid: System.Security.Cryptography.CngProperty.Equals(System.Object)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Equals(Object)
  nameWithType: CngProperty.Equals(Object)
  fullName: System.Security.Cryptography.CngProperty.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Equals(CngProperty)
  nameWithType: CngProperty.Equals(CngProperty)
  fullName: System.Security.Cryptography.CngProperty.Equals(CngProperty)
- uid: System.Security.Cryptography.CngProperty
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProperty
  nameWithType: CngProperty
  fullName: System.Security.Cryptography.CngProperty
- uid: System.Security.Cryptography.CngProperty.GetHashCode
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetHashCode()
  nameWithType: CngProperty.GetHashCode()
  fullName: System.Security.Cryptography.CngProperty.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngProperty.GetValue
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetValue()
  nameWithType: CngProperty.GetValue()
  fullName: System.Security.Cryptography.CngProperty.GetValue()
- uid: System.Security.Cryptography.CngProperty.Name
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Name
  nameWithType: CngProperty.Name
  fullName: System.Security.Cryptography.CngProperty.Name
- uid: System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Equality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Equality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Equality(CngProperty,CngProperty)
- uid: System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Inequality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Inequality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Inequality(CngProperty,CngProperty)
- uid: System.Security.Cryptography.CngProperty.Options
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Options
  nameWithType: CngProperty.Options
  fullName: System.Security.Cryptography.CngProperty.Options
- uid: System.Security.Cryptography.CngProperty.#ctor*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: CngProperty
  nameWithType: CngProperty.CngProperty
- uid: System.Security.Cryptography.CngProperty.Equals*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Equals
  nameWithType: CngProperty.Equals
- uid: System.Security.Cryptography.CngProperty.GetHashCode*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetHashCode
  nameWithType: CngProperty.GetHashCode
- uid: System.Security.Cryptography.CngProperty.GetValue*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetValue
  nameWithType: CngProperty.GetValue
- uid: System.Security.Cryptography.CngProperty.Name*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Name
  nameWithType: CngProperty.Name
- uid: System.Security.Cryptography.CngProperty.op_Equality*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Equality
  nameWithType: CngProperty.op_Equality
- uid: System.Security.Cryptography.CngProperty.op_Inequality*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Inequality
  nameWithType: CngProperty.op_Inequality
- uid: System.Security.Cryptography.CngProperty.Options*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Options
  nameWithType: CngProperty.Options
