### YamlMime:ManagedReference
items:
- uid: System.Security.SecurityRulesAttribute
  id: SecurityRulesAttribute
  children:
  - System.Security.SecurityRulesAttribute.#ctor(System.Security.SecurityRuleSet)
  - System.Security.SecurityRulesAttribute.RuleSet
  - System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust
  langs:
  - csharp
  name: SecurityRulesAttribute
  nameWithType: SecurityRulesAttribute
  fullName: System.Security.SecurityRulesAttribute
  type: Class
  summary: "Hiermee geeft u de set beveiligingsregels voor die de common language runtime voor een assembly afdwingen moet."
  remarks: "Deze klasse geeft aan welke set beveiligingsregels voor die de common language runtime voor een assembly afdwingen moet. Bijvoorbeeld, een assembly die is gemarkeerd met `[SecurityRules(SecurityRuleSet.Level1)]` gebruikmaakt van .NET Framework versie 2.0 transparantieregels, waarbij openbare risicovolle typen en leden worden behandeld als security-veilig-kritiek buiten de assembly. Hiervoor moet risicovolle typen en leden voor het uitvoeren van een vraag koppeling naar volledig vertrouwen om af te dwingen risicovolle gedrag wanneer ze worden gebruikt door externe aanroepers. Normaal gesproken niveau 1 regels moeten worden gebruikt alleen voor compatibiliteit, zoals voor versie 2.0-assembly&quot;s. Zie voor meer informatie over de werking van niveau 1 [Security Transparent Code, niveau 1](~/add/includes/ajax-current-ext-md.md). Zie voor meer informatie over de werking van niveau 2 [Security Transparent Code, niveau 2](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=false)]

      public sealed class SecurityRulesAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.SecurityRulesAttribute.#ctor(System.Security.SecurityRuleSet)
  id: '#ctor(System.Security.SecurityRuleSet)'
  parent: System.Security.SecurityRulesAttribute
  langs:
  - csharp
  name: SecurityRulesAttribute(SecurityRuleSet)
  nameWithType: SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)
  fullName: System.Security.SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.SecurityRulesAttribute&quot;> </xref> klasse met behulp van de opgegeven regel ingestelde waarde."
  remarks: "Wanneer u opgeeft de `ruleSet` parameter, gebruik <xref:System.Security.SecurityRuleSet>voor regels voor .NET Framework versie 2.0 of <xref:System.Security.SecurityRuleSet>voor [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] regels.</xref:System.Security.SecurityRuleSet> </xref:System.Security.SecurityRuleSet> Voor meer informatie over <xref:System.Security.SecurityRuleSet>gedrag, Zie [Security Transparent Code, niveau 1](~/add/includes/ajax-current-ext-md.md).</xref:System.Security.SecurityRuleSet> Voor informatie over <xref:System.Security.SecurityRuleSet>gedrag, Zie [Security Transparent Code, niveau 2](~/add/includes/ajax-current-ext-md.md).</xref:System.Security.SecurityRuleSet>"
  syntax:
    content: public SecurityRulesAttribute (System.Security.SecurityRuleSet ruleSet);
    parameters:
    - id: ruleSet
      type: System.Security.SecurityRuleSet
      description: "Een van de opsommingswaarden waarmee de transparantieregels ingesteld."
  overload: System.Security.SecurityRulesAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityRulesAttribute.RuleSet
  id: RuleSet
  parent: System.Security.SecurityRulesAttribute
  langs:
  - csharp
  name: RuleSet
  nameWithType: SecurityRulesAttribute.RuleSet
  fullName: System.Security.SecurityRulesAttribute.RuleSet
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Hiermee haalt u de regelinstellingen die moet worden toegepast."
  syntax:
    content: public System.Security.SecurityRuleSet RuleSet { get; }
    return:
      type: System.Security.SecurityRuleSet
      description: "Een van de opsommingswaarden waarmee de transparantieregels moet worden toegepast."
  overload: System.Security.SecurityRulesAttribute.RuleSet*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust
  id: SkipVerificationInFullTrust
  parent: System.Security.SecurityRulesAttribute
  langs:
  - csharp
  name: SkipVerificationInFullTrust
  nameWithType: SecurityRulesAttribute.SkipVerificationInFullTrust
  fullName: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Hiermee wordt bepaald of volledig vertrouwde transparante code Microsoft tussentaal (MSIL)-verificatie moet overslaat."
  remarks: "Deze eigenschap moet worden gebruikt voor optimalisatie, alleen omdat beveiligingsgaranties aangebracht voor transparante code kunnen niet worden afgedwongen als de code niet-verifieerbare is.       Als u deze eigenschap gebruikt om over te slaan MSIL-verificatie voor een assembly, gebruikt u de `transparent` optie in de statisch controleren dat de assembly&quot;s transparante voldoet aan code veiligheidsvereisten typt."
  syntax:
    content: public bool SkipVerificationInFullTrust { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als MSIL-verificatie moet worden overgeslagen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Security.SecurityRulesAttribute.#ctor(System.Security.SecurityRuleSet)
  parent: System.Security.SecurityRulesAttribute
  isExternal: false
  name: SecurityRulesAttribute(SecurityRuleSet)
  nameWithType: SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)
  fullName: System.Security.SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)
- uid: System.Security.SecurityRuleSet
  parent: System.Security
  isExternal: false
  name: SecurityRuleSet
  nameWithType: SecurityRuleSet
  fullName: System.Security.SecurityRuleSet
- uid: System.Security.SecurityRulesAttribute.RuleSet
  parent: System.Security.SecurityRulesAttribute
  isExternal: false
  name: RuleSet
  nameWithType: SecurityRulesAttribute.RuleSet
  fullName: System.Security.SecurityRulesAttribute.RuleSet
- uid: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust
  parent: System.Security.SecurityRulesAttribute
  isExternal: false
  name: SkipVerificationInFullTrust
  nameWithType: SecurityRulesAttribute.SkipVerificationInFullTrust
  fullName: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.SecurityRulesAttribute.#ctor*
  parent: System.Security.SecurityRulesAttribute
  isExternal: false
  name: SecurityRulesAttribute
  nameWithType: SecurityRulesAttribute.SecurityRulesAttribute
- uid: System.Security.SecurityRulesAttribute.RuleSet*
  parent: System.Security.SecurityRulesAttribute
  isExternal: false
  name: RuleSet
  nameWithType: SecurityRulesAttribute.RuleSet
- uid: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust*
  parent: System.Security.SecurityRulesAttribute
  isExternal: false
  name: SkipVerificationInFullTrust
  nameWithType: SecurityRulesAttribute.SkipVerificationInFullTrust
