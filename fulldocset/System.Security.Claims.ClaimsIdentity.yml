### YamlMime:ManagedReference
items:
- uid: System.Security.Claims.ClaimsIdentity
  id: ClaimsIdentity
  children:
  - System.Security.Claims.ClaimsIdentity.#ctor
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.Actor
  - System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.AuthenticationType
  - System.Security.Claims.ClaimsIdentity.BootstrapContext
  - System.Security.Claims.ClaimsIdentity.Claims
  - System.Security.Claims.ClaimsIdentity.Clone
  - System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsIdentity.CustomSerializationData
  - System.Security.Claims.ClaimsIdentity.DefaultIssuer
  - System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  - System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  - System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.FindAll(System.String)
  - System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
  - System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.IsAuthenticated
  - System.Security.Claims.ClaimsIdentity.Label
  - System.Security.Claims.ClaimsIdentity.Name
  - System.Security.Claims.ClaimsIdentity.NameClaimType
  - System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.RoleClaimType
  - System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
  - System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])
  langs:
  - csharp
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
  type: Class
  summary: "Hiermee geeft u een op claims gebaseerde identiteit."
  remarks: "De klasse claims-identiteit is een concrete implementatie van een op claims gebaseerde identiteit; dat wil zeggen, een identiteit die is beschreven door een verzameling van claims. Een claim is een overzicht over een entiteit die door een verlener die worden beschreven van een eigenschap, rechts, of enige andere kwaliteit van die entiteit. Dergelijke entiteit is het onderwerp van de claim genoemd. Een claim wordt vertegenwoordigd door de <xref:System.Security.Claims.Claim>klasse.</xref:System.Security.Claims.Claim> De claims in een ClaimsIdentity beschrijven de entiteit die de identiteit van de bijbehorende vertegenwoordigt, en kan worden gebruikt voor autorisatie en verificatie beslissingen te nemen. Een toegangsmodel op basis van claims is veel voordelen ten opzichte van de meer traditionele toegangsmodellen die uitsluitend met rollen. Claims kunnen bijvoorbeeld veel uitgebreidere informatie over de identiteit ze vertegenwoordigen en kunnen worden geëvalueerd voor de autorisatie of verificatie in een uiterst specifieke wijze opgeven.       Beginnend met .NET Framework 4.5, zijn Windows Identity Foundation (WIF) en op basis van claims-identiteit volledig geïntegreerd in het .NET Framework. Dit betekent dat veel klassen die een identiteit in het .NET Framework vertegenwoordigen nu zijn afgeleid van de claims-identiteit en hun eigenschappen door middel van een verzameling van claims beschrijven. Dit wijkt af van vorige versies van .NET Framework, waarbij deze klassen geïmplementeerd de <xref:System.Security.Principal.IIdentity>rechtstreeks interface.</xref:System.Security.Principal.IIdentity> De verzameling van claims die worden beschreven van de identiteit is toegankelijk via de <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>eigenschap.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A> De klasse claims-identiteit beschikt over verschillende methoden voor het zoeken en wijzigen van claims en biedt volledige ondersteuning voor taal geïntegreerd query&quot;s (LINQ). In de toepassingscode, zijn claims-identiteit objecten doorgaans toegankelijk via <xref:System.Security.Claims.ClaimsPrincipal>objecten; bijvoorbeeld, de principal die is geretourneerd door <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsPrincipal>      > [!NOTE] > De <xref:System.Security.Claims.ClaimsPrincipal>klasse heeft een <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>eigenschap evenals.</xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> </xref:System.Security.Claims.ClaimsPrincipal> In de meeste gevallen moet u claims door de gebruiker toegang tot de <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=fullName>verzameling in plaats van via de <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>verzameling.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=fullName> U moet toegang tot de claims van een afzonderlijke claims-identiteit alleen in de gevallen waarin de principal bevat meer dan één claims-identiteit en u wilt evalueren of een bepaalde identiteit wijzigen.      > [!IMPORTANT] > Toevoegen of verwijderen van claims van de <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>verzameling, een aanroeper moet volledig vertrouwen hebben.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>       In het model op basis van claims de <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>eigenschap en de <xref:System.Security.Principal.IPrincipal.IsInRole%28System.String%29?displayProperty=fullName>methode worden geïmplementeerd door het evalueren van de claims die deel uitmaken van een identiteit.</xref:System.Security.Principal.IPrincipal.IsInRole%28System.String%29?displayProperty=fullName> </xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> De basis-implementaties in het model op basis van claims worden geleverd door de <xref:System.Security.Claims.ClaimsIdentity.Name%2A?displayProperty=fullName>eigenschap en de <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A?displayProperty=fullName>methode.</xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity.Name%2A?displayProperty=fullName> De <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>en <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>Eigenschappen kunt u opgeven dat een claimtype die moet worden gebruikt voor het evalueren van de claims die deel uitmaken van de identiteit bij het uitvoeren van deze bewerkingen.</xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>       Overdracht scenario&quot;s worden ondersteund via de <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>en <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>Eigenschappen.</xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ClaimsIdentity : System.Security.Principal.IIdentity
  inheritance:
  - System.Object
  implements:
  - System.Security.Principal.IIdentity
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor
  id: '#ctor'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity()
  nameWithType: ClaimsIdentity.ClaimsIdentity()
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> klasse met een lege verzameling claims."
  remarks: "De volgende tabel toont de eerste waarden voor een exemplaar van de <xref:System.Security.Claims.ClaimsIdentity>klasse.</xref:System.Security.Claims.ClaimsIdentity>      | Eigenschap | Waarde |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Een lege verzameling. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Opmerking:** wanneer geopend, wordt de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>geretourneerd op basis van de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Opmerking:** wanneer geopend, de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.Name%2A>is geretourneerd op basis van de <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>en de verzameling <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType></xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Label%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.Actor%2A>"
  syntax:
    content: public ClaimsIdentity ();
    parameters: []
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> klasse met behulp van een verzameling opgesomde <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> objecten."
  remarks: "De volgende tabel toont de eerste waarden voor een exemplaar van de <xref:System.Security.Claims.ClaimsIdentity>klasse.</xref:System.Security.Claims.ClaimsIdentity>      | Eigenschap | Waarde |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Geïnitialiseerd vanuit de `claims` parameter. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Opmerking:** wanneer geopend, wordt de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>geretourneerd op basis van de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Opmerking:** wanneer geopend, de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.Name%2A>is geretourneerd op basis van de <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>en de verzameling <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType></xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Label%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.Actor%2A>"
  syntax:
    content: public ClaimsIdentity (System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims);
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "De claims die voor het vullen van de claims-identiteit."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)
  id: '#ctor(System.IO.BinaryReader)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(BinaryReader)
  nameWithType: ClaimsIdentity.ClaimsIdentity(BinaryReader)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(BinaryReader)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: public ClaimsIdentity (System.IO.BinaryReader reader);
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: "Moet worden toegevoegd."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(SerializationInfo)
  nameWithType: ClaimsIdentity.ClaimsIdentity(SerializationInfo)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(SerializationInfo)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> klasse vanuit een geserialiseerde stroom is gemaakt met behulp van <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref>."
  syntax:
    content: protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "De geserialiseerde gegevens."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)
  id: '#ctor(System.Security.Claims.ClaimsIdentity)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(ClaimsIdentity)
  nameWithType: ClaimsIdentity.ClaimsIdentity(ClaimsIdentity)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(ClaimsIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: protected ClaimsIdentity (System.Security.Claims.ClaimsIdentity other);
    parameters:
    - id: other
      type: System.Security.Claims.ClaimsIdentity
      description: "Moet worden toegevoegd."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)
  id: '#ctor(System.Security.Principal.IIdentity)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IIdentity)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> klasse met behulp van het type en de verificatiegegevens van de opgegeven <xref:System.Security.Principal.IIdentity>.</xref:System.Security.Principal.IIdentity>"
  remarks: "De volgende tabel toont de eerste waarden voor een exemplaar van de <xref:System.Security.Claims.ClaimsIdentity>klasse.</xref:System.Security.Claims.ClaimsIdentity>      | Eigenschap | Waarde |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| Als `identity` toegewezen vanuit <xref:System.Security.Claims.ClaimsIdentity>, is de waarde van de `identity.Actor` eigenschap; anders `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| De waarde van de `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>)-eigenschap wordt gebruikt. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| Als `identity` toegewezen vanuit <xref:System.Security.Claims.ClaimsIdentity>, is de waarde van de `identity.BootStrapContext` eigenschap; anders `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Als `identity` kan worden toegewezen vanuit <xref:System.Security.Claims.ClaimsIdentity>, de claims van `identity` zijn toegevoegd aan het nieuwe exemplaar, anders wordt een lege verzameling. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Opmerking:** wanneer geopend, wordt de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>geretourneerd op basis van de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| Als `identity` toegewezen vanuit <xref:System.Security.Claims.ClaimsIdentity>, is de waarde van de `identity.Label` eigenschap; anders `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| Als `identity` is niet toewijsbaar vanuit <xref:System.Security.Claims.ClaimsIdentity>, is geen `null`, en heeft een <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>eigenschap die geen `null`; een naamclaim is toegevoegd aan het nieuwe exemplaar met behulp van de waarde van de <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>eigenschap.</xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> </xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> **Opmerking:** wanneer geopend, de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.Name%2A>is geretourneerd op basis van de <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>en de verzameling <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| Als `identity` toegewezen vanuit <xref:System.Security.Claims.ClaimsIdentity>, is de waarde van de `identity.NameClaimType` eigenschap wordt gebruikt; anders <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>wordt gebruikt. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| Als `identity` kan worden toegewezen vanuit <xref:System.Security.Claims.ClaimsIdentity>, de waarde van de `identity.RoleClaimType` eigenschap wordt gebruikt, anders wordt <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>wordt gebruikt. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A>"
  syntax:
    content: public ClaimsIdentity (System.Security.Principal.IIdentity identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "De identiteit waaruit de nieuwe claims-identiteit."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> klasse met een lege verzameling en het opgegeven verificatietype claims."
  remarks: "De volgende tabel toont de eerste waarden voor een exemplaar van de <xref:System.Security.Claims.ClaimsIdentity>klasse.</xref:System.Security.Claims.ClaimsIdentity>      | Eigenschap | Waarde |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| De waarde van de `authenticationType` parameter.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Als de `authenticationType` parameter `null` of een lege tekenreeks is de eigenschap ingesteld op `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Een lege verzameling. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Opmerking:** wanneer geopend, wordt de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>geretourneerd op basis van de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Opmerking:** wanneer geopend, de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.Name%2A>is geretourneerd op basis van de <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>en de verzameling <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType></xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Label%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>"
  syntax:
    content: public ClaimsIdentity (string authenticationType);
    parameters:
    - id: authenticationType
      type: System.String
      description: "Het type verificatie die wordt gebruikt."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IEnumerable<Claim>,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> klasse met de opgegeven claims en het verificatietype."
  remarks: "De volgende tabel toont de eerste waarden voor een exemplaar van de <xref:System.Security.Claims.ClaimsIdentity>klasse.</xref:System.Security.Claims.ClaimsIdentity>      | Eigenschap | Waarde |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| De waarde van de `authenticationType` parameter.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Als de `authenticationType` parameter `null` of een lege tekenreeks is de eigenschap ingesteld op `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Geïnitialiseerd vanuit de `claims` parameter. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Opmerking:** wanneer geopend, wordt de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>geretourneerd op basis van de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Opmerking:** wanneer geopend, de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.Name%2A>is geretourneerd op basis van de <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>en de verzameling <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType></xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Label%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>"
  syntax:
    content: public ClaimsIdentity (System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims, string authenticationType);
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "De claims die voor het vullen van de claims-identiteit."
    - id: authenticationType
      type: System.String
      description: "Het type verificatie die wordt gebruikt."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(SerializationInfo,StreamingContext)
  nameWithType: ClaimsIdentity.ClaimsIdentity(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> klasse vanuit een geserialiseerde stroom is gemaakt met behulp van <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref>."
  syntax:
    content: protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "De geserialiseerde gegevens."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "De context voor serialisatie."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  id: '#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> klasse met behulp van de opgegeven claims en de opgegeven <xref:System.Security.Principal.IIdentity>.</xref:System.Security.Principal.IIdentity>"
  remarks: "De volgende tabel toont de eerste waarden voor een exemplaar van de <xref:System.Security.Claims.ClaimsIdentity>klasse.</xref:System.Security.Claims.ClaimsIdentity>      | Eigenschap | Waarde |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| Als `identity` toegewezen vanuit <xref:System.Security.Claims.ClaimsIdentity>, is de waarde van de `identity.Actor` eigenschap; anders `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| De `authenticationType` parameter.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Als de `authenticationType` parameter `null` of een lege tekenreeks, de waarde van de `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>)-eigenschap wordt gebruikt. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| Als `identity` toegewezen vanuit <xref:System.Security.Claims.ClaimsIdentity>, is de waarde van de `identity.BootStrapContext` eigenschap; anders `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Geïnitialiseerd vanuit de `claims` parameter.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> </xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> Als `identity` kan worden toegewezen vanuit <xref:System.Security.Claims.ClaimsIdentity>, de claims van `identity` worden toegevoegd aan het nieuwe exemplaar voordat die zijn opgegeven door de `claims` parameter. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Opmerking:** wanneer geopend, wordt de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>geretourneerd op basis van de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| Als `identity` toegewezen vanuit <xref:System.Security.Claims.ClaimsIdentity>, is de waarde van de `identity.Label` eigenschap; anders `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| Als `identity` is niet toewijsbaar vanuit <xref:System.Security.Claims.ClaimsIdentity>, is geen `null`, en heeft een <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>eigenschap die geen `null`; een naamclaim is toegevoegd aan het nieuwe exemplaar met behulp van de waarde van de <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>eigenschap.</xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity> **Opmerking:** wanneer geopend, de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.Name%2A>is geretourneerd op basis van de <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>en de verzameling <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| Als `identity` toegewezen vanuit <xref:System.Security.Claims.ClaimsIdentity>, is de waarde van de `identity.NameClaimType` eigenschap wordt gebruikt; anders <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>wordt gebruikt. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| Als `identity` kan worden toegewezen vanuit <xref:System.Security.Claims.ClaimsIdentity>, de waarde van de `identity.RoleClaimType` eigenschap wordt gebruikt, anders wordt <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>wordt gebruikt. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A>"
  syntax:
    content: public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "De identiteit waaruit de nieuwe claims-identiteit."
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "De claims die voor het vullen van de claims-identiteit."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> claimtype klasse met de opgegeven verificatietype, het claimtype naam en de rol."
  remarks: "De volgende tabel toont de eerste waarden voor een exemplaar van de <xref:System.Security.Claims.ClaimsIdentity>klasse.</xref:System.Security.Claims.ClaimsIdentity>      | Eigenschap | Waarde |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| De waarde van de `authenticationType` parameter.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Als de `authenticationType` parameter `null` of een lege tekenreeks is de eigenschap ingesteld op `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Een lege verzameling. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Opmerking:** wanneer geopend, wordt de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>geretourneerd op basis van de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Opmerking:** wanneer geopend, de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.Name%2A>is geretourneerd op basis van de <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>en de verzameling <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| De waarde van de `nameType` parameter.</xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> Als de `nameType` -parameter is null of een lege tekenreeks, de eigenschap is ingesteld op <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| De waarde van de `roleType` parameter.</xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> Als de `roleType` -parameter is null of een lege tekenreeks, de eigenschap is ingesteld op <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>"
  syntax:
    content: public ClaimsIdentity (string authenticationType, string nameType, string roleType);
    parameters:
    - id: authenticationType
      type: System.String
      description: "Het type verificatie die wordt gebruikt."
    - id: nameType
      type: System.String
      description: "Het claimtype te gebruiken voor de van naamclaims."
    - id: roleType
      type: System.String
      description: "Het claimtype moet worden gebruikt voor de van rolclaims."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> klasse met de opgegeven claims, authenticatietype, het claimtype naam en rol claimtype."
  remarks: "De volgende tabel toont de eerste waarden voor een exemplaar van de <xref:System.Security.Claims.ClaimsIdentity>klasse.</xref:System.Security.Claims.ClaimsIdentity>      | Eigenschap | Waarde |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| De waarde van de `authenticationType` parameter.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Als de `authenticationType` parameter `null` of een lege tekenreeks is de eigenschap ingesteld op `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Geïnitialiseerd vanuit de `claims` parameter. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Opmerking:** wanneer geopend, wordt de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>geretourneerd op basis van de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Opmerking:** wanneer geopend, de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.Name%2A>is geretourneerd op basis van de <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>en de verzameling <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| De waarde van de `nameType` parameter.</xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> Echter, als de `nameType` parameter `null` of een lege tekenreeks is de eigenschap ingesteld op <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| De waarde van de `roleClaimType` parameter.</xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> Echter, als de `roleClaimType` parameter `null` of een lege tekenreeks is de eigenschap ingesteld op <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>"
  syntax:
    content: public ClaimsIdentity (System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims, string authenticationType, string nameType, string roleType);
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "De claims die voor het vullen van de claims-identiteit."
    - id: authenticationType
      type: System.String
      description: "Het type verificatie die wordt gebruikt."
    - id: nameType
      type: System.String
      description: "Het claimtype te gebruiken voor de van naamclaims."
    - id: roleType
      type: System.String
      description: "Het claimtype moet worden gebruikt voor de van rolclaims."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  id: '#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> klasse van het opgegeven <xref:System.Security.Principal.IIdentity>met de opgegeven claims, verificatietype, het claimtype naam en rol claimtype.</xref:System.Security.Principal.IIdentity>"
  remarks: "De volgende tabel toont de eerste waarden voor een exemplaar van de <xref:System.Security.Claims.ClaimsIdentity>klasse.</xref:System.Security.Claims.ClaimsIdentity>      | Eigenschap | Waarde |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| Als `identity` toegewezen vanuit <xref:System.Security.Claims.ClaimsIdentity>, is de waarde van de `identity.Actor` eigenschap; anders `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| De `authenticationType` parameter.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Als de `authenticationType` parameter `null` of een lege tekenreeks, de waarde van de `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>)-eigenschap wordt gebruikt. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| Als `identity` toegewezen vanuit <xref:System.Security.Claims.ClaimsIdentity>, is de waarde van de `identity.BootStrapContext` eigenschap; anders `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Geïnitialiseerd vanuit de `claims` parameter.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> </xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> Als `identity` kan worden toegewezen vanuit <xref:System.Security.Claims.ClaimsIdentity>, de claims van `identity` worden toegevoegd aan het nieuwe exemplaar voordat die zijn opgegeven door de `claims` parameter. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Opmerking:** wanneer geopend, wordt de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>geretourneerd op basis van de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| Als `identity` toegewezen vanuit <xref:System.Security.Claims.ClaimsIdentity>, is de waarde van de `identity.Label` eigenschap; anders `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| Als `identity` is niet toewijsbaar vanuit <xref:System.Security.Claims.ClaimsIdentity>, is geen `null`, en heeft een <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>eigenschap die geen `null`; een naamclaim is toegevoegd aan het nieuwe exemplaar met behulp van de waarde van de <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>eigenschap.</xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity> **Opmerking:** wanneer geopend, de waarde van de eigenschap <xref:System.Security.Claims.ClaimsIdentity.Name%2A>is geretourneerd op basis van de <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>en de verzameling <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| De waarde van de `nameType` parameter.</xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> Echter, als de waarde van de `nameType` parameter `null` of een lege tekenreeks en `identity` kan worden toegewezen vanuit <xref:System.Security.Claims.ClaimsIdentity>, de waarde van de `identity.NameClaimType` eigenschap wordt gebruikt; anders <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>wordt gebruikt. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| De waarde van de `roleClaimType` parameter.</xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> </xref:System.Security.Claims.ClaimsIdentity> Echter, als de waarde van de `roleClaimType` parameter `null` of een lege tekenreeks en de identiteit is toegewezen vanuit <xref:System.Security.Claims.ClaimsIdentity>, de waarde van de `identity.RoleClaimType` eigenschap wordt gebruikt, anders wordt <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>wordt gebruikt. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> </xref:System.Security.Claims.ClaimsIdentity>"
  syntax:
    content: public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims, string authenticationType, string nameType, string roleType);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "De identiteit waaruit de nieuwe claims-identiteit."
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "De claims die voor het vullen van de nieuwe claims-identiteit."
    - id: authenticationType
      type: System.String
      description: "Het type verificatie die wordt gebruikt."
    - id: nameType
      type: System.String
      description: "Het claimtype te gebruiken voor de van naamclaims."
    - id: roleType
      type: System.String
      description: "Het claimtype moet worden gebruikt voor de van rolclaims."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Actor
  id: Actor
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Actor
  nameWithType: ClaimsIdentity.Actor
  fullName: System.Security.Claims.ClaimsIdentity.Actor
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Opgehaald of ingesteld van de identiteit van de oproeper dat delegeringsrechten is verleend."
  remarks: "Een toepassing hebben toegang tot de keten van overdracht die hebben geleid tot de huidige aanroep door de eigenschap Actor recursief. Het token namens wie de aanroep wordt overgedragen kan worden geopend via de <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>eigenschap.</xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>"
  syntax:
    content: public System.Security.Claims.ClaimsIdentity Actor { get; set; }
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "De aanroepende partij dat delegeringsrechten is verleend."
  overload: System.Security.Claims.ClaimsIdentity.Actor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er treedt een poging tot het instellen van de eigenschap in de huidige instantie op."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
  id: AddClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: AddClaim(Claim)
  nameWithType: ClaimsIdentity.AddClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.AddClaim(Claim)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Voegt dat één claim naar deze claims-identiteit."
  remarks: "De claim wordt gecontroleerd en als het onderwerp anders dan is dit identiteit, claims de <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=fullName>methode wordt aangeroepen met deze identiteit als de parameter voor een nieuwe claim maken met het juiste onderwerp claims.</xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=fullName>       Deze methode heeft de `SecurityCritical` kenmerk dat wordt toegepast om te bepalen welke entiteiten claims aan de identiteit kunnen toevoegen. Verder omlaag de pipe autorisatiebeslissingen zijn gemaakt op basis van de claims die aanwezig zijn in de <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>verzameling.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>"
  syntax:
    content: public virtual void AddClaim (System.Security.Claims.Claim claim);
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: "De claim om toe te voegen."
  overload: System.Security.Claims.ClaimsIdentity.AddClaim*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claim</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  id: AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: AddClaims(IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.AddClaims(IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.AddClaims(IEnumerable<Claim>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Voegt dat een lijst met claims naar deze claims-identiteit."
  remarks: "Elke claim wordt gecontroleerd en als het onderwerp anders dan is dit identiteit, claims de <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=fullName>methode wordt aangeroepen met deze identiteit als de parameter voor een nieuwe claim maken met het juiste onderwerp claims.</xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=fullName>       Deze methode heeft de `SecurityCritical` kenmerk dat wordt toegepast om te bepalen welke entiteiten claims aan de identiteit kunnen toevoegen. Verder omlaag de pipe autorisatiebeslissingen zijn gemaakt op basis van de claims die aanwezig zijn in de <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>verzameling.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>"
  syntax:
    content: public virtual void AddClaims (System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims);
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "De claims om toe te voegen."
  overload: System.Security.Claims.ClaimsIdentity.AddClaims*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claims</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.AuthenticationType
  id: AuthenticationType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: AuthenticationType
  nameWithType: ClaimsIdentity.AuthenticationType
  fullName: System.Security.Claims.ClaimsIdentity.AuthenticationType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Hiermee haalt u het verificatietype."
  remarks: "Meestal een van de waarden die zijn gedefinieerd door de <xref:System.Security.Claims.AuthenticationTypes>klasse.</xref:System.Security.Claims.AuthenticationTypes>"
  syntax:
    content: public virtual string AuthenticationType { get; }
    return:
      type: System.String
      description: "Het verificatietype."
  overload: System.Security.Claims.ClaimsIdentity.AuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.BootstrapContext
  id: BootstrapContext
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: BootstrapContext
  nameWithType: ClaimsIdentity.BootstrapContext
  fullName: System.Security.Claims.ClaimsIdentity.BootstrapContext
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Opgehaald of ingesteld van het token dat is gebruikt voor het maken van deze identiteit claims."
  remarks: "The underlying object is an instance of the <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=fullName> class.  \n  \n Set the `saveBootstrapContext` attribute on either the [\\&lt;identityConfiguration\\&gt;](../Topic/%3CidentityConfiguration%3E.md) or the [\\&lt;securityTokenHandlerConfiguration\\&gt;](../Topic/%3CsecurityTokenHandlerConfiguration%3E.md) element in a configuration file to specify whether the token used to generate the <xref:System.Security.Claims.ClaimsIdentity> should be preserved in the BootstrapContext property.  \n  \n If the BootstrapContext property is not `null`, applications can access the original token and the claims it produced through the properties and methods of the <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=fullName> class."
  syntax:
    content: public object BootstrapContext { get; set; }
    return:
      type: System.Object
      description: "De bootstrap-context."
  overload: System.Security.Claims.ClaimsIdentity.BootstrapContext*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Claims
  id: Claims
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Claims
  nameWithType: ClaimsIdentity.Claims
  fullName: System.Security.Claims.ClaimsIdentity.Claims
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Haalt de claims die zijn gekoppeld aan dit identiteit claims."
  remarks: "De verzameling kan vermeldingen bevatten `null`.       De claims in de verzameling Claims in wezen beschrijven de entiteit die wordt vertegenwoordigd door de <xref:System.Security.Claims.ClaimsIdentity>.</xref:System.Security.Claims.ClaimsIdentity> De claims beschrijven de eigenschappen en de rechten waarover de entiteit en kunnen worden onderzocht door toepassingen om beslissingen te nemen over de verificatie en autorisatie.      > [!NOTE] > De <xref:System.Security.Claims.ClaimsPrincipal>klasse heeft een <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>eigenschap evenals.</xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> </xref:System.Security.Claims.ClaimsPrincipal> In de meeste gevallen moet u claims door de gebruiker toegang tot de <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=fullName>verzameling in plaats van via de Claims-verzameling.</xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=fullName> U moet toegang tot de claims van een persoon <xref:System.Security.Claims.ClaimsIdentity>alleen in gevallen waar de principal meer dan één bevat <xref:System.Security.Claims.ClaimsIdentity>en u wilt evalueren of het wijzigen van een bepaalde identiteit.</xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity>"
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> Claims { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "De verzameling van claims die zijn gekoppeld aan dit identiteit claims."
  overload: System.Security.Claims.ClaimsIdentity.Claims*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Clone
  id: Clone
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Clone()
  nameWithType: ClaimsIdentity.Clone()
  fullName: System.Security.Claims.ClaimsIdentity.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Retourneert een nieuwe <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> gekopieerd uit dit identiteit claims."
  syntax:
    content: public virtual System.Security.Claims.ClaimsIdentity Clone ();
    parameters: []
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "Een kopie van het huidige exemplaar."
  overload: System.Security.Claims.ClaimsIdentity.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
  id: CreateClaim(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: CreateClaim(BinaryReader)
  nameWithType: ClaimsIdentity.CreateClaim(BinaryReader)
  fullName: System.Security.Claims.ClaimsIdentity.CreateClaim(BinaryReader)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: protected virtual System.Security.Claims.Claim CreateClaim (System.IO.BinaryReader reader);
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: "Moet worden toegevoegd."
    return:
      type: System.Security.Claims.Claim
      description: "Moet worden toegevoegd."
  overload: System.Security.Claims.ClaimsIdentity.CreateClaim*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.CustomSerializationData
  id: CustomSerializationData
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: CustomSerializationData
  nameWithType: ClaimsIdentity.CustomSerializationData
  fullName: System.Security.Claims.ClaimsIdentity.CustomSerializationData
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: protected virtual byte[] CustomSerializationData { get; }
    return:
      type: System.Byte[]
      description: "Moet worden toegevoegd."
  overload: System.Security.Claims.ClaimsIdentity.CustomSerializationData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.DefaultIssuer
  id: DefaultIssuer
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: DefaultIssuer
  nameWithType: ClaimsIdentity.DefaultIssuer
  fullName: System.Security.Claims.ClaimsIdentity.DefaultIssuer
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "De verlener standaard; &quot;LOCAL AUTHORITY&quot;."
  syntax:
    content: public const string DefaultIssuer;
    return:
      type: System.String
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  id: DefaultNameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: DefaultNameClaimType
  nameWithType: ClaimsIdentity.DefaultNameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "De standaardnaam claimtype; <xref href=&quot;System.Security.Claims.ClaimTypes.Name&quot;></xref>."
  syntax:
    content: public const string DefaultNameClaimType;
    return:
      type: System.String
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  id: DefaultRoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: DefaultRoleClaimType
  nameWithType: ClaimsIdentity.DefaultRoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "De standaardfunctie claimtype; <xref href=&quot;System.Security.Claims.ClaimTypes.Role&quot;></xref>."
  syntax:
    content: public const string DefaultRoleClaimType;
    return:
      type: System.String
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})
  id: FindAll(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: FindAll(Predicate<Claim>)
  nameWithType: ClaimsIdentity.FindAll(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(Predicate<Claim>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Alle van de claims die met het opgegeven predicaat overeenkomen worden opgehaald."
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> FindAll (Predicate<System.Security.Claims.Claim> match);
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: "De functie waarmee de overeenkomende logica wordt uitgevoerd."
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "De overeenkomende claims. De lijst is alleen-lezen."
  overload: System.Security.Claims.ClaimsIdentity.FindAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>match</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.String)
  id: FindAll(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: FindAll(String)
  nameWithType: ClaimsIdentity.FindAll(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Haalt alle claims die het opgegeven claimtype hebben."
  remarks: "De vergelijking wordt gemaakt met behulp van rangtelwoord geval in gevoelig op `type`."
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> FindAll (string type);
    parameters:
    - id: type
      type: System.String
      description: "Het claimtype waarvoor de claims overeenkomen."
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "De overeenkomende claims. De lijst is alleen-lezen."
  overload: System.Security.Claims.ClaimsIdentity.FindAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})
  id: FindFirst(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: FindFirst(Predicate<Claim>)
  nameWithType: ClaimsIdentity.FindFirst(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(Predicate<Claim>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Haalt het eerste claim die met het opgegeven predikaat overeenkomt."
  syntax:
    content: public virtual System.Security.Claims.Claim FindFirst (Predicate<System.Security.Claims.Claim> match);
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: "De functie waarmee de overeenkomende logica wordt uitgevoerd."
    return:
      type: System.Security.Claims.Claim
      description: "Het eerste overeenkomende claim of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen overeenkomst is gevonden."
  overload: System.Security.Claims.ClaimsIdentity.FindFirst*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>match</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
  id: FindFirst(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: FindFirst(String)
  nameWithType: ClaimsIdentity.FindFirst(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Haalt het eerste claim met de opgegeven claimtype."
  syntax:
    content: public virtual System.Security.Claims.Claim FindFirst (string type);
    parameters:
    - id: type
      type: System.String
      description: "Het claimtype moet worden gezocht."
    return:
      type: System.Security.Claims.Claim
      description: "Het eerste overeenkomende claim of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen overeenkomst is gevonden."
  overload: System.Security.Claims.ClaimsIdentity.FindFirst*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ClaimsIdentity.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsIdentity.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Vult de <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> met gegevens die nodig zijn voor het serialiseren van de huidige <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> object."
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Het object te vullen met gegevens."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "De bestemming voor deze serialisatie. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Claims.ClaimsIdentity.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})
  id: HasClaim(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: HasClaim(Predicate<Claim>)
  nameWithType: ClaimsIdentity.HasClaim(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(Predicate<Claim>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Hiermee wordt bepaald of dit identiteit heeft een claim die met het opgegeven predicaat overeenkomt-claims."
  syntax:
    content: public virtual bool HasClaim (Predicate<System.Security.Claims.Claim> match);
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: "De functie waarmee de overeenkomende logica wordt uitgevoerd."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een overeenkomende claim bestaat; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Claims.ClaimsIdentity.HasClaim*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>match</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)
  id: HasClaim(System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: HasClaim(String,String)
  nameWithType: ClaimsIdentity.HasClaim(String,String)
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Hiermee wordt bepaald of dit claims identiteit heeft een claim met het opgegeven type en de waarde."
  remarks: "Controleert niet op de <xref:System.Security.Claims.Claim.Issuer%2A>of <xref:System.Security.Claims.Claim.OriginalIssuer%2A>Eigenschappen.</xref:System.Security.Claims.Claim.OriginalIssuer%2A> </xref:System.Security.Claims.Claim.Issuer%2A> De vergelijking wordt gemaakt met behulp van rangtelwoord hoofdlettergevoelig op waarde; aanvraag in gevoelig voor het type."
  syntax:
    content: public virtual bool HasClaim (string type, string value);
    parameters:
    - id: type
      type: System.String
      description: "Het type van de claim moet worden gezocht."
    - id: value
      type: System.String
      description: "De waarde van de claim moet worden gezocht."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een overeenkomst wordt gevonden; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Claims.ClaimsIdentity.HasClaim*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is **null**.       -or-       <code>value</code> is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.IsAuthenticated
  id: IsAuthenticated
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: ClaimsIdentity.IsAuthenticated
  fullName: System.Security.Claims.ClaimsIdentity.IsAuthenticated
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Haalt een waarde die aangeeft of de identiteit is geverifieerd."
  remarks: '`true`Als de <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>eigenschap is niet `null` of een lege tekenreeks.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>'
  syntax:
    content: public virtual bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de identiteit is geverifieerd; anders **false**."
  overload: System.Security.Claims.ClaimsIdentity.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Label
  id: Label
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Label
  nameWithType: ClaimsIdentity.Label
  fullName: System.Security.Claims.ClaimsIdentity.Label
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Opgehaald of ingesteld van het label voor dit identity-claims."
  syntax:
    content: public string Label { get; set; }
    return:
      type: System.String
      description: "Het label."
  overload: System.Security.Claims.ClaimsIdentity.Label*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Name
  id: Name
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Name
  nameWithType: ClaimsIdentity.Name
  fullName: System.Security.Claims.ClaimsIdentity.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Haalt de naam van dit claims-identiteit."
  remarks: "Retourneert de waarde van de eerste claim met een type dat overeenkomt met de naam claimtype ingesteld in de <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>eigenschap.</xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> Als er geen claim wordt gevonden die overeenkomt met het claimtype naam, retourneert `null`."
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "De naam of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Claims.ClaimsIdentity.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.NameClaimType
  id: NameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: NameClaimType
  nameWithType: ClaimsIdentity.NameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.NameClaimType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Hiermee wordt het claimtype die wordt gebruikt om te bepalen welke claims geeft de waarde op voor de <xref:System.Security.Claims.ClaimsIdentity.Name*>identity-eigenschap van dit claims.</xref:System.Security.Claims.ClaimsIdentity.Name*>"
  remarks: "De eigenschap NameClaimType geeft het claimtype (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=fullName>) die wordt gebruikt om de naam voor deze identiteit te geven.</xref:System.Security.Claims.Claim.Type%2A?displayProperty=fullName> De naam kan worden geopend via de <xref:System.Security.Claims.ClaimsIdentity.Name%2A>eigenschap.</xref:System.Security.Claims.ClaimsIdentity.Name%2A>       Deze eigenschap is ingesteld door de constructor."
  syntax:
    content: public string NameClaimType { get; }
    return:
      type: System.String
      description: "Het claimtype naam."
  overload: System.Security.Claims.ClaimsIdentity.NameClaimType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
  id: RemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: RemoveClaim(Claim)
  nameWithType: ClaimsIdentity.RemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.RemoveClaim(Claim)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Pogingen om een claim verwijderen uit de claims-identiteit."
  remarks: "Het is mogelijk dat de claim kan niet worden verwijderd omdat deze niet is eigendom van de identiteit. Bijvoorbeeld, zou dit het geval is bij rolclaims die eigendom zijn van de principal. In tegenstelling tot de <xref:System.Security.Claims.ClaimsIdentity.TryRemoveClaim%2A>methode een Booleaanse waarde die aangeeft retourneert of de claim is verwijderd, RemoveClaim genereert een uitzondering als de claim kan niet worden verwijderd. de opgegeven claim is overeenkomt met de objectverwijzing (<xref:System.Object.ReferenceEquals%2A>).</xref:System.Object.ReferenceEquals%2A> </xref:System.Security.Claims.ClaimsIdentity.TryRemoveClaim%2A>       Deze methode heeft de `SecurityCritical` kenmerk dat wordt toegepast om te bepalen welke entiteiten claims van de identiteit kunnen verwijderen. Verder omlaag de pipe autorisatiebeslissingen zijn gemaakt op basis van de claims die aanwezig zijn in de <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>verzameling.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>"
  syntax:
    content: public virtual void RemoveClaim (System.Security.Claims.Claim claim);
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: "De claim te verwijderen."
  overload: System.Security.Claims.ClaimsIdentity.RemoveClaim*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De claim kan niet worden verwijderd."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.RoleClaimType
  id: RoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: RoleClaimType
  nameWithType: ClaimsIdentity.RoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.RoleClaimType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Hiermee haalt u de claimtype dat wordt geïnterpreteerd als een .NET Framework-functie tussen de claims in deze claims-identiteit."
  remarks: "Het claimtype rol is het claimtype (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=fullName>) die wordt gebruikt bij het evalueren van deze identiteit voor de <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=fullName>methode.</xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=fullName> </xref:System.Security.Claims.Claim.Type%2A?displayProperty=fullName> De <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=fullName>methode wordt aangeroepen om te bepalen of de huidige principal in een opgegeven rol.</xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=fullName> Het model op basis van claims breidt deze controle voor het gebruik van claims die wordt aangeboden door de principal. Een <xref:System.Security.Claims.ClaimsPrincipal>object kan bevatten een of meer <xref:System.Security.Claims.ClaimsIdentity>objecten en elk object identiteit kunnen bevatten meerdere <xref:System.Security.Claims.Claim>objecten.</xref:System.Security.Claims.Claim> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsPrincipal> De eigenschap RoleClaimType geeft het claimtype van de claim die moet worden gebruikt om de waarde voor de rol bij het evalueren van dit <xref:System.Security.Claims.ClaimsIdentity>object.</xref:System.Security.Claims.ClaimsIdentity> De eigenschap is ingesteld door de constructor. Er is een algemene waarde <xref:System.Security.Claims.ClaimTypes.Role?displayProperty=fullName>.</xref:System.Security.Claims.ClaimTypes.Role?displayProperty=fullName>"
  syntax:
    content: public string RoleClaimType { get; }
    return:
      type: System.String
      description: "De rol claimtype."
  overload: System.Security.Claims.ClaimsIdentity.RoleClaimType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
  id: TryRemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: TryRemoveClaim(Claim)
  nameWithType: ClaimsIdentity.TryRemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(Claim)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Pogingen om een claim verwijderen uit de claims-identiteit."
  remarks: "Het is mogelijk dat de claim kan niet worden verwijderd omdat deze niet is eigendom van de identiteit. Bijvoorbeeld, zou dit het geval is bij rolclaims die eigendom zijn van de principal.       De opgegeven claim is overeenkomt met de objectverwijzing (<xref:System.Object.ReferenceEquals%2A>).</xref:System.Object.ReferenceEquals%2A>       Deze methode heeft de `SecurityCritical` kenmerk dat wordt toegepast om te bepalen welke entiteiten claims van de identiteit kunnen verwijderen. Verder omlaag de pipe autorisatiebeslissingen zijn gemaakt op basis van de claims die aanwezig zijn in de <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>verzameling.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>"
  syntax:
    content: public virtual bool TryRemoveClaim (System.Security.Claims.Claim claim);
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: "De claim te verwijderen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de claim is verwijderd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Claims.ClaimsIdentity.TryRemoveClaim*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
  id: WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: WriteTo(BinaryWriter)
  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter)
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(BinaryWriter)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: public virtual void WriteTo (System.IO.BinaryWriter writer);
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: "Moet worden toegevoegd."
  overload: System.Security.Claims.ClaimsIdentity.WriteTo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])
  id: WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: WriteTo(BinaryWriter,Byte[])
  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter,Byte[])
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(BinaryWriter,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: protected virtual void WriteTo (System.IO.BinaryWriter writer, byte[] userData);
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: "Moet worden toegevoegd."
    - id: userData
      type: System.Byte[]
      description: "Moet worden toegevoegd."
  overload: System.Security.Claims.ClaimsIdentity.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Claims.ClaimsIdentity.#ctor
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity()
  nameWithType: ClaimsIdentity.ClaimsIdentity()
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity()
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>)
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Claim>
  nameWithType: IEnumerable<Claim>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Security.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(BinaryReader)
  nameWithType: ClaimsIdentity.ClaimsIdentity(BinaryReader)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(BinaryReader)
- uid: System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(SerializationInfo)
  nameWithType: ClaimsIdentity.ClaimsIdentity(SerializationInfo)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(SerializationInfo)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(ClaimsIdentity)
  nameWithType: ClaimsIdentity.ClaimsIdentity(ClaimsIdentity)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(ClaimsIdentity)
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IIdentity)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity)
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: true
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IEnumerable<Claim>,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String)
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(SerializationInfo,StreamingContext)
  nameWithType: ClaimsIdentity.ClaimsIdentity(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>)
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(String,String,String)
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String,String,String)
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
- uid: System.Security.Claims.ClaimsIdentity.Actor
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Actor
  nameWithType: ClaimsIdentity.Actor
  fullName: System.Security.Claims.ClaimsIdentity.Actor
- uid: System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AddClaim(Claim)
  nameWithType: ClaimsIdentity.AddClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.AddClaim(Claim)
- uid: System.Security.Claims.Claim
  parent: System.Security.Claims
  isExternal: false
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
- uid: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AddClaims(IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.AddClaims(IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.AddClaims(IEnumerable<Claim>)
- uid: System.Security.Claims.ClaimsIdentity.AuthenticationType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClaimsIdentity.AuthenticationType
  fullName: System.Security.Claims.ClaimsIdentity.AuthenticationType
- uid: System.Security.Claims.ClaimsIdentity.BootstrapContext
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: BootstrapContext
  nameWithType: ClaimsIdentity.BootstrapContext
  fullName: System.Security.Claims.ClaimsIdentity.BootstrapContext
- uid: System.Security.Claims.ClaimsIdentity.Claims
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Claims
  nameWithType: ClaimsIdentity.Claims
  fullName: System.Security.Claims.ClaimsIdentity.Claims
- uid: System.Security.Claims.ClaimsIdentity.Clone
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Clone()
  nameWithType: ClaimsIdentity.Clone()
  fullName: System.Security.Claims.ClaimsIdentity.Clone()
- uid: System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: CreateClaim(BinaryReader)
  nameWithType: ClaimsIdentity.CreateClaim(BinaryReader)
  fullName: System.Security.Claims.ClaimsIdentity.CreateClaim(BinaryReader)
- uid: System.Security.Claims.ClaimsIdentity.CustomSerializationData
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: CustomSerializationData
  nameWithType: ClaimsIdentity.CustomSerializationData
  fullName: System.Security.Claims.ClaimsIdentity.CustomSerializationData
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Claims.ClaimsIdentity.DefaultIssuer
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: DefaultIssuer
  nameWithType: ClaimsIdentity.DefaultIssuer
  fullName: System.Security.Claims.ClaimsIdentity.DefaultIssuer
- uid: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: DefaultNameClaimType
  nameWithType: ClaimsIdentity.DefaultNameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
- uid: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: DefaultRoleClaimType
  nameWithType: ClaimsIdentity.DefaultRoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindAll(Predicate<Claim>)
  nameWithType: ClaimsIdentity.FindAll(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(Predicate<Claim>)
- uid: System.Predicate{System.Security.Claims.Claim}
  parent: System
  isExternal: true
  name: Predicate<Claim>
  nameWithType: Predicate<Claim>
  fullName: System.Predicate<System.Security.Claims.Claim>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: Predicate<System.Security.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindAll(String)
  nameWithType: ClaimsIdentity.FindAll(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(String)
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindFirst(Predicate<Claim>)
  nameWithType: ClaimsIdentity.FindFirst(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(Predicate<Claim>)
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindFirst(String)
  nameWithType: ClaimsIdentity.FindFirst(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(String)
- uid: System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ClaimsIdentity.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsIdentity.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: HasClaim(Predicate<Claim>)
  nameWithType: ClaimsIdentity.HasClaim(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(Predicate<Claim>)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: HasClaim(String,String)
  nameWithType: ClaimsIdentity.HasClaim(String,String)
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(String,String)
- uid: System.Security.Claims.ClaimsIdentity.IsAuthenticated
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClaimsIdentity.IsAuthenticated
  fullName: System.Security.Claims.ClaimsIdentity.IsAuthenticated
- uid: System.Security.Claims.ClaimsIdentity.Label
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Label
  nameWithType: ClaimsIdentity.Label
  fullName: System.Security.Claims.ClaimsIdentity.Label
- uid: System.Security.Claims.ClaimsIdentity.Name
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Name
  nameWithType: ClaimsIdentity.Name
  fullName: System.Security.Claims.ClaimsIdentity.Name
- uid: System.Security.Claims.ClaimsIdentity.NameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: NameClaimType
  nameWithType: ClaimsIdentity.NameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.NameClaimType
- uid: System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: RemoveClaim(Claim)
  nameWithType: ClaimsIdentity.RemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.RemoveClaim(Claim)
- uid: System.Security.Claims.ClaimsIdentity.RoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: RoleClaimType
  nameWithType: ClaimsIdentity.RoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.RoleClaimType
- uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: TryRemoveClaim(Claim)
  nameWithType: ClaimsIdentity.TryRemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(Claim)
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: WriteTo(BinaryWriter)
  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter)
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(BinaryWriter)
- uid: System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: WriteTo(BinaryWriter,Byte[])
  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter,Byte[])
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(BinaryWriter,Byte[])
- uid: System.Security.Claims.ClaimsIdentity.#ctor*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity.ClaimsIdentity
- uid: System.Security.Claims.ClaimsIdentity.Actor*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Actor
  nameWithType: ClaimsIdentity.Actor
- uid: System.Security.Claims.ClaimsIdentity.AddClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AddClaim
  nameWithType: ClaimsIdentity.AddClaim
- uid: System.Security.Claims.ClaimsIdentity.AddClaims*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AddClaims
  nameWithType: ClaimsIdentity.AddClaims
- uid: System.Security.Claims.ClaimsIdentity.AuthenticationType*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClaimsIdentity.AuthenticationType
- uid: System.Security.Claims.ClaimsIdentity.BootstrapContext*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: BootstrapContext
  nameWithType: ClaimsIdentity.BootstrapContext
- uid: System.Security.Claims.ClaimsIdentity.Claims*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Claims
  nameWithType: ClaimsIdentity.Claims
- uid: System.Security.Claims.ClaimsIdentity.Clone*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Clone
  nameWithType: ClaimsIdentity.Clone
- uid: System.Security.Claims.ClaimsIdentity.CreateClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: CreateClaim
  nameWithType: ClaimsIdentity.CreateClaim
- uid: System.Security.Claims.ClaimsIdentity.CustomSerializationData*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: CustomSerializationData
  nameWithType: ClaimsIdentity.CustomSerializationData
- uid: System.Security.Claims.ClaimsIdentity.FindAll*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindAll
  nameWithType: ClaimsIdentity.FindAll
- uid: System.Security.Claims.ClaimsIdentity.FindFirst*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindFirst
  nameWithType: ClaimsIdentity.FindFirst
- uid: System.Security.Claims.ClaimsIdentity.GetObjectData*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: GetObjectData
  nameWithType: ClaimsIdentity.GetObjectData
- uid: System.Security.Claims.ClaimsIdentity.HasClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: HasClaim
  nameWithType: ClaimsIdentity.HasClaim
- uid: System.Security.Claims.ClaimsIdentity.IsAuthenticated*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClaimsIdentity.IsAuthenticated
- uid: System.Security.Claims.ClaimsIdentity.Label*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Label
  nameWithType: ClaimsIdentity.Label
- uid: System.Security.Claims.ClaimsIdentity.Name*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Name
  nameWithType: ClaimsIdentity.Name
- uid: System.Security.Claims.ClaimsIdentity.NameClaimType*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: NameClaimType
  nameWithType: ClaimsIdentity.NameClaimType
- uid: System.Security.Claims.ClaimsIdentity.RemoveClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: RemoveClaim
  nameWithType: ClaimsIdentity.RemoveClaim
- uid: System.Security.Claims.ClaimsIdentity.RoleClaimType*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: RoleClaimType
  nameWithType: ClaimsIdentity.RoleClaimType
- uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: TryRemoveClaim
  nameWithType: ClaimsIdentity.TryRemoveClaim
- uid: System.Security.Claims.ClaimsIdentity.WriteTo*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: WriteTo
  nameWithType: ClaimsIdentity.WriteTo
