### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.SymmetricAlgorithm
  id: SymmetricAlgorithm
  children:
  - System.Security.Cryptography.SymmetricAlgorithm.#ctor
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Clear
  - System.Security.Cryptography.SymmetricAlgorithm.Create
  - System.Security.Cryptography.SymmetricAlgorithm.Create(System.String)
  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
  - System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
  - System.Security.Cryptography.SymmetricAlgorithm.IV
  - System.Security.Cryptography.SymmetricAlgorithm.IVValue
  - System.Security.Cryptography.SymmetricAlgorithm.Key
  - System.Security.Cryptography.SymmetricAlgorithm.KeySize
  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.Mode
  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Padding
  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  langs:
  - csharp
  name: SymmetricAlgorithm
  nameWithType: SymmetricAlgorithm
  fullName: System.Security.Cryptography.SymmetricAlgorithm
  type: Class
  summary: "Hiermee geeft u de abstracte basisklasse waaruit alle implementaties van symmetrische algoritmen moeten worden overgenomen."
  remarks: "De klassen die zijn afgeleid van de klasse SymmetricAlgorithm gebruiken een chaining modus cipher block chaining (CBC), waarbij een sleutel wordt vereist (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) en een initialisatievector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) cryptografische transformaties voor gegevens uitvoeren.</xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> </xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>  Om gegevens te decoderen die is versleuteld met een van de klassen SymmetricAlgorithm, stelt u de <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>eigenschap en de <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>eigenschap dezelfde waarden in die werden gebruikt voor versleuteling.</xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> </xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>  Een symmetrische algoritme nuttig moet de geheime sleutel bekend zijn alleen voor de zender en ontvanger.       <xref:System.Security.Cryptography.RijndaelManaged>, <xref:System.Security.Cryptography.DESCryptoServiceProvider>, <xref:System.Security.Cryptography.RC2CryptoServiceProvider>, en <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider>zijn implementaties van symmetrische algoritmen.</xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> </xref:System.Security.Cryptography.RC2CryptoServiceProvider> </xref:System.Security.Cryptography.DESCryptoServiceProvider></xref:System.Security.Cryptography.RijndaelManaged>       Houd er rekening mee dat wanneer met behulp van klassen afgeleide, niet genoeg, vanuit beveiligingsoogpunt is, gewoon een garbagecollection afdwingen als u klaar bent met het gebruik van het object. U moet expliciet aanroepen de <xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A>methode voor het object op nul uit geen gevoelige gegevens binnen het object voordat deze is uitgebracht.</xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A> Houd er rekening mee dat garbagecollection komt uit de inhoud van verzamelde objecten niet nul, maar het geheugen als beschikbaar voor hertoewijzing simpelweg gemarkeerd. Dus de gegevens in een garbagecollection verzamelde object mogelijk nog steeds aanwezig zijn in de geheugenheap in niet-toegewezen geheugen. In het geval van cryptografische objecten, kan deze gegevens bevatten gevoelige informatie zoals sleutelgegevens of een blok met tekst zonder opmaak.       Alle cryptografische klassen in .NET Framework die implementeren gevoelige gegevens bevatten een `Clear` methode. Als deze wordt aangeroepen, de `Clear` methode overschrijft alle gevoelige gegevens binnen het object met nullen en het object weer loslaat zodat deze veilig garbage collector zijn verzameld worden kan. Als het object is op nul en vrijgegeven, moet u vervolgens aanroepen de `Dispose` methode met de `disposing` parameter ingesteld op `True` bij het verwijderen van alle beheerde en onbeheerde resources zijn gekoppeld aan het object."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.RijndaelManaged> class with the specified <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`, and outputs the encrypted result to the file specified by `outName`. The `desKey` and `desIV` parameters to the method are 8-byte arrays. You must have the high encryption pack installed to run this example.  \n  \n [!code-cpp[Classic CryptoStream Example#1](~/add/codesnippet/cpp/t-system.security.crypto_19_1.cpp)]\n [!code-cs[Classic CryptoStream Example#1](~/add/codesnippet/csharp/t-system.security.crypto_19_1.cs)]\n [!code-vb[Classic CryptoStream Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_19_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class SymmetricAlgorithm : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: SymmetricAlgorithm()
  nameWithType: SymmetricAlgorithm.SymmetricAlgorithm()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.SymmetricAlgorithm()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Cryptography.SymmetricAlgorithm&quot;> </xref> klasse."
  remarks: "U kan geen exemplaar van een abstracte klasse maken. Toepassingscode maakt een nieuw exemplaar van een afgeleide klasse."
  syntax:
    content: protected SymmetricAlgorithm ();
    parameters: []
  overload: System.Security.Cryptography.SymmetricAlgorithm.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "De uitvoering van de klasse die is afgeleid van het symmetrische algoritme is niet geldig."
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  id: BlockSize
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: BlockSize
  nameWithType: SymmetricAlgorithm.BlockSize
  fullName: System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Opgehaald of ingesteld van de grootte van het blok in bits, van de cryptografische bewerking."
  remarks: "De blokgrootte is de basiseenheid voor gegevens die kunnen worden versleuteld of ontsleuteld in één bewerking. Berichten die langer is dan de grootte van het blok worden behandeld als opeenvolgende blokken. berichten die korter is dan de grootte van het blok moeten worden aangevuld met extra bits de grootte van een blok bereiken. Geldige blokformaten worden bepaald door het symmetrische algoritme die wordt gebruikt."
  syntax:
    content: public virtual int BlockSize { get; set; }
    return:
      type: System.Int32
      description: "De grootte van het blok in bits."
  overload: System.Security.Cryptography.SymmetricAlgorithm.BlockSize*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Grootte van het blok is ongeldig."
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  id: BlockSizeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: BlockSizeValue
  nameWithType: SymmetricAlgorithm.BlockSizeValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee geeft u de grootte van het blok in bits, van de cryptografische bewerking."
  remarks: "De blokgrootte is de basiseenheid voor gegevens die kunnen worden versleuteld of ontsleuteld in één bewerking. Berichten die langer is dan de grootte van het blok worden behandeld als opeenvolgende blokken. berichten die korter is dan de grootte van het blok moeten worden aangevuld met extra bits de grootte van een blok bereiken. Geldige blokformaten worden bepaald door het symmetrische algoritme die wordt gebruikt.       Dit veld kan worden geopend via de <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A>eigenschap.</xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A>"
  syntax:
    content: protected int BlockSizeValue;
    return:
      type: System.Int32
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.Clear
  id: Clear
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: Clear()
  nameWithType: SymmetricAlgorithm.Clear()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Versies van alle resources die worden gebruikt door de <xref href=&quot;System.Security.Cryptography.SymmetricAlgorithm&quot;> </xref> klasse."
  remarks: "Houd er rekening mee dat wanneer met behulp van klassen afgeleide, niet genoeg, vanuit beveiligingsoogpunt is, gewoon een garbagecollection afdwingen als u klaar bent met het gebruik van het object. U moet de methode Clear expliciet aanroepen voor het object op nul uit geen gevoelige gegevens binnen het object voordat deze is uitgebracht. Houd er rekening mee dat garbagecollection komt uit de inhoud van verzamelde objecten niet nul, maar het geheugen als beschikbaar voor hertoewijzing simpelweg gemarkeerd. Dus de gegevens in een garbagecollection verzamelde object mogelijk nog steeds aanwezig zijn in de geheugenheap in niet-toegewezen geheugen. In het geval van cryptografische objecten, kan deze gegevens bevatten gevoelige informatie zoals sleutelgegevens of een blok met tekst zonder opmaak.       Alle cryptografische klassen in .NET Framework die implementeren gevoelige gegevens bevatten een `Clear` methode. Als deze wordt aangeroepen, de `Clear` methode overschrijft alle gevoelige gegevens binnen het object met nullen en het object weer loslaat zodat deze veilig garbage collector zijn verzameld worden kan. Als het object is op nul en vrijgegeven, moet u vervolgens aanroepen de `Dispose` methode met de `disposing` parameter ingesteld op `True` bij het verwijderen van alle beheerde en onbeheerde resources zijn gekoppeld aan het object."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Cryptography.SymmetricAlgorithm.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.Create
  id: Create
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: Create()
  nameWithType: SymmetricAlgorithm.Create()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Maakt een standaard cryptografische object gebruikt voor het uitvoeren van het symmetrische algoritme."
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.RijndaelManaged> class with the specified <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`, and outputs the encrypted result to the file specified by `outName`. The `desKey` and `desIV` parameters to the method are 8-byte arrays. You must have the high encryption pack installed to run this example.  \n  \n [!code-cpp[Classic CryptoStream Example#1](~/add/codesnippet/cpp/m-system.security.crypto_114_1.cpp)]\n [!code-cs[Classic CryptoStream Example#1](~/add/codesnippet/csharp/m-system.security.crypto_114_1.cs)]\n [!code-vb[Classic CryptoStream Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_114_1.vb)]"
  syntax:
    content: public static System.Security.Cryptography.SymmetricAlgorithm Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.SymmetricAlgorithm
      description: "Een standaard cryptografische object gebruikt voor het uitvoeren van het symmetrische algoritme."
  overload: System.Security.Cryptography.SymmetricAlgorithm.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: Create(String)
  nameWithType: SymmetricAlgorithm.Create(String)
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Wordt gebruikt voor het uitvoeren van het symmetrische algoritme opgegeven cryptografische-object gemaakt."
  syntax:
    content: public static System.Security.Cryptography.SymmetricAlgorithm Create (string algName);
    parameters:
    - id: algName
      type: System.String
      description: "De naam van de specifieke implementatie van de <xref href=&quot;System.Security.Cryptography.SymmetricAlgorithm&quot;> </xref> klasse moet worden gebruikt."
    return:
      type: System.Security.Cryptography.SymmetricAlgorithm
      description: "Een cryptografische object dat wordt gebruikt voor het uitvoeren van het symmetrische algoritme."
  overload: System.Security.Cryptography.SymmetricAlgorithm.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  id: CreateDecryptor
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: CreateDecryptor()
  nameWithType: SymmetricAlgorithm.CreateDecryptor()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee maakt u een symmetrische decryptor-object met de huidige <> </> *> eigenschap en initialisatie-vector (<>*>)."
  remarks: "Deze methode ontsleutelt een gecodeerd bericht gemaakt met behulp van de <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A>met dezelfde handtekening van de overbelasting.</xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A>"
  syntax:
    content: public virtual System.Security.Cryptography.ICryptoTransform CreateDecryptor ();
    parameters: []
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "Een symmetrische decryptor-object."
  overload: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])
  id: CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: SymmetricAlgorithm.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Wanneer in een afgeleide klasse genegeerd, maakt u een symmetrische decryptor-object met de opgegeven <> </> *> eigenschap en initialisatie-vector (<>*>)."
  remarks: "Deze methode ontsleutelt een gecodeerd bericht gemaakt met behulp van de <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A>met dezelfde parameters van de overbelasting.</xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A>"
  syntax:
    content: public abstract System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "De geheime sleutel moet worden gebruikt voor het symmetrische algoritme."
    - id: rgbIV
      type: System.Byte[]
      description: "De initialisatievector moet worden gebruikt voor het symmetrische algoritme."
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "Een symmetrische decryptor-object."
  overload: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  id: CreateEncryptor
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: CreateEncryptor()
  nameWithType: SymmetricAlgorithm.CreateEncryptor()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee maakt u een symmetrische encryptor-object met de huidige <> </> *> eigenschap en initialisatie-vector (<>*>)."
  remarks: "Als de huidige <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>eigenschap is `null`, de <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A>methode wordt aangeroepen voor het maken van een nieuwe willekeurige <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>.</xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> </xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> </xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> Als de huidige <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>eigenschap is `null`, de <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A>methode wordt aangeroepen voor het maken van een nieuwe willekeurige <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>.</xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> </xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A> </xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>       Gebruik de <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A>met dezelfde handtekening voor het ontsleutelen van het resultaat van deze methode van de overbelasting.</xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A>"
  example:
  - "The following example encrypts a string using the transform object returned from the CreateEncryptor method.  \n  \n [!code-cpp[System.Security.Cryptography.SymmetricAlgorithm#1](~/add/codesnippet/cpp/m-system.security.crypto_124_1.cpp)]\n [!code-cs[System.Security.Cryptography.SymmetricAlgorithm#1](~/add/codesnippet/csharp/m-system.security.crypto_124_1.cs)]\n [!code-vb[System.Security.Cryptography.SymmetricAlgorithm#1](~/add/codesnippet/visualbasic/m-system.security.crypto_124_1.vb)]"
  syntax:
    content: public virtual System.Security.Cryptography.ICryptoTransform CreateEncryptor ();
    parameters: []
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "Een symmetrische encryptor-object."
  overload: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])
  id: CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: SymmetricAlgorithm.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Wanneer in een afgeleide klasse genegeerd, maakt u een symmetrische encryptor-object met de opgegeven <> </> *> eigenschap en initialisatie-vector (<>*>)."
  remarks: "Gebruik de <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A>met dezelfde parameters voor het ontsleutelen van het resultaat van deze methode van de overbelasting.</xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A>"
  syntax:
    content: public abstract System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "De geheime sleutel moet worden gebruikt voor het symmetrische algoritme."
    - id: rgbIV
      type: System.Byte[]
      description: "De initialisatievector moet worden gebruikt voor het symmetrische algoritme."
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "Een symmetrische encryptor-object."
  overload: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose
  id: Dispose
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: Dispose()
  nameWithType: SymmetricAlgorithm.Dispose()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Versies van alle resources die worden gebruikt door het huidige exemplaar van de <xref href=&quot;System.Security.Cryptography.SymmetricAlgorithm&quot;> </xref> klasse."
  remarks: "Roep `Dispose` wanneer u klaar bent met de <xref:System.Security.Cryptography.SymmetricAlgorithm>.</xref:System.Security.Cryptography.SymmetricAlgorithm> De `Dispose` methode blijft de <xref:System.Security.Cryptography.SymmetricAlgorithm>in een onbruikbare status.</xref:System.Security.Cryptography.SymmetricAlgorithm> Na het aanroepen `Dispose`, moet u alle verwijzingen naar vrijgeven de <xref:System.Security.Cryptography.SymmetricAlgorithm>zodat het geheugen door de garbage collector vrijmaken kunt die de <xref:System.Security.Cryptography.SymmetricAlgorithm>is bepaald dat zich bevindt.</xref:System.Security.Cryptography.SymmetricAlgorithm> </xref:System.Security.Cryptography.SymmetricAlgorithm>       Zie voor meer informatie [onbeheerde hulpbronnen reinigen](~/add/includes/ajax-current-ext-md.md) en [uitvoering van een methode Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Altijd aanroep `Dispose` voordat u uw laatste verwijzing naar de <xref:System.Security.Cryptography.SymmetricAlgorithm>.</xref:System.Security.Cryptography.SymmetricAlgorithm> vrijgeven Anders wordt de resources die worden gebruikt niet vrij tot het aanroepen van de garbagecollector van de <xref:System.Security.Cryptography.SymmetricAlgorithm>van het object `Finalize` methode.</xref:System.Security.Cryptography.SymmetricAlgorithm>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.SymmetricAlgorithm.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SymmetricAlgorithm.Dispose(Boolean)
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Heft de niet-beheerde bronnen worden gebruikt door de <xref href=&quot;System.Security.Cryptography.SymmetricAlgorithm&quot;> </xref> en eventueel de beheerde bronnen vrij."
  remarks: "Deze methode wordt aangeroepen door het publiek `Dispose()` methode en de `Finalize` methode. `Dispose()`Hiermee wordt de beveiligde `Dispose(Boolean)` methode met de `disposing` parameter ingesteld op `true`. `Finalize`roept `Dispose` met `disposing` ingesteld op `false`.       Wanneer de `disposing` parameter `true`, deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit <xref:System.Security.Cryptography.SymmetricAlgorithm>verwijzingen.</xref:System.Security.Cryptography.SymmetricAlgorithm> Deze methode roept de `Dispose()` methode van elk object waarnaar wordt verwezen."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om alleen niet-beheerde bronnen vrij te geven."
  overload: System.Security.Cryptography.SymmetricAlgorithm.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  id: FeedbackSize
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: FeedbackSize
  nameWithType: SymmetricAlgorithm.FeedbackSize
  fullName: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Opgehaald of ingesteld van de grootte van de feedback in bits, van de cryptografische bewerking."
  remarks: "De feedbackgrootte van de bepaalt de hoeveelheid gegevens die naar opeenvolgende versleuteling of ontsleuteling operations wordt ingevoerd. De feedbackgrootte mag niet groter zijn dan de grootte van het blok."
  syntax:
    content: public virtual int FeedbackSize { get; set; }
    return:
      type: System.Int32
      description: "De feedbackgrootte in bits."
  overload: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "De feedbackgrootte van de is groter dan de grootte van het blok."
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  id: FeedbackSizeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: FeedbackSizeValue
  nameWithType: SymmetricAlgorithm.FeedbackSizeValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee geeft u de feedbackgrootte van de in bits, van de cryptografische bewerking."
  remarks: "De feedbackgrootte van de bepaalt de hoeveelheid gegevens die naar opeenvolgende versleuteling of ontsleuteling operations wordt ingevoerd. De feedbackgrootte mag niet groter zijn dan de grootte van het blok.       Dit veld kan worden geopend via de <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize%2A>eigenschap.</xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize%2A>"
  syntax:
    content: protected int FeedbackSizeValue;
    return:
      type: System.Int32
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
  id: GenerateIV
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: GenerateIV()
  nameWithType: SymmetricAlgorithm.GenerateIV()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Wanneer in een afgeleide klasse genegeerd, genereert u een willekeurige initialisatievector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) moet worden gebruikt voor de algoritme.</xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>"
  remarks: "In het algemeen is er geen reden om deze methode te gebruiken omdat `CreateEncryptor()` of `CreateEncryptor(null, null)` genereert automatisch een initialisatievector en een sleutel. U kunt echter de GenerateIV-methode gebruiken om een symmetrische algoritme-exemplaar met een andere initialisatievector opnieuw te gebruiken."
  syntax:
    content: public abstract void GenerateIV ();
    parameters: []
  overload: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
  id: GenerateKey
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: GenerateKey()
  nameWithType: SymmetricAlgorithm.GenerateKey()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Wanneer in een afgeleide klasse genegeerd, genereert u een willekeurige sleutel (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) moet worden gebruikt voor de algoritme.</xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>"
  remarks: "In het algemeen is er geen reden om deze methode te gebruiken omdat `CreateEncryptor()` of `CreateEncryptor(null, null)` genereert automatisch een initialisatievector en een sleutel. U kunt echter de GenerateKey-methode gebruiken om een symmetrische algoritme-exemplaar met een andere sleutel opnieuw te gebruiken."
  syntax:
    content: public abstract void GenerateKey ();
    parameters: []
  overload: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.IV
  id: IV
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: IV
  nameWithType: SymmetricAlgorithm.IV
  fullName: System.Security.Cryptography.SymmetricAlgorithm.IV
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Opgehaald of ingesteld van de initialisatievector (IV) voor de symmetrische algoritme."
  remarks: "De eigenschap IV wordt automatisch ingesteld op een nieuwe willekeurige waarde wanneer u een nieuw exemplaar van een van de <xref:System.Security.Cryptography.SymmetricAlgorithm>klassen of wanneer u handmatig roept de <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A>methode.</xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A> </xref:System.Security.Cryptography.SymmetricAlgorithm>  De grootte van de eigenschap IV moet hetzelfde zijn als de <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A>eigenschap gedeeld door 8.</xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A>       De klassen die zijn afgeleid van de <xref:System.Security.Cryptography.SymmetricAlgorithm>klasse gebruiken een chaining modus cipher block chaining (CBC), waarvoor een sleutel en een initialisatievector cryptografische transformaties voor gegevens uitvoeren.</xref:System.Security.Cryptography.SymmetricAlgorithm>  Voor het ontsleutelen van gegevens die is versleuteld met een van de <xref:System.Security.Cryptography.SymmetricAlgorithm>klassen, stelt u de <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>en IV eigenschap dezelfde waarden in die werden gebruikt voor versleuteling.</xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> </xref:System.Security.Cryptography.SymmetricAlgorithm>       Voor een bepaalde geheime sleutel *k*, een eenvoudige blokcodering die geen van een initialisatievector gebruikmaakt hetzelfde invoer blok van tekst zonder opmaak in het hetzelfde uitvoerblok van de gecodeerde tekst worden gecodeerd. Als er dubbele blokken binnen uw stream met tekst zonder opmaak, hebt u dubbele blokken binnen uw cipher tekst stream. Als niet-geautoriseerde gebruikers over de structuur van een blok van de tekst zonder opmaak weet, ze die informatie het tekstblok bekende cipher ontcijferd en kunt uw sleutel mogelijk te herstellen. Gegevens uit het vorige blok is bestrijding van dit probleem in het proces van het versleutelen van het volgende blok gemengd. De uitvoer van de twee identieke platte tekstblokken is dus verschillende. Omdat deze techniek gebruikmaakt van het vorige blok voor het versleutelen van het volgende codeblok, is een initialisatievector nodig voor het versleutelen van het eerste vereiste blok van gegevens."
  syntax:
    content: public virtual byte[] IV { get; set; }
    return:
      type: System.Byte[]
      description: "De initialisatievector."
  overload: System.Security.Cryptography.SymmetricAlgorithm.IV*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Er is een poging gedaan de initialisatievector instellen op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Een poging gedaan de initialisatievector instellen op een ongeldige grootte."
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.IVValue
  id: IVValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: IVValue
  nameWithType: SymmetricAlgorithm.IVValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.IVValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee geeft u de initialisatievector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) voor de symmetrische algoritme.</xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>"
  remarks: "Dit veld kan worden geopend via de <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>eigenschap.</xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>"
  syntax:
    content: protected byte[] IVValue;
    return:
      type: System.Byte[]
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.Key
  id: Key
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: Key
  nameWithType: SymmetricAlgorithm.Key
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Key
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Opgehaald of ingesteld van de geheime sleutel voor het symmetrische algoritme."
  remarks: "De geheime sleutel wordt gebruikt voor versleuteling en ontsleuteling. Een symmetrische algoritme lukken, moet de geheime sleutel bekend zijn alleen voor de zender en ontvanger. De geldige sleutel grootten zijn opgegeven door de bepaalde symmetrische algoritme-implementatie en worden vermeld in de <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>eigenschap.</xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>       Als deze eigenschap is `null` als deze wordt gebruikt, de <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A>methode wordt aangeroepen voor het maken van een nieuwe willekeurige waarde.</xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A>"
  syntax:
    content: public virtual byte[] Key { get; set; }
    return:
      type: System.Byte[]
      description: "De geheime sleutel moet worden gebruikt voor het symmetrische algoritme."
  overload: System.Security.Cryptography.SymmetricAlgorithm.Key*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Er is een poging gedaan de sleutel instellen op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "De sleutelgrootte is ongeldig."
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySize
  id: KeySize
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: KeySize
  nameWithType: SymmetricAlgorithm.KeySize
  fullName: System.Security.Cryptography.SymmetricAlgorithm.KeySize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Opgehaald of ingesteld van de grootte, in bits, van de geheime sleutel die wordt gebruikt door het symmetrische algoritme."
  remarks: "De geldige sleutel grootten zijn opgegeven door de bepaalde symmetrische algoritme-implementatie en worden vermeld in de <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>eigenschap.</xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>"
  syntax:
    content: public virtual int KeySize { get; set; }
    return:
      type: System.Int32
      description: "De grootte, in bits, van de geheime sleutel die wordt gebruikt door het symmetrische algoritme."
  overload: System.Security.Cryptography.SymmetricAlgorithm.KeySize*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "De sleutelgrootte is niet geldig."
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  id: KeySizeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: KeySizeValue
  nameWithType: SymmetricAlgorithm.KeySizeValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee geeft u de grootte, in bits, van de geheime sleutel die wordt gebruikt door het symmetrische algoritme."
  remarks: "De geldige sleutel grootten zijn opgegeven door de bepaalde symmetrische algoritme-implementatie en worden vermeld in de <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>eigenschap.</xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>       Dit veld kan worden geopend via de <xref:System.Security.Cryptography.SymmetricAlgorithm.KeySize%2A>eigenschap.</xref:System.Security.Cryptography.SymmetricAlgorithm.KeySize%2A>"
  syntax:
    content: protected int KeySizeValue;
    return:
      type: System.Int32
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  id: KeyValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: KeyValue
  nameWithType: SymmetricAlgorithm.KeyValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee geeft u de geheime sleutel voor het symmetrische algoritme."
  remarks: "De geheime sleutel wordt gebruikt voor versleuteling en ontsleuteling. Een symmetrische algoritme lukken, moet de geheime sleutel bekend zijn alleen voor de zender en ontvanger. De geldige sleutel grootten zijn opgegeven door de bepaalde symmetrische algoritme-implementatie en worden vermeld in de <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>eigenschap.</xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>       Dit veld kan worden geopend via de <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>eigenschap.</xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>"
  syntax:
    content: protected byte[] KeyValue;
    return:
      type: System.Byte[]
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  id: LegalBlockSizes
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: LegalBlockSizes
  nameWithType: SymmetricAlgorithm.LegalBlockSizes
  fullName: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee haalt de blokformaten in bits, die worden ondersteund door het symmetrische algoritme."
  remarks: "Het symmetrische algoritme ondersteunt alleen blokformaten die overeenkomen met een vermelding in deze matrix."
  example:
  - "The following example shows the value of LegalBlockSizes for the symmetric algorithms.  \n  \n [!code-vb[System.Security.Cryptography.SymmetricAlgorithm.BlockSize#1](~/add/codesnippet/visualbasic/p-system.security.crypto_95_1.vb)]\n [!code-cs[System.Security.Cryptography.SymmetricAlgorithm.BlockSize#1](~/add/codesnippet/csharp/p-system.security.crypto_95_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.KeySizes[] LegalBlockSizes { get; }
    return:
      type: System.Security.Cryptography.KeySizes[]
      description: "Een matrix met de blokformaten ondersteund door de algoritme."
  overload: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  id: LegalBlockSizesValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: LegalBlockSizesValue
  nameWithType: SymmetricAlgorithm.LegalBlockSizesValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee geeft u de blokformaten in bits, die worden ondersteund door het symmetrische algoritme."
  remarks: "Het symmetrische algoritme ondersteunt alleen blokformaten die overeenkomen met een vermelding in deze matrix.       Dit veld kan worden geopend via de <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A>eigenschap.</xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A>"
  syntax:
    content: protected System.Security.Cryptography.KeySizes[] LegalBlockSizesValue;
    return:
      type: System.Security.Cryptography.KeySizes[]
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  id: LegalKeySizes
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: LegalKeySizes
  nameWithType: SymmetricAlgorithm.LegalKeySizes
  fullName: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee haalt de belangrijkste grootten in bits, die worden ondersteund door het symmetrische algoritme."
  remarks: "Het symmetrische algoritme ondersteunt alleen belangrijke grootten die overeenkomen met een vermelding in deze matrix."
  example:
  - "The following example shows the value of LegalKeySizes for the symmetric algorithms.  \n  \n [!code-vb[System.Security.Cryptography.SymmetricAlgorithm.BlockSize#1](~/add/codesnippet/visualbasic/p-system.security.crypto_72_1.vb)]\n [!code-cs[System.Security.Cryptography.SymmetricAlgorithm.BlockSize#1](~/add/codesnippet/csharp/p-system.security.crypto_72_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }
    return:
      type: System.Security.Cryptography.KeySizes[]
      description: "Een matrix met de belangrijkste grootten ondersteund door de algoritme."
  overload: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  id: LegalKeySizesValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: LegalKeySizesValue
  nameWithType: SymmetricAlgorithm.LegalKeySizesValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee geeft u de belangrijkste grootten in bits, die worden ondersteund door het symmetrische algoritme."
  remarks: "Het symmetrische algoritme ondersteunt alleen belangrijke grootten die overeenkomen met een vermelding in deze matrix.       Dit veld kan worden geopend via de <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>eigenschap.</xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>"
  syntax:
    content: protected System.Security.Cryptography.KeySizes[] LegalKeySizesValue;
    return:
      type: System.Security.Cryptography.KeySizes[]
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.Mode
  id: Mode
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: Mode
  nameWithType: SymmetricAlgorithm.Mode
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Mode
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Opgehaald of ingesteld van de modus voor bewerking van het symmetrische algoritme."
  remarks: "Zie <xref:System.Security.Cryptography.CipherMode>opsomming voor een beschrijving van specifieke modi.</xref:System.Security.Cryptography.CipherMode>"
  syntax:
    content: public virtual System.Security.Cryptography.CipherMode Mode { get; set; }
    return:
      type: System.Security.Cryptography.CipherMode
      description: "De modus voor bewerking van het symmetrische algoritme. De standaardwaarde is <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref>."
  overload: System.Security.Cryptography.SymmetricAlgorithm.Mode*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "De versleutelingsmodus is niet een van de <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref> waarden."
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  id: ModeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: ModeValue
  nameWithType: SymmetricAlgorithm.ModeValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee geeft u de versleutelingsmodus in het symmetrische algoritme gebruikt."
  remarks: "Zie <xref:System.Security.Cryptography.CipherMode>opsomming voor een beschrijving van specifieke modi.</xref:System.Security.Cryptography.CipherMode>       Dit veld kan worden geopend via de <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode%2A>eigenschap.</xref:System.Security.Cryptography.SymmetricAlgorithm.Mode%2A>"
  syntax:
    content: protected System.Security.Cryptography.CipherMode ModeValue;
    return:
      type: System.Security.Cryptography.CipherMode
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.Padding
  id: Padding
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: Padding
  nameWithType: SymmetricAlgorithm.Padding
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Padding
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Opgehaald of ingesteld van de opvullingsmodus gebruikt in het symmetrische algoritme."
  remarks: "De meeste tekst zonder opmaak berichten niet bestaan uit een aantal bytes dat blokken geheel te vullen. Er zijn vaak geen onvoldoende bytes voor het vervullen van het laatste blok. Wanneer dit gebeurt, wordt een tekenreeks opvulling toegevoegd aan de tekst. Bijvoorbeeld, als de bloklengte van het 64-bits is en het laatste blok alleen 40 bits bevat, 24-bits opvulling toegevoegd. Zie de <xref:System.Security.Cryptography.PaddingMode>opsomming voor een beschrijving van specifieke modi.</xref:System.Security.Cryptography.PaddingMode>"
  syntax:
    content: public virtual System.Security.Cryptography.PaddingMode Padding { get; set; }
    return:
      type: System.Security.Cryptography.PaddingMode
      description: "De opvullingsmodus gebruikt in het symmetrische algoritme. De standaardwaarde is <xref href=&quot;System.Security.Cryptography.PaddingMode&quot;> </xref>."
  overload: System.Security.Cryptography.SymmetricAlgorithm.Padding*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "De opvullingsmodus is niet een van de <xref href=&quot;System.Security.Cryptography.PaddingMode&quot;> </xref> waarden."
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  id: PaddingValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: PaddingValue
  nameWithType: SymmetricAlgorithm.PaddingValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee geeft u de opvullingsmodus gebruikt in het symmetrische algoritme."
  remarks: "De meeste tekst zonder opmaak berichten niet bestaan uit een aantal bytes dat blokken geheel te vullen. Er zijn vaak geen onvoldoende bytes voor het vervullen van het laatste blok. Wanneer dit gebeurt, wordt een tekenreeks opvulling toegevoegd aan de tekst. Bijvoorbeeld, als de bloklengte van het 64-bits is en het laatste blok alleen 40 bits bevat, 24-bits opvulling toegevoegd. Zie de <xref:System.Security.Cryptography.PaddingMode>opsomming voor een beschrijving van specifieke modi.</xref:System.Security.Cryptography.PaddingMode>       Dit veld kan worden geopend via de <xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A>eigenschap.</xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A>"
  syntax:
    content: protected System.Security.Cryptography.PaddingMode PaddingValue;
    return:
      type: System.Security.Cryptography.PaddingMode
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  id: ValidKeySize(System.Int32)
  parent: System.Security.Cryptography.SymmetricAlgorithm
  langs:
  - csharp
  name: ValidKeySize(Int32)
  nameWithType: SymmetricAlgorithm.ValidKeySize(Int32)
  fullName: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee wordt bepaald of de opgegeven sleutelgrootte geldig voor de huidige algoritme is."
  syntax:
    content: public bool ValidKeySize (int bitLength);
    parameters:
    - id: bitLength
      type: System.Int32
      description: "De lengte in bits, om te controleren op een geldige sleutelgrootte."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opgegeven sleutelgrootte geldig voor de huidige algoritme is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.SymmetricAlgorithm.#ctor
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: SymmetricAlgorithm()
  nameWithType: SymmetricAlgorithm.SymmetricAlgorithm()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.SymmetricAlgorithm()
- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: BlockSize
  nameWithType: SymmetricAlgorithm.BlockSize
  fullName: System.Security.Cryptography.SymmetricAlgorithm.BlockSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: BlockSizeValue
  nameWithType: SymmetricAlgorithm.BlockSizeValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.Clear
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Clear()
  nameWithType: SymmetricAlgorithm.Clear()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Clear()
- uid: System.Security.Cryptography.SymmetricAlgorithm.Create
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Create()
  nameWithType: SymmetricAlgorithm.Create()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Create()
- uid: System.Security.Cryptography.SymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: SymmetricAlgorithm
  nameWithType: SymmetricAlgorithm
  fullName: System.Security.Cryptography.SymmetricAlgorithm
- uid: System.Security.Cryptography.SymmetricAlgorithm.Create(System.String)
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Create(String)
  nameWithType: SymmetricAlgorithm.Create(String)
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: CreateDecryptor()
  nameWithType: SymmetricAlgorithm.CreateDecryptor()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor()
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: SymmetricAlgorithm.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(Byte[],Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: CreateEncryptor()
  nameWithType: SymmetricAlgorithm.CreateEncryptor()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor()
- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: SymmetricAlgorithm.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Dispose()
  nameWithType: SymmetricAlgorithm.Dispose()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Dispose()
- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SymmetricAlgorithm.Dispose(Boolean)
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: FeedbackSize
  nameWithType: SymmetricAlgorithm.FeedbackSize
  fullName: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: FeedbackSizeValue
  nameWithType: SymmetricAlgorithm.FeedbackSizeValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: GenerateIV()
  nameWithType: SymmetricAlgorithm.GenerateIV()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV()
- uid: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: GenerateKey()
  nameWithType: SymmetricAlgorithm.GenerateKey()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey()
- uid: System.Security.Cryptography.SymmetricAlgorithm.IV
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: IV
  nameWithType: SymmetricAlgorithm.IV
  fullName: System.Security.Cryptography.SymmetricAlgorithm.IV
- uid: System.Security.Cryptography.SymmetricAlgorithm.IVValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: IVValue
  nameWithType: SymmetricAlgorithm.IVValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.IVValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.Key
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Key
  nameWithType: SymmetricAlgorithm.Key
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Key
- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySize
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: KeySize
  nameWithType: SymmetricAlgorithm.KeySize
  fullName: System.Security.Cryptography.SymmetricAlgorithm.KeySize
- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: KeySizeValue
  nameWithType: SymmetricAlgorithm.KeySizeValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: KeyValue
  nameWithType: SymmetricAlgorithm.KeyValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.KeyValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: LegalBlockSizes
  nameWithType: SymmetricAlgorithm.LegalBlockSizes
  fullName: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
- uid: System.Security.Cryptography.KeySizes[]
  parent: System.Security.Cryptography
  isExternal: false
  name: KeySizes
  nameWithType: KeySizes
  fullName: System.Security.Cryptography.KeySizes[]
  spec.csharp:
  - uid: System.Security.Cryptography.KeySizes
    name: KeySizes
    nameWithType: KeySizes
    fullName: KeySizes[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: LegalBlockSizesValue
  nameWithType: SymmetricAlgorithm.LegalBlockSizesValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: LegalKeySizes
  nameWithType: SymmetricAlgorithm.LegalKeySizes
  fullName: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: LegalKeySizesValue
  nameWithType: SymmetricAlgorithm.LegalKeySizesValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.Mode
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Mode
  nameWithType: SymmetricAlgorithm.Mode
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Mode
- uid: System.Security.Cryptography.CipherMode
  parent: System.Security.Cryptography
  isExternal: false
  name: CipherMode
  nameWithType: CipherMode
  fullName: System.Security.Cryptography.CipherMode
- uid: System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: ModeValue
  nameWithType: SymmetricAlgorithm.ModeValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.ModeValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.Padding
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Padding
  nameWithType: SymmetricAlgorithm.Padding
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Padding
- uid: System.Security.Cryptography.PaddingMode
  parent: System.Security.Cryptography
  isExternal: false
  name: PaddingMode
  nameWithType: PaddingMode
  fullName: System.Security.Cryptography.PaddingMode
- uid: System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: PaddingValue
  nameWithType: SymmetricAlgorithm.PaddingValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: ValidKeySize(Int32)
  nameWithType: SymmetricAlgorithm.ValidKeySize(Int32)
  fullName: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(Int32)
- uid: System.Security.Cryptography.SymmetricAlgorithm.#ctor*
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: SymmetricAlgorithm
  nameWithType: SymmetricAlgorithm.SymmetricAlgorithm
- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSize*
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: BlockSize
  nameWithType: SymmetricAlgorithm.BlockSize
- uid: System.Security.Cryptography.SymmetricAlgorithm.Clear*
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Clear
  nameWithType: SymmetricAlgorithm.Clear
- uid: System.Security.Cryptography.SymmetricAlgorithm.Create*
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Create
  nameWithType: SymmetricAlgorithm.Create
- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor*
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: CreateDecryptor
  nameWithType: SymmetricAlgorithm.CreateDecryptor
- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor*
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: CreateEncryptor
  nameWithType: SymmetricAlgorithm.CreateEncryptor
- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose*
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Dispose
  nameWithType: SymmetricAlgorithm.Dispose
- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: FeedbackSize
  nameWithType: SymmetricAlgorithm.FeedbackSize
- uid: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV*
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: GenerateIV
  nameWithType: SymmetricAlgorithm.GenerateIV
- uid: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey*
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: GenerateKey
  nameWithType: SymmetricAlgorithm.GenerateKey
- uid: System.Security.Cryptography.SymmetricAlgorithm.IV*
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: IV
  nameWithType: SymmetricAlgorithm.IV
- uid: System.Security.Cryptography.SymmetricAlgorithm.Key*
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Key
  nameWithType: SymmetricAlgorithm.Key
- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySize*
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: KeySize
  nameWithType: SymmetricAlgorithm.KeySize
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes*
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: LegalBlockSizes
  nameWithType: SymmetricAlgorithm.LegalBlockSizes
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes*
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: LegalKeySizes
  nameWithType: SymmetricAlgorithm.LegalKeySizes
- uid: System.Security.Cryptography.SymmetricAlgorithm.Mode*
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Mode
  nameWithType: SymmetricAlgorithm.Mode
- uid: System.Security.Cryptography.SymmetricAlgorithm.Padding*
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Padding
  nameWithType: SymmetricAlgorithm.Padding
- uid: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize*
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: ValidKeySize
  nameWithType: SymmetricAlgorithm.ValidKeySize
