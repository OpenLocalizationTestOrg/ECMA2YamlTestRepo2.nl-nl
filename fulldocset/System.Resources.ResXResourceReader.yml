### YamlMime:ManagedReference
items:
- uid: System.Resources.ResXResourceReader
  id: ResXResourceReader
  children:
  - System.Resources.ResXResourceReader.#ctor(System.IO.Stream)
  - System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)
  - System.Resources.ResXResourceReader.#ctor(System.String)
  - System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])
  - System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])
  - System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])
  - System.Resources.ResXResourceReader.BasePath
  - System.Resources.ResXResourceReader.Close
  - System.Resources.ResXResourceReader.Dispose(System.Boolean)
  - System.Resources.ResXResourceReader.Finalize
  - System.Resources.ResXResourceReader.FromFileContents(System.String)
  - System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])
  - System.Resources.ResXResourceReader.GetEnumerator
  - System.Resources.ResXResourceReader.GetMetadataEnumerator
  - System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator
  - System.Resources.ResXResourceReader.System#IDisposable#Dispose
  - System.Resources.ResXResourceReader.UseResXDataNodes
  langs:
  - csharp
  name: ResXResourceReader
  nameWithType: ResXResourceReader
  fullName: System.Resources.ResXResourceReader
  type: Class
  summary: "XML-bronbestanden (.resx) en gegevensstromen inventariseren en leest de opeenvolgende resource naam / waarde-paren."
  remarks: "De klasse ResXResourceReader biedt een standaardimplementatie van de <xref:System.Resources.IResourceReader>interface die resourcegegevens in een XML-indeling leest.</xref:System.Resources.IResourceReader> Als u wilt lezen resourcegegevens uit een indeling van de binaire bron, gebruiken de <xref:System.Resources.ResourceReader>klasse.</xref:System.Resources.ResourceReader>       Gebruik van de klasse ResXResourceReader bronnen in .resx bestanden inventariseren door de enumerator woordenlijst passeert (<xref:System.Collections.IDictionaryEnumerator>) die wordt geretourneerd door de <xref:System.Resources.ResXResourceReader.GetEnumerator%2A>methode.</xref:System.Resources.ResXResourceReader.GetEnumerator%2A> </xref:System.Collections.IDictionaryEnumerator> Aanroepen van de methoden die door <xref:System.Collections.IDictionaryEnumerator>om door te gaan naar de volgende resource en de naam en waarde van elke resource in het .resx-bestand te lezen.</xref:System.Collections.IDictionaryEnumerator>      > [!NOTE] > De ResXResourceReader klasse biedt twee enumerators. De <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName>methode retourneert een <xref:System.Collections.IDictionaryEnumerator>object; het is raadzaam dat u deze methode gebruikt het opsommen van resources.</xref:System.Collections.IDictionaryEnumerator> </xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName> De <xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName>methode is een expliciete interface-implementatie die als resultaat geeft een <xref:System.Collections.IEnumerator>object; we raden niet het gebruik ervan.</xref:System.Collections.IEnumerator> </xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName>       Het volgende voorbeeld wordt de <xref:System.Resources.ResXResourceReader.GetEnumerator%2A>methode verkrijgen van een <xref:System.Collections.IDictionaryEnumerator>object dat wordt gebruikt voor het inventariseren van de bronnen in een .resx-bestand.</xref:System.Collections.IDictionaryEnumerator> </xref:System.Resources.ResXResourceReader.GetEnumerator%2A> Het voorbeeld bevat een `CreateResourceFile` routine waarmee het bronbestand voor de benodigde maakt.       [!code-cs[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/csharp/t-system.resources.resxr_1_1.cs)][!code-vb[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_1.vb) ] als de <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>eigenschap is `true`, de waarde van de <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName>eigenschap is een <xref:System.Resources.ResXDataNode>object in plaats van de resourcewaarde.</xref:System.Resources.ResXDataNode> </xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName> </xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>   Hiermee maakt u een resource-item Opmerking beschikbaar vanuit de <xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName>eigenschap.</xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName> Het volgende voorbeeld wordt de <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>eigenschap `true` en inventariseren van de resources in een .resx-bestand [!code-cs [System.Resources.ResXResourceReader.Class#2](~/add/codesnippet/csharp/t-system.resources.resxr_1_2.cs)][!code-vb[System.Resources.ResXResourceReader.Class#2](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_2.vb) ] als <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>is `true`, wordt de <xref:System.Resources.ResXDataNode>items in de opsomming kunnen zijn:-titel resources samen met hun gegevens.</xref:System.Resources.ResXDataNode> </xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>   </xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> In dit geval de <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName>eigenschap is `null`.</xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName>      -De naam van resources samen met de naam van het bestand met de brongegevens. In dit geval de <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName>eigenschap retourneert een <xref:System.Resources.ResXFileRef>object dat informatie over de resource bevat, inclusief de bestandsnaam.</xref:System.Resources.ResXFileRef> </xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName> Als relatieve bestandsnamen worden gebruikt, moet u altijd stelt de <xref:System.Resources.ResXResourceReader.BasePath%2A>eigenschap voor een referentiepunt voor het relatieve bestandspad.</xref:System.Resources.ResXResourceReader.BasePath%2A>       Als u wilt ophalen van benoemde bronnen van een .resx-bestand in plaats van de daarbij behorende bronnen inventariseren, u kunt instantiÃ«ren een <xref:System.Resources.ResXResourceSet>object en de aanroep van de `GetString` en `GetObject` methoden.</xref:System.Resources.ResXResourceSet>      > [!NOTE] > De ResXResourceReader klasse bevat een koppeling-vraag en een vraag overname op het klasseniveau van de die van toepassing op alle leden is. Een <xref:System.Security.SecurityException>uitzondering wordt gegenereerd wanneer de onmiddellijke aanroeper of de afgeleide klasse is niet gemachtigd volledig vertrouwen.</xref:System.Security.SecurityException>"
  example:
  - "The following example demonstrates how to use a ResXResourceReader to iterate through the resources in a .resx file. First, the ResXResourceReader`rsxr` is created for the file `items.resx`. Next, the <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> method is used to create an <xref:System.Collections.IDictionaryEnumerator> to iterate through the resources and display the contents to the console.  \n  \n [!code-cpp[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/cpp/t-system.resources.resxr_1_3.cpp)]\n [!code-cs[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/csharp/t-system.resources.resxr_1_3.cs)]\n [!code-vb[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_3.vb)]"
  syntax:
    content: 'public class ResXResourceReader : System.Resources.IResourceReader'
  inheritance:
  - System.Object
  implements:
  - System.Resources.IResourceReader
  inheritedMembers: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(Stream)
  nameWithType: ResXResourceReader.ResXResourceReader(Stream)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> klasse voor de opgegeven stroom."
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Resources.ResXResourceReader.Dispose%2A> and <xref:System.Resources.ResXResourceReader.Close%2A> methods do not close the stream you specify in this constructor.
  syntax:
    content: public ResXResourceReader (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Een invoerstroom met bronnen."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)
  id: '#ctor(System.IO.TextReader)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(TextReader)
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> klasse voor de opgegeven <xref:System.IO.TextReader>.</xref:System.IO.TextReader>"
  syntax:
    content: public ResXResourceReader (System.IO.TextReader reader);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: "Een tekst invoerstroom met bronnen."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(String)
  nameWithType: ResXResourceReader.ResXResourceReader(String)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> klasse voor het bronbestand voor de opgegeven."
  remarks: ''
  example:
  - "The following example creates a new instance of the <xref:System.Resources.ResXResourceReader> class for the specified file, iterates through the resources of the file, and displays the contents to the console.  \n  \n [!code-cpp[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/cpp/m-system.resources.resxr_1_1.cpp)]\n [!code-cs[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/csharp/m-system.resources.resxr_1_1.cs)]\n [!code-vb[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/visualbasic/m-system.resources.resxr_1_1.vb)]"
  syntax:
    content: public ResXResourceReader (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Het pad van het bronbestand te lezen."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)
  id: '#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(Stream,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> klasse met behulp van een invoerstroom en een type-service voor naamomzetting."
  syntax:
    content: public ResXResourceReader (System.IO.Stream stream, System.ComponentModel.Design.ITypeResolutionService typeResolver);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Een invoerstroom met bronnen."
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
      description: "Een object dat wordt omgezet Typ namen die zijn opgegeven in een resource."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])
  id: '#ctor(System.IO.Stream,System.Reflection.AssemblyName[])'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(Stream,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> klasse met behulp van een stroom en een matrix van assembly-namen."
  syntax:
    content: public ResXResourceReader (System.IO.Stream stream, System.Reflection.AssemblyName[] assemblyNames);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Een invoerstroom met bronnen."
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
      description: "Een matrix van <xref:System.Reflection.AssemblyName>objecten die Hiermee geeft u een of meer assembly&quot;s.</xref:System.Reflection.AssemblyName> De assembly&quot;s worden gebruikt voor het omzetten van de typenaam van een in de resource in een type."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)
  id: '#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(TextReader,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> klasse met behulp van een lezer van de stroom tekst en een type-service voor naamomzetting."
  syntax:
    content: public ResXResourceReader (System.IO.TextReader reader, System.ComponentModel.Design.ITypeResolutionService typeResolver);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: "Een lezer van de tekst stream met bronnen."
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
      description: "Een object dat wordt omgezet Typ namen die zijn opgegeven in een resource."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])
  id: '#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(TextReader,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> klasse met behulp van een <xref:System.IO.TextReader>object en een matrix van assembly-namen.</xref:System.IO.TextReader>"
  syntax:
    content: public ResXResourceReader (System.IO.TextReader reader, System.Reflection.AssemblyName[] assemblyNames);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: "Een object dat wordt gebruikt voor het lezen van bronnen van een stroom van tekst."
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
      description: "Een matrix van <xref:System.Reflection.AssemblyName>objecten die Hiermee geeft u een of meer assembly&quot;s.</xref:System.Reflection.AssemblyName> De assembly&quot;s worden gebruikt voor het omzetten van de typenaam van een in de resource in een type."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)
  id: '#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(String,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> klasse met behulp van een bestandsnaam en een type-service voor naamomzetting."
  syntax:
    content: public ResXResourceReader (string fileName, System.ComponentModel.Design.ITypeResolutionService typeResolver);
    parameters:
    - id: fileName
      type: System.String
      description: "De naam van een XML-bron-bestand dat resources bevat."
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
      description: "Een object dat wordt omgezet Typ namen die zijn opgegeven in een resource."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])
  id: '#ctor(System.String,System.Reflection.AssemblyName[])'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(String,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(String,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,AssemblyName[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> klasse met behulp van de bestandsnaam van een XML-bron- en een matrix van assembly-namen."
  syntax:
    content: public ResXResourceReader (string fileName, System.Reflection.AssemblyName[] assemblyNames);
    parameters:
    - id: fileName
      type: System.String
      description: "De naam van een XML-bron-bestand dat resources bevat."
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
      description: "Een matrix van <xref:System.Reflection.AssemblyName>objecten die Hiermee geeft u een of meer assembly&quot;s.</xref:System.Reflection.AssemblyName> De assembly&quot;s worden gebruikt voor het omzetten van de typenaam van een in de resource in een type."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.BasePath
  id: BasePath
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: BasePath
  nameWithType: ResXResourceReader.BasePath
  fullName: System.Resources.ResXResourceReader.BasePath
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Opgehaald of ingesteld van het basispad voor het relatieve bestandspad is opgegeven in een <xref href=&quot;System.Resources.ResXFileRef&quot;> </xref> object."
  remarks: "De eigenschap basispad naar het wordt gebruikt voor het omzetten van relatief pad verwijzingen die zijn toegewezen aan de <xref:System.Resources.ResXFileRef.FileName%2A>eigenschap van <xref:System.Resources.ResXFileRef>objecten.</xref:System.Resources.ResXFileRef> </xref:System.Resources.ResXFileRef.FileName%2A>  De waarde is standaard <xref:System.String.Empty?displayProperty=fullName>, en relatief pad verwijzingen zijn opgelost in relatie tot de huidige map die is geretourneerd door de <xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName>eigenschap.</xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName> </xref:System.String.Empty?displayProperty=fullName> U moet deze eigenschap instellen voordat u begint met het inventariseren van resources."
  example:
  - "The following example creates an XML resource file that contains images of dog breeds, and also creates a string resource that specifies the application that created the resource. <xref:System.Resources.ResXFileRef> objects are used to store the path to the images rather than storing the binary images themselves in the resource file. The example sets the BasePath property so that the relative file paths in the images' file names are interpreted as subdirectories of a directory named C:\\data\\\\.  \n  \n [!code-vb[System.Resources.ResXResourceReader.BasePath#1](~/add/codesnippet/visualbasic/p-system.resources.resxr_1_1.vb)]\n [!code-cs[System.Resources.ResXResourceReader.BasePath#1](~/add/codesnippet/csharp/p-system.resources.resxr_1_1.cs)]  \n  \n Note that you must add a reference to System.Drawing.dll to compile the project successfully. The example also requires that the necessary images exist in a directory named C:\\data\\images\\\\."
  syntax:
    content: public string BasePath { get; set; }
    return:
      type: System.String
      description: "Een pad dat, als de functienaam geplaatst om het relatieve bestandspad opgegeven in een <xref href=&quot;System.Resources.ResXFileRef&quot;> </xref> object, resulteert in een absoluut pad naar een resource-bestand."
  overload: System.Resources.ResXResourceReader.BasePath*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "In een set-bewerking kan niet een waarde worden opgegeven omdat de XML-bronbestand al is geopend en gebruikt wordt."
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.Close
  id: Close
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: Close()
  nameWithType: ResXResourceReader.Close()
  fullName: System.Resources.ResXResourceReader.Close()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Versies van alle resources die worden gebruikt door de <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref>."
  remarks: "De resources die worden gebruikt door het aanroepen van sluiten schakelt de <xref:System.Resources.ResXResourceReader>naar opnieuw worden toegewezen voor andere doeleinden.</xref:System.Resources.ResXResourceReader> Zie voor meer informatie over sluiten [onbeheerde hulpbronnen reinigen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example displays the resources of a file to the console, and then uses the Close method to shut down the reader and to make its resources available for other processes.  \n  \n [!code-cpp[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/cpp/m-system.resources.resxr_2_1.cpp)]\n [!code-cs[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/csharp/m-system.resources.resxr_2_1.cs)]\n [!code-vb[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/visualbasic/m-system.resources.resxr_2_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Resources.ResXResourceReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ResXResourceReader.Dispose(Boolean)
  fullName: System.Resources.ResXResourceReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Heft de niet-beheerde bronnen worden gebruikt door de <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> en eventueel de beheerde bronnen vrij."
  remarks: "Deze methode kan worden aangeroepen door de <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A>methode of de <xref:System.Object.Finalize%2A?displayProperty=fullName>methode.</xref:System.Object.Finalize%2A?displayProperty=fullName> </xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A>Deze methode met roept de `disposing` parameter ingesteld op `true`.</xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> <xref:System.Object.Finalize%2A>Deze methode met roept `disposing` ingesteld op `false`.</xref:System.Object.Finalize%2A>       Wanneer de `disposing` parameter `true`, deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit <xref:System.Resources.ResXResourceReader>verwijzingen.</xref:System.Resources.ResXResourceReader> Deze methode roept de `Dispose` methode van elk object waarnaar wordt verwezen."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om alleen niet-beheerde bronnen vrij te geven."
  overload: System.Resources.ResXResourceReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.Finalize
  id: Finalize
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: Finalize()
  nameWithType: ResXResourceReader.Finalize()
  fullName: System.Resources.ResXResourceReader.Finalize()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Dit lid overschrijft de <xref:System.Object.Finalize*>methode.</xref:System.Object.Finalize*>"
  syntax:
    content: ~ResXResourceReader ();
    parameters: []
  overload: System.Resources.ResXResourceReader.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String)
  id: FromFileContents(System.String)
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: FromFileContents(String)
  nameWithType: ResXResourceReader.FromFileContents(String)
  fullName: System.Resources.ResXResourceReader.FromFileContents(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Maakt een nieuw <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> object en geÃ¯nitialiseerd met behulp van een tekenreeks waarvan de inhoud in de vorm van een resource XML-bestand worden gelezen."
  syntax:
    content: public static System.Resources.ResXResourceReader FromFileContents (string fileContents);
    parameters:
    - id: fileContents
      type: System.String
      description: "Een tekenreeks met informatie over XML-resource-indeling."
    return:
      type: System.Resources.ResXResourceReader
      description: "Een object dat wordt gelezen van bronnen van de <code> fileContents </code> tekenreeks."
  overload: System.Resources.ResXResourceReader.FromFileContents*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  id: FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: FromFileContents(String,ITypeResolutionService)
  nameWithType: ResXResourceReader.FromFileContents(String,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.FromFileContents(String,ITypeResolutionService)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Maakt een nieuw <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> object en geÃ¯nitialiseerd met behulp van een tekenreeks waarvan de inhoud zich in de vorm van een XML-bestand voor resource lezen en gebruiken een <xref href=&quot;System.ComponentModel.Design.ITypeResolutionService&quot;> </xref> object omzetten typenamen die zijn opgegeven in een resource."
  syntax:
    content: public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.ComponentModel.Design.ITypeResolutionService typeResolver);
    parameters:
    - id: fileContents
      type: System.String
      description: "Een tekenreeks met informatie over XML-resource-indeling."
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
      description: "Een object dat wordt omgezet Typ namen die zijn opgegeven in een resource."
    return:
      type: System.Resources.ResXResourceReader
      description: "Een object dat wordt gelezen van bronnen van de <code> fileContents </code> tekenreeks."
  overload: System.Resources.ResXResourceReader.FromFileContents*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])
  id: FromFileContents(System.String,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: FromFileContents(String,AssemblyName[])
  nameWithType: ResXResourceReader.FromFileContents(String,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.FromFileContents(String,AssemblyName[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Maakt een nieuw <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> object en geÃ¯nitialiseerd met behulp van een tekenreeks waarvan de inhoud zich in de vorm van een XML-bestand voor resource lezen en het gebruik van een matrix van <xref:System.Reflection.AssemblyName>objecten om op te lossen typenamen die zijn opgegeven in een resource.</xref:System.Reflection.AssemblyName>"
  syntax:
    content: public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.Reflection.AssemblyName[] assemblyNames);
    parameters:
    - id: fileContents
      type: System.String
      description: "Een tekenreeks waarvan de inhoud in de vorm van een resource XML-bestand zijn."
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
      description: "Een matrix van <xref:System.Reflection.AssemblyName>objecten die Hiermee geeft u een of meer assembly&quot;s.</xref:System.Reflection.AssemblyName> De assembly&quot;s worden gebruikt voor het omzetten van de typenaam van een in de resource in een type."
    return:
      type: System.Resources.ResXResourceReader
      description: "Een object dat wordt gelezen van bronnen van de <code> fileContents </code> tekenreeks."
  overload: System.Resources.ResXResourceReader.FromFileContents*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.GetEnumerator
  id: GetEnumerator
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ResXResourceReader.GetEnumerator()
  fullName: System.Resources.ResXResourceReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Retourneert een enumerator voor de huidige <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> object."
  remarks: "De GetEnumerator-methode haalt de naam/waarde-paren in de XML-bronstream (.resx) of een tekenreeks die is gekoppeld aan de huidige <xref:System.Resources.ResXResourceReader>object.</xref:System.Resources.ResXResourceReader> Echter, als de <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>eigenschap is ingesteld op `true` voordat u GetEnumerator aanroepen, de resource-items worden opgehaald als <xref:System.Resources.ResXDataNode>objecten.</xref:System.Resources.ResXDataNode> </xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> Alle knooppunten van de resource worden in dit geval wordt geretourneerd onafhankelijk van type."
  example:
  - "The following example uses the GetEnumerator method to obtain an <xref:System.Collections.IDictionaryEnumerator> object that is used to enumerate the resources in a .resx file. The example includes a `CreateResourceFile` routine that creates the necessary resource file.  \n  \n [!code-cs[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/csharp/m-system.resources.resxr_0_1.cs)]\n [!code-vb[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/visualbasic/m-system.resources.resxr_0_1.vb)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "Een enumerator voor de huidige <xref href=&quot;System.Resources.ResourceReader&quot;> </xref> object."
  overload: System.Resources.ResXResourceReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.GetMetadataEnumerator
  id: GetMetadataEnumerator
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: GetMetadataEnumerator()
  nameWithType: ResXResourceReader.GetMetadataEnumerator()
  fullName: System.Resources.ResXResourceReader.GetMetadataEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Biedt een enumerator voor een woordenlijst die u de eigenschappen ontwerptijd uit het huidige XML-bronbestand of de stroom ophalen kunt."
  remarks: "Resources worden opgeslagen als naam/waarde-paren in een bronbestand of stroom. Ontwerptijdeigenschappen, die de metagegevens worden genoemd, worden opgeslagen in het bronbestand of de stroom samen met de runtime-gegevensbronnen. De methode GetMetadataEnumerator biedt een <xref:System.Collections.IDictionaryEnumerator>-object dat u de metagegevens uit het bronbestand of de stroom die zijn gekoppeld aan de huidige ophalen kunt <xref:System.Resources.ResXResourceReader>object.</xref:System.Resources.ResXResourceReader> </xref:System.Collections.IDictionaryEnumerator> Echter, als de <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>eigenschap is ingesteld op `true` voordat u GetMetadataEnumerator aanroepen, er zijn geen knooppunten resource worden opgehaald.</xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>"
  example:
  - "The following example uses the GetMetadataEnumerator method to iterate through the metadata resources in an XML resource file. This code example is part of a larger example provided for the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property.  \n  \n [!code-vb[System.Resources.ResxresourceReader Example#4](~/add/codesnippet/visualbasic/m-system.resources.resxr_4_1.vb)]\n [!code-cpp[System.Resources.ResxresourceReader Example#4](~/add/codesnippet/cpp/m-system.resources.resxr_4_1.cpp)]\n [!code-cs[System.Resources.ResxresourceReader Example#4](~/add/codesnippet/csharp/m-system.resources.resxr_4_1.cs)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetMetadataEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "Een enumerator voor de metagegevens in een resource."
  overload: System.Resources.ResXResourceReader.GetMetadataEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Resources.ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Retourneert een enumerator voor de huidige <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> object. Zie voor een beschrijving van dit lid, de &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt; methode."
  remarks: "Dit lid is een expliciete interface lid-implementatie. Het kan worden gebruikt alleen wanneer de <xref:System.Resources.ResXResourceReader>exemplaar is geconverteerd naar een <xref:System.Collections.IEnumerable>interface.</xref:System.Collections.IEnumerable> </xref:System.Resources.ResXResourceReader> Voor het inventariseren van de resources in een .resx-bestand, het is raadzaam dat u aanroept de <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName>methode en klikt u vervolgens aanroep de `MoveNext` methode op de geretourneerde <xref:System.Collections.IDictionaryEnumerator>object.</xref:System.Collections.IDictionaryEnumerator> </xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Een enumerator die de naam/waarde-paren in de XML-bronstream (.resx) of een tekenreeks die is gekoppeld aan de huidige kunt doorlopen <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> object."
  overload: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: ResXResourceReader.System.IDisposable.Dispose()
  fullName: System.Resources.ResXResourceReader.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Heft de niet-beheerde bronnen worden gebruikt door de <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> en eventueel de beheerde bronnen vrij. Zie voor een beschrijving van dit lid, de &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt; methode."
  remarks: "Dit lid is een expliciete interface lid-implementatie. Het kan worden gebruikt alleen wanneer de <xref:System.Resources.ResXResourceReader>exemplaar is geconverteerd naar een <xref:System.IDisposable>interface.</xref:System.IDisposable> </xref:System.Resources.ResXResourceReader>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Resources.ResXResourceReader.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.UseResXDataNodes
  id: UseResXDataNodes
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: UseResXDataNodes
  nameWithType: ResXResourceReader.UseResXDataNodes
  fullName: System.Resources.ResXResourceReader.UseResXDataNodes
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of <xref href=&quot;System.Resources.ResXDataNode&quot;> </xref> objecten worden geretourneerd bij het lezen van de huidige resource XML-bestand of stroom."
  remarks: "U kunt de eigenschap UseResXDataNodes instellen voordat u begint met het inventariseren van resources. De waarde is standaard `false`."
  example:
  - "The following example enumerates and displays resource items in an XML file. Initially, UseResXDataNodes is set to `false` to show both data and metadata items as they occur in the resource file. The second enumeration has the UseResXDataNodes set to `true` so that resource data elements are returned as <xref:System.Resources.ResXDataNode>objects.  \n  \n [!code-vb[System.Resources.ResXResourceReader Example#2](~/add/codesnippet/visualbasic/p-system.resources.resxr_0_1.vb)]\n [!code-cpp[System.Resources.ResXResourceReader Example#2](~/add/codesnippet/cpp/p-system.resources.resxr_0_1.cpp)]\n [!code-cs[System.Resources.ResXResourceReader Example#2](~/add/codesnippet/csharp/p-system.resources.resxr_0_1.cs)]  \n  \n The resource XML file used by the example contains one data node and one metadata node. To use the XML file with the previous example, copy the following text and save it to a file named Resource1.resx.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<root>  \n  <resheader name=\"resmimetype\">  \n    <value>text/microsoft-resx</value>  \n  </resheader>  \n  <resheader name=\"version\">  \n    <value>2.0</value>  \n  </resheader>  \n  <resheader name=\"reader\">  \n    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0,  \n           Culture=neutral, PublicKeyToken=b77a5c561934e089  \n    </value>  \n  </resheader>  \n  <resheader name=\"writer\">  \n    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0,  \n           Culture=neutral, PublicKeyToken=b77a5c561934e089  \n    </value>  \n  </resheader>  \n  <data name=\"DataSample\" xml:space=\"preserve\">  \n    <value>Sample DATA value</value>  \n  </data>  \n  <metadata name=\"MetadataSample\">  \n    <value>Sample METADATA value</value>  \n  </metadata>  \n</root>  \n```"
  syntax:
    content: public bool UseResXDataNodes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u knooppunten van resource-gegevens worden opgehaald; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als resource gegevensknooppunten worden genegeerd."
  overload: System.Resources.ResXResourceReader.UseResXDataNodes*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De enumerator voor het bronbestand of de stroom is al geopend in een set-bewerking."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(Stream)
  nameWithType: ResXResourceReader.ResXResourceReader(Stream)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(TextReader)
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Resources.ResXResourceReader.#ctor(System.String)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(String)
  nameWithType: ResXResourceReader.ResXResourceReader(String)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(Stream,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)
- uid: System.ComponentModel.Design.ITypeResolutionService
  parent: System.ComponentModel.Design
  isExternal: false
  name: ITypeResolutionService
  nameWithType: ITypeResolutionService
  fullName: System.ComponentModel.Design.ITypeResolutionService
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(Stream,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])
- uid: System.Reflection.AssemblyName[]
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName[]
  spec.csharp:
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    nameWithType: AssemblyName
    fullName: AssemblyName[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(TextReader,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(TextReader,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])
- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(String,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)
- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(String,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(String,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,AssemblyName[])
- uid: System.Resources.ResXResourceReader.BasePath
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: BasePath
  nameWithType: ResXResourceReader.BasePath
  fullName: System.Resources.ResXResourceReader.BasePath
- uid: System.Resources.ResXResourceReader.Close
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Close()
  nameWithType: ResXResourceReader.Close()
  fullName: System.Resources.ResXResourceReader.Close()
- uid: System.Resources.ResXResourceReader.Dispose(System.Boolean)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ResXResourceReader.Dispose(Boolean)
  fullName: System.Resources.ResXResourceReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Resources.ResXResourceReader.Finalize
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Finalize()
  nameWithType: ResXResourceReader.Finalize()
  fullName: System.Resources.ResXResourceReader.Finalize()
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: FromFileContents(String)
  nameWithType: ResXResourceReader.FromFileContents(String)
  fullName: System.Resources.ResXResourceReader.FromFileContents(String)
- uid: System.Resources.ResXResourceReader
  parent: System.Resources
  isExternal: false
  name: ResXResourceReader
  nameWithType: ResXResourceReader
  fullName: System.Resources.ResXResourceReader
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: FromFileContents(String,ITypeResolutionService)
  nameWithType: ResXResourceReader.FromFileContents(String,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.FromFileContents(String,ITypeResolutionService)
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: FromFileContents(String,AssemblyName[])
  nameWithType: ResXResourceReader.FromFileContents(String,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.FromFileContents(String,AssemblyName[])
- uid: System.Resources.ResXResourceReader.GetEnumerator
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: ResXResourceReader.GetEnumerator()
  fullName: System.Resources.ResXResourceReader.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Resources.ResXResourceReader.GetMetadataEnumerator
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: GetMetadataEnumerator()
  nameWithType: ResXResourceReader.GetMetadataEnumerator()
  fullName: System.Resources.ResXResourceReader.GetMetadataEnumerator()
- uid: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Resources.ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Resources.ResXResourceReader.System#IDisposable#Dispose
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: ResXResourceReader.System.IDisposable.Dispose()
  fullName: System.Resources.ResXResourceReader.System.IDisposable.Dispose()
- uid: System.Resources.ResXResourceReader.UseResXDataNodes
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: UseResXDataNodes
  nameWithType: ResXResourceReader.UseResXDataNodes
  fullName: System.Resources.ResXResourceReader.UseResXDataNodes
- uid: System.Resources.ResXResourceReader.#ctor*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader
  nameWithType: ResXResourceReader.ResXResourceReader
- uid: System.Resources.ResXResourceReader.BasePath*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: BasePath
  nameWithType: ResXResourceReader.BasePath
- uid: System.Resources.ResXResourceReader.Close*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Close
  nameWithType: ResXResourceReader.Close
- uid: System.Resources.ResXResourceReader.Dispose*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Dispose
  nameWithType: ResXResourceReader.Dispose
- uid: System.Resources.ResXResourceReader.Finalize*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Finalize
  nameWithType: ResXResourceReader.Finalize
- uid: System.Resources.ResXResourceReader.FromFileContents*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: FromFileContents
  nameWithType: ResXResourceReader.FromFileContents
- uid: System.Resources.ResXResourceReader.GetEnumerator*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: GetEnumerator
  nameWithType: ResXResourceReader.GetEnumerator
- uid: System.Resources.ResXResourceReader.GetMetadataEnumerator*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: GetMetadataEnumerator
  nameWithType: ResXResourceReader.GetMetadataEnumerator
- uid: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ResXResourceReader.System.Collections.IEnumerable.GetEnumerator
- uid: System.Resources.ResXResourceReader.System#IDisposable#Dispose*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: ResXResourceReader.System.IDisposable.Dispose
- uid: System.Resources.ResXResourceReader.UseResXDataNodes*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: UseResXDataNodes
  nameWithType: ResXResourceReader.UseResXDataNodes
