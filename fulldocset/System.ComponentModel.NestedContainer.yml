### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.NestedContainer
  id: NestedContainer
  children:
  - System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)
  - System.ComponentModel.NestedContainer.CreateSite(System.ComponentModel.IComponent,System.String)
  - System.ComponentModel.NestedContainer.Dispose(System.Boolean)
  - System.ComponentModel.NestedContainer.GetService(System.Type)
  - System.ComponentModel.NestedContainer.Owner
  - System.ComponentModel.NestedContainer.OwnerName
  langs:
  - csharp
  name: NestedContainer
  nameWithType: NestedContainer
  fullName: System.ComponentModel.NestedContainer
  type: Class
  summary: "Biedt de basisimplementatie voor de <xref href=&quot;System.ComponentModel.INestedContainer&quot;> </xref> interface, waardoor containers naar een eigenaar onderdeel hebben."
  remarks: "De klasse NestedContainer is een eenvoudige implementatie van de <xref:System.ComponentModel.INestedContainer>interface, waardoor een onderdeel dat logisch bevat nul of meer onderdelen en eigendom is van een bovenliggende component definieert.</xref:System.ComponentModel.INestedContainer> Het gedrag van geneste containers verschilt van een standaard <xref:System.ComponentModel.Container>in een aantal verschillende manieren, waaronder de volgende:-kenmerken zoals Site <xref:System.ComponentModel.Component.DesignMode%2A>en <xref:System.ComponentModel.Component.GetService%2A>worden gerouteerd via de site van de eigenaar van het onderdeel.</xref:System.ComponentModel.Component.GetService%2A> </xref:System.ComponentModel.Component.DesignMode%2A> </xref:System.ComponentModel.Container>      -De site <xref:System.ComponentModel.ISite.Name%2A>eigenschap is een gekwalificeerde naam met de eigenaar van onderdeelnaam gevolgd door een punt (.) en de onderliggende onderdeelnaam.</xref:System.ComponentModel.ISite.Name%2A>      - <xref:System.ComponentModel.NestedContainer.GetService%2A>biedt ondersteuning voor de <xref:System.ComponentModel.INestedContainer>als een service.</xref:System.ComponentModel.INestedContainer> </xref:System.ComponentModel.NestedContainer.GetService%2A>      -Wanneer het onderdeel dat is verwijderd, wordt de container ook verwijderd.       Bovendien behandelen ontwerpers geneste containers anders. Een ontwerpfunctie host is alleen ge√Ønteresseerd in een container, met de host is gekoppeld. Daarom onderdeel toevoegen en verwijderen van gebeurtenissen niet worden gegenereerd wanneer een onderdeel is toegevoegd aan of verwijderd uit een geneste container. Echter, omdat services voor de geneste container stromen, onderdeel wijzigingsgebeurtenissen worden gegenereerd wanneer een onderdeel in een geneste container wordt gewijzigd.       Deze gebeurtenissen bijhouden prestatieverschillen geldt ook voor undo-functionaliteit is nauw gekoppeld aan de serialisatie. De standaard undo-engine gebruikt <xref:System.ComponentModel.Design.IReferenceService>voor het bijhouden van wijzigingen in onderdelen.</xref:System.ComponentModel.Design.IReferenceService> Als een naam voor een onderdeel via de referentie-service niet worden herkend door de engine voor het ongedaan maken, kan de engine wijzigingen voor dat onderdeel wordt genegeerd. Deze service wordt automatisch wijzigingen in de ingesloten onderdelen herkent alleen als ze beschikbaar worden gesteld als openbare alleen-lezen eigenschappen met dezelfde naam in hun eigenaren. De ontwikkelaar moet anders gebeurtenissen tot aan de eigenaar van het onderdeel doorgeven. Bijvoorbeeld, als een geneste onderdeel `Text` eigenschap is resurfaced op het onderdeel dat als een `Address` eigenschap wanneer de `Text` eigenschap wordt gewijzigd, een eigenschap moet worden via een programma gewijzigd voor de bijbehorende `Address` eigenschap, anders wordt die wijziging niet worden bijgehouden door ongedaan maken."
  syntax:
    content: 'public class NestedContainer : System.ComponentModel.Container, IDisposable, System.ComponentModel.INestedContainer'
  inheritance:
  - System.Object
  - System.ComponentModel.Container
  implements:
  - System.ComponentModel.INestedContainer
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Container.Add(System.ComponentModel.IComponent)
  - System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)
  - System.ComponentModel.Container.Components
  - System.ComponentModel.Container.Dispose
  - System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)
  - System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)
  - System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)
  platform:
  - net462
- uid: System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)
  id: '#ctor(System.ComponentModel.IComponent)'
  parent: System.ComponentModel.NestedContainer
  langs:
  - csharp
  name: NestedContainer(IComponent)
  nameWithType: NestedContainer.NestedContainer(IComponent)
  fullName: System.ComponentModel.NestedContainer.NestedContainer(IComponent)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.NestedContainer&quot;> </xref> klasse."
  remarks: "Deze constructor beroep in de eigenaar <xref:System.ComponentModel.IComponent.Disposed>gebeurtenis zodat van de geneste container <xref:System.ComponentModel.NestedContainer.Dispose%2A>methode automatisch moet worden aangeroepen.</xref:System.ComponentModel.NestedContainer.Dispose%2A> </xref:System.ComponentModel.IComponent.Disposed>"
  syntax:
    content: public NestedContainer (System.ComponentModel.IComponent owner);
    parameters:
    - id: owner
      type: System.ComponentModel.IComponent
      description: "De <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> dat eigenaar is van deze geneste container."
  overload: System.ComponentModel.NestedContainer.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.NestedContainer.CreateSite(System.ComponentModel.IComponent,System.String)
  id: CreateSite(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.NestedContainer
  langs:
  - csharp
  name: CreateSite(IComponent,String)
  nameWithType: NestedContainer.CreateSite(IComponent,String)
  fullName: System.ComponentModel.NestedContainer.CreateSite(IComponent,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee maakt u een site voor het onderdeel in de container."
  remarks: "Als de `name` parameter `null`, wordt de <xref:System.ComponentModel.IComponent>is toegevoegd aan de geneste container zonder een unieke naam.</xref:System.ComponentModel.IComponent>"
  syntax:
    content: protected override System.ComponentModel.ISite CreateSite (System.ComponentModel.IComponent component, string name);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "De <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> voor het maken van een site."
    - id: name
      type: System.String
      description: "De naam toewijzen aan `component`, of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om over te slaan van de naamtoewijzing van de."
    return:
      type: System.ComponentModel.ISite
      description: "Het zojuist gemaakte <xref href=&quot;System.ComponentModel.ISite&quot;> </xref>."
  overload: System.ComponentModel.NestedContainer.CreateSite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.NestedContainer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.NestedContainer
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: NestedContainer.Dispose(Boolean)
  fullName: System.ComponentModel.NestedContainer.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Versies van de resources die worden gebruikt door de geneste container."
  remarks: "Deze methode wordt aangeroepen door het publiek `Dispose()` methode en de <xref:System.Object.Finalize%2A>methode.</xref:System.Object.Finalize%2A> `Dispose()`Hiermee wordt de beveiligde `Dispose(Boolean)` methode met de `disposing` parameter ingesteld op `true`. <xref:System.Object.Finalize%2A>roept `Dispose` met `disposing` ingesteld op `false`.</xref:System.Object.Finalize%2A>       Wanneer de `disposing` parameter is ingesteld op true, wordt deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit <xref:System.ComponentModel.NestedContainer>verwijzingen.</xref:System.ComponentModel.NestedContainer> Deze methode roept de `Dispose()` methode van elk object waarnaar wordt verwezen."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om alleen niet-beheerde bronnen vrij te geven."
  overload: System.ComponentModel.NestedContainer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NestedContainer.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.NestedContainer
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: NestedContainer.GetService(Type)
  fullName: System.ComponentModel.NestedContainer.GetService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Haalt de serviceobject van het opgegeven type als deze beschikbaar is."
  remarks: "Deze methode overschrijft de <xref:System.ComponentModel.Container.GetService%2A?displayProperty=fullName>methode.</xref:System.ComponentModel.Container.GetService%2A?displayProperty=fullName> Deze implementatie wordt alleen omgezet aanvragen voor de <xref:System.ComponentModel.INestedContainer>en <xref:System.ComponentModel.IContainer>services.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.INestedContainer>"
  syntax:
    content: protected override object GetService (Type service);
    parameters:
    - id: service
      type: System.Type
      description: "De <xref:System.Type>van de service om op te halen.</xref:System.Type>"
    return:
      type: System.Object
      description: "Een <xref:System.Object>die de aangevraagde service implementeert of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de service kan niet omgezet worden.</xref:System.Object>"
  overload: System.ComponentModel.NestedContainer.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NestedContainer.Owner
  id: Owner
  parent: System.ComponentModel.NestedContainer
  langs:
  - csharp
  name: Owner
  nameWithType: NestedContainer.Owner
  fullName: System.ComponentModel.NestedContainer.Owner
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee wordt het onderdeel dat voor deze geneste container."
  remarks: "De eigenaar onderdeel is het kenmerk dat geneste containers uit gewone containers onderscheidt."
  syntax:
    content: public System.ComponentModel.IComponent Owner { get; }
    return:
      type: System.ComponentModel.IComponent
      description: "De <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> dat eigenaar is van deze geneste container."
  overload: System.ComponentModel.NestedContainer.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NestedContainer.OwnerName
  id: OwnerName
  parent: System.ComponentModel.NestedContainer
  langs:
  - csharp
  name: OwnerName
  nameWithType: NestedContainer.OwnerName
  fullName: System.ComponentModel.NestedContainer.OwnerName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee haalt u de naam van de eigenaar onderdeel."
  remarks: "Deze eigenschap kan worden opgeheven om de naam van een aangepaste eigenaar. De standaardimplementatie zoekt u de site van de eigenaar voor <xref:System.ComponentModel.INestedSite>en aanroepen <xref:System.ComponentModel.INestedSite.FullName%2A>, of <xref:System.ComponentModel.ISite.Name%2A>Als er geen geneste site.</xref:System.ComponentModel.ISite.Name%2A> </xref:System.ComponentModel.INestedSite.FullName%2A> </xref:System.ComponentModel.INestedSite> Als geen van beide beschikbaar is, retourneert deze eigenschap `null`."
  syntax:
    content: protected virtual string OwnerName { get; }
    return:
      type: System.String
      description: "De naam van de eigenaar onderdeel."
  overload: System.ComponentModel.NestedContainer.OwnerName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Container
  isExternal: false
  name: System.ComponentModel.Container
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: NestedContainer(IComponent)
  nameWithType: NestedContainer.NestedContainer(IComponent)
  fullName: System.ComponentModel.NestedContainer.NestedContainer(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.NestedContainer.CreateSite(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: CreateSite(IComponent,String)
  nameWithType: NestedContainer.CreateSite(IComponent,String)
  fullName: System.ComponentModel.NestedContainer.CreateSite(IComponent,String)
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.NestedContainer.Dispose(System.Boolean)
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: NestedContainer.Dispose(Boolean)
  fullName: System.ComponentModel.NestedContainer.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.NestedContainer.GetService(System.Type)
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: GetService(Type)
  nameWithType: NestedContainer.GetService(Type)
  fullName: System.ComponentModel.NestedContainer.GetService(Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.NestedContainer.Owner
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: Owner
  nameWithType: NestedContainer.Owner
  fullName: System.ComponentModel.NestedContainer.Owner
- uid: System.ComponentModel.NestedContainer.OwnerName
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: OwnerName
  nameWithType: NestedContainer.OwnerName
  fullName: System.ComponentModel.NestedContainer.OwnerName
- uid: System.ComponentModel.NestedContainer.#ctor*
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: NestedContainer
  nameWithType: NestedContainer.NestedContainer
- uid: System.ComponentModel.NestedContainer.CreateSite*
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: CreateSite
  nameWithType: NestedContainer.CreateSite
- uid: System.ComponentModel.NestedContainer.Dispose*
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: Dispose
  nameWithType: NestedContainer.Dispose
- uid: System.ComponentModel.NestedContainer.GetService*
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: GetService
  nameWithType: NestedContainer.GetService
- uid: System.ComponentModel.NestedContainer.Owner*
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: Owner
  nameWithType: NestedContainer.Owner
- uid: System.ComponentModel.NestedContainer.OwnerName*
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: OwnerName
  nameWithType: NestedContainer.OwnerName
