### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.RoleManagerSection
  id: RoleManagerSection
  children:
  - System.Web.Configuration.RoleManagerSection.#ctor
  - System.Web.Configuration.RoleManagerSection.CacheRolesInCookie
  - System.Web.Configuration.RoleManagerSection.CookieName
  - System.Web.Configuration.RoleManagerSection.CookiePath
  - System.Web.Configuration.RoleManagerSection.CookieProtection
  - System.Web.Configuration.RoleManagerSection.CookieRequireSSL
  - System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration
  - System.Web.Configuration.RoleManagerSection.CookieTimeout
  - System.Web.Configuration.RoleManagerSection.CreatePersistentCookie
  - System.Web.Configuration.RoleManagerSection.DefaultProvider
  - System.Web.Configuration.RoleManagerSection.Domain
  - System.Web.Configuration.RoleManagerSection.Enabled
  - System.Web.Configuration.RoleManagerSection.MaxCachedResults
  - System.Web.Configuration.RoleManagerSection.Properties
  - System.Web.Configuration.RoleManagerSection.Providers
  langs:
  - csharp
  name: RoleManagerSection
  nameWithType: RoleManagerSection
  fullName: System.Web.Configuration.RoleManagerSection
  type: Class
  summary: "Hiermee definieert u configuratie-instellingen die worden gebruikt ter ondersteuning van de beheerinfrastructuur van de rol van webtoepassingen. Deze klasse kan niet worden overgenomen."
  remarks: "De klasse RoleManagerSection biedt een manier om programmatisch openen en te wijzigen van de inhoud van de `roleManager` gedeelte van het configuratiebestand."
  example:
  - "This section provides two code examples. The first demonstrates how to declaratively specify values for several properties of the RoleManagerSection class. The second demonstrates how to use the RoleManagerSection type.  \n  \n The following configuration file example shows how to declaratively specify values for several properties of the RoleManagerSection class.  \n  \n```  \n<system.web>  \n  <roleManager   \n    enabled=\"false\"   \n    cacheRolesInCookie=\"false\"   \n    cookieName=\".ASPXROLES\" cookieTimeout=\"30\"  \n    cookiePath=\"/\" cookieRequireSSL=\"false\"  \n    cookieSlidingExpiration=\"true\" createPersistentCookie=\"false\"  \n    cookieProtection=\"All\"   \n    defaultProvider=\"AspNetSqlRoleProvider\"  \n    maxCachedResults=\"25\"  >  \n    <providers>  \n      <add   \n        name=\"AspNetSqlRoleProvider\"  \n        connectionStringName=\"LocalSqlServer\"   \n        applicationName=\"/\"  \n        type=\"System.Web.Security.SqlRoleProvider, System.Web,  \n          Version=2.0.3600.0, Culture=neutral,  \n          PublicKeyToken=b03f5f7f11d50a3a\" />  \n      <add   \n        name=\"AspNetWindowsTokenRoleProvider\"   \n        applicationName=\"/\"  \n        type=\"System.Web.Security.WindowsTokenRoleProvider, System.Web,   \n          Version=2.0.3600.0, Culture=neutral,   \n          PublicKeyToken=b03f5f7f11d50a3a\" />  \n    </providers>  \n  </roleManager>  \n</system.web>  \n```  \n  \n The following code example demonstrates how to use the RoleManagerSection type.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_91_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#1](~/add/codesnippet/csharp/t-system.web.configurati_91_1.cs)]"
  syntax:
    content: 'public sealed class RoleManagerSection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: RoleManagerSection()
  nameWithType: RoleManagerSection.RoleManagerSection()
  fullName: System.Web.Configuration.RoleManagerSection.RoleManagerSection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.Configuration.RoleManagerSection&quot;> </xref> klasse met standaardinstellingen."
  remarks: "De constructor RoleManagerSection is niet bedoeld voor rechtstreeks gebruik vanuit uw code. Deze wordt aangeroepen door de ASP.NET-configuratiesysteem. Verkrijgen van een exemplaar van de <xref:System.Web.Configuration.RoleManagerSection>klasse met behulp van de <xref:System.Configuration.Configuration.GetSection%2A>methode.</xref:System.Configuration.Configuration.GetSection%2A> </xref:System.Web.Configuration.RoleManagerSection>       De volgende tabel ziet de standaardinstellingen die worden gebruikt voor de RoleManagerSection-constructor.      | Eigenschap | Standaardwaarde |   |--------------|-------------------|   | <xref:System.Web.Configuration.RoleManagerSection.Enabled%2A>| `false`|   | <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A>| `false`|   | <xref:System.Web.Configuration.RoleManagerSection.CookieName%2A>|&quot;. ASPXROLES &quot; |   | <xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A>|&quot; /&quot;|   | <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>| `All`|   | <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A>| `false`|   | <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>| `true`|   | <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A>|&30; minuten |   | <xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A>| `false`|   | <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A>|&quot; AspNetSqlRoleProvider &quot; |   | <xref:System.Web.Configuration.RoleManagerSection.Domain%2A>| Een lege tekenreeks (&quot;&quot;) |   | <xref:System.Web.Configuration.RoleManagerSection.MaxCachedResults%2A>|25|</xref:System.Web.Configuration.RoleManagerSection.MaxCachedResults%2A></xref:System.Web.Configuration.RoleManagerSection.Domain%2A></xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A></xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A></xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A></xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A></xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A></xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A></xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A></xref:System.Web.Configuration.RoleManagerSection.CookieName%2A></xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A></xref:System.Web.Configuration.RoleManagerSection.Enabled%2A>"
  syntax:
    content: public RoleManagerSection ();
    parameters: []
  overload: System.Web.Configuration.RoleManagerSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie
  id: CacheRolesInCookie
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CacheRolesInCookie
  nameWithType: RoleManagerSection.CacheRolesInCookie
  fullName: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de rollen van de huidige gebruiker worden opgeslagen in een cookie."
  remarks: "De eigenschap CacheRolesInCookie retourneert een Booleaanse waarde die aangeeft of de opslag van de cookie voor role-namen is ingeschakeld.       Wanneer de eigenschap CacheRolesInCookie is ingesteld op `true` in het configuratiebestand rolgegevens voor elke gebruiker wordt opgeslagen in een cookie op de client. Wanneer rollenbeheer gecontroleerd om te bepalen of een gebruiker in een bepaalde rol, wordt de cookie rollen gecontroleerd voordat de rolprovider om te controleren van de lijst met rollen op de gegevensbron wordt aangeroepen. De cookie wordt dynamisch bijgewerkt op de client in de cache van de meest recent gevalideerde role-namen.       U kunt de verbeteren de betrouwbaarheid van de rolnamen die in cache zijn opgeslagen in een cookie door te geven een <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>eigenschap bij het configureren van de `roleManager` gedeelte van het configuratiebestand.</xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> De standaardwaarde <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>eigenschap is `All`, die role-namen in de cookie wordt versleuteld en valideert dat de cookie-inhoud niet is gewijzigd.</xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>"
  example:
  - "The following code example demonstrates how to use the CacheRolesInCookie property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#2](~/add/codesnippet/visualbasic/p-system.web.configurati_254_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#2](~/add/codesnippet/csharp/p-system.web.configurati_254_1.cs)]"
  syntax:
    content: public bool CacheRolesInCookie { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de huidige gebruikersrollen in cache zijn opgeslagen in een cookie. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CookieName
  id: CookieName
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CookieName
  nameWithType: RoleManagerSection.CookieName
  fullName: System.Web.Configuration.RoleManagerSection.CookieName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van de naam van de cookie die wordt gebruikt voor cache role-namen."
  remarks: "De eigenschap CookieName retourneert de naam van de cookie die wordt gebruikt voor cache role-namen. U kunt de naam van de cookie waarin rollen in cache zijn opgeslagen voor uw toepassing opgeven door in te stellen de `cookieName` kenmerk in het bestand Web.config voor uw ASP.NET-toepassing. Dit is handig wanneer u een unieke identificatie van een cookie voor uw toepassing wilt maken, of wanneer een cookie is gedeeld door meerdere toepassingen."
  example:
  - "The following code example demonstrates how to use the CookieName property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#3](~/add/codesnippet/visualbasic/p-system.web.configurati_120_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#3](~/add/codesnippet/csharp/p-system.web.configurati_120_1.cs)]"
  syntax:
    content: public string CookieName { get; set; }
    return:
      type: System.String
      description: "De naam van de cookie die wordt gebruikt voor het cache role-namen. De standaardwaarde is &quot;. ASPXROLES&quot;."
  overload: System.Web.Configuration.RoleManagerSection.CookieName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CookiePath
  id: CookiePath
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CookiePath
  nameWithType: RoleManagerSection.CookiePath
  fullName: System.Web.Configuration.RoleManagerSection.CookiePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van het virtuele pad van de cookie die wordt gebruikt voor het role-namen in de cache."
  remarks: "U kunt het pad van de cookie waarin role-namen in cache zijn opgeslagen voor uw toepassing opgeven door de `cookiePath` kenmerk in het bestand Web.config voor uw ASP.NET-toepassing. De eigenschap CookiePath retourneert de waarde van de `cookiePath` kenmerk van het bestand Web.config. Het pad is hoofdlettergevoelig."
  example:
  - "The following code example demonstrates how to use the CookiePath property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#4](~/add/codesnippet/visualbasic/p-system.web.configurati_217_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#4](~/add/codesnippet/csharp/p-system.web.configurati_217_1.cs)]"
  syntax:
    content: public string CookiePath { get; set; }
    return:
      type: System.String
      description: "Het pad van de cookie die wordt gebruikt voor het opslaan van role-namen. De standaardwaarde is &quot;/&quot;."
  overload: System.Web.Configuration.RoleManagerSection.CookiePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CookieProtection
  id: CookieProtection
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CookieProtection
  nameWithType: RoleManagerSection.CookieProtection
  fullName: System.Web.Configuration.RoleManagerSection.CookieProtection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van het type beveiliging die wordt gebruikt voor het beveiligen van de cookie die in de cache role-namen opgeslagen."
  remarks: "De eigenschap CookieProtection beschrijft hoe gegevens in een cookie veilig worden opgeslagen. U kunt het beveiligingstype van de cookie waarin rollen in cache zijn opgeslagen voor uw toepassing opgeven door de `cookieProtection` kenmerk in het bestand Web.config voor uw ASP.NET-toepassing. De `cookieProtection` kenmerk duurt een <xref:System.Web.Security.CookieProtection>opsommingswaarde van `All`, `Encryption`, `None`, of `Validation`.</xref:System.Web.Security.CookieProtection> De standaardwaarde is `All`. Zorg ervoor dat de standaardwaarde gebruikt voor de eigenschap CookieProtection als u wilt dat zowel gegevensvalidatie als versleuteling voor het beveiligen de cookie. Ter verbetering van de beveiliging van uw cookie, kunt u ook instellen de <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A>eigenschap `true`.</xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A>"
  example:
  - "The following code example demonstrates how to use the CookieProtection property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#5](~/add/codesnippet/visualbasic/p-system.web.configurati_134_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#5](~/add/codesnippet/csharp/p-system.web.configurati_134_1.cs)]"
  syntax:
    content: public System.Web.Security.CookieProtection CookieProtection { get; set; }
    return:
      type: System.Web.Security.CookieProtection
      description: "Het type beveiliging gebruikt binnen de cookie waarin role-namen in cache zijn opgeslagen. De standaardwaarde is <xref uid=&quot;langword_csharp_All&quot; name=&quot;All&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.RoleManagerSection.CookieProtection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CookieRequireSSL
  id: CookieRequireSSL
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CookieRequireSSL
  nameWithType: RoleManagerSection.CookieRequireSSL
  fullName: System.Web.Configuration.RoleManagerSection.CookieRequireSSL
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de cookie die wordt gebruikt voor cache role-namen voor een Secure Sockets Layer (SSL)-verbinding vereist om te kunnen worden geretourneerd naar de server."
  remarks: "U kunt opgeven of SSL vereist is voor de rol namen cookie terugkeren naar de server door in te stellen de `cookieRequireSSL` kenmerk in het bestand Web.config voor uw ASP.NET-toepassing."
  example:
  - "The following code example demonstrates how to use the CookieRequireSSL property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#6](~/add/codesnippet/visualbasic/p-system.web.configurati_311_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#6](~/add/codesnippet/csharp/p-system.web.configurati_311_1.cs)]"
  syntax:
    content: public bool CookieRequireSSL { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een SSL-verbinding nodig is om te keren naar de server de cookie waar role-namen in de cache opgeslagen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.RoleManagerSection.CookieRequireSSL*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration
  id: CookieSlidingExpiration
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CookieSlidingExpiration
  nameWithType: RoleManagerSection.CookieSlidingExpiration
  fullName: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de cookie die wordt gebruikt voor het role-namen in de cache periodiek wordt gereset."
  remarks: "U kunt opgeven of de cookie die wordt gebruikt voor cache role-namen periodiek opnieuw instellen of verlopen op een vast punt in tijd met behulp van de `cookieSlidingExpiration` kenmerk in het bestand Web.config voor uw ASP.NET-toepassing. Als `true`, de verlooptijd van cookie is ingesteld op de huidige datum en tijd plus de <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A>eigenschap, in minuten.</xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> Terwijl de gebruiker blijft actief gebruiken de ASP.NET-toepassing, de datum en tijd van de cookie wordt automatisch vernieuwd, als er minder dan de helft van de <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A>resterende.</xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> De standaardwaarde is `true`."
  example:
  - "The following code example demonstrates how to use the CookieSlidingExpiration property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#7](~/add/codesnippet/visualbasic/p-system.web.configurati_403_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#7](~/add/codesnippet/csharp/p-system.web.configurati_403_1.cs)]"
  syntax:
    content: public bool CookieSlidingExpiration { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de functie namen cookie datum en tijd worden opnieuw ingesteld periodiek; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CookieTimeout
  id: CookieTimeout
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CookieTimeout
  nameWithType: RoleManagerSection.CookieTimeout
  fullName: System.Web.Configuration.RoleManagerSection.CookieTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van het aantal minuten voordat de cookie die wordt gebruikt voor role-namen van cache verloopt."
  remarks: "De eigenschap CookieTimeout stelt een waarde die aangeeft hoeveel minuten voordat de rol namen cookie verloopt. De standaardwaarde is 30 minuten. Als de <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>eigenschap is `false`, de CookieTimeout-eigenschap wordt genegeerd.</xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>"
  example:
  - "The following code example demonstrates how to use the CookieTimeout property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#8](~/add/codesnippet/visualbasic/p-system.web.configurati_267_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#8](~/add/codesnippet/csharp/p-system.web.configurati_267_1.cs)]"
  syntax:
    content: public TimeSpan CookieTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Een <xref:System.TimeSpan>is het aantal minuten voordat de cookie die wordt gebruikt voor het role-namen van cache verloopt.</xref:System.TimeSpan> De standaardwaarde is 30 minuten."
  overload: System.Web.Configuration.RoleManagerSection.CookieTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie
  id: CreatePersistentCookie
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CreatePersistentCookie
  nameWithType: RoleManagerSection.CreatePersistentCookie
  fullName: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt aangegeven of een cookie op basis van een sessie of een permanente cookie wordt gebruikt in de cache role-namen."
  remarks: "De eigenschap CreatePersistentCookie geeft aan of de cookie die wordt gebruikt voor cache role-namen zijn van moet een cookie op basis van sessies, wat betekent dat de cookie verloren gaat wanneer de browser wordt gesloten, of een permanente cookie, wat betekent dat de cookie beschikbaar tussen browsersessies is. De standaardwaarde is `false`, wat aangeeft dat een cookie op basis van een sessie wordt gebruikt voor het role-namen in de cache."
  example:
  - "The following code example demonstrates how to use the CreatePersistentCookie property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#9](~/add/codesnippet/visualbasic/p-system.web.configurati_216_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#9](~/add/codesnippet/csharp/p-system.web.configurati_216_1.cs)]"
  syntax:
    content: public bool CreatePersistentCookie { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u wilt maken van de rol van de namen van cookie permanente tussen browsersessies; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.DefaultProvider
  id: DefaultProvider
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: DefaultProvider
  nameWithType: RoleManagerSection.DefaultProvider
  fullName: System.Web.Configuration.RoleManagerSection.DefaultProvider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van de naam van de standaardprovider die wordt gebruikt voor het beheren van rollen."
  remarks: "De eigenschap DefaultProvider moet overeenkomen met een benoemde waarde in de `providers` subsectie van het `roleManager` gedeelte van een configuratiebestand. Een lege tekenreeks (&quot;&quot;) is geen geldige waarde voor de eigenschap DefaultProvider."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#10](~/add/codesnippet/visualbasic/p-system.web.configurati_283_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#10](~/add/codesnippet/csharp/p-system.web.configurati_283_1.cs)]"
  syntax:
    content: public string DefaultProvider { get; set; }
    return:
      type: System.String
      description: "De naam van een provider in de <xref:System.Web.Configuration.RoleManagerSection.Providers*>.</xref:System.Web.Configuration.RoleManagerSection.Providers*> De standaardwaarde is &quot;AspNetSqlRoleProvider&quot;."
  overload: System.Web.Configuration.RoleManagerSection.DefaultProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.Domain
  id: Domain
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: Domain
  nameWithType: RoleManagerSection.Domain
  fullName: System.Web.Configuration.RoleManagerSection.Domain
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van de naam van het domein dat is gekoppeld aan de cookie die wordt gebruikt voor het role-namen in de cache."
  remarks: "De eigenschap Domain is ingesteld in de configuratie voor een ASP.NET-toepassing met behulp van de `domain` kenmerk van de `roleManager` configuratie-element. Als geen waarde is opgegeven in de configuratie voor de `domain` kenmerk, het resultaat van de eigenschap Domain `null` en de namen van de rol cookie domein wordt standaard ingesteld op het gedrag van de <xref:System.Web.HttpCookie.Domain%2A>eigenschap.</xref:System.Web.HttpCookie.Domain%2A> De standaardwaarde is een lege tekenreeks."
  syntax:
    content: public string Domain { get; set; }
    return:
      type: System.String
      description: "De <xref:System.Web.HttpCookie.Domain*>van de cookie die wordt gebruikt voor het cache role-namen.</xref:System.Web.HttpCookie.Domain*> De standaardwaarde is een lege tekenreeks (<xref uid=&quot;langword_csharp_&quot;&quot;&quot; name=&quot;&quot;&quot;&quot; href=&quot;&quot;></xref>)."
  overload: System.Web.Configuration.RoleManagerSection.Domain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.Enabled
  id: Enabled
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: Enabled
  nameWithType: RoleManagerSection.Enabled
  fullName: System.Web.Configuration.RoleManagerSection.Enabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de beheerfunctie voor ASP.NET-functie is ingeschakeld."
  remarks: "De eigenschap Enabled retourneert een Booleaanse waarde die aangeeft of de beheerfunctie voor ASP.NET-functie tijdens de uitvoering toegankelijk zijn of niet."
  example:
  - "The following code example demonstrates how to use the Enabled property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#12](~/add/codesnippet/visualbasic/p-system.web.configurati_156_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#12](~/add/codesnippet/csharp/p-system.web.configurati_156_1.cs)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de beheerfunctie voor ASP.NET-functie is ingeschakeld; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.RoleManagerSection.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.MaxCachedResults
  id: MaxCachedResults
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: MaxCachedResults
  nameWithType: RoleManagerSection.MaxCachedResults
  fullName: System.Web.Configuration.RoleManagerSection.MaxCachedResults
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van het maximum aantal rollen die ASP.NET in de cache opslaat in de rol-cookie."
  remarks: "De <xref:System.Web.Security.Roles.MaxCachedResults%2A>eigenschap retourneert een geheel getal dat het maximum aantal rollen die ASP.NET-caches in de rol cookie aangeeft.</xref:System.Web.Security.Roles.MaxCachedResults%2A> De standaardwaarde is 25."
  syntax:
    content: public int MaxCachedResults { get; set; }
    return:
      type: System.Int32
      description: "Een waarde die aangeeft van het maximum aantal rollen ASP.NET in de cache opslaat in de rol-cookie. De standaardwaarde is 25."
  overload: System.Web.Configuration.RoleManagerSection.MaxCachedResults*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.Properties
  id: Properties
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: Properties
  nameWithType: RoleManagerSection.Properties
  fullName: System.Web.Configuration.RoleManagerSection.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Moet worden toegevoegd."
  overload: System.Web.Configuration.RoleManagerSection.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.Providers
  id: Providers
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: Providers
  nameWithType: RoleManagerSection.Providers
  fullName: System.Web.Configuration.RoleManagerSection.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een <xref href=&quot;System.Configuration.ProviderSettingsCollection&quot;> </xref> object van het <xref href=&quot;System.Configuration.ProviderSettings&quot;> </xref> elementen."
  remarks: "Rol management providers zijn de onderdelen die toegang tot de typen van rollen voor een site verlenen. U kunt opgeven dat rol management providers op de `providers` subsectie van het `roleManager` gedeelte van een configuratiebestand.       De <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A>eigenschap geeft u de provider die wordt standaard gebruikt.</xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A>"
  example:
  - "The following code example demonstrates how to use the Providers property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#13](~/add/codesnippet/visualbasic/p-system.web.configurati_354_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#13](~/add/codesnippet/csharp/p-system.web.configurati_354_1.cs)]"
  syntax:
    content: public System.Configuration.ProviderSettingsCollection Providers { get; }
    return:
      type: System.Configuration.ProviderSettingsCollection
      description: "Een <xref href=&quot;System.Configuration.ProviderSettingsCollection&quot;> </xref> die de instellingen die zijn gedefinieerd binnen providers bevat de <xref uid=&quot;langword_csharp_providers&quot; name=&quot;providers&quot; href=&quot;&quot;> </xref> subsectie van het <xref uid=&quot;langword_csharp_roleManager&quot; name=&quot;roleManager&quot; href=&quot;&quot;> </xref> gedeelte van het configuratiebestand."
  overload: System.Web.Configuration.RoleManagerSection.Providers*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.Web.Configuration.RoleManagerSection.#ctor
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: RoleManagerSection()
  nameWithType: RoleManagerSection.RoleManagerSection()
  fullName: System.Web.Configuration.RoleManagerSection.RoleManagerSection()
- uid: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CacheRolesInCookie
  nameWithType: RoleManagerSection.CacheRolesInCookie
  fullName: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Configuration.RoleManagerSection.CookieName
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieName
  nameWithType: RoleManagerSection.CookieName
  fullName: System.Web.Configuration.RoleManagerSection.CookieName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.RoleManagerSection.CookiePath
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookiePath
  nameWithType: RoleManagerSection.CookiePath
  fullName: System.Web.Configuration.RoleManagerSection.CookiePath
- uid: System.Web.Configuration.RoleManagerSection.CookieProtection
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieProtection
  nameWithType: RoleManagerSection.CookieProtection
  fullName: System.Web.Configuration.RoleManagerSection.CookieProtection
- uid: System.Web.Security.CookieProtection
  parent: System.Web.Security
  isExternal: false
  name: CookieProtection
  nameWithType: CookieProtection
  fullName: System.Web.Security.CookieProtection
- uid: System.Web.Configuration.RoleManagerSection.CookieRequireSSL
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieRequireSSL
  nameWithType: RoleManagerSection.CookieRequireSSL
  fullName: System.Web.Configuration.RoleManagerSection.CookieRequireSSL
- uid: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieSlidingExpiration
  nameWithType: RoleManagerSection.CookieSlidingExpiration
  fullName: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration
- uid: System.Web.Configuration.RoleManagerSection.CookieTimeout
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieTimeout
  nameWithType: RoleManagerSection.CookieTimeout
  fullName: System.Web.Configuration.RoleManagerSection.CookieTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CreatePersistentCookie
  nameWithType: RoleManagerSection.CreatePersistentCookie
  fullName: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie
- uid: System.Web.Configuration.RoleManagerSection.DefaultProvider
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: DefaultProvider
  nameWithType: RoleManagerSection.DefaultProvider
  fullName: System.Web.Configuration.RoleManagerSection.DefaultProvider
- uid: System.Web.Configuration.RoleManagerSection.Domain
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Domain
  nameWithType: RoleManagerSection.Domain
  fullName: System.Web.Configuration.RoleManagerSection.Domain
- uid: System.Web.Configuration.RoleManagerSection.Enabled
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Enabled
  nameWithType: RoleManagerSection.Enabled
  fullName: System.Web.Configuration.RoleManagerSection.Enabled
- uid: System.Web.Configuration.RoleManagerSection.MaxCachedResults
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: MaxCachedResults
  nameWithType: RoleManagerSection.MaxCachedResults
  fullName: System.Web.Configuration.RoleManagerSection.MaxCachedResults
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Configuration.RoleManagerSection.Properties
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Properties
  nameWithType: RoleManagerSection.Properties
  fullName: System.Web.Configuration.RoleManagerSection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.RoleManagerSection.Providers
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Providers
  nameWithType: RoleManagerSection.Providers
  fullName: System.Web.Configuration.RoleManagerSection.Providers
- uid: System.Configuration.ProviderSettingsCollection
  parent: System.Configuration
  isExternal: false
  name: ProviderSettingsCollection
  nameWithType: ProviderSettingsCollection
  fullName: System.Configuration.ProviderSettingsCollection
- uid: System.Web.Configuration.RoleManagerSection.#ctor*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: RoleManagerSection
  nameWithType: RoleManagerSection.RoleManagerSection
- uid: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CacheRolesInCookie
  nameWithType: RoleManagerSection.CacheRolesInCookie
- uid: System.Web.Configuration.RoleManagerSection.CookieName*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieName
  nameWithType: RoleManagerSection.CookieName
- uid: System.Web.Configuration.RoleManagerSection.CookiePath*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookiePath
  nameWithType: RoleManagerSection.CookiePath
- uid: System.Web.Configuration.RoleManagerSection.CookieProtection*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieProtection
  nameWithType: RoleManagerSection.CookieProtection
- uid: System.Web.Configuration.RoleManagerSection.CookieRequireSSL*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieRequireSSL
  nameWithType: RoleManagerSection.CookieRequireSSL
- uid: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieSlidingExpiration
  nameWithType: RoleManagerSection.CookieSlidingExpiration
- uid: System.Web.Configuration.RoleManagerSection.CookieTimeout*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieTimeout
  nameWithType: RoleManagerSection.CookieTimeout
- uid: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CreatePersistentCookie
  nameWithType: RoleManagerSection.CreatePersistentCookie
- uid: System.Web.Configuration.RoleManagerSection.DefaultProvider*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: DefaultProvider
  nameWithType: RoleManagerSection.DefaultProvider
- uid: System.Web.Configuration.RoleManagerSection.Domain*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Domain
  nameWithType: RoleManagerSection.Domain
- uid: System.Web.Configuration.RoleManagerSection.Enabled*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Enabled
  nameWithType: RoleManagerSection.Enabled
- uid: System.Web.Configuration.RoleManagerSection.MaxCachedResults*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: MaxCachedResults
  nameWithType: RoleManagerSection.MaxCachedResults
- uid: System.Web.Configuration.RoleManagerSection.Properties*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Properties
  nameWithType: RoleManagerSection.Properties
- uid: System.Web.Configuration.RoleManagerSection.Providers*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Providers
  nameWithType: RoleManagerSection.Providers
