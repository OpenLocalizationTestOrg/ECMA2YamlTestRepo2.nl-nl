### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Effects.BitmapEffect
  id: BitmapEffect
  children:
  - System.Windows.Media.Effects.BitmapEffect.#ctor
  - System.Windows.Media.Effects.BitmapEffect.Clone
  - System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue
  - System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  - System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect
  - System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  - System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  - System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  - System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  langs:
  - csharp
  name: BitmapEffect
  nameWithType: BitmapEffect
  fullName: System.Windows.Media.Effects.BitmapEffect
  type: Class
  summary: "**Opmerking: Deze API is nu verouderd.** De niet-verouderde variant is <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>.       Hiermee definieert u een bitmap effect. Afgeleide klassen definiëren effecten die kunnen worden toegepast op een <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> object, zoals een <xref href=&quot;System.Windows.Controls.Button&quot;> </xref> of een <xref href=&quot;System.Windows.Controls.Image&quot;> </xref>."
  remarks: "> [!NOTE] >  [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]bitmapeffecten zijn software weergegeven. Elk object dat een effect is van toepassing wordt ook weergegeven in software. Bitmapeffecten moeten niet worden toegepast op grote visuele elementen of animaties, omdat dit kan de prestaties verslechteren.      > [!CAUTION] > Bitmapeffecten bieden geen ondersteuning voor gedeeltelijk vertrouwen worden uitgevoerd. Een toepassing moet volledig vertrouwensmachtigingen voor het gebruik van bitmap gevolgen hebben.       Schaal transformaties worden toegepast op een visueel element voordat een effect wordt toegepast. In het geval van een niet-uniforme scale-transformatie het effect van de schaalwaarden hogere gebruikt.       Updates voor de visuele structuur van een <xref:System.Windows.Media.VisualBrush>niet worden doorgegeven als een BitmapEffect in de kwast bovenliggende keten is.</xref:System.Windows.Media.VisualBrush> U kunt deze beperking omzeilen door het forceren van een update van de scene op het bovenliggende object van het effect. U kunt aanroepen <xref:System.Windows.UIElement.InvalidateVisual%2A>of op te nemen van een animatie als een scene update wilt afdwingen.</xref:System.Windows.UIElement.InvalidateVisual%2A>       Aangepaste effecten overgenomen door deze klasse voor het maken van een beheerde interface voor het niet-beheerde effect. Zie voor meer informatie de [onbeheerde BitmapEffect](https://msdn.microsoft.com/library/ms735092.aspx) API."
  syntax:
    content: 'public abstract class BitmapEffect : System.Windows.Media.Animation.Animatable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.CreateInstanceCore
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: BitmapEffect()
  nameWithType: BitmapEffect.BitmapEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.BitmapEffect()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;> </xref> klasse."
  syntax:
    content: protected BitmapEffect ();
    parameters: []
  overload: System.Windows.Media.Effects.BitmapEffect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.Clone
  id: Clone
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: Clone()
  nameWithType: BitmapEffect.Clone()
  fullName: System.Windows.Media.Effects.BitmapEffect.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Maakt een kloon kan worden gewijzigd van deze <xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;> </xref>, grondige kopieën van de waarden van dit object. Bij het kopiëren van afhankelijkheidseigenschappen resource verwijzingen en gegevens bindingen door deze methode wordt gekopieerd, maar ze niet meer mogelijk zetten maar niet animaties of de huidige waarden."
  remarks: "Deze methode wordt gebruikt voor het produceren van bewerkbaar kopieën van bevroren <xref:System.Windows.Freezable>objecten (of een <xref:System.Windows.Freezable>object).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Deze methode schaduwen voor het gemak de overgenomen versie.       Zie voor meer informatie <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffect Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.BitmapEffect
      description: "Een bewerkbaar kloon van het huidige object. Het gekloonde object <> </> *> eigenschap <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> zelfs als de bron <> </> *> eigenschap was<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Effects.BitmapEffect.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: BitmapEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Maakt een kloon kan worden gewijzigd van deze <xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;> </xref> object, grondige kopieën van de huidige waarden van dit object. Resource-verwijzingen en gegevensbindingen animaties worden niet gekopieerd, maar de huidige waarden zijn."
  remarks: "Deze methode wordt gebruikt voor het produceren van bewerkbaar kopieën van bevroren <xref:System.Windows.Freezable>objecten (of een <xref:System.Windows.Freezable>object).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Deze methode schaduwen voor het gemak de overgenomen versie.       Zie voor meer informatie <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffect CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.BitmapEffect
      description: "Een bewerkbaar kloon van het huidige object. Het gekloonde object <> </> *> eigenschap <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> zelfs als de bron <> </> *> eigenschap was <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  id: CreateBitmapEffectOuter
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: CreateBitmapEffectOuter()
  nameWithType: BitmapEffect.CreateBitmapEffectOuter()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Maakt een ingang naar een [IMILBitmapEffect](http://msdn.microsoft.com/en-us/4bd5697d-bdde-4485-a05b-b3fea1403e16) -object dat wordt gebruikt voor het initialiseren van een aangepast effect."
  remarks: "Framework interactie met aangepaste effecten wordt verwerkt door een [IMILBitmapEffect](http://msdn.microsoft.com/en-us/4bd5697d-bdde-4485-a05b-b3fea1403e16) object. Het buitenste effect is geïnitialiseerd met het aangepaste effect via de <xref:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect%2A>methode.</xref:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect%2A>"
  example:
  - "The following example shows an implementation of <xref:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect%2A> that uses the CreateBitmapEffectOuter method to retrieve a wrapper effect object.  \n  \n [!code-cs[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/csharp/RGBFilterBitmapEffect/RGBFilterBitmapEffect.cs#createunmanagedeffect)]\n [!code-vb[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/visualbasic/rgbfilterbitmapeffect/rgbfilterbitmapeffect.vb#createunmanagedeffect)]"
  syntax:
    content: protected static System.Runtime.InteropServices.SafeHandle CreateBitmapEffectOuter ();
    parameters: []
    return:
      type: System.Runtime.InteropServices.SafeHandle
      description: "Een ingang naar een [IMILBitmapEffect](http://msdn.microsoft.com/en-us/4bd5697d-bdde-4485-a05b-b3fea1403e16) object."
  overload: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect
  id: CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: CreateUnmanagedEffect()
  nameWithType: BitmapEffect.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Wanneer in een afgeleide klasse genegeerd, maakt een kloon van de niet-beheerde effect."
  remarks: ''
  example:
  - "The following example demonstrates an override of the CreateUnmanagedEffect method.  \n  \n [!code-cs[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/csharp/RGBFilterBitmapEffect/RGBFilterBitmapEffect.cs#createunmanagedeffect)]\n [!code-vb[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/visualbasic/rgbfilterbitmapeffect/rgbfilterbitmapeffect.vb#createunmanagedeffect)]"
  syntax:
    content: protected abstract System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();
    parameters: []
    return:
      type: System.Runtime.InteropServices.SafeHandle
      description: "Een koppeling naar de onbeheerde effect kloon."
  overload: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  id: GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: GetOutput(BitmapEffectInput)
  nameWithType: BitmapEffect.GetOutput(BitmapEffectInput)
  fullName: System.Windows.Media.Effects.BitmapEffect.GetOutput(BitmapEffectInput)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Retourneert de <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;> </xref> die het resultaat wanneer het effect wordt toegepast met de opgegeven <xref href=&quot;System.Windows.Media.Effects.BitmapEffectInput&quot;> </xref>."
  syntax:
    content: public System.Windows.Media.Imaging.BitmapSource GetOutput (System.Windows.Media.Effects.BitmapEffectInput input);
    parameters:
    - id: input
      type: System.Windows.Media.Effects.BitmapEffectInput
      description: "De invoer van het effect van toepassing."
    return:
      type: System.Windows.Media.Imaging.BitmapSource
      description: "De <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;> </xref> met het effect van de invoer."
  overload: System.Windows.Media.Effects.BitmapEffect.GetOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  id: InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: InitializeBitmapEffect(SafeHandle,SafeHandle)
  nameWithType: BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Initialiseert een [IMILBitmapEffect](https://msdn.microsoft.com/library/ms735317.aspx) ingang die is verkregen van <xref:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*>met de opgegeven [IMILBitmapEffectPrimitive](https://msdn.microsoft.com/library/ms735258.aspx).</xref:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*>"
  remarks: ''
  example:
  - "The following example shows an implementation of <xref:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect%2A> that uses the InitializeBitmapEffect method to initialize the wrapper object with the custom effect.  \n  \n [!code-cs[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/csharp/RGBFilterBitmapEffect/RGBFilterBitmapEffect.cs#createunmanagedeffect)]\n [!code-vb[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/visualbasic/rgbfilterbitmapeffect/rgbfilterbitmapeffect.vb#createunmanagedeffect)]"
  syntax:
    content: protected static void InitializeBitmapEffect (System.Runtime.InteropServices.SafeHandle outerObject, System.Runtime.InteropServices.SafeHandle innerObject);
    parameters:
    - id: outerObject
      type: System.Runtime.InteropServices.SafeHandle
      description: "De buitenste IMILBitmapEffect wrapper worden geïnitialiseerd."
    - id: innerObject
      type: System.Runtime.InteropServices.SafeHandle
      description: "De interne IMILBitmapEffectPrimitive."
  overload: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  id: SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: SetValue(SafeHandle,String,Object)
  nameWithType: BitmapEffect.SetValue(SafeHandle,String,Object)
  fullName: System.Windows.Media.Effects.BitmapEffect.SetValue(SafeHandle,String,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "De opgegeven eigenschap wordt ingesteld op de opgegeven waarde."
  remarks: "Deze methode is bedoeld als een Help-methode voor <xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>.</xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A> Wanneer u overschrijven <xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>, SetValue gebruiken voor het bijwerken van niet-beheerde eigenschapswaarden.</xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>"
  syntax:
    content: protected static void SetValue (System.Runtime.InteropServices.SafeHandle effect, string propertyName, object value);
    parameters:
    - id: effect
      type: System.Runtime.InteropServices.SafeHandle
      description: "De ingang naar de gevolgen van de eigenschap te wijzigen."
    - id: propertyName
      type: System.String
      description: "De naam van de eigenschap te wijzigen."
    - id: value
      type: System.Object
      description: "De waarde voor de eigenschap in te stellen."
  overload: System.Windows.Media.Effects.BitmapEffect.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  id: UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Wanneer in een afgeleide klasse genegeerd, werkt de status van de eigenschap van de niet-beheerde eigenschappen van het effect."
  remarks: "Wanneer u niet-beheerde eigenschappen binnen een onderdrukking van deze methode, gebruikt u de Help-methode <xref:System.Windows.Media.Effects.BitmapEffect.SetValue%2A>.</xref:System.Windows.Media.Effects.BitmapEffect.SetValue%2A>"
  syntax:
    content: protected abstract void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);
    parameters:
    - id: unmanagedEffect
      type: System.Runtime.InteropServices.SafeHandle
      description: "De koppeling naar het effect dat bevat de eigenschappen om bij te werken."
  overload: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.Animatable
  isExternal: false
  name: System.Windows.Media.Animation.Animatable
- uid: System.Windows.Media.Effects.BitmapEffect.#ctor
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: BitmapEffect()
  nameWithType: BitmapEffect.BitmapEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.BitmapEffect()
- uid: System.Windows.Media.Effects.BitmapEffect.Clone
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: Clone()
  nameWithType: BitmapEffect.Clone()
  fullName: System.Windows.Media.Effects.BitmapEffect.Clone()
- uid: System.Windows.Media.Effects.BitmapEffect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffect
  nameWithType: BitmapEffect
  fullName: System.Windows.Media.Effects.BitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: BitmapEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue()
- uid: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateBitmapEffectOuter()
  nameWithType: BitmapEffect.CreateBitmapEffectOuter()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter()
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateUnmanagedEffect()
  nameWithType: BitmapEffect.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect()
- uid: System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: GetOutput(BitmapEffectInput)
  nameWithType: BitmapEffect.GetOutput(BitmapEffectInput)
  fullName: System.Windows.Media.Effects.BitmapEffect.GetOutput(BitmapEffectInput)
- uid: System.Windows.Media.Imaging.BitmapSource
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: BitmapSource
  nameWithType: BitmapSource
  fullName: System.Windows.Media.Imaging.BitmapSource
- uid: System.Windows.Media.Effects.BitmapEffectInput
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffectInput
  nameWithType: BitmapEffectInput
  fullName: System.Windows.Media.Effects.BitmapEffectInput
- uid: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: InitializeBitmapEffect(SafeHandle,SafeHandle)
  nameWithType: BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
- uid: System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: SetValue(SafeHandle,String,Object)
  nameWithType: BitmapEffect.SetValue(SafeHandle,String,Object)
  fullName: System.Windows.Media.Effects.BitmapEffect.SetValue(SafeHandle,String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
- uid: System.Windows.Media.Effects.BitmapEffect.#ctor*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: BitmapEffect
  nameWithType: BitmapEffect.BitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffect.Clone*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: Clone
  nameWithType: BitmapEffect.Clone
- uid: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CloneCurrentValue
  nameWithType: BitmapEffect.CloneCurrentValue
- uid: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateBitmapEffectOuter
  nameWithType: BitmapEffect.CreateBitmapEffectOuter
- uid: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateUnmanagedEffect
  nameWithType: BitmapEffect.CreateUnmanagedEffect
- uid: System.Windows.Media.Effects.BitmapEffect.GetOutput*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: GetOutput
  nameWithType: BitmapEffect.GetOutput
- uid: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: InitializeBitmapEffect
  nameWithType: BitmapEffect.InitializeBitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffect.SetValue*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: SetValue
  nameWithType: BitmapEffect.SetValue
- uid: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: UpdateUnmanagedPropertyState
  nameWithType: BitmapEffect.UpdateUnmanagedPropertyState
