### YamlMime:ManagedReference
items:
- uid: System.NonSerializedAttribute
  id: NonSerializedAttribute
  children:
  - System.NonSerializedAttribute.#ctor
  langs:
  - csharp
  name: NonSerializedAttribute
  nameWithType: NonSerializedAttribute
  fullName: System.NonSerializedAttribute
  type: Class
  summary: "Hiermee wordt aangegeven dat een veld van een serialiseerbare klasse niet worden geserialiseerd. Deze klasse kan niet worden overgenomen."
  remarks: "Wanneer u de <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>of <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>klassen voor het serialiseren van een object, het kenmerk NonSerializedAttribute gebruiken om te voorkomen dat een veld dat geserialiseerd.</xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter> </xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> Bijvoorbeeld, kunt u dit kenmerk om te voorkomen dat de serialisatie van gevoelige gegevens.       De doelobjecten voor het kenmerk NonSerializedAttribute zijn openbare en persoonlijke velden van een klasse serialiseerbaar. Standaard-klassen zijn niet geserialiseerd tenzij ze zijn gemarkeerd met <xref:System.SerializableAttribute>.</xref:System.SerializableAttribute> Alle openbare en persoonlijke velden van een klasse worden tijdens de serialisatie standaard geserialiseerd. Velden die zijn gemarkeerd met NonSerializedAttribute worden uitgesloten tijdens serialisatie. Als u de <xref:System.Xml.Serialization.XmlSerializer>-klasse moet een object niet serialiseren, gebruikt u de <xref:System.Xml.Serialization.XmlIgnoreAttribute>klasse dezelfde functionaliteit ophalen.</xref:System.Xml.Serialization.XmlIgnoreAttribute> </xref:System.Xml.Serialization.XmlSerializer> U kunt ook implementeren de <xref:System.Runtime.Serialization.ISerializable>interface naar expliciet besturingselement van het proces voor serialisatie.</xref:System.Runtime.Serialization.ISerializable> Let op: die ge√Ømplementeerd <xref:System.Runtime.Serialization.ISerializable>moeten nog steeds worden gemarkeerd met <xref:System.SerializableAttribute>.</xref:System.SerializableAttribute> klassen</xref:System.Runtime.Serialization.ISerializable>       Instellen voor de klasse NonSerializedAttribute toepassen op een gebeurtenis, de kenmerklocatie aan veld, zoals wordt weergegeven in de volgende C#-code.      ```   [field:NonSerializedAttribute()]    public event ChangedEventHandler Changed;   ```Als een veld is niet geserialiseerd, maar nog steeds vereist een standaardwaarde die moet worden opgegeven na deserialisatie, kunt u een methode maken die het veld een waarde levert vervolgens toepassen de <xref:System.Runtime.Serialization.OnDeserializedAttribute>aan de methode.</xref:System.Runtime.Serialization.OnDeserializedAttribute>       Zie voor meer informatie over het gebruik van kenmerken [kenmerken](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates serialization of an object marked with the <xref:System.SerializableAttribute> attribute, and the behavior of a field marked with the NonSerializedAttribute in the serialized object.  \n  \n> [!NOTE]\n>  The code uses the <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter> class to serialize the object. The class is found in the system.runtime.serialization.formatters.soap.dll, which is not loaded by default into a project. To run the code, you must add a reference to the DLL to your project.  \n  \n [!code-cpp[SerializationAttributes#1](~/add/codesnippet/cpp/t-system.nonserializedat_1.cpp)]\n [!code-cs[SerializationAttributes#1](~/add/codesnippet/csharp/t-system.nonserializedat_1.cs)]\n [!code-vb[SerializationAttributes#1](~/add/codesnippet/visualbasic/t-system.nonserializedat_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Field, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class NonSerializedAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.NonSerializedAttribute.#ctor
  id: '#ctor'
  parent: System.NonSerializedAttribute
  langs:
  - csharp
  name: NonSerializedAttribute()
  nameWithType: NonSerializedAttribute.NonSerializedAttribute()
  fullName: System.NonSerializedAttribute.NonSerializedAttribute()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.NonSerializedAttribute&quot;> </xref> klasse."
  syntax:
    content: public NonSerializedAttribute ();
    parameters: []
  overload: System.NonSerializedAttribute.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.NonSerializedAttribute.#ctor
  parent: System.NonSerializedAttribute
  isExternal: false
  name: NonSerializedAttribute()
  nameWithType: NonSerializedAttribute.NonSerializedAttribute()
  fullName: System.NonSerializedAttribute.NonSerializedAttribute()
- uid: System.NonSerializedAttribute.#ctor*
  parent: System.NonSerializedAttribute
  isExternal: false
  name: NonSerializedAttribute
  nameWithType: NonSerializedAttribute.NonSerializedAttribute
