### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.HashAlgorithm
  id: HashAlgorithm
  children:
  - System.Security.Cryptography.HashAlgorithm.#ctor
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.Create
  - System.Security.Cryptography.HashAlgorithm.Create(System.String)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.HashFinal
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.Initialize
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
  type: Class
  summary: "Hiermee geeft u de basisklasse van welke alle implementaties van cryptografische hash algoritmen moeten zijn afgeleid."
  remarks: "Hash-functies zijn essentieel bij moderne cryptografie. Deze functies worden binaire tekenreeksen van een willekeurige lengte toegewezen aan kleine binaire tekenreeksen met een vaste lengte, bekend als hash-waarden. Een cryptografische hash-functie heeft de eigenschap invoerreeksen twee afzonderlijke invoer vinden die hash op dezelfde waarde is. Hash-functies worden vaak gebruikt met digitale handtekeningen en gegevensintegriteit.       De hash wordt als een unieke waarde met een vaste grootte van een grote hoeveelheid gegevens die worden gebruikt. Hashes van twee sets van gegevens moeten overeenkomen met als de bijbehorende gegevens ook overeenkomt. Kleine wijzigingen in de gegevens leiden tot grote onvoorspelbare wijzigingen in de hash."
  example:
  - "The following code example computes the <xref:System.Security.Cryptography.SHA1CryptoServiceProvider> hash for an array. This example assumes that there is a predefined byte array `dataArray[]`. <xref:System.Security.Cryptography.SHA1CryptoServiceProvider> is a derived class of HashAlgorithm.  \n  \n [!code-cs[Classic HashAlgorithm Example#1](~/add/codesnippet/csharp/t-system.security.crypto_106_1.cs)]\n [!code-cpp[Classic HashAlgorithm Example#1](~/add/codesnippet/cpp/t-system.security.crypto_106_1.cpp)]\n [!code-vb[Classic HashAlgorithm Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_106_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class HashAlgorithm : System.Security.Cryptography.ICryptoTransform
  inheritance:
  - System.Object
  implements:
  - System.Security.Cryptography.ICryptoTransform
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: HashAlgorithm()
  nameWithType: HashAlgorithm.HashAlgorithm()
  fullName: System.Security.Cryptography.HashAlgorithm.HashAlgorithm()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> klasse."
  remarks: "U kan geen exemplaar van een abstracte klasse maken. Toepassingscode maakt een nieuw exemplaar van een afgeleide klasse."
  syntax:
    content: protected HashAlgorithm ();
    parameters: []
  overload: System.Security.Cryptography.HashAlgorithm.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  id: CanReuseTransform
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: CanReuseTransform
  nameWithType: HashAlgorithm.CanReuseTransform
  fullName: System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Haalt een waarde die aangeeft of de huidige transformatie opnieuw kan worden gebruikt."
  syntax:
    content: public virtual bool CanReuseTransform { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.HashAlgorithm.CanReuseTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  id: CanTransformMultipleBlocks
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: CanTransformMultipleBlocks
  nameWithType: HashAlgorithm.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Wanneer in een afgeleide klasse genegeerd, krijgt een waarde die aangeeft of meerdere blokken kunnen worden omgezet."
  syntax:
    content: public virtual bool CanTransformMultipleBlocks { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als meerdere blokken kunnen worden omgezet; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.Clear
  id: Clear
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: Clear()
  nameWithType: HashAlgorithm.Clear()
  fullName: System.Security.Cryptography.HashAlgorithm.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Versies van alle resources die worden gebruikt door de <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> klasse."
  remarks: "Deze methode is een eenvoudige aanroep naar de <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>methode.</xref:System.IDisposable.Dispose%2A?displayProperty=fullName>       Het aanroepen van `Dispose` kunt u de resources die worden gebruikt door de <xref:System.Security.Cryptography.HashAlgorithm>-klasse moet opnieuw worden toegewezen voor andere doeleinden.</xref:System.Security.Cryptography.HashAlgorithm> Voor meer informatie over `Dispose`, Zie [onbeheerde hulpbronnen reinigen](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Cryptography.HashAlgorithm.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  id: ComputeHash(System.Byte[])
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: ComputeHash(Byte[])
  nameWithType: HashAlgorithm.ComputeHash(Byte[])
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Berekent de hash-waarde voor de opgegeven byte-matrix."
  remarks: ''
  example:
  - "The following example computes the <xref:System.Security.Cryptography.MD5> hash value of a string and returns the hash as a 32-character, hexadecimal-formatted string.  The hash string created by this code example is compatible with any MD5 hash function (on any platform) that creates a 32-character, hexadecimal-formatted hash string.  \n  \n [!code-vb[Security.Cryptography.MD5#1](~/add/codesnippet/visualbasic/m-system.security.crypto_123_1.vb)]\n [!code-cs[Security.Cryptography.MD5#1](~/add/codesnippet/csharp/m-system.security.crypto_123_1.cs)]"
  syntax:
    content: public byte[] ComputeHash (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "De invoer van de hash-code voor berekenen."
    return:
      type: System.Byte[]
      description: "De berekende hash-code."
  overload: System.Security.Cryptography.HashAlgorithm.ComputeHash*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is al verwijderd."
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  id: ComputeHash(System.IO.Stream)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: ComputeHash(Stream)
  nameWithType: HashAlgorithm.ComputeHash(Stream)
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash(Stream)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Berekent de hash-waarde voor het opgegeven <xref:System.IO.Stream>object.</xref:System.IO.Stream>"
  remarks: ''
  example:
  - "The following example calculates the <xref:System.Security.Cryptography.RIPEMD160> hash for all files in a directory.  \n  \n [!code-cpp[RIPEMD160#1](~/add/codesnippet/cpp/m-system.security.crypto_23_1.cpp)]\n [!code-vb[RIPEMD160#1](~/add/codesnippet/visualbasic/m-system.security.crypto_23_1.vb)]\n [!code-cs[RIPEMD160#1](~/add/codesnippet/csharp/m-system.security.crypto_23_1.cs)]"
  syntax:
    content: public byte[] ComputeHash (System.IO.Stream inputStream);
    parameters:
    - id: inputStream
      type: System.IO.Stream
      description: "De invoer van de hash-code voor berekenen."
    return:
      type: System.Byte[]
      description: "De berekende hash-code."
  overload: System.Security.Cryptography.HashAlgorithm.ComputeHash*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is al verwijderd."
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  id: ComputeHash(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: ComputeHash(Byte[],Int32,Int32)
  nameWithType: HashAlgorithm.ComputeHash(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Berekent de hash-waarde voor de opgegeven regio van de opgegeven byte-matrix."
  syntax:
    content: public byte[] ComputeHash (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "De invoer van de hash-code voor berekenen."
    - id: offset
      type: System.Int32
      description: "De offset in de bytematrix waaruit de gegevens in gebruik neemt."
    - id: count
      type: System.Int32
      description: "Het aantal bytes in de matrix te gebruiken als gegevens."
    return:
      type: System.Byte[]
      description: "De berekende hash-code."
  overload: System.Security.Cryptography.HashAlgorithm.ComputeHash*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>is een ongeldige waarde.       - of - <code>buffer</code> lengte is ongeldig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>valt buiten het bereik. Deze parameter vereist een niet-negatief getal."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is al verwijderd."
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.Create
  id: Create
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: Create()
  nameWithType: HashAlgorithm.Create()
  fullName: System.Security.Cryptography.HashAlgorithm.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee maakt een exemplaar van de standaardimplementatie van een hash-algoritme."
  remarks: "Deze overbelasting gebruikt standaard de <xref:System.Security.Cryptography.SHA1CryptoServiceProvider>uitvoering van een hash-algoritme.</xref:System.Security.Cryptography.SHA1CryptoServiceProvider> Als u opgeven van een andere implementatie wilt, gebruikt u de <xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29>overbelasting, waarmee u kunt in plaats daarvan de naam van een algoritme opgeven.</xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29> Het configuratiesysteem cryptografie definieert de standaardimplementatie van <xref:System.Security.Cryptography.HashAlgorithm>.</xref:System.Security.Cryptography.HashAlgorithm>"
  syntax:
    content: public static System.Security.Cryptography.HashAlgorithm Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.HashAlgorithm
      description: "Een nieuwe <xref href=&quot;System.Security.Cryptography.SHA1CryptoServiceProvider&quot;> </xref> exemplaar, tenzij de standaardinstellingen zijn gewijzigd met behulp van de."
  overload: System.Security.Cryptography.HashAlgorithm.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: Create(String)
  nameWithType: HashAlgorithm.Create(String)
  fullName: System.Security.Cryptography.HashAlgorithm.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Maakt een exemplaar van de opgegeven implementatie van een hash-algoritme."
  syntax:
    content: public static System.Security.Cryptography.HashAlgorithm Create (string hashName);
    parameters:
    - id: hashName
      type: System.String
      description: "De hash-algoritme-implementatie te gebruiken. De volgende tabel bevat de geldige waarden voor de `hashName` parameter en de algoritmen deze worden toegewezen aan.       <table><thead><tr><th> Waarde van parameter       </th><th> Implements       </th></tr></thead><tbody><tr><td> SHA       </td><td><xref href=&quot;System.Security.Cryptography.SHA1CryptoServiceProvider&quot;></xref></td></tr><tr><td> SHA1       </td><td><xref href=&quot;System.Security.Cryptography.SHA1CryptoServiceProvider&quot;></xref></td></tr><tr><td> System.Security.Cryptography.SHA1       </td><td><xref href=&quot;System.Security.Cryptography.SHA1CryptoServiceProvider&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HashAlgorithm       </td><td><xref href=&quot;System.Security.Cryptography.SHA1CryptoServiceProvider&quot;></xref></td></tr><tr><td> MD5       </td><td><xref href=&quot;System.Security.Cryptography.MD5CryptoServiceProvider&quot;></xref></td></tr><tr><td> System.Security.Cryptography.MD5       </td><td><xref href=&quot;System.Security.Cryptography.MD5CryptoServiceProvider&quot;></xref></td></tr><tr><td> SHA256       </td><td><xref href=&quot;System.Security.Cryptography.SHA256Managed&quot;></xref></td></tr><tr><td> SHA-256       </td><td><xref href=&quot;System.Security.Cryptography.SHA256Managed&quot;></xref></td></tr><tr><td> System.Security.Cryptography.SHA256       </td><td><xref href=&quot;System.Security.Cryptography.SHA256Managed&quot;></xref></td></tr><tr><td> SHA384       </td><td><xref href=&quot;System.Security.Cryptography.SHA384Managed&quot;></xref></td></tr><tr><td> SHA-384       </td><td><xref href=&quot;System.Security.Cryptography.SHA384Managed&quot;></xref></td></tr><tr><td> System.Security.Cryptography.SHA384       </td><td><xref href=&quot;System.Security.Cryptography.SHA384Managed&quot;></xref></td></tr><tr><td> SHA512       </td><td><xref href=&quot;System.Security.Cryptography.SHA512Managed&quot;></xref></td></tr><tr><td> SHA-512       </td><td><xref href=&quot;System.Security.Cryptography.SHA512Managed&quot;></xref></td></tr><tr><td> System.Security.Cryptography.SHA512       </td><td><xref href=&quot;System.Security.Cryptography.SHA512Managed&quot;></xref></td></tr></tbody></table>"
    return:
      type: System.Security.Cryptography.HashAlgorithm
      description: "Een nieuw exemplaar van de opgegeven hash-algoritme of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als <code> hashName </code> is geen geldige hash-algoritme."
  overload: System.Security.Cryptography.HashAlgorithm.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.Dispose
  id: Dispose
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: Dispose()
  nameWithType: HashAlgorithm.Dispose()
  fullName: System.Security.Cryptography.HashAlgorithm.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Versies van alle resources die worden gebruikt door het huidige exemplaar van de <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> klasse."
  remarks: "Roep `Dispose` wanneer u klaar bent met de <xref:System.Security.Cryptography.HashAlgorithm>.</xref:System.Security.Cryptography.HashAlgorithm> De `Dispose` methode blijft de <xref:System.Security.Cryptography.HashAlgorithm>in een onbruikbare status.</xref:System.Security.Cryptography.HashAlgorithm> Na het aanroepen `Dispose`, moet u alle verwijzingen naar vrijgeven de <xref:System.Security.Cryptography.HashAlgorithm>zodat het geheugen door de garbage collector vrijmaken kunt die de <xref:System.Security.Cryptography.HashAlgorithm>is bepaald dat zich bevindt.</xref:System.Security.Cryptography.HashAlgorithm> </xref:System.Security.Cryptography.HashAlgorithm>       Zie voor meer informatie [onbeheerde hulpbronnen reinigen](~/add/includes/ajax-current-ext-md.md) en [uitvoering van een methode Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Altijd aanroep `Dispose` voordat u uw laatste verwijzing naar de <xref:System.Security.Cryptography.HashAlgorithm>.</xref:System.Security.Cryptography.HashAlgorithm> vrijgeven Anders wordt de resources die worden gebruikt niet vrij tot het aanroepen van de garbagecollector van de <xref:System.Security.Cryptography.HashAlgorithm>van het object `Finalize` methode.</xref:System.Security.Cryptography.HashAlgorithm>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.HashAlgorithm.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: HashAlgorithm.Dispose(Boolean)
  fullName: System.Security.Cryptography.HashAlgorithm.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Heft de niet-beheerde bronnen worden gebruikt door de <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> en eventueel de beheerde bronnen vrij."
  remarks: "Deze methode wordt aangeroepen door het publiek `Dispose()` methode en de `Finalize` methode. `Dispose()`Hiermee wordt de beveiligde `Dispose(Boolean)` methode met de `disposing` parameter ingesteld op `true`. `Finalize`roept `Dispose` met `disposing` ingesteld op `false`.       Wanneer de `disposing` parameter `true`, deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit <xref:System.Security.Cryptography.HashAlgorithm>verwijzingen.</xref:System.Security.Cryptography.HashAlgorithm> Deze methode roept de `Dispose()` methode van elk object waarnaar wordt verwezen."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om alleen niet-beheerde bronnen vrij te geven."
  overload: System.Security.Cryptography.HashAlgorithm.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.Hash
  id: Hash
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: Hash
  nameWithType: HashAlgorithm.Hash
  fullName: System.Security.Cryptography.HashAlgorithm.Hash
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee wordt de waarde van de berekende hash-code."
  remarks: "De eigenschap Hash is een bytematrix; de <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A>eigenschap is een waarde die bits vertegenwoordigen.</xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A> Het aantal elementen in de Hash is daarom een achtste de grootte van <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A>.</xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A>"
  syntax:
    content: public virtual byte[] Hash { get; }
    return:
      type: System.Byte[]
      description: "De huidige waarde van de berekende hash-code."
  overload: System.Security.Cryptography.HashAlgorithm.Hash*
  exceptions:
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: "<xref href=&quot;System.Security.Cryptography.HashAlgorithm.HashValue&quot;></xref>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is al verwijderd."
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  id: HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: HashAlgorithm.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.HashCore(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Wanneer in een afgeleide klasse, routes gegevens geschreven naar het object in de hashalgoritme voor het verwerken van de hash wordt overschreven."
  remarks: "Deze methode wordt niet aangeroepen door de toepassingscode.       Deze abstracte methode voert de berekening van de hash. Elke schrijfbewerking naar de cryptografische stroomobject wordt doorgegeven via deze methode. Deze methode bijgewerkt de status van het hash-object voor elk blok van gegevens, zodat een juiste hash-waarde wordt geretourneerd aan het einde van de gegevensstroom."
  syntax:
    content: protected abstract void HashCore (byte[] array, int ibStart, int cbSize);
    parameters:
    - id: array
      type: System.Byte[]
      description: "De invoer van de hash-code voor berekenen."
    - id: ibStart
      type: System.Int32
      description: "De offset in de bytematrix waaruit de gegevens in gebruik neemt."
    - id: cbSize
      type: System.Int32
      description: "Het aantal bytes in de bytematrix moet worden gebruikt als gegevens."
  overload: System.Security.Cryptography.HashAlgorithm.HashCore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.HashFinal
  id: HashFinal
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: HashFinal()
  nameWithType: HashAlgorithm.HashFinal()
  fullName: System.Security.Cryptography.HashAlgorithm.HashFinal()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Wanneer in een afgeleide klasse genegeerd, wordt de hash-berekening nadat de laatste gegevens wordt verwerkt door de cryptografische stroomobject."
  remarks: "Deze methode wordt een gedeeltelijke berekening en retourneert de juiste hash-waarde voor de gegevensstroom."
  syntax:
    content: protected abstract byte[] HashFinal ();
    parameters: []
    return:
      type: System.Byte[]
      description: "De berekende hash-code."
  overload: System.Security.Cryptography.HashAlgorithm.HashFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.HashSize
  id: HashSize
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: HashSize
  nameWithType: HashAlgorithm.HashSize
  fullName: System.Security.Cryptography.HashAlgorithm.HashSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee haalt de grootte, in bits, van de berekende hash-code."
  syntax:
    content: public virtual int HashSize { get; }
    return:
      type: System.Int32
      description: "De grootte, in bits, van de berekende hash-code."
  overload: System.Security.Cryptography.HashAlgorithm.HashSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.HashSizeValue
  id: HashSizeValue
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: HashSizeValue
  nameWithType: HashAlgorithm.HashSizeValue
  fullName: System.Security.Cryptography.HashAlgorithm.HashSizeValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee geeft u de grootte, in bits, van de berekende hash-code."
  remarks: "Het hash-algoritme geeft de grootte van de hash-code. Bijvoorbeeld: <xref:System.Security.Cryptography.SHA1>maakt gebruik van een hash-grootte van 160 bits.</xref:System.Security.Cryptography.SHA1>       Dit veld kan worden geopend via de <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A>eigenschap.</xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A>"
  syntax:
    content: protected int HashSizeValue;
    return:
      type: System.Int32
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.HashValue
  id: HashValue
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: HashValue
  nameWithType: HashAlgorithm.HashValue
  fullName: System.Security.Cryptography.HashAlgorithm.HashValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee geeft u de waarde van de berekende hash-code."
  remarks: "Dit veld kan worden geopend via de <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A>eigenschap.</xref:System.Security.Cryptography.HashAlgorithm.Hash%2A>"
  syntax:
    content: protected byte[] HashValue;
    return:
      type: System.Byte[]
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.Initialize
  id: Initialize
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: Initialize()
  nameWithType: HashAlgorithm.Initialize()
  fullName: System.Security.Cryptography.HashAlgorithm.Initialize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiseert een implementatie van de <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> klasse."
  syntax:
    content: public abstract void Initialize ();
    parameters: []
  overload: System.Security.Cryptography.HashAlgorithm.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.InputBlockSize
  id: InputBlockSize
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: InputBlockSize
  nameWithType: HashAlgorithm.InputBlockSize
  fullName: System.Security.Cryptography.HashAlgorithm.InputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Wanneer in een afgeleide klasse genegeerd, krijgt de blokgrootte van de invoer."
  remarks: "Tenzij overschreven, wordt deze eigenschap de waarde 1."
  syntax:
    content: public virtual int InputBlockSize { get; }
    return:
      type: System.Int32
      description: "De invoer blokgrootte."
  overload: System.Security.Cryptography.HashAlgorithm.InputBlockSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  id: OutputBlockSize
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: OutputBlockSize
  nameWithType: HashAlgorithm.OutputBlockSize
  fullName: System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Wanneer in een afgeleide klasse genegeerd, krijgt de blokgrootte van de uitvoer."
  remarks: "Tenzij overschreven, wordt deze eigenschap de waarde 1."
  syntax:
    content: public virtual int OutputBlockSize { get; }
    return:
      type: System.Int32
      description: "De grootte van het uitvoer-blok."
  overload: System.Security.Cryptography.HashAlgorithm.OutputBlockSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.State
  id: State
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: State
  nameWithType: HashAlgorithm.State
  fullName: System.Security.Cryptography.HashAlgorithm.State
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "De status van de hash-berekening vertegenwoordigt."
  remarks: "Dit veld wordt gebruikt om te voorkomen dat gebruikers de sleutel van een sleutelhash-algoritme wijzigen tijdens een hash-bewerking. Wanneer een belangrijke wijziging gerechtvaardigd is, is de waarde van dit veld nul vóór en na een hash-bewerking. Wanneer een wijziging in de sleutel niet legitiem is, wordt de waarde van dit veld is aan nul."
  syntax:
    content: protected int State;
    return:
      type: System.Int32
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  id: TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  nameWithType: HashAlgorithm.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Berekent de hash-waarde voor de opgegeven regio van de invoer bytematrix en kopieert de opgegeven regio van de invoer bytematrix naar de opgegeven regio van de bytematrix uitvoer."
  remarks: "Roep de methode kan met TransformBlock voordat u de <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A>methode.</xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> U moet beide methoden aanroepen voordat u de laatste hash-waarde ophalen.       Voor het ophalen van de laatste hash-waarde na het aanroepen de <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A>methode, krijgen de bytematrix die zich in de <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A>eigenschap.</xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> </xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A>       Het aanroepen van de methode kan met TransformBlock met andere invoer en uitvoer matrices resultaten in een <xref:System.IO.IOException>.</xref:System.IO.IOException>"
  example:
  - "The following code examples use the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method with the TransformBlock method to hash a string.  \n  \n [!code-vb[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/add/codesnippet/visualbasic/ecff726a-6c03-4fab-88fc-_1.vb)]\n [!code-cs[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/add/codesnippet/csharp/ecff726a-6c03-4fab-88fc-_1.cs)]"
  syntax:
    content: public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: "De invoer van de hash-code voor berekenen."
    - id: inputOffset
      type: System.Int32
      description: "De offset in de invoer bytematrix waaruit de gegevens in gebruik neemt."
    - id: inputCount
      type: System.Int32
      description: "Het aantal bytes in de invoer bytematrix moet worden gebruikt als gegevens."
    - id: outputBuffer
      type: System.Byte[]
      description: "Een kopie van het deel van de invoermatrix om te berekenen van de hash-code."
    - id: outputOffset
      type: System.Int32
      description: "De offset in de uitvoer bytematrix waaruit u wilt beginnen met het schrijven van gegevens."
    return:
      type: System.Int32
      description: "Het aantal geschreven bytes."
  overload: System.Security.Cryptography.HashAlgorithm.TransformBlock*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputCount</code>maakt gebruik van een ongeldige waarde.       - of - <code>inputBuffer</code> heeft een ongeldige lengte."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inputOffset</code>valt buiten het bereik. Deze parameter vereist een niet-negatief getal."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is al verwijderd."
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  id: TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: TransformFinalBlock(Byte[],Int32,Int32)
  nameWithType: HashAlgorithm.TransformFinalBlock(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Berekent de hash-waarde voor de opgegeven regio van de opgegeven byte-matrix."
  remarks: "U moet de methode TransformFinalBlock aanroepen na het aanroepen de <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A>methode maar voordat u de laatste hash-waarde ophalen.</xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A>       Houd er rekening mee dat de retourwaarde van deze methode niet de hash-waarde, maar alleen een kopie van het hash-deel van de invoergegevens is.  Voor het ophalen van de laatste hash-waarde na het aanroepen van de methode TransformFinalBlock, krijgen de bytematrix opgenomen in de <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A>eigenschap.</xref:System.Security.Cryptography.HashAlgorithm.Hash%2A>"
  example:
  - "The following code examples use the TransformFinalBlock method with the <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> method to hash a string.  \n  \n [!code-vb[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/add/codesnippet/visualbasic/e884136c-31d4-425b-a9d5-_1.vb)]\n [!code-cs[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/add/codesnippet/csharp/e884136c-31d4-425b-a9d5-_1.cs)]"
  syntax:
    content: public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: "De invoer van de hash-code voor berekenen."
    - id: inputOffset
      type: System.Int32
      description: "De offset in de bytematrix waaruit de gegevens in gebruik neemt."
    - id: inputCount
      type: System.Int32
      description: "Het aantal bytes in de bytematrix moet worden gebruikt als gegevens."
    return:
      type: System.Byte[]
      description: "Een matrix die is een kopie van het deel van de ingang die is gehasht."
  overload: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputCount</code>maakt gebruik van een ongeldige waarde.       - of - <code>inputBuffer</code> heeft een ongeldige offset lengte."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inputOffset</code>valt buiten het bereik. Deze parameter vereist een niet-negatief getal."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is al verwijderd."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicUnexpectedOperationException
  nameWithType: CryptographicUnexpectedOperationException
  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException
- uid: System.Security.Cryptography.HashAlgorithm.#ctor
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashAlgorithm()
  nameWithType: HashAlgorithm.HashAlgorithm()
  fullName: System.Security.Cryptography.HashAlgorithm.HashAlgorithm()
- uid: System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: CanReuseTransform
  nameWithType: HashAlgorithm.CanReuseTransform
  fullName: System.Security.Cryptography.HashAlgorithm.CanReuseTransform
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: CanTransformMultipleBlocks
  nameWithType: HashAlgorithm.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
- uid: System.Security.Cryptography.HashAlgorithm.Clear
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Clear()
  nameWithType: HashAlgorithm.Clear()
  fullName: System.Security.Cryptography.HashAlgorithm.Clear()
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: ComputeHash(Byte[])
  nameWithType: HashAlgorithm.ComputeHash(Byte[])
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: ComputeHash(Stream)
  nameWithType: HashAlgorithm.ComputeHash(Stream)
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: ComputeHash(Byte[],Int32,Int32)
  nameWithType: HashAlgorithm.ComputeHash(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.HashAlgorithm.Create
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Create()
  nameWithType: HashAlgorithm.Create()
  fullName: System.Security.Cryptography.HashAlgorithm.Create()
- uid: System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography.HashAlgorithm.Create(System.String)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Create(String)
  nameWithType: HashAlgorithm.Create(String)
  fullName: System.Security.Cryptography.HashAlgorithm.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.HashAlgorithm.Dispose
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Dispose()
  nameWithType: HashAlgorithm.Dispose()
  fullName: System.Security.Cryptography.HashAlgorithm.Dispose()
- uid: System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: HashAlgorithm.Dispose(Boolean)
  fullName: System.Security.Cryptography.HashAlgorithm.Dispose(Boolean)
- uid: System.Security.Cryptography.HashAlgorithm.Hash
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Hash
  nameWithType: HashAlgorithm.Hash
  fullName: System.Security.Cryptography.HashAlgorithm.Hash
- uid: System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: HashAlgorithm.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.HashCore(Byte[],Int32,Int32)
- uid: System.Security.Cryptography.HashAlgorithm.HashFinal
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashFinal()
  nameWithType: HashAlgorithm.HashFinal()
  fullName: System.Security.Cryptography.HashAlgorithm.HashFinal()
- uid: System.Security.Cryptography.HashAlgorithm.HashSize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashSize
  nameWithType: HashAlgorithm.HashSize
  fullName: System.Security.Cryptography.HashAlgorithm.HashSize
- uid: System.Security.Cryptography.HashAlgorithm.HashSizeValue
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashSizeValue
  nameWithType: HashAlgorithm.HashSizeValue
  fullName: System.Security.Cryptography.HashAlgorithm.HashSizeValue
- uid: System.Security.Cryptography.HashAlgorithm.HashValue
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashValue
  nameWithType: HashAlgorithm.HashValue
  fullName: System.Security.Cryptography.HashAlgorithm.HashValue
- uid: System.Security.Cryptography.HashAlgorithm.Initialize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Initialize()
  nameWithType: HashAlgorithm.Initialize()
  fullName: System.Security.Cryptography.HashAlgorithm.Initialize()
- uid: System.Security.Cryptography.HashAlgorithm.InputBlockSize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: InputBlockSize
  nameWithType: HashAlgorithm.InputBlockSize
  fullName: System.Security.Cryptography.HashAlgorithm.InputBlockSize
- uid: System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: OutputBlockSize
  nameWithType: HashAlgorithm.OutputBlockSize
  fullName: System.Security.Cryptography.HashAlgorithm.OutputBlockSize
- uid: System.Security.Cryptography.HashAlgorithm.State
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: State
  nameWithType: HashAlgorithm.State
  fullName: System.Security.Cryptography.HashAlgorithm.State
- uid: System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  nameWithType: HashAlgorithm.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
- uid: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: TransformFinalBlock(Byte[],Int32,Int32)
  nameWithType: HashAlgorithm.TransformFinalBlock(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(Byte[],Int32,Int32)
- uid: System.Security.Cryptography.HashAlgorithm.#ctor*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm.HashAlgorithm
- uid: System.Security.Cryptography.HashAlgorithm.CanReuseTransform*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: CanReuseTransform
  nameWithType: HashAlgorithm.CanReuseTransform
- uid: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: CanTransformMultipleBlocks
  nameWithType: HashAlgorithm.CanTransformMultipleBlocks
- uid: System.Security.Cryptography.HashAlgorithm.Clear*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Clear
  nameWithType: HashAlgorithm.Clear
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: ComputeHash
  nameWithType: HashAlgorithm.ComputeHash
- uid: System.Security.Cryptography.HashAlgorithm.Create*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Create
  nameWithType: HashAlgorithm.Create
- uid: System.Security.Cryptography.HashAlgorithm.Dispose*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Dispose
  nameWithType: HashAlgorithm.Dispose
- uid: System.Security.Cryptography.HashAlgorithm.Hash*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Hash
  nameWithType: HashAlgorithm.Hash
- uid: System.Security.Cryptography.HashAlgorithm.HashCore*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashCore
  nameWithType: HashAlgorithm.HashCore
- uid: System.Security.Cryptography.HashAlgorithm.HashFinal*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashFinal
  nameWithType: HashAlgorithm.HashFinal
- uid: System.Security.Cryptography.HashAlgorithm.HashSize*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashSize
  nameWithType: HashAlgorithm.HashSize
- uid: System.Security.Cryptography.HashAlgorithm.Initialize*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Initialize
  nameWithType: HashAlgorithm.Initialize
- uid: System.Security.Cryptography.HashAlgorithm.InputBlockSize*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: InputBlockSize
  nameWithType: HashAlgorithm.InputBlockSize
- uid: System.Security.Cryptography.HashAlgorithm.OutputBlockSize*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: OutputBlockSize
  nameWithType: HashAlgorithm.OutputBlockSize
- uid: System.Security.Cryptography.HashAlgorithm.TransformBlock*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: TransformBlock
  nameWithType: HashAlgorithm.TransformBlock
- uid: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: TransformFinalBlock
  nameWithType: HashAlgorithm.TransformFinalBlock
