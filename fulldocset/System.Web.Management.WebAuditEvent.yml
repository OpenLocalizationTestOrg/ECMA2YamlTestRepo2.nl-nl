### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebAuditEvent
  id: WebAuditEvent
  children:
  - System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32)
  - System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  - System.Web.Management.WebAuditEvent.RequestInformation
  langs:
  - csharp
  name: WebAuditEvent
  nameWithType: WebAuditEvent
  fullName: System.Web.Management.WebAuditEvent
  type: Class
  summary: "Fungeert als de basisklasse van alle ASP.NET-statuscontrole controlegebeurtenissen."
  remarks: "ASP.NET-statuscontrole kunt personeel voor productie en bewerkingen voor het beheren van de geïmplementeerde Web-Apps. De <xref:System.Web.Management>-naamruimte bevat de typen van de health-gebeurtenissen die verantwoordelijk is voor het verpakken van de toepassingsgegevens van de health-status en de providertypen verantwoordelijk voor het verwerken van deze gegevens.</xref:System.Web.Management> Het bevat ook ondersteunende typen die bij het beheer van health-gebeurtenissen helpen.       De klasse WebAuditEvent is de basisklasse van waaruit de ASP.NET-statuscontrole controlegebeurtenis klassen worden afgeleid. Controlegebeurtenissen van de informatie over beveiliging gerelateerde bewerkingen genereren in een webtoepassing en geef een geslaagde en mislukte gebeurtenissen voor elke controlebewerking.       De statuscontrole systeem kunt controleren geslaagde en mislukte gebeurtenissen, wat betekent dat een toepassing normaal en niet-functionerende voorwaarden worden gecontroleerd. Standaard worden alleen de mislukte pogingen geregistreerd.       De volgende bewerkingen worden gecontroleerd door ASP.NET en gelukt of mislukt statuscontrole controlegebeurtenissen kunnen worden gegenereerd:-aanmeldingspogingen gemaakt door gebruikers van een ASP.NET-toepassing. Zie voor meer informatie over deze controle <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>en <xref:System.Web.Management.WebSuccessAuditEvent>.</xref:System.Web.Management.WebSuccessAuditEvent> </xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>      -Beveiliging gerelateerde gebeurtenissen, zoals verificatiefouten toegangspogingen fout in de resource en andere gebeurtenissen met betrekking tot beveiliging. Het logboek van deze gebeurtenissen kan nuttig zijn bij het onderzoeken van een inbraakdetectie of een aanval op de toepassing. Geen ondersteuning voor controle is standaard beschikbaar voor autorisatiefouten van anonieme gebruikers. Zie voor meer informatie over mislukte gebeurtenis <xref:System.Web.Management.WebAuthenticationFailureAuditEvent>en <xref:System.Web.Management.WebFailureAuditEvent>.</xref:System.Web.Management.WebFailureAuditEvent> </xref:System.Web.Management.WebAuthenticationFailureAuditEvent>      -Aangepaste gebeurtenissen die worden gegenereerd door een ASP.NET-toepassing. U kunt aangepaste gebeurtenissen controleren door uit te breiden de functionaliteit van de WebAuditEvent klasse en afgeleide klassen > [!NOTE] > In de meeste gevallen kunt u zich de ASP.NET-statuscontrole typen gebruiken als ze zijn geïmplementeerd en u de system health monitoring te regelen door te geven waarden in de `healthMonitoring` configuratiesectie. U kunt ook afgeleid van de statuscontrole typen voor het maken van uw eigen aangepaste gebeurtenissen en providers. Zie het voorbeeld in dit onderwerp voor een voorbeeld van die zijn afgeleid van de klasse WebAuditEvent."
  example:
  - "The following code example shows how to derive from the WebAuditEvent class to create a custom audit event.  \n  \n [!code-cs[System.Web.Management.WebAuditEvent#1](~/add/codesnippet/csharp/t-system.web.management._1_1.cs)]\n [!code-vb[System.Web.Management.WebAuditEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._1_1.vb)]  \n  \n The following is an excerpt of the configuration file that enables ASP.NET to use the event.  \n  \n```  \n<healthMonitoring   \n  enabled=\"true\"  \n  heartBeatInterval=\"0\">   \n  \n  <providers>  \n    <add name=\"EventLogProvider\"   \n      type=\"System.Web.Management.EventLogWebEventProvider,  \n      System.Web,Version=2.0.3600.0,Culture=neutral,  \n      PublicKeyToken=b03f5f7f11d50a3a\"/>  \n  </providers>  \n  \n  <eventMappings>  \n    <add  name=\"SampleWebAuditEvent\"   \n      type=\"SamplesAspNet.SampleWebAuditEvent,  \n      webauditevent,Version=1.0.1663.31140,   \n      Culture=neutral,   \n      PublicKeyToken=0d1fa0f69d94de96,   \n      processorArchitecture=MSIL\"/>  \n  </eventMappings>  \n  \n  <rules>  \n    <add name=\"Custom Audit Default\"  \n      eventName=\"SampleWebAuditEvent\"  \n      provider=\"EventLogProvider\"  \n      profile=\"Default\"/>    \n  </rules>  \n  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public class WebAuditEvent : System.Web.Management.WebManagementEvent'
  inheritance:
  - System.Object
  - System.Web.Management.WebBaseEvent
  - System.Web.Management.WebManagementEvent
  implements: []
  inheritedMembers:
  - System.Web.Management.WebBaseEvent.ApplicationInformation
  - System.Web.Management.WebBaseEvent.EventCode
  - System.Web.Management.WebBaseEvent.EventDetailCode
  - System.Web.Management.WebBaseEvent.EventID
  - System.Web.Management.WebBaseEvent.EventOccurrence
  - System.Web.Management.WebBaseEvent.EventSequence
  - System.Web.Management.WebBaseEvent.EventSource
  - System.Web.Management.WebBaseEvent.EventTime
  - System.Web.Management.WebBaseEvent.EventTimeUtc
  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebBaseEvent.IncrementPerfCounters
  - System.Web.Management.WebBaseEvent.Message
  - System.Web.Management.WebBaseEvent.Raise
  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebBaseEvent.ToString
  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)
  - System.Web.Management.WebManagementEvent.ProcessInformation
  platform:
  - net462
- uid: System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32)'
  parent: System.Web.Management.WebAuditEvent
  langs:
  - csharp
  name: WebAuditEvent(String,Object,Int32)
  nameWithType: WebAuditEvent.WebAuditEvent(String,Object,Int32)
  fullName: System.Web.Management.WebAuditEvent.WebAuditEvent(String,Object,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.Management.WebAuditEvent&quot;> </xref> klasse met de opgegeven parameters."
  remarks: "Deze constructor wordt intern gebruikt door het systeem ASP.NET health monitoring. U wordt nooit gebruikt om het instantiëren van een <xref:System.Web.Management.WebAuditEvent>object, maar u kunt aanroepen voor deze constructor bij het implementeren van uw eigen gebeurtenistype dat kenmerken van deze klasse overneemt.</xref:System.Web.Management.WebAuditEvent>"
  example:
  - "The following code example shows how to call this constructor. This code example is part of a larger example provided for the <xref:System.Web.Management.WebAuditEvent> class.  \n  \n [!code-cs[System.Web.Management.WebAuditEvent#2](~/add/codesnippet/csharp/52e543aa-2080-4fab-ac1a-_1.cs)]\n [!code-vb[System.Web.Management.WebAuditEvent#2](~/add/codesnippet/visualbasic/52e543aa-2080-4fab-ac1a-_1.vb)]"
  syntax:
    content: protected WebAuditEvent (string message, object eventSource, int eventCode);
    parameters:
    - id: message
      type: System.String
      description: "De beschrijving van de gebeurtenis."
    - id: eventSource
      type: System.Object
      description: "Het object dat de bron van de gebeurtenis."
    - id: eventCode
      type: System.Int32
      description: "De code die is gekoppeld aan de gebeurtenis. Wanneer u een aangepaste gebeurtenis implementeert, de gebeurteniscode moet groter dan <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
  overload: System.Web.Management.WebAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32,System.Int32)'
  parent: System.Web.Management.WebAuditEvent
  langs:
  - csharp
  name: WebAuditEvent(String,Object,Int32,Int32)
  nameWithType: WebAuditEvent.WebAuditEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebAuditEvent.WebAuditEvent(String,Object,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.Management.WebAuditEvent&quot;> </xref> klasse met de opgegeven gebeurtenisparameters."
  remarks: "Deze constructor wordt intern gebruikt door het systeem ASP.NET health monitoring. U wordt nooit gebruikt om het instantiëren van een <xref:System.Web.Management.WebAuditEvent>object, maar u kunt aanroepen voor deze constructor bij het implementeren van uw eigen gebeurtenistype dat kenmerken van deze klasse overneemt.</xref:System.Web.Management.WebAuditEvent>"
  example:
  - "The following code example shows how to call this constructor. This code example is part of a larger example provided for the <xref:System.Web.Management.WebAuditEvent> class.  \n  \n [!code-cs[System.Web.Management.WebAuditEvent#3](~/add/codesnippet/csharp/2ea9ddd5-d72f-4e91-92b6-_1.cs)]\n [!code-vb[System.Web.Management.WebAuditEvent#3](~/add/codesnippet/visualbasic/2ea9ddd5-d72f-4e91-92b6-_1.vb)]"
  syntax:
    content: protected WebAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);
    parameters:
    - id: message
      type: System.String
      description: "De beschrijving van de gebeurtenis."
    - id: eventSource
      type: System.Object
      description: "Het object dat de bron van de gebeurtenis."
    - id: eventCode
      type: System.Int32
      description: "De code die is gekoppeld aan de gebeurtenis. Wanneer u een aangepaste gebeurtenis implementeert, de gebeurteniscode moet groter dan <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
    - id: eventDetailCode
      type: System.Int32
      description: "De <xref href=&quot;System.Web.Management.WebEventCodes&quot;> </xref> waarde waarmee de gedetailleerde id voor de gebeurtenis."
  overload: System.Web.Management.WebAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebAuditEvent.RequestInformation
  id: RequestInformation
  parent: System.Web.Management.WebAuditEvent
  langs:
  - csharp
  name: RequestInformation
  nameWithType: WebAuditEvent.RequestInformation
  fullName: System.Web.Management.WebAuditEvent.RequestInformation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Lees de informatie die is gekoppeld aan de webaanvraag."
  remarks: "Gebruik de informatie die wordt geleverd door de eigenschap RequestInformation te helpen bij de detectie van de oorzaken van een storing."
  example:
  - "The following code example shows how to obtain request information through the <xref:System.Web.Management.WebRequestInformation> property.  \n  \n [!code-cs[System.Web.Management.WebAuditEvent#5](~/add/codesnippet/csharp/p-system.web.management._14_1.cs)]\n [!code-vb[System.Web.Management.WebAuditEvent#5](~/add/codesnippet/visualbasic/p-system.web.management._14_1.vb)]"
  syntax:
    content: public System.Web.Management.WebRequestInformation RequestInformation { get; }
    return:
      type: System.Web.Management.WebRequestInformation
      description: "Een <xref href=&quot;System.Web.Management.WebRequestInformation&quot;> </xref> die de gegevens die zijn gekoppeld aan de Web-aanvraag bevat."
  overload: System.Web.Management.WebAuditEvent.RequestInformation*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebManagementEvent
  isExternal: false
  name: System.Web.Management.WebManagementEvent
- uid: System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32)
  parent: System.Web.Management.WebAuditEvent
  isExternal: false
  name: WebAuditEvent(String,Object,Int32)
  nameWithType: WebAuditEvent.WebAuditEvent(String,Object,Int32)
  fullName: System.Web.Management.WebAuditEvent.WebAuditEvent(String,Object,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  parent: System.Web.Management.WebAuditEvent
  isExternal: false
  name: WebAuditEvent(String,Object,Int32,Int32)
  nameWithType: WebAuditEvent.WebAuditEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebAuditEvent.WebAuditEvent(String,Object,Int32,Int32)
- uid: System.Web.Management.WebAuditEvent.RequestInformation
  parent: System.Web.Management.WebAuditEvent
  isExternal: false
  name: RequestInformation
  nameWithType: WebAuditEvent.RequestInformation
  fullName: System.Web.Management.WebAuditEvent.RequestInformation
- uid: System.Web.Management.WebRequestInformation
  parent: System.Web.Management
  isExternal: false
  name: WebRequestInformation
  nameWithType: WebRequestInformation
  fullName: System.Web.Management.WebRequestInformation
- uid: System.Web.Management.WebAuditEvent.#ctor*
  parent: System.Web.Management.WebAuditEvent
  isExternal: false
  name: WebAuditEvent
  nameWithType: WebAuditEvent.WebAuditEvent
- uid: System.Web.Management.WebAuditEvent.RequestInformation*
  parent: System.Web.Management.WebAuditEvent
  isExternal: false
  name: RequestInformation
  nameWithType: WebAuditEvent.RequestInformation
