### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.IPendingWork
  id: IPendingWork
  children:
  - System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)
  - System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)
  - System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)
  langs:
  - csharp
  name: IPendingWork
  nameWithType: IPendingWork
  fullName: System.Workflow.Runtime.IPendingWork
  type: Interface
  summary: "Biedt methoden om deel te nemen in een werkbatch."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]De interface IPendingWork is beschikbaar voor services die u wilt deelnemen aan de workflow runtime engine mechanisme batchverwerking. Het mechanisme voor batchen is vooral nuttig voor services die gebruikmaken van een duurzame store. Vaak is het belangrijk is in deze gevallen om consistentie tussen duurzame archief wordt gebruikt door de service en de interne status van de workflow runtime engine te behouden.       Als u wilt dat uw service te nemen aan de werkstroom transactie batchverwerking geleverd door de <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>, moet u de methoden die zijn gedefinieerd door de IPendingWork-interface implementeren.</xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> De workflow runtime engine roept de <xref:System.Workflow.Runtime.IPendingWork.Commit%2A>methode voor het doorvoeren van de batch-service.</xref:System.Workflow.Runtime.IPendingWork.Commit%2A>       De <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>klasse implementeert de interface IPendingWork.</xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public interface IPendingWork
  implements: []
  platform:
  - net462
- uid: System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)
  id: Commit(System.Transactions.Transaction,System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  langs:
  - csharp
  name: Commit(Transaction,ICollection)
  nameWithType: IPendingWork.Commit(Transaction,ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "De lijst met werkitems doorvoeren met behulp van de opgegeven <xref href=&quot;System.Transactions.Transaction&quot;> </xref> object."
  remarks: "De workflow runtime engine roept de methode Commit wanneer de semantiek dicteert dat in behandeling werk bij het werkbatch worden doorgevoerd. Wanneer het een commit-punt wordt bereikt, de workflow runtime engine de Commit-methode wordt aangeroepen op elke <xref:System.Workflow.Runtime.IPendingWork>object in de werkbatch; de workflow runtime engine geeft de methode Commit de verzameling items die zijn gekoppeld aan die <xref:System.Workflow.Runtime.IPendingWork>object.</xref:System.Workflow.Runtime.IPendingWork> </xref:System.Workflow.Runtime.IPendingWork> Ofwel al het werk in een batch is geslaagd of geen van deze is geslaagd. U moet een uitzondering te genereren als een van de werkitems die is doorgegeven aan de Commit-methode in uw implementatie kan niet doorgevoerd worden. Afhankelijk van uw implementatie kan u wilt uitvoeren van sommige terugdraaien in uw methode Commit als deze de werkitems kan niet doorvoeren. Als de workflow runtime engine doorgevoerd is al het werk in de werkbatch, ontvangt <xref:System.Workflow.Runtime.IPendingWork.Complete%2A>met de `succeeded` parameter ingesteld op `true`; anders wordt aangeroepen <xref:System.Workflow.Runtime.IPendingWork.Complete%2A>met `succeeded` ingesteld op `false`.</xref:System.Workflow.Runtime.IPendingWork.Complete%2A> </xref:System.Workflow.Runtime.IPendingWork.Complete%2A>"
  syntax:
    content: public void Commit (System.Transactions.Transaction transaction, System.Collections.ICollection items);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "De <xref href=&quot;System.Transactions.Transaction&quot;> </xref> die zijn gekoppeld aan het werk dat in behandeling."
    - id: items
      type: System.Collections.ICollection
      description: "Werkitems worden doorgevoerd."
  overload: System.Workflow.Runtime.IPendingWork.Commit*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)
  id: Complete(System.Boolean,System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  langs:
  - csharp
  name: Complete(Boolean,ICollection)
  nameWithType: IPendingWork.Complete(Boolean,ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Wordt aangeroepen wanneer de transactie is voltooid."
  remarks: "Als `succeeded` is `true`, de transactie is voltooid en alle resources die worden gebruikt door de werkbatch kunnen worden vrijgegeven. Als `succeeded` is `false`, de transactie is mislukt. Afhankelijk van uw implementatie kunt u juiste rol terug op het werk in de werkbatch uitvoeren als de transactie mislukt."
  syntax:
    content: public void Complete (bool succeeded, System.Collections.ICollection items);
    parameters:
    - id: succeeded
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de transactie is voltooid; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: items
      type: System.Collections.ICollection
      description: "Een <xref:System.Collections.ICollection>van werkitems.</xref:System.Collections.ICollection>"
  overload: System.Workflow.Runtime.IPendingWork.Complete*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)
  id: MustCommit(System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  langs:
  - csharp
  name: MustCommit(ICollection)
  nameWithType: IPendingWork.MustCommit(ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Hiermee kunt de items in de werkbatch assert of ze onmiddellijk moeten doorvoeren."
  remarks: "Als MustCommit retourneert `false`, het werk kan worden uitgesteld naar een punt toekomstige doorvoeren. Als een van de items doorgevoerd worden moeten, is het resultaat `true` en alle items worden doorgevoerd op het huidige commit-punt. Zie voor een bespreking van mogelijke commit-punten, de <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>klasse.</xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>"
  syntax:
    content: public bool MustCommit (System.Collections.ICollection items);
    parameters:
    - id: items
      type: System.Collections.ICollection
      description: "Een <xref:System.Collections.ICollection>van werkitems.</xref:System.Collections.ICollection>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een item in de verzameling doorgevoerd onmiddellijk worden moet; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Runtime.IPendingWork.MustCommit*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: Commit(Transaction,ICollection)
  nameWithType: IPendingWork.Commit(Transaction,ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: Complete(Boolean,ICollection)
  nameWithType: IPendingWork.Complete(Boolean,ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: MustCommit(ICollection)
  nameWithType: IPendingWork.MustCommit(ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)
- uid: System.Workflow.Runtime.IPendingWork.Commit*
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: Commit
  nameWithType: IPendingWork.Commit
- uid: System.Workflow.Runtime.IPendingWork.Complete*
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: Complete
  nameWithType: IPendingWork.Complete
- uid: System.Workflow.Runtime.IPendingWork.MustCommit*
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: MustCommit
  nameWithType: IPendingWork.MustCommit
