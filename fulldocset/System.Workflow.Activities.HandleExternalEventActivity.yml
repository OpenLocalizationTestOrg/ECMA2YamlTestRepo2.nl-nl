### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.HandleExternalEventActivity
  id: HandleExternalEventActivity
  children:
  - System.Workflow.Activities.HandleExternalEventActivity.#ctor
  - System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)
  - System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken
  - System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty
  - System.Workflow.Activities.HandleExternalEventActivity.EventName
  - System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty
  - System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)
  - System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties
  - System.Workflow.Activities.HandleExternalEventActivity.InterfaceType
  - System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty
  - System.Workflow.Activities.HandleExternalEventActivity.Invoked
  - System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent
  - System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)
  - System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)
  - System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings
  - System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty
  - System.Workflow.Activities.HandleExternalEventActivity.Roles
  - System.Workflow.Activities.HandleExternalEventActivity.RolesProperty
  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName
  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  langs:
  - csharp
  name: HandleExternalEventActivity
  nameWithType: HandleExternalEventActivity
  fullName: System.Workflow.Activities.HandleExternalEventActivity
  type: Class
  summary: "Hiermee definieert u een werkstroom communicatie-activiteit die wordt gebruikt voor het afhandelen van een gebeurtenis die wordt gegenereerd door een lokale service."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Een lokale service is een klasse die een lokale service-interface implementeert (een interface die is gemarkeerd met <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) en wordt toegevoegd aan de <xref:System.Workflow.Activities.ExternalDataExchangeService>.</xref:System.Workflow.Activities.ExternalDataExchangeService> </xref:System.Workflow.Activities.ExternalDataExchangeAttribute>       De HandleExternalEventActivity ontvangt gegevens wanneer de <xref:System.Workflow.Activities.ExternalDataExchangeService>service activeert een gebeurtenis met gebeurtenisgegevens die zijn afgeleid van <xref:System.Workflow.Activities.ExternalDataEventArgs>.</xref:System.Workflow.Activities.ExternalDataEventArgs> </xref:System.Workflow.Activities.ExternalDataExchangeService>       De HandleExternalEventActivity is een blokkerende activiteit.       Klassen die zijn afgeleid van HandleExternalEventActivity moeten niet implementeren, de <xref:System.Workflow.ComponentModel.IActivityEventListener%601>interface omdat de afgeleide klasse niet correct wordt uitgevoerd.</xref:System.Workflow.ComponentModel.IActivityEventListener%601>"
  example:
  - "The following code example shows how to create and set values for the HandleExternalEventActivity class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \n  \n [!code-cs[wf_samples#160](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#160)]\n [!code-vb[wf_samples#160](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#160)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Invoked")]

      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.HandleExternalEventActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.HandleExternalEventActivityValidator))]

      public class HandleExternalEventActivity : System.Workflow.ComponentModel.Activity, System.Workflow.Activities.IEventActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  implements:
  - System.Workflow.Activities.IEventActivity
  - System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  inheritedMembers:
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: HandleExternalEventActivity()
  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity()
  fullName: System.Workflow.Activities.HandleExternalEventActivity.HandleExternalEventActivity()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;> </xref> klasse."
  remarks: ''
  example:
  - "The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class. This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \n  \n [!code-cs[wf_samples#160](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#160)]\n [!code-vb[wf_samples#160](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#160)]"
  syntax:
    content: public HandleExternalEventActivity ();
    parameters: []
  overload: System.Workflow.Activities.HandleExternalEventActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: HandleExternalEventActivity(String)
  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity(String)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.HandleExternalEventActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;> </xref> klasse met de naam van de activiteit."
  syntax:
    content: public HandleExternalEventActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "De gebruiker gedefinieerde naam van de activiteit."
  overload: System.Workflow.Activities.HandleExternalEventActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: Cancel(ActivityExecutionContext)
  nameWithType: HandleExternalEventActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Cancel(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Hiermee annuleert u de verwerking van de gebeurtenis."
  syntax:
    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "De <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> die staat voor de uitvoeringsomgeving van het <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "De <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> van de <xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;> </xref> aan het einde van de aangevraagde bewerking."
  overload: System.Workflow.Activities.HandleExternalEventActivity.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken
  id: CorrelationToken
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: CorrelationToken
  nameWithType: HandleExternalEventActivity.CorrelationToken
  fullName: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Opgehaald of ingesteld van de binding op een <xref href=&quot;System.Workflow.Runtime.CorrelationToken&quot;> </xref>."
  remarks: ''
  example:
  - "The following example shows how to access the `CorrelationToken` property of a `HandleExternalEventActivity`. This example is from the Correlated Local Service SDK sample, from the CorrelatedLocalServiceWorkflow.designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).  \n  \n [!code-cs[Wf_samples#198](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#198)]\n [!code-vb[Wf_samples#198](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#198)]"
  syntax:
    content: public virtual System.Workflow.Runtime.CorrelationToken CorrelationToken { get; set; }
    return:
      type: System.Workflow.Runtime.CorrelationToken
      description: "Deze eigenschap wordt gebruikt om een gebeurtenis naar het juiste correleren <xref href=&quot;System.Workflow.Activities.IEventActivity&quot;> </xref>-activiteit op basis van de nettolading van de gebeurtenis overgenomen. Bijvoorbeeld wanneer een enkele werkstroomexemplaar luistert naar meerdere exemplaren van dezelfde gebeurtenis op hetzelfde moment de <xref uid=&quot;langword_csharp_CorrelationToken&quot; name=&quot;CorrelationToken&quot; href=&quot;&quot;> </xref> eigenschap wordt gebruikt voor het routeren van de gebeurtenis met de juiste activiteit in dat werkstroomexemplaar.       Verwar dit correlatie niet met een gebeurtenis op de juiste workflowexemplaar correleren. De correlatie naar de juiste werkstroomexemplaar wordt uitgevoerd door de gebeurtenis verzenden naar een expliciete werkstroomexemplaar en het gebruik van de <xref:System.Workflow.Activities.ExternalDataEventArgs.InstanceId*>eigenschap voor een correcte identificatie van het juiste werkstroomexemplaar.</xref:System.Workflow.Activities.ExternalDataEventArgs.InstanceId*>       [!INCLUDE[crexample](~/add/includes/ajax-current-ext-md.md)]correlatie, Zie de [lokale Service-voorbeeld gecorreleerde](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)."
  overload: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty
  id: CorrelationTokenProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: CorrelationTokenProperty
  nameWithType: HandleExternalEventActivity.CorrelationTokenProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Hiermee geeft u de <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> die is gericht de <xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken*>eigenschap.</xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken*>"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.EventName
  id: EventName
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: EventName
  nameWithType: HandleExternalEventActivity.EventName
  fullName: System.Workflow.Activities.HandleExternalEventActivity.EventName
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Hiermee haalt u de naam van de gebeurtenis verhoogd. Deze eigenschap moet worden ingesteld voordat lokale communicatie kan plaatsvinden."
  remarks: ''
  example:
  - "The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \n  \n [!code-cs[wf_samples#160](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#160)]\n [!code-vb[wf_samples#160](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#160)]"
  syntax:
    content: public virtual string EventName { get; set; }
    return:
      type: System.String
      description: "De naam van de gebeurtenis verhoogd."
  overload: System.Workflow.Activities.HandleExternalEventActivity.EventName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty
  id: EventNameProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: EventNameProperty
  nameWithType: HandleExternalEventActivity.EventNameProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Komt overeen met de naam van een gebeurtenis die is gedefinieerd in een interface die is gemarkeerd met de <xref href=&quot;System.Workflow.Activities.ExternalDataExchangeAttribute&quot;> </xref>."
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty EventNameProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: HandleExternalEventActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Probeert uit te voeren de <xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;> </xref> die zijn gekoppeld aan de <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>."
  syntax:
    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "De <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> die zijn gekoppeld aan de <xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;> </xref>."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "De <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> van de <xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;> </xref> aan het einde van de aangevraagde bewerking."
  overload: System.Workflow.Activities.HandleExternalEventActivity.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  id: HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: HandleExternalEventActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.HandleFault(ActivityExecutionContext,Exception)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Wordt aangeroepen wanneer een uitzondering is opgetreden in de context van de uitvoering van dit exemplaar."
  syntax:
    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "De <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> voor dit exemplaar."
    - id: exception
      type: System.Exception
      description: "De <xref:System.Exception>die deze fout veroorzaakt.</xref:System.Exception>"
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "De <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;> </xref> die het resultaat zijn van een poging tot het annuleren van dit exemplaar."
  overload: System.Workflow.Activities.HandleExternalEventActivity.HandleFault*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>exception</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)
  id: Initialize(System.IServiceProvider)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: Initialize(IServiceProvider)
  nameWithType: HandleExternalEventActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Initialize(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Initialiseert de gebeurtenis met de serviceprovider."
  syntax:
    content: protected override sealed void Initialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "De <xref:System.IServiceProvider>die aangepaste ondersteuning biedt aan de klasse.</xref:System.IServiceProvider>"
  overload: System.Workflow.Activities.HandleExternalEventActivity.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>provider</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic), het type van de serviceprovider is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>), of de proxy voor de serviceprovider is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)."
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties
  id: InitializeProperties
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: InitializeProperties()
  nameWithType: HandleExternalEventActivity.InitializeProperties()
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Voert initialisatie op afhankelijkheidseigenschappen."
  remarks: "Deze methode initialiseert de <xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken%2A>eigenschap controleert of de <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A>en <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A>Eigenschappen worden ingesteld en controleert u of de gebeurtenis waarnaar wordt verwezen in de <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A>eigenschap vindt u in de interface waarnaar wordt verwezen in de <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A>eigenschap.</xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> </xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> </xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> </xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> </xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken%2A>"
  syntax:
    content: protected override void InitializeProperties ();
    parameters: []
  overload: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType
  id: InterfaceType
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: InterfaceType
  nameWithType: HandleExternalEventActivity.InterfaceType
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.Workflow.Activities.ExternalDataExchangeAttribute&quot;> </xref> toegeschreven interfacetype van de lokale service waarvan de gebeurtenis wordt verwerkt. Deze eigenschap moet worden ingesteld voordat lokale communicatie kan plaatsvinden."
  remarks: ''
  example:
  - "The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \n  \n [!code-cs[wf_samples#160](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#160)]\n [!code-vb[wf_samples#160](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#160)]"
  syntax:
    content: public virtual Type InterfaceType { get; set; }
    return:
      type: System.Type
      description: "Het interfacetype van de lokale service waarvan de gebeurtenis wordt verwerkt."
  overload: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty
  id: InterfaceTypeProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: InterfaceTypeProperty
  nameWithType: HandleExternalEventActivity.InterfaceTypeProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Komt overeen met de naam van de interface die is gemarkeerd met de <xref href=&quot;System.Workflow.Activities.ExternalDataExchangeAttribute&quot;> </xref>."
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.Invoked
  id: Invoked
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: Invoked
  nameWithType: HandleExternalEventActivity.Invoked
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Invoked
  type: Event
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Deze gebeurtenis treedt op wanneer de externe gebeurtenis is ontvangen."
  remarks: ''
  example:
  - "The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \n  \n [!code-cs[wf_samples#160](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#160)]\n [!code-vb[wf_samples#160](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#160)]"
  syntax:
    content: public event EventHandler<System.Workflow.Activities.ExternalDataEventArgs> Invoked;
    return:
      type: System.EventHandler{System.Workflow.Activities.ExternalDataEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent
  id: InvokedEvent
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: InvokedEvent
  nameWithType: HandleExternalEventActivity.InvokedEvent
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Hiermee definieert u de gebeurtenisgemachtigde van een die wordt uitgevoerd wanneer de activiteit de verwachte gebeurtenis van de lokale service ontvangt."
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InvokedEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)
  id: OnClosed(System.IServiceProvider)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: OnClosed(IServiceProvider)
  nameWithType: HandleExternalEventActivity.OnClosed(IServiceProvider)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.OnClosed(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Aangeroepen door de workflowruntime als onderdeel van de overgang van de activiteit naar de <xref uid=&quot;langword_csharp_Closed&quot; name=&quot;Closed&quot; href=&quot;&quot;> </xref> status."
  remarks: "Deze methode biedt de activiteit met de gelegenheid om op te schonen resources gebruikt tijdens de uitvoering."
  syntax:
    content: protected override void OnClosed (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "De <xref:System.IServiceProvider>waarmee de service.</xref:System.IServiceProvider>"
  overload: System.Workflow.Activities.HandleExternalEventActivity.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)
  id: OnInvoked(System.EventArgs)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: OnInvoked(EventArgs)
  nameWithType: HandleExternalEventActivity.OnInvoked(EventArgs)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(EventArgs)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Aangeroepen vlak nadat de externe gebeurtenis is ontvangen zodat afgeleide klassen voor het verwerken van het inkomende <xref:System.EventArgs>voordat de activiteit wordt gesloten.</xref:System.EventArgs>"
  remarks: "De meest voorkomende gebruik van de methode OnInvoked in afgeleide klassen is leden van de ontvangen uitpakken <xref:System.EventArgs>de waarden van de openbare eigenschappen van de afgeleide die activiteit in te stellen.</xref:System.EventArgs>"
  example:
  - "The following example shows an implementation of the `OnInvoked` method. This example is from the Correlated Local Service SDK sample, from the TaskCompleted.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).  \n  \n [!code-cs[Wf_samples#223](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#223)]\n [!code-vb[Wf_samples#223](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#223)]"
  syntax:
    content: protected virtual void OnInvoked (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "De <xref:System.EventArgs>die worden ontvangen van de externe gebeurtenis die zojuist is ontvangen.</xref:System.EventArgs>"
  overload: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings
  id: ParameterBindings
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: ParameterBindings
  nameWithType: HandleExternalEventActivity.ParameterBindings
  fullName: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Hiermee haalt u de verzameling van de Parameterbindingen."
  remarks: ''
  example:
  - "The following example shows how to access the `ParameterBindings` property. This example is from the Ordering State Machine SDK sample, from the SampleWorkflow.designer.cs file.  [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Ordering State Machine Sample](http://msdn.microsoft.com/en-us/59272cf4-bc98-439c-bcfa-b66999ebce5c).  \n  \n [!code-cs[wf_samples#125](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#125)]\n [!code-vb[wf_samples#125](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#125)]"
  syntax:
    content: public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }
    return:
      type: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
      description: "De verzameling Parameterbindingen."
  overload: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty
  id: ParameterBindingsProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: ParameterBindingsProperty
  nameWithType: HandleExternalEventActivity.ParameterBindingsProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Hiermee geeft u de <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> die is gericht de <xref:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings*>eigenschap.</xref:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings*>"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.Roles
  id: Roles
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: Roles
  nameWithType: HandleExternalEventActivity.Roles
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Roles
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Opgehaald of ingesteld van een verwijzing naar een verzameling van de rol werkstroom."
  remarks: "De <xref:System.Workflow.Activities.WorkflowRoleCollection>beperkt aantal gebruikers dat berichten naar een werkstroomexemplaar via verzenden kunnen een <xref:System.Workflow.Activities.HandleExternalEventActivity>activiteit.</xref:System.Workflow.Activities.HandleExternalEventActivity> </xref:System.Workflow.Activities.WorkflowRoleCollection>"
  example:
  - "The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \n  \n [!code-cs[wf_samples#160](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#160)]\n [!code-vb[wf_samples#160](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#160)]"
  syntax:
    content: public System.Workflow.Activities.WorkflowRoleCollection Roles { get; set; }
    return:
      type: System.Workflow.Activities.WorkflowRoleCollection
      description: "Een verzameling van de rol van een werkstroom."
  overload: System.Workflow.Activities.HandleExternalEventActivity.Roles*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.RolesProperty
  id: RolesProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: RolesProperty
  nameWithType: HandleExternalEventActivity.RolesProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.RolesProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "De geldige gebruikersrollen die zijn toegestaan voor het verzenden van berichten van de host naar deze activiteit identificeert. De twee soorten ondersteunde functies zijn Active Directory en ASP.NET."
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty RolesProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName
  id: System#Workflow#Activities#IEventActivity#QueueName
  isEii: true
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.QueueName
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.QueueName
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Hiermee wordt de naam van de <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref> op die de activiteit is wachten op gegevens moet worden uitgevoerd."
  syntax:
    content: IComparable System.Workflow.Activities.IEventActivity.QueueName { get; }
    return:
      type: System.IComparable
      description: "De naam van de <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref> op die de activiteit is wachten op gegevens moet worden uitgevoerd."
  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  isEii: true
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Maakt het abonnement van de <xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;> </xref> activiteit op een gebeurtenis."
  syntax:
    content: void IEventActivity.Subscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);
    parameters:
    - id: parentContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "De <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> die staat voor de uitvoeringsomgeving van het <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
    - id: parentEventHandler
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "De <xref:System.EventHandler>voor de gebeurtenis bovenliggende.</xref:System.EventHandler>"
  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  isEii: true
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Hiermee annuleert u het abonnement van de <xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;> </xref> activiteit op een gebeurtenis."
  syntax:
    content: void IEventActivity.Unsubscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);
    parameters:
    - id: parentContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "De <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> die staat voor de uitvoeringsomgeving van de activiteit."
    - id: parentEventHandler
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "De <xref:System.EventHandler>voor de gebeurtenis bovenliggende.</xref:System.EventHandler>"
  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  isEii: true
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: void IActivityEventListener<QueueEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.QueueEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Moet worden toegevoegd."
    - id: e
      type: System.Workflow.ComponentModel.QueueEventArgs
      description: "Moet worden toegevoegd."
  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#QueueEventArgs>#OnEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  isEii: true
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Retourneert het toegangstype voor de opgegeven eigenschap."
  remarks: "Tijdens de compilatie gebruikt om te valideren of de eigenschappen correct zijn gebonden aan een andere. Zonder deze interface, wordt deze informatie afgeleid rechtstreeks van eigenschapinstellers getter."
  syntax:
    content: System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Een object dat wordt geïmplementeerd <xref:System.IServiceProvider>voor toegang tot het moment van ontwerpen als ze vereist zijn.</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "De naam van de eigenschap."
    return:
      type: System.Workflow.ComponentModel.Compiler.AccessTypes
      description: "Een <xref href=&quot;System.Workflow.ComponentModel.Compiler.AccessTypes&quot;> </xref> opsommingswaarde op basis van het toegangsniveau van de eigenschap."
  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  isEii: true
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Retourneert de <xref:System.Type>van de opgegeven eigenschap.</xref:System.Type>"
  remarks: "Tijdens de compilatie gebruikt om te valideren of de eigenschappen correct zijn gebonden aan een andere."
  syntax:
    content: Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Een object dat wordt geïmplementeerd <xref:System.IServiceProvider>voor toegang tot het moment van ontwerpen als ze vereist zijn.</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "De naam van de eigenschap."
    return:
      type: System.Type
      description: "De <xref:System.Type>voor de eigenschap waarvan de naam is doorgegeven als de <code> propertyName  </code>parameter.</xref:System.Type>"
  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: System.Workflow.ComponentModel.Activity
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: HandleExternalEventActivity()
  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity()
  fullName: System.Workflow.Activities.HandleExternalEventActivity.HandleExternalEventActivity()
- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: HandleExternalEventActivity(String)
  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity(String)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.HandleExternalEventActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Cancel(ActivityExecutionContext)
  nameWithType: HandleExternalEventActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Cancel(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: CorrelationToken
  nameWithType: HandleExternalEventActivity.CorrelationToken
  fullName: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken
- uid: System.Workflow.Runtime.CorrelationToken
  parent: System.Workflow.Runtime
  isExternal: false
  name: CorrelationToken
  nameWithType: CorrelationToken
  fullName: System.Workflow.Runtime.CorrelationToken
- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: CorrelationTokenProperty
  nameWithType: HandleExternalEventActivity.CorrelationTokenProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.HandleExternalEventActivity.EventName
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: EventName
  nameWithType: HandleExternalEventActivity.EventName
  fullName: System.Workflow.Activities.HandleExternalEventActivity.EventName
- uid: System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: EventNameProperty
  nameWithType: HandleExternalEventActivity.EventNameProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty
- uid: System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: HandleExternalEventActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: HandleExternalEventActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.HandleFault(ActivityExecutionContext,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Initialize(IServiceProvider)
  nameWithType: HandleExternalEventActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Initialize(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: InitializeProperties()
  nameWithType: HandleExternalEventActivity.InitializeProperties()
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties()
- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: InterfaceType
  nameWithType: HandleExternalEventActivity.InterfaceType
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: InterfaceTypeProperty
  nameWithType: HandleExternalEventActivity.InterfaceTypeProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty
- uid: System.Workflow.Activities.HandleExternalEventActivity.Invoked
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Invoked
  nameWithType: HandleExternalEventActivity.Invoked
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Invoked
- uid: System.EventHandler{System.Workflow.Activities.ExternalDataEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ExternalDataEventArgs>
  nameWithType: EventHandler<ExternalDataEventArgs>
  fullName: System.EventHandler<System.Workflow.Activities.ExternalDataEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Activities.ExternalDataEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Activities.ExternalDataEventArgs
    name: ExternalDataEventArgs
    nameWithType: ExternalDataEventArgs
    fullName: ExternalDataEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: InvokedEvent
  nameWithType: HandleExternalEventActivity.InvokedEvent
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent
- uid: System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: OnClosed(IServiceProvider)
  nameWithType: HandleExternalEventActivity.OnClosed(IServiceProvider)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.OnClosed(IServiceProvider)
- uid: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: OnInvoked(EventArgs)
  nameWithType: HandleExternalEventActivity.OnInvoked(EventArgs)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: HandleExternalEventActivity.ParameterBindings
  fullName: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings
- uid: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: WorkflowParameterBindingCollection
  nameWithType: WorkflowParameterBindingCollection
  fullName: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: ParameterBindingsProperty
  nameWithType: HandleExternalEventActivity.ParameterBindingsProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty
- uid: System.Workflow.Activities.HandleExternalEventActivity.Roles
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Roles
  nameWithType: HandleExternalEventActivity.Roles
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Roles
- uid: System.Workflow.Activities.WorkflowRoleCollection
  parent: System.Workflow.Activities
  isExternal: false
  name: WorkflowRoleCollection
  nameWithType: WorkflowRoleCollection
  fullName: System.Workflow.Activities.WorkflowRoleCollection
- uid: System.Workflow.Activities.HandleExternalEventActivity.RolesProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: RolesProperty
  nameWithType: HandleExternalEventActivity.RolesProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.RolesProperty
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.QueueName
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.QueueName
- uid: System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: IActivityEventListener<QueueEventArgs>
  nameWithType: IActivityEventListener<QueueEventArgs>
  fullName: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  spec.csharp:
  - uid: System.Workflow.ComponentModel.IActivityEventListener`1
    name: IActivityEventListener
    nameWithType: IActivityEventListener
    fullName: IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.QueueEventArgs
    name: QueueEventArgs
    nameWithType: QueueEventArgs
    fullName: QueueEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Workflow.ComponentModel.QueueEventArgs
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: QueueEventArgs
  nameWithType: QueueEventArgs
  fullName: System.Workflow.ComponentModel.QueueEventArgs
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
- uid: System.Workflow.ComponentModel.Compiler.AccessTypes
  parent: System.Workflow.ComponentModel.Compiler
  isExternal: false
  name: AccessTypes
  nameWithType: AccessTypes
  fullName: System.Workflow.ComponentModel.Compiler.AccessTypes
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: HandleExternalEventActivity
  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity
- uid: System.Workflow.Activities.HandleExternalEventActivity.Cancel*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Cancel
  nameWithType: HandleExternalEventActivity.Cancel
- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: CorrelationToken
  nameWithType: HandleExternalEventActivity.CorrelationToken
- uid: System.Workflow.Activities.HandleExternalEventActivity.EventName*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: EventName
  nameWithType: HandleExternalEventActivity.EventName
- uid: System.Workflow.Activities.HandleExternalEventActivity.Execute*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Execute
  nameWithType: HandleExternalEventActivity.Execute
- uid: System.Workflow.Activities.HandleExternalEventActivity.HandleFault*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: HandleFault
  nameWithType: HandleExternalEventActivity.HandleFault
- uid: System.Workflow.Activities.HandleExternalEventActivity.Initialize*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Initialize
  nameWithType: HandleExternalEventActivity.Initialize
- uid: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: InitializeProperties
  nameWithType: HandleExternalEventActivity.InitializeProperties
- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: InterfaceType
  nameWithType: HandleExternalEventActivity.InterfaceType
- uid: System.Workflow.Activities.HandleExternalEventActivity.OnClosed*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: OnClosed
  nameWithType: HandleExternalEventActivity.OnClosed
- uid: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: OnInvoked
  nameWithType: HandleExternalEventActivity.OnInvoked
- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: HandleExternalEventActivity.ParameterBindings
- uid: System.Workflow.Activities.HandleExternalEventActivity.Roles*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Roles
  nameWithType: HandleExternalEventActivity.Roles
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.QueueName
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Subscribe
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Subscribe
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Unsubscribe
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Unsubscribe
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#QueueEventArgs>#OnEvent*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType
