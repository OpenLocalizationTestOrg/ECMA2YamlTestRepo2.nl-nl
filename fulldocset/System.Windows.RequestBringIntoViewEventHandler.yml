### YamlMime:ManagedReference
items:
- uid: System.Windows.RequestBringIntoViewEventHandler
  id: RequestBringIntoViewEventHandler
  langs:
  - csharp
  name: RequestBringIntoViewEventHandler
  nameWithType: RequestBringIntoViewEventHandler
  fullName: System.Windows.RequestBringIntoViewEventHandler
  type: Delegate
  summary: "Hiermee geeft u de methode die wordt afgehandeld tijdens de <xref href=&quot;System.Windows.FrameworkElement.RequestBringIntoView&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Deze gebeurtenis verwerkt alleen gewoonlijk wordt uitgevoerd in de elementen die een schuifbare regio ondersteunen, of anders opzettelijk hun rendering grootte instellen kleiner is dan de gecombineerde gewenste grootte van de inhoud van de onderliggende element en wordt alleen uitgevoerd door opzettelijk afhandelen van de gebeurtenis zodra het naar boven in de boomstructuur element heeft gestuurd en de eerste bovenliggende die ondersteuning voor schuiven regio biedt heeft bereikt. Een bestaande implementatie die verantwoordelijk is voor schuiven regio&quot;s op een manier die doorgaans wenselijk voor gebruikersbesturingselementen is <xref:System.Windows.Controls.ScrollViewer>.</xref:System.Windows.Controls.ScrollViewer> Als u afgeleid van <xref:System.Windows.Controls.ScrollViewer>, kunt u een klasse-handler voor registreren <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>en vormen een aanvulling op de verwerking van de basisklasse van de gebeurtenis.</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.Controls.ScrollViewer> U moet ook rekening houden met behulp van of de klasse afhandeling van de klasse is gedefinieerd <xref:System.Windows.Controls.ScrollViewer.ScrollChanged>gebeurtenis in plaats van <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>.</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.Controls.ScrollViewer.ScrollChanged> U kunt ook als u een volledig aangepaste klasse die wordt niet afgeleid van <xref:System.Windows.Controls.ScrollViewer>, kunt u nog steeds verwerking door het aanroepen van klasse toevoegen <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=fullName>in uw klasse instantiÃ«ring.</xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=fullName> </xref:System.Windows.Controls.ScrollViewer>  Zie voor meer informatie over de verwerking van de klasse [gerouteerd gebeurtenissen markeren als Handled en verwerken van klasse](~/add/includes/ajax-current-ext-md.md).       Inhoud elementen kunnen leiden tot de gebeurtenis wordt gegenereerd door hun inhoud hosts (via aanroepen <xref:System.Windows.FrameworkContentElement.BringIntoView%2A>en verhogen <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>van de inhoudshost).</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement.BringIntoView%2A> Op deze manier kunt u elementen van de logische structuur moet worden gezet in weergave met de Help-methode <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>.</xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName> vragen       Een <xref:System.Windows.Controls.ListBox>implementeert een methode verwante maar verschillende <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</xref:System.Windows.Controls.ListBox.ScrollIntoView%2A> </xref:System.Windows.Controls.ListBox>"
  syntax:
    content: public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
