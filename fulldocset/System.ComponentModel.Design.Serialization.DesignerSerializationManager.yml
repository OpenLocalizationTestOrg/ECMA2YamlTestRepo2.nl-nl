### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  id: DesignerSerializationManager
  children:
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
  langs:
  - csharp
  name: DesignerSerializationManager
  nameWithType: DesignerSerializationManager
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  type: Class
  summary: "Biedt een implementatie van de <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> interface."
  remarks: "De <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>interface is ontworpen om te worden van een interface onafhankelijk van de indeling naar een object dat bepaalt van serialisatie.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> In wezen biedt context en services aan objectserializers die daadwerkelijk uitvoeren van het deserialiseren. <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>het deserialisatieproces helpt door de objecten te houden.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> Dit is vergelijkbaar in techniek de <xref:System.ComponentModel.Design.IDesignerHost>interface: designers daadwerkelijk zorgen voor de gebruikersinterface (UI) en <xref:System.ComponentModel.Design.IDesignerHost>biedt de lijm waarmee verschillende designers om samen te werken.</xref:System.ComponentModel.Design.IDesignerHost> </xref:System.ComponentModel.Design.IDesignerHost>       De DesignerSerializationManager klasse implementeert <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> Het is zodanig ontworpen dat een generieke formulier van deserialisatie die vergelijkbaar is met runtime-objectserializers zoals de <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>       De klasse DesignerSerializationManager realiseert drie doelen:-het is een eenvoudige, klare-object dat kan worden gebruikt voor het deserialiseren van een groot aantal indelingen.      -Het is algemeen zijn en zijn niet gekoppeld aan een bepaalde opmaak. Het kan zowel worden gebruikt voor CodeDOM-deserialisatie, evenals markup deserialisatie.      -Het kan worden uitgebreid en biedt ondersteuning voor verschillende serialisatie methoden die worden gebruikt in kopiëren en plakken en ongedaan maken/opnieuw scenario&quot;s.       Ontwerptijd serialisatie heeft de volgende verschillen van de runtime-object serialisatie:-het uitvoeren van de serialisatie-object is doorgaans gescheiden van de runtime-object zodat ontwerptijd logica van een onderdeel kan worden verwijderd.      -De serialisatie-schema wordt ervan uitgegaan dat het object wordt gemaakt volledig geïnitialiseerd, en vervolgens via de eigenschap en methode aanroepen zijn gewijzigd tijdens de deserialisatie.      -Eigenschappen van een object met waarden die nooit zijn ingesteld op het object (de eigenschappen bevatten de standaardwaarden) zijn niet geserialiseerd. De stroom deserialiseren kan daarentegen gaten hebben.      -De nadruk wordt op de kwaliteit van de inhoud van de serialisatiestroom, in plaats van de volledige serialisatie van een object geplaatst. Dit betekent dat als er geen gedefinieerde manier voor het serialiseren van een object, dat object kan worden overgeslagen in plaats van er een uitzondering is opgetreden. De serialisatie-engine kan bieden methodiek hier om te bepalen welke fouten kunnen worden genegeerd en welke onherstelbare zijn.      -De serialisatiestroom wellicht meer gegevens dan nodig is voor de deserialisatie. Serialisatie van bron-code, heeft bijvoorbeeld gebruikerscode gemengd met de code die nodig zijn voor het deserialiseren van een objectgrafiek. Deze gebruikerscode moet worden genegeerd bij deserialisatie en behouden op serialisatie.       Vanwege deze verschillen, is een andere serialisatie-model van toepassing op moment van ontwerp serialisatie. Dit model maakt gebruik van een afzonderlijke serializer-object voor elk gegevenstype worden geserialiseerd. Elke serializer biedt kleine bijdragen tot het probleem als geheel. Deze objectserializers worden alle gecoördineerd via een gemeenschappelijke serialisatiebeheer. De serialisatie-manager is verantwoordelijk voor het onderhouden van de status tussen deze verschillende objectserializers. Houd rekening met de volgende klasse als een voorbeeld: [!code-cs [System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/add/codesnippet/csharp/t-system.componentmodel._7_1.cs)][!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/add/codesnippet/visualbasic/t-system.componentmodel._7_1.vb) ] drie verschillende objectserializers zou gebruikmaken van een exemplaar van deze klasse: één voor `SampleObject`, één voor tekenreeksen en een voor gehele getallen.   De serialisatiefunctie voor `SampleObject` de serializer van de hoofdmap wordt genoemd, omdat `SampleObject` is de hoofdmap van de serialisatiegrafiek. Complexere objectgrafieken kunnen ook worden gemaakt. Denk bijvoorbeeld wat er zou gebeuren als `SampleObject` zijn als volgt gewijzigd: [!code-cs [System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/add/codesnippet/csharp/t-system.componentmodel._7_2.cs)][!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/add/codesnippet/visualbasic/t-system.componentmodel._7_2.vb) ] hierdoor `SampleObject` hebben een onderliggend element dat een ander exemplaar van zichzelf.   De volgende code in de objectgrafiek ingevuld: [!code-cs [System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/add/codesnippet/csharp/t-system.componentmodel._7_3.cs)][!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/add/codesnippet/visualbasic/t-system.componentmodel._7_3.vb) ] wanneer `root` geserialiseerd, zullen er vier objectserializers gebruikt: één toegangspunt serializer, een serialisatiefunctie voor het onderliggende `SampleObject`, één serialisatiefunctie voor `int`, en één serialisatiefunctie voor `string`.   Objectserializers in cache zijn opgeslagen op basis van type, dus u hoeft niet te maken van een serialisatiefunctie voor elk exemplaar van `SampleObject`.       De klasse DesignerSerializationManager is gebaseerd op het idee van een sessie voor serialisatie. Een sessie zorgt ervoor dat toegankelijk is voor de verschillende objectserializers. Wanneer een sessie is verwijderd, wordt deze status wordt vernietigd. Dit zorgt ervoor dat objectserializers grotendeels staatloze blijven en helpt om op te schonen objectserializers die zijn beschadigd. De volgende tabellen beschrijven hoe status wordt beheerd in en tussen sessies.      ## Globale status deze status is eigendom van het beheerobject voor serialisatie, maar is onafhankelijk van de huidige sessie van serialisatie.      | Object | Gebruik |   |------------|-----------|   | Serialisatie providers | Objecten kunnen zichzelf toevoegen als aangepaste serialisatie-providers. Omdat deze providers worden gebruikt voor het vinden van objectserializers, ze een serialisatiebeheer outlive. |      ## Sessie die eigendom zijn van status van deze status is eigendom van een sessie en wordt vernietigd wanneer een sessie wordt vernietigd. Als gevolg daarvan kan wordt toegang tot eigenschappen of methoden die deze status manipuleren zou Veroorzaak een uitzondering als de serialisatie-manager niet in een actieve sessie.      | Object | Gebruik |   |------------|-----------|   | <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>gebeurtenis | De <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>gebeurtenis is gekoppeld door een serialisatiefunctie om extra omzetting van namen te leveren.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> </xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> Alle handlers worden ontkoppeld van deze gebeurtenis op wanneer een sessie wordt beëindigd. |   | <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete>gebeurtenis | De <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete>gebeurtenis wordt geactiveerd vlak voordat een sessie is verwijderd.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> </xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> Vervolgens alle handlers worden ontkoppeld van deze gebeurtenis. |   | De naamtabel | De serialisatie-manager onderhoudt een tabel die is toegewezen tussen de objecten en hun namen. Objectserializers kunnen namen van objecten voor eenvoudige identificatie geven. Deze tabel is uitgeschakeld wanneer de sessie wordt beëindigd. |   | Serialisatiefunctie cache | De serialisatie-manager onderhoudt een cache van objectserializers die is gevraagd om op te geven. Deze cache wordt gewist wanneer de sessie wordt beëindigd. De openbare <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A>methode veilig op elk gewenst moment kan worden aangeroepen, maar de waarde in de cache geplaatst alleen als deze is aangeroepen in een sessie. |   | De context-stack | De serialisatie-manager onderhoudt een object met de naam van de contextstack die u met openen kunt de <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A>eigenschap.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> Objectserializers kunnen deze stack gebruiken om aanvullende informatie die beschikbaar is voor andere objectserializers opslaan. Bijvoorbeeld kunt een serialisatiefunctie die is een eigenschapswaarde serialiseren push-naam van de eigenschap op de stack serialisatie voordat u de waarde voor het serialiseren van vragen. Deze wordt leeggemaakt wanneer de sessie is beëindigd. |   | Fout bij het lijst | De serialisatie-manager houdt een lijst van fouten die zijn opgetreden tijdens de serialisatie. Deze lijst, die wordt geopend via de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>eigenschap, wordt gewist wanneer de sessie is beëindigd.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> Toegang tot de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>eigenschap tussen sessies leidt ertoe dat een uitzondering. |</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>"
  syntax:
    content: 'public class DesignerSerializationManager : IServiceProvider, System.ComponentModel.Design.Serialization.IDesignerSerializationManager'
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: DesignerSerializationManager()
  nameWithType: DesignerSerializationManager.DesignerSerializationManager()
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.DesignerSerializationManager()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot;> </xref> klasse."
  remarks: "Hiermee stelt u deze constructor de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>en <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>eigenschappen `true`.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>"
  syntax:
    content: public DesignerSerializationManager ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: DesignerSerializationManager(IServiceProvider)
  nameWithType: DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot;> </xref> klasse met de opgegeven serviceprovider."
  remarks: "Als een serialisatiefunctie services die door de serialisatie-manager kunnen niet worden verwerkt vraagt, stuurt de standaardimplementatie deze aanvragen voor de `provider` parameter.       Hiermee stelt u deze constructor de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>en <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>eigenschappen `true`.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>"
  syntax:
    content: public DesignerSerializationManager (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "An <xref:System.IServiceProvider>.</xref:System.IServiceProvider>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>provider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
  id: Container
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: Container
  nameWithType: DesignerSerializationManager.Container
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Opgehaald of ingesteld voor de container voor serialisatiesessie."
  remarks: "Als een container bestaat, wordt alle onderdelen die zijn gemaakt door de serialisatie-manager toegevoegd aan de container. De standaardimplementatie van deze eigenschap zoekt de serviceprovider voor een <xref:System.ComponentModel.Design.IDesignerHost>en de container die is geleverd door de ontwerpfunctie host gebruiken, moet een bestaat.</xref:System.ComponentModel.Design.IDesignerHost> Anders wordt deze eigenschap wordt geretourneerd `null` en er zijn geen onderdelen naar een container worden toegevoegd."
  syntax:
    content: public System.ComponentModel.IContainer Container { get; set; }
    return:
      type: System.ComponentModel.IContainer
      description: "De <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> waaraan de serialisatiebeheer onderdelen wilt toevoegen."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De serialisatie-manager heeft een actieve serialisatiebeheer."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  id: CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: DesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Maakt een exemplaar van een type."
  remarks: "Deze methode wordt aangeroepen door objectserializers wanneer ze proberen te maken van een exemplaar van een type. De standaardimplementatie maakt een nieuw exemplaar van het type of een bestaand exemplaar, afhankelijk van de waarden van mogelijk geretourneerd de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>en <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A>Eigenschappen.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> De <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>methode reflectie gebruikt om exemplaren te maken en voert enkele algemene <xref:System.IConvertible>transformaties voor parameters geen overeenkomende constructor vinden.</xref:System.IConvertible> </xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>"
  syntax:
    content: protected virtual object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);
    parameters:
    - id: type
      type: System.Type
      description: "Het type dat geen exemplaar maken van."
    - id: arguments
      type: System.Collections.ICollection
      description: "De parameters van het type-constructor. Dit kan zijn <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege verzameling op te roepen de standaardconstructor."
    - id: name
      type: System.String
      description: "Een naam opgeven voor het object. Als <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, het object niet krijgt een naam, tenzij het object is toegevoegd aan een container en de container het object een naam krijgt."
    - id: addToContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>het object toevoegen aan de container als het object implementeert <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Een nieuw exemplaar van het type dat is opgegeven door <code> type </code>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*
  exceptions:
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "<code>type</code>heeft geen constructor die parameters die zijn opgenomen in <code>arguments</code>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession
  id: CreateSession
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: CreateSession()
  nameWithType: DesignerSerializationManager.CreateSession()
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Maakt een nieuwe sessie van serialisatie."
  remarks: "De meeste gegevens in het serialisatiebeheer is tijdelijk en bevinden zich alleen voor de levensduur van een serialisatiebeheer. Wanneer een sessie is verwijderd, serialisatie wordt beschouwd als voltooid en deze tijdelijke status is uitgeschakeld. Hiermee wordt één exemplaar van een serialisatiebeheer moet worden gebruikt voor het serialiseren van meerdere structuren van het object. Span sessies sommige staat, met inbegrip van de serviceprovider en eventuele aangepaste serialisatie-providers die zijn toegevoegd aan het serialisatiebeheer."
  syntax:
    content: public IDisposable CreateSession ();
    parameters: []
    return:
      type: System.IDisposable
      description: "Een <xref:System.IDisposable>die staat voor een nieuwe sessie van serialisatie.</xref:System.IDisposable>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De serialisatie-manager is al in een sessie. Deze versie van <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot;> </xref> biedt geen ondersteuning voor gelijktijdige sessies."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
  id: Errors
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: Errors
  nameWithType: DesignerSerializationManager.Errors
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Hiermee wordt de lijst met fouten die zijn opgetreden tijdens het serialiseren of deserialiseren opgehaald."
  remarks: "U kunt alleen de foutenlijst lezen terwijl een serialisatie-sessie actief is."
  syntax:
    content: public System.Collections.IList Errors { get; }
    return:
      type: System.Collections.IList
      description: "De lijst met fouten die zijn opgetreden tijdens het serialiseren of deserialiseren."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Deze eigenschap is toegankelijk van buiten een serialisatiebeheer."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)
  id: GetRuntimeType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: GetRuntimeType(String)
  nameWithType: DesignerSerializationManager.GetRuntimeType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Hiermee wordt het type overeenkomt met de naam van het opgegeven type."
  syntax:
    content: public Type GetRuntimeType (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "De naam van het type om op te halen."
    return:
      type: System.Type
      description: "Het opgegeven type."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)
  id: GetSerializer(System.Type,System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: GetSerializer(Type,Type)
  nameWithType: DesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(Type,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Hiermee wordt de serialisatiefunctie voor het opgegeven objecttype."
  remarks: "U kunt het type van de serialisatiefunctie die u wilt aanvragen. Deze methode retourneert `null` als er geen serialisatiefunctie van het gevraagde type voor het opgegeven object-type."
  syntax:
    content: public object GetSerializer (Type objectType, Type serializerType);
    parameters:
    - id: objectType
      type: System.Type
      description: "Het type van object waarvoor de serialisatiefunctie ophalen."
    - id: serializerType
      type: System.Type
      description: "Het type serialisatiefunctie om op te halen."
    return:
      type: System.Object
      description: "De serialisatiefunctie voor <code> objectType </code>, of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>als niet gevonden."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>objectType</code>or <code>serializerType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: DesignerSerializationManager.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "De aangevraagde service opgehaald."
  remarks: "De methode mag GetService biedt toegang tot de onderliggende container of -provider die is ingesteld in de constructor."
  syntax:
    content: protected virtual object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Het type van de service om op te halen."
    return:
      type: System.Object
      description: "De aangevraagde service of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de service kan niet omgezet worden."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)
  id: GetType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: GetType(String)
  nameWithType: DesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Hiermee wordt het aangevraagde type."
  remarks: "De <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A>methode zoekt de serviceprovider voor een <xref:System.ComponentModel.Design.ITypeResolutionService>en, indien beschikbaar, wordt het delegeren aan die service omzetten van het type.</xref:System.ComponentModel.Design.ITypeResolutionService> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> Als een <xref:System.ComponentModel.Design.ITypeResolutionService>is niet beschikbaar, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A>roept de <xref:System.Object.GetType%2A?displayProperty=fullName>methode.</xref:System.Object.GetType%2A?displayProperty=fullName> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> </xref:System.ComponentModel.Design.ITypeResolutionService>"
  syntax:
    content: protected virtual Type GetType (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "De naam van het type om op te halen."
    return:
      type: System.Type
      description: "Het gevraagde type of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als het type kan niet omgezet worden."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)
  id: OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: OnResolveName(ResolveNameEventArgs)
  nameWithType: DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Geeft de <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&quot;> </xref> gebeurtenis."
  remarks: "Een gebeurtenis te verhogen, roept de gebeurtenis-handler via een gemachtigde. Zie voor meer informatie [KROONTJESPEN: verhogen van een gebeurtenis](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       De methode OnResolveName kan afgeleide klassen de gebeurtenis te verwerken zonder te koppelen van een gemachtigde. Dit is de voorkeur voor het afhandelen van de gebeurtenis in een afgeleide klasse."
  syntax:
    content: protected virtual void OnResolveName (System.ComponentModel.Design.Serialization.ResolveNameEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.Design.Serialization.ResolveNameEventArgs
      description: "Een <xref href=&quot;System.ComponentModel.Design.Serialization.ResolveNameEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)
  id: OnSessionCreated(System.EventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: OnSessionCreated(EventArgs)
  nameWithType: DesignerSerializationManager.OnSessionCreated(EventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(EventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Geeft de <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated&quot;> </xref> gebeurtenis."
  remarks: "Een gebeurtenis te verhogen, roept de gebeurtenis-handler via een gemachtigde. Zie voor meer informatie [KROONTJESPEN: verhogen van een gebeurtenis](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       De methode OnSessionCreated kan afgeleide klassen de gebeurtenis te verwerken zonder te koppelen van een gemachtigde. Dit is de voorkeur voor het afhandelen van de gebeurtenis in een afgeleide klasse."
  syntax:
    content: protected virtual void OnSessionCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Een <xref:System.EventArgs>waarin de gebeurtenisgegevens.</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)
  id: OnSessionDisposed(System.EventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: OnSessionDisposed(EventArgs)
  nameWithType: DesignerSerializationManager.OnSessionDisposed(EventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(EventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Geeft de <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed&quot;> </xref> gebeurtenis."
  remarks: "Een gebeurtenis te verhogen, roept de gebeurtenis-handler via een gemachtigde. Zie voor meer informatie [KROONTJESPEN: verhogen van een gebeurtenis](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       De methode OnSessionDisposed kan afgeleide klassen de gebeurtenis te verwerken zonder te koppelen van een gemachtigde. Dit is de voorkeur voor het afhandelen van de gebeurtenis in een afgeleide klasse."
  syntax:
    content: protected virtual void OnSessionDisposed (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Een <xref:System.EventArgs>waarin de gebeurtenisgegevens.</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
  id: PreserveNames
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: PreserveNames
  nameWithType: DesignerSerializationManager.PreserveNames
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Opgehaald of ingesteld met een waarde die aangeeft of de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>methode moet controleren op de aanwezigheid van de opgegeven naam in de container.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>"
  remarks: "De eigenschap PreserveNames bepaalt het gedrag van de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>methode.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Als `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>wordt geaccepteerd door de opgegeven onderdeelnaam.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Als `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>wordt gecontroleerd op de aanwezigheid van de opgegeven naam in de container.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Als de naam niet in de container bestaat <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>gebruikt de opgegeven naam.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Als de naam in de container bestaat <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>geeft een null-waarde als de naam van een onderdeel wanneer u deze toevoegt aan de container, zodat deze een nieuwe naam.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Deze tweede variatie is nuttig voor het implementeren van een serialisatiefunctie waarbij objecten altijd worden gedupliceerd in plaats van ervan uitgaande dat deze objecten bestaan niet. Opdrachten plakken is vaak gebruik van dit type serializer.       U kunt deze eigenschap alleen wijzigen wanneer u zich niet in een sessie voor serialisatie."
  syntax:
    content: public bool PreserveNames { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <> </> *> geeft de naam van het opgegeven onderdeel; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als <> </> *> wordt gecontroleerd op de aanwezigheid van de opgegeven naam in de container. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Deze eigenschap is gewijzigd van binnen een serialisatiebeheer."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
  id: PropertyProvider
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: PropertyProvider
  nameWithType: DesignerSerializationManager.PropertyProvider
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Hiermee wordt het object dat moet worden gebruikt voor eigenschappen van de serialisatie-manager <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>eigenschap.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>"
  remarks: "De eigenschap PropertyProvider biedt een manier om aan te geven de serialisatie-manager een reeks eigenschappen objectserializers gebruiken kunnen om u te helpen hun gedrag voor serialisatie.       Openbare eigenschappen van dit object wordt gecontroleerd en ingepakt in de nieuwe eigenschap descriptors die geen doel-van het serialisatiebeheer object."
  syntax:
    content: public object PropertyProvider { get; set; }
    return:
      type: System.Object
      description: "Het object dat moet worden gebruikt voor het bieden van eigenschappen aan de serialisatie-manager <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>eigenschap.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
  id: RecycleInstances
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: RecycleInstances
  nameWithType: DesignerSerializationManager.RecycleInstances
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Opgehaald of ingesteld van een vlag die aangeeft of <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>maakt altijd een nieuw exemplaar van een type.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>"
  remarks: "Als de eigenschap RecycleInstances `false`, wordt de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>methode maakt altijd een nieuw exemplaar van een type.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Als RecycleInstances `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>wordt eerst zoeken in de tabel en de container voor een object met dezelfde naam.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Als een dergelijk object bestaat en is van hetzelfde type <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>wordt het bestaande exemplaar geretourneerd.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Deze tweede variatie is nuttig voor het implementeren van een serialisatiefunctie die van toepassing serialisatie status aan een bestaande set van objecten is in plaats van altijd maken van een nieuwe structuur. De **ongedaan** opdracht wordt vaak gebruikt voor dit type serializer.       In het geval waarin de eigenschap RecycleInstances wordt `true`, wordt de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>eigenschap wordt het gedrag van verdere wijzigen <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>, afhankelijk van de typen van de twee objecten.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>"
  syntax:
    content: public bool RecycleInstances { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <> </> *> resulteert in het bestaande exemplaar; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als <> </> *> maakt een nieuw exemplaar van een type. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De serialisatie-manager heeft een actieve serialisatiebeheer."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
  id: SessionCreated
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: SessionCreated
  nameWithType: DesignerSerializationManager.SessionCreated
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Deze gebeurtenis treedt op wanneer een sessie wordt gemaakt."
  syntax:
    content: public event EventHandler SessionCreated;
    return:
      type: System.EventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
  id: SessionDisposed
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: SessionDisposed
  nameWithType: DesignerSerializationManager.SessionDisposed
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Treedt op wanneer een sessie is verwijderd."
  syntax:
    content: public event EventHandler SessionDisposed;
    return:
      type: System.EventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Een aangepaste serialisatie-provider toegevoegd aan het serialisatiebeheer."
  remarks: "Wanneer de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A>methode wordt gebruikt om aan te vragen een serialisatie-provider, de serialisatie-manager vraagt de aangepaste serialisatie-providers eerst voordat opzoeken in de metagegevens van het type voor de juiste serialisatiefunctie.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A>"
  syntax:
    content: void IDesignerSerializationManager.AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);
    parameters:
    - id: provider
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
      description: "De serialisatie-provider om toe te voegen."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Hiermee wordt de contextstack voor deze sessie serialisatie."
  remarks: "Een contextstack biedt een gebied van de gebruiker gedefinieerde opslag, geïmplementeerd als een stack. Deze opslaggebied is een handige manier om te voorzien in communicatie objectserializers, omdat de serialisatie is een algemeen hiërarchische proces."
  syntax:
    content: System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context { get; }
    return:
      type: System.ComponentModel.Design.Serialization.ContextStack
      description: "Een <xref href=&quot;System.ComponentModel.Design.Serialization.ContextStack&quot;> </xref> die gegevens worden opgeslagen."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Deze eigenschap is toegankelijk van buiten een serialisatiebeheer."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Implementeert de <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance*>methode.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance*>"
  syntax:
    content: object IDesignerSerializationManager.CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);
    parameters:
    - id: type
      type: System.Type
      description: "Het gegevenstype te maken."
    - id: arguments
      type: System.Collections.ICollection
      description: "De argumenten worden doorgegeven aan de constructor voor dit type."
    - id: name
      type: System.String
      description: "De naam van het object. Deze naam kan worden gebruikt voor toegang tot het object later via <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*>.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*> Als <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> is doorgegeven, het object is nog steeds gemaakt, maar met de naam kan niet worden geopend."
    - id: addToContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Dit object aan de ontwerp-container toevoegen. Het object moet worden geïmplementeerd <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> voor deze geen effect."
    return:
      type: System.Object
      description: "Het gemaakte object-exemplaar."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Hiermee haalt u een exemplaar van een object van de opgegeven naam."
  syntax:
    content: object IDesignerSerializationManager.GetInstance (string name);
    parameters:
    - id: name
      type: System.String
      description: "De naam van het object ophalen."
    return:
      type: System.Object
      description: "Een exemplaar van het object met de opgegeven naam of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen object met die naam kan worden gevonden."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Deze eigenschap is toegankelijk van buiten een serialisatiebeheer."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Een naam voor het opgegeven object opgehaald."
  remarks: "Als de methode IDesignerSerializationManager.GetName een overeenkomstige naam in voor niet vinden de `value` parameter, genereert de <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>gebeurtenis voordat het resultaat `null`.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>"
  syntax:
    content: string IDesignerSerializationManager.GetName (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Het object waarvoor u de naam ophalen."
    return:
      type: System.String
      description: "De naam van het object of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als het object geen naam is."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Deze eigenschap is toegankelijk van buiten een serialisatiebeheer."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Hiermee wordt een serialisatiefunctie van het gevraagde type voor het opgegeven objecttype."
  syntax:
    content: object IDesignerSerializationManager.GetSerializer (Type objectType, Type serializerType);
    parameters:
    - id: objectType
      type: System.Type
      description: "Het type van het object de serialisatiefunctie voor ophalen."
    - id: serializerType
      type: System.Type
      description: "Het type van de serializer om op te halen."
    return:
      type: System.Object
      description: "Een exemplaar van de aangevraagde serializer of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen bijbehorende serialisatiefunctie kan worden gevonden."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Hiermee wordt een type van de opgegeven naam."
  syntax:
    content: Type IDesignerSerializationManager.GetType (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "De volledig gekwalificeerde naam van het type te laden."
    return:
      type: System.Type
      description: "Een exemplaar van het type of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als het type kan niet worden geladen."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Deze eigenschap is toegankelijk van buiten een serialisatiebeheer."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Implementeert de <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>eigenschap.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>"
  syntax:
    content: System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { get; }
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Een <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> met de eigenschappen om te worden geserialiseerd."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Hiermee verwijdert u een eerder toegevoegde serialisatie-provider."
  remarks: "De methode IDesignerSerializationManager.RemoveSerializationProvider verwijdert u een aangepaste serialisatie-provider die eerder is toegevoegd door een aanroep naar de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A>methode.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A>"
  syntax:
    content: void IDesignerSerializationManager.RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);
    parameters:
    - id: provider
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
      description: "De <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationProvider&quot;> </xref> te verwijderen."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Gebruikt voor het rapporteren van een herstelbare fout in serialisatie."
  remarks: "Objectserializers kunnen herstelbare fouten probleemloos verwerkt door het aanroepen van de methode IDesignerSerializationManager.ReportError met de informatie over de fout worden geschreven. De serialisatie-manager mogelijk ondersteuning voor een lijst met fouten reporting nadat deze is voltooid, maar mogelijk Veroorzaak een exception van deze methode en het proces serialisatie afbreken. De serialisatiefunctie moet blijven na het aanroepen van deze functie.       IDesignerSerializationManager.ReportError voegt de `errorInformation` -parameter voor de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>verzameling.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> Als `errorInformation` is `null`, er geen actie ondernomen."
  syntax:
    content: void IDesignerSerializationManager.ReportError (object errorInformation);
    parameters:
    - id: errorInformation
      type: System.Object
      description: "Een object met de foutgegevens, meestal van het type <xref:System.String>of <xref:System.Exception>.</xref:System.Exception> </xref:System.String>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Deze eigenschap is toegankelijk van buiten een serialisatiebeheer."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Hiermee stelt u de naam voor het opgegeven object."
  remarks: "De methode IDesignerSerializationManager.SetName biedt een manier om de naam van een bestaand object. Hierdoor is het maken van een exemplaar van het object via een aanroep van de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A>methode, voorkomen van de overhead van de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>methode.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A>"
  syntax:
    content: void IDesignerSerializationManager.SetName (object instance, string name);
    parameters:
    - id: instance
      type: System.Object
      description: "Het object dat de naam niet instellen."
    - id: name
      type: System.String
      description: "Een <xref:System.String>gebruikt als de naam van het object.</xref:System.String>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Een of beide van de parameters zijn <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Het object al door exemplaar opgegeven, heeft een naam of <code> name </code> wordt al gebruikt door een andere benoemde object."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Deze eigenschap is toegankelijk van buiten een serialisatiebeheer."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)
  id: System#IServiceProvider#GetService(System.Type)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.IServiceProvider.GetService(Type)
  nameWithType: DesignerSerializationManager.System.IServiceProvider.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.IServiceProvider.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Zie voor een beschrijving van dit lid, de <xref:System.IServiceProvider.GetService*>methode.</xref:System.IServiceProvider.GetService*>"
  remarks: "Dit lid is een expliciete interface lid-implementatie. Het kan worden gebruikt alleen wanneer de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager>exemplaar is geconverteerd naar een <xref:System.IServiceProvider>interface.</xref:System.IServiceProvider> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager>"
  syntax:
    content: object IServiceProvider.GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Een object dat hiermee het type van service-object wordt ophalen."
    return:
      type: System.Object
      description: "Een serviceobject van het type <code> serviceType </code>.       - of - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen serviceobject van het type is <code> serviceType </code>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
  id: ValidateRecycledTypes
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: ValidateRecycledTypes
  nameWithType: DesignerSerializationManager.ValidateRecycledTypes
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Opgehaald of ingesteld van een vlag die aangeeft of de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>methode controleert of dat er overeenkomende namen naar hetzelfde type verwijzen.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>"
  remarks: "De eigenschap ValidateRecycledTypes wijzigt u de werking van de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>methode wanneer de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A>eigenschap is `true`, zoals beschreven in de volgende tabel.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>      | `RecycleInstances`|`ValidateRecycledTypes`| Gedrag van `CreateInstance`|   |------------------------|-----------------------------|----------------------------------|   | `false`|`true` or `false`| Maak een nieuw exemplaar van het opgegeven type altijd |   | `true`|`false`| Als een overeenkomende instantie wordt gevonden het wordt geretourneerd, ongeacht het type. |   | `true`|`true`| Als een overeenkomende instantie wordt gevonden, deze wordt alleen geretourneerd als het type hetzelfde als opgegeven in de methodeaanroep is. |       ValidateRecycledTypes is nuttig voor één type object naar de andere morphing als ze vergelijkbare eigenschappen hebben maar geen gemeenschappelijk bovenliggend niveau of interface delen."
  syntax:
    content: public bool ValidateRecycledTypes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>controleert of de typen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als dit niet.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*> De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De serialisatie-manager heeft een actieve serialisatiebeheer."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: DesignerSerializationManager()
  nameWithType: DesignerSerializationManager.DesignerSerializationManager()
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.DesignerSerializationManager()
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: DesignerSerializationManager(IServiceProvider)
  nameWithType: DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: Container
  nameWithType: DesignerSerializationManager.Container
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: DesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: CreateSession()
  nameWithType: DesignerSerializationManager.CreateSession()
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession()
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: Errors
  nameWithType: DesignerSerializationManager.Errors
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetRuntimeType(String)
  nameWithType: DesignerSerializationManager.GetRuntimeType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetSerializer(Type,Type)
  nameWithType: DesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(Type,Type)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetService(Type)
  nameWithType: DesignerSerializationManager.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(Type)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetType(String)
  nameWithType: DesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnResolveName(ResolveNameEventArgs)
  nameWithType: DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)
- uid: System.ComponentModel.Design.Serialization.ResolveNameEventArgs
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: ResolveNameEventArgs
  nameWithType: ResolveNameEventArgs
  fullName: System.ComponentModel.Design.Serialization.ResolveNameEventArgs
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnSessionCreated(EventArgs)
  nameWithType: DesignerSerializationManager.OnSessionCreated(EventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnSessionDisposed(EventArgs)
  nameWithType: DesignerSerializationManager.OnSessionDisposed(EventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(EventArgs)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: PreserveNames
  nameWithType: DesignerSerializationManager.PreserveNames
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: PropertyProvider
  nameWithType: DesignerSerializationManager.PropertyProvider
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: RecycleInstances
  nameWithType: DesignerSerializationManager.RecycleInstances
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: SessionCreated
  nameWithType: DesignerSerializationManager.SessionCreated
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: SessionDisposed
  nameWithType: DesignerSerializationManager.SessionDisposed
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerSerializationProvider
  nameWithType: IDesignerSerializationProvider
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
- uid: System.ComponentModel.Design.Serialization.ContextStack
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: ContextStack
  nameWithType: ContextStack
  fullName: System.ComponentModel.Design.Serialization.ContextStack
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.IServiceProvider.GetService(Type)
  nameWithType: DesignerSerializationManager.System.IServiceProvider.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.IServiceProvider.GetService(Type)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: ValidateRecycledTypes
  nameWithType: DesignerSerializationManager.ValidateRecycledTypes
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: DesignerSerializationManager
  nameWithType: DesignerSerializationManager.DesignerSerializationManager
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: Container
  nameWithType: DesignerSerializationManager.Container
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: CreateInstance
  nameWithType: DesignerSerializationManager.CreateInstance
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: CreateSession
  nameWithType: DesignerSerializationManager.CreateSession
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: Errors
  nameWithType: DesignerSerializationManager.Errors
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetRuntimeType
  nameWithType: DesignerSerializationManager.GetRuntimeType
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetSerializer
  nameWithType: DesignerSerializationManager.GetSerializer
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetService
  nameWithType: DesignerSerializationManager.GetService
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetType
  nameWithType: DesignerSerializationManager.GetType
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnResolveName
  nameWithType: DesignerSerializationManager.OnResolveName
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnSessionCreated
  nameWithType: DesignerSerializationManager.OnSessionCreated
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnSessionDisposed
  nameWithType: DesignerSerializationManager.OnSessionDisposed
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: PreserveNames
  nameWithType: DesignerSerializationManager.PreserveNames
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: PropertyProvider
  nameWithType: DesignerSerializationManager.PropertyProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: RecycleInstances
  nameWithType: DesignerSerializationManager.RecycleInstances
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.IServiceProvider.GetService
  nameWithType: DesignerSerializationManager.System.IServiceProvider.GetService
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: ValidateRecycledTypes
  nameWithType: DesignerSerializationManager.ValidateRecycledTypes
