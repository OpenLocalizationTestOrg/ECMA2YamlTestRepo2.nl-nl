### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.License
  id: License
  children:
  - System.ComponentModel.License.#ctor
  - System.ComponentModel.License.Dispose
  - System.ComponentModel.License.LicenseKey
  langs:
  - csharp
  name: License
  nameWithType: License
  fullName: System.ComponentModel.License
  type: Class
  summary: "Biedt de <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref> basisklasse voor alle licenties. Een licentie wordt verleend aan een specifiek exemplaar van een onderdeel."
  remarks: "Alle onderdelen moeten worden aangeroepen <xref:System.ComponentModel.License.Dispose%2A>licenties wanneer verlenen het onderdeel is verwijderd of voltooid.</xref:System.ComponentModel.License.Dispose%2A>"
  syntax:
    content: 'public abstract class License : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.License.#ctor
  id: '#ctor'
  parent: System.ComponentModel.License
  langs:
  - csharp
  name: License()
  nameWithType: License.License()
  fullName: System.ComponentModel.License.License()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.License&quot;> </xref> klasse."
  syntax:
    content: protected License ();
    parameters: []
  overload: System.ComponentModel.License.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.License.Dispose
  id: Dispose
  parent: System.ComponentModel.License
  langs:
  - csharp
  name: Dispose()
  nameWithType: License.Dispose()
  fullName: System.ComponentModel.License.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Wanneer in een afgeleide klasse genegeerd, verwijdert de resources die door de licentie gebruikt."
  remarks: "Alle onderdelen Dispose moeten worden gebeld om de licenties die zij verlenen wanneer het onderdeel wordt verwijderd of voltooid.       Een <xref:System.ComponentModel.LicenseProvider>de licenties die hij verleent om bij te houden van het gebruik ervan kunt gebruiken.</xref:System.ComponentModel.LicenseProvider>       Dispose aanroepen wanneer u klaar bent met de <xref:System.ComponentModel.License>.</xref:System.ComponentModel.License> De methode Dispose verlaat de <xref:System.ComponentModel.License>in een onbruikbare status.</xref:System.ComponentModel.License> Na Dispose aanroepen, moet u alle verwijzingen naar vrijgeven de <xref:System.ComponentModel.License>zodat het geheugen dat deze is die kan worden vrijgemaakt door garbagecollection.</xref:System.ComponentModel.License>      > [!NOTE] > Altijd aanroep verwijderen voordat u uw laatste verwijzing naar de <xref:System.ComponentModel.License>.</xref:System.ComponentModel.License> vrijgeven Anders wordt de resources de <xref:System.ComponentModel.License>is gebruik niet vrij tot garbagecollection verzameling aanroepen de <xref:System.ComponentModel.License>destructor van het object.</xref:System.ComponentModel.License> </xref:System.ComponentModel.License>"
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: System.ComponentModel.License.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.License.LicenseKey
  id: LicenseKey
  parent: System.ComponentModel.License
  langs:
  - csharp
  name: LicenseKey
  nameWithType: License.LicenseKey
  fullName: System.ComponentModel.License.LicenseKey
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Wanneer in een afgeleide klasse genegeerd, krijgt de licentiesleutel te krijgen tot dit onderdeel."
  remarks: "Een <xref:System.ComponentModel.LicenseProvider>eventuele Unicode-tekenreeks die kunt gebruiken als een licentiecode.</xref:System.ComponentModel.LicenseProvider> De LicenseKey moet worden behandeld als een ondoorzichtige cookie, dat wil zeggen, een cookie met een opzettelijk verborgen interne structuur."
  syntax:
    content: public abstract string LicenseKey { get; }
    return:
      type: System.String
      description: "Een licentiesleutel is toegekend aan dit onderdeel."
  overload: System.ComponentModel.License.LicenseKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.License.#ctor
  parent: System.ComponentModel.License
  isExternal: false
  name: License()
  nameWithType: License.License()
  fullName: System.ComponentModel.License.License()
- uid: System.ComponentModel.License.Dispose
  parent: System.ComponentModel.License
  isExternal: false
  name: Dispose()
  nameWithType: License.Dispose()
  fullName: System.ComponentModel.License.Dispose()
- uid: System.ComponentModel.License.LicenseKey
  parent: System.ComponentModel.License
  isExternal: false
  name: LicenseKey
  nameWithType: License.LicenseKey
  fullName: System.ComponentModel.License.LicenseKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.License.#ctor*
  parent: System.ComponentModel.License
  isExternal: false
  name: License
  nameWithType: License.License
- uid: System.ComponentModel.License.Dispose*
  parent: System.ComponentModel.License
  isExternal: false
  name: Dispose
  nameWithType: License.Dispose
- uid: System.ComponentModel.License.LicenseKey*
  parent: System.ComponentModel.License
  isExternal: false
  name: LicenseKey
  nameWithType: License.LicenseKey
