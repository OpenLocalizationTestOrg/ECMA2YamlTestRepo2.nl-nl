### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeIterationStatement
  id: CodeIterationStatement
  children:
  - System.CodeDom.CodeIterationStatement.#ctor
  - System.CodeDom.CodeIterationStatement.#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])
  - System.CodeDom.CodeIterationStatement.IncrementStatement
  - System.CodeDom.CodeIterationStatement.InitStatement
  - System.CodeDom.CodeIterationStatement.Statements
  - System.CodeDom.CodeIterationStatement.TestExpression
  langs:
  - csharp
  name: CodeIterationStatement
  nameWithType: CodeIterationStatement
  fullName: System.CodeDom.CodeIterationStatement
  type: Class
  summary: "Hiermee geeft u een <xref uid=&quot;langword_csharp_for&quot; name=&quot;for&quot; href=&quot;&quot;> </xref> -instructie of een lus via een blok instructies, met een expressie van de test als voorwaarde voor u doorgaat een lus."
  remarks: "Een CodeIterationStatement kan vertegenwoordigen een `for` lus of `while` lus.       De <xref:System.CodeDom.CodeIterationStatement.InitStatement%2A>eigenschap geeft u de instructie worden uitgevoerd voordat de eerste lus iteratie.</xref:System.CodeDom.CodeIterationStatement.InitStatement%2A> De <xref:System.CodeDom.CodeIterationStatement.TestExpression%2A>-eigenschap geeft op dat de lus voortzetting-expressie, die moet worden geÃ«valueerd tot `true` aan het einde van elke herhaling van de lus voor een andere iteratie om te beginnen.</xref:System.CodeDom.CodeIterationStatement.TestExpression%2A> De <xref:System.CodeDom.CodeIterationStatement.IncrementStatement%2A>eigenschap geeft u de instructie uit te voeren aan het einde van elke herhaling van de lus.</xref:System.CodeDom.CodeIterationStatement.IncrementStatement%2A> De <xref:System.CodeDom.CodeIterationStatement.Statements%2A>eigenschap geeft u de verzameling van de instructies uit te voeren binnen de lus.</xref:System.CodeDom.CodeIterationStatement.Statements%2A>"
  example:
  - "This example demonstrates using a CodeIterationStatement to represent a `for` loop.  \n  \n [!code-cs[CodeIterationStatementExample#2](~/add/codesnippet/csharp/t-system.codedom.codeite_1.cs)]\n [!code-vb[CodeIterationStatementExample#2](~/add/codesnippet/visualbasic/t-system.codedom.codeite_1.vb)]\n [!code-cpp[CodeIterationStatementExample#2](~/add/codesnippet/cpp/t-system.codedom.codeite_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeIterationStatement : System.CodeDom.CodeStatement
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeStatement
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  - System.CodeDom.CodeStatement.EndDirectives
  - System.CodeDom.CodeStatement.LinePragma
  - System.CodeDom.CodeStatement.StartDirectives
  platform:
  - net462
- uid: System.CodeDom.CodeIterationStatement.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeIterationStatement
  langs:
  - csharp
  name: CodeIterationStatement()
  nameWithType: CodeIterationStatement.CodeIterationStatement()
  fullName: System.CodeDom.CodeIterationStatement.CodeIterationStatement()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.CodeDom.CodeIterationStatement&quot;> </xref> klasse."
  syntax:
    content: public CodeIterationStatement ();
    parameters: []
  overload: System.CodeDom.CodeIterationStatement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeIterationStatement.#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])
  id: '#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])'
  parent: System.CodeDom.CodeIterationStatement
  langs:
  - csharp
  name: CodeIterationStatement(CodeStatement,CodeExpression,CodeStatement,CodeStatement[])
  nameWithType: CodeIterationStatement.CodeIterationStatement(CodeStatement,CodeExpression,CodeStatement,CodeStatement[])
  fullName: System.CodeDom.CodeIterationStatement.CodeIterationStatement(CodeStatement,CodeExpression,CodeStatement,CodeStatement[])
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.CodeDom.CodeIterationStatement&quot;> </xref> klasse met de opgegeven parameters."
  syntax:
    content: public CodeIterationStatement (System.CodeDom.CodeStatement initStatement, System.CodeDom.CodeExpression testExpression, System.CodeDom.CodeStatement incrementStatement, System.CodeDom.CodeStatement[] statements);
    parameters:
    - id: initStatement
      type: System.CodeDom.CodeStatement
      description: "Een <xref href=&quot;System.CodeDom.CodeStatement&quot;> </xref> met de instructie van de initialisatie van de lus."
    - id: testExpression
      type: System.CodeDom.CodeExpression
      description: "Een <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> met de expressie te testen voor de voorwaarde voor het afsluiten."
    - id: incrementStatement
      type: System.CodeDom.CodeStatement
      description: "Een <xref href=&quot;System.CodeDom.CodeStatement&quot;> </xref> met de instructie van de verhoging per cyclus."
    - id: statements
      type: System.CodeDom.CodeStatement[]
      description: "Een matrix van het type <xref href=&quot;System.CodeDom.CodeStatement&quot;> </xref> met de instructies in de FOR-lus."
  overload: System.CodeDom.CodeIterationStatement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeIterationStatement.IncrementStatement
  id: IncrementStatement
  parent: System.CodeDom.CodeIterationStatement
  langs:
  - csharp
  name: IncrementStatement
  nameWithType: CodeIterationStatement.IncrementStatement
  fullName: System.CodeDom.CodeIterationStatement.IncrementStatement
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Opgehaald of ingesteld van de instructie die wordt aangeroepen na elke cyclus lus."
  remarks: "Deze instructie wordt aangeroepen na elke iteratie."
  syntax:
    content: public System.CodeDom.CodeStatement IncrementStatement { get; set; }
    return:
      type: System.CodeDom.CodeStatement
      description: "Een <xref href=&quot;System.CodeDom.CodeStatement&quot;> </xref> die aangeeft de per cyclus increment-instructie."
  overload: System.CodeDom.CodeIterationStatement.IncrementStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeIterationStatement.InitStatement
  id: InitStatement
  parent: System.CodeDom.CodeIterationStatement
  langs:
  - csharp
  name: InitStatement
  nameWithType: CodeIterationStatement.InitStatement
  fullName: System.CodeDom.CodeIterationStatement.InitStatement
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Opgehaald of ingesteld van de lus initialisatie-instructie."
  remarks: "U kunt een instructie leeg initialisatie opgeven door deze eigenschap instelt op een <xref:System.CodeDom.CodeExpressionStatement>die bevat een <xref:System.CodeDom.CodeSnippetExpression>die bevat een lege tekenreeks.</xref:System.CodeDom.CodeSnippetExpression> </xref:System.CodeDom.CodeExpressionStatement>"
  syntax:
    content: public System.CodeDom.CodeStatement InitStatement { get; set; }
    return:
      type: System.CodeDom.CodeStatement
      description: "Een <xref href=&quot;System.CodeDom.CodeStatement&quot;> </xref> die aangeeft dat de lus initialisatie-instructie."
  overload: System.CodeDom.CodeIterationStatement.InitStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeIterationStatement.Statements
  id: Statements
  parent: System.CodeDom.CodeIterationStatement
  langs:
  - csharp
  name: Statements
  nameWithType: CodeIterationStatement.Statements
  fullName: System.CodeDom.CodeIterationStatement.Statements
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Hiermee haalt u de verzameling van de instructies om te worden uitgevoerd binnen de lus."
  syntax:
    content: public System.CodeDom.CodeStatementCollection Statements { get; }
    return:
      type: System.CodeDom.CodeStatementCollection
      description: "Een matrix van het type <xref href=&quot;System.CodeDom.CodeStatement&quot;> </xref> die aangeeft dat de instructies in de FOR-lus."
  overload: System.CodeDom.CodeIterationStatement.Statements*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeIterationStatement.TestExpression
  id: TestExpression
  parent: System.CodeDom.CodeIterationStatement
  langs:
  - csharp
  name: TestExpression
  nameWithType: CodeIterationStatement.TestExpression
  fullName: System.CodeDom.CodeIterationStatement.TestExpression
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Opgehaald of ingesteld van de expressie voor het testen van de conditie van de lus blijft."
  remarks: "Als deze expressie wordt omgezet in `true`, de lus wordt voortgezet."
  syntax:
    content: public System.CodeDom.CodeExpression TestExpression { get; set; }
    return:
      type: System.CodeDom.CodeExpression
      description: "Een <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> die aangeeft dat de expressie te testen."
  overload: System.CodeDom.CodeIterationStatement.TestExpression*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeStatement
  isExternal: false
  name: System.CodeDom.CodeStatement
- uid: System.CodeDom.CodeIterationStatement.#ctor
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: CodeIterationStatement()
  nameWithType: CodeIterationStatement.CodeIterationStatement()
  fullName: System.CodeDom.CodeIterationStatement.CodeIterationStatement()
- uid: System.CodeDom.CodeIterationStatement.#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: CodeIterationStatement(CodeStatement,CodeExpression,CodeStatement,CodeStatement[])
  nameWithType: CodeIterationStatement.CodeIterationStatement(CodeStatement,CodeExpression,CodeStatement,CodeStatement[])
  fullName: System.CodeDom.CodeIterationStatement.CodeIterationStatement(CodeStatement,CodeExpression,CodeStatement,CodeStatement[])
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.CodeDom.CodeStatement[]
  parent: System.CodeDom
  isExternal: false
  name: CodeStatement
  nameWithType: CodeStatement
  fullName: System.CodeDom.CodeStatement[]
  spec.csharp:
  - uid: System.CodeDom.CodeStatement
    name: CodeStatement
    nameWithType: CodeStatement
    fullName: CodeStatement[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.CodeDom.CodeIterationStatement.IncrementStatement
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: IncrementStatement
  nameWithType: CodeIterationStatement.IncrementStatement
  fullName: System.CodeDom.CodeIterationStatement.IncrementStatement
- uid: System.CodeDom.CodeIterationStatement.InitStatement
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: InitStatement
  nameWithType: CodeIterationStatement.InitStatement
  fullName: System.CodeDom.CodeIterationStatement.InitStatement
- uid: System.CodeDom.CodeIterationStatement.Statements
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: Statements
  nameWithType: CodeIterationStatement.Statements
  fullName: System.CodeDom.CodeIterationStatement.Statements
- uid: System.CodeDom.CodeStatementCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeStatementCollection
  nameWithType: CodeStatementCollection
  fullName: System.CodeDom.CodeStatementCollection
- uid: System.CodeDom.CodeIterationStatement.TestExpression
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: TestExpression
  nameWithType: CodeIterationStatement.TestExpression
  fullName: System.CodeDom.CodeIterationStatement.TestExpression
- uid: System.CodeDom.CodeIterationStatement.#ctor*
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: CodeIterationStatement
  nameWithType: CodeIterationStatement.CodeIterationStatement
- uid: System.CodeDom.CodeIterationStatement.IncrementStatement*
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: IncrementStatement
  nameWithType: CodeIterationStatement.IncrementStatement
- uid: System.CodeDom.CodeIterationStatement.InitStatement*
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: InitStatement
  nameWithType: CodeIterationStatement.InitStatement
- uid: System.CodeDom.CodeIterationStatement.Statements*
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: Statements
  nameWithType: CodeIterationStatement.Statements
- uid: System.CodeDom.CodeIterationStatement.TestExpression*
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: TestExpression
  nameWithType: CodeIterationStatement.TestExpression
