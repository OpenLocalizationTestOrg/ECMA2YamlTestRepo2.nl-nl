### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.ExceptionHandler
  id: ExceptionHandler
  children:
  - System.ServiceModel.Dispatcher.ExceptionHandler.#ctor
  - System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle
  - System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler
  - System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)
  - System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler
  langs:
  - csharp
  name: ExceptionHandler
  nameWithType: ExceptionHandler
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler
  type: Class
  summary: "Uitbreiden van de klasse ExceptionHandler voor het maken van een uitzonderings-handler voor niet-verwerkte uitzonderingen die zich binnen de [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] runtime."
  remarks: "De klasse ExceptionHandler uitbreiden en overschrijven de <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A>methode om te bepalen of de toepassing moet worden beëindigd door een uitzondering.</xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> Vervolgens een nieuw exemplaar van uw aangepaste ExceptionHandler klasse maken en toewijzen aan de statische <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A>of <xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A>eigenschap voordat u [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] clients of services.</xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A> </xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A>"
  example:
  - "The following code example shows an implementation of the ExceptionHandler abstract class that overrides the <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> method.  \n  \n [!code-cs[S_UEExceptionHandler#0](~/add/codesnippet/csharp/s_ueexceptionhandler.cs/program.cs#0)]\n [!code-vb[S_UEExceptionHandler#0](~/add/codesnippet/visualbasic/s_ueexceptionhandler.cs/module1.vb#0)]  \n  \n The following code example shows how to enable the custom `MyExceptionHandler` for unhandled exceptions that occur within the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] runtime.  \n  \n [!code-cs[S_UEExceptionHandler#1](~/add/codesnippet/csharp/s_ueexceptionhandler.cs/program.cs#1)]\n [!code-vb[S_UEExceptionHandler#1](~/add/codesnippet/visualbasic/s_ueexceptionhandler.cs/module1.vb#1)]"
  syntax:
    content: public abstract class ExceptionHandler
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  langs:
  - csharp
  name: ExceptionHandler()
  nameWithType: ExceptionHandler.ExceptionHandler()
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.ExceptionHandler()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ServiceModel.Dispatcher.ExceptionHandler&quot;> </xref> klasse."
  syntax:
    content: protected ExceptionHandler ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ExceptionHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle
  id: AlwaysHandle
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  langs:
  - csharp
  name: AlwaysHandle
  nameWithType: ExceptionHandler.AlwaysHandle
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Een exemplaar van opgehaald <xref href=&quot;System.ServiceModel.Dispatcher.ExceptionHandler&quot;> </xref> die alle uitzonderingen verwerkt."
  syntax:
    content: public static System.ServiceModel.Dispatcher.ExceptionHandler AlwaysHandle { get; }
    return:
      type: System.ServiceModel.Dispatcher.ExceptionHandler
      description: "Een <xref href=&quot;System.ServiceModel.Dispatcher.ExceptionHandler&quot;> </xref> -object dat als resultaat gegeven <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> voor alle uitzonderingen."
  overload: System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler
  id: AsynchronousThreadExceptionHandler
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  langs:
  - csharp
  name: AsynchronousThreadExceptionHandler
  nameWithType: ExceptionHandler.AsynchronousThreadExceptionHandler
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Opgehaald of ingesteld van de huidige <xref href=&quot;System.ServiceModel.Dispatcher.ExceptionHandler&quot;> </xref> implementatie voor het toepassingsdomein."
  remarks: "De eigenschap AsynchronousThreadExceptionHandler is standaard `null`, en niet-verwerkte uitzonderingen op asynchrone [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] threads de toepassing beëindigt.  Deze eigenschap instellen op een <xref:System.ServiceModel.Dispatcher.ExceptionHandler>object te ontvangen en reageren op deze uitzonderingen.</xref:System.ServiceModel.Dispatcher.ExceptionHandler>       Als er een niet-verwerkte uitzondering optreedt op een asynchrone [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] thread en deze handler, de status van het toepassingsdomein kan worden geknoeid bereikt.  <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A>niet als resultaat moet geven `true` voor deze uitzonderingen.</xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A>"
  syntax:
    content: public static System.ServiceModel.Dispatcher.ExceptionHandler AsynchronousThreadExceptionHandler { get; set; }
    return:
      type: System.ServiceModel.Dispatcher.ExceptionHandler
      description: "Toewijzen van een aangepaste <xref href=&quot;System.ServiceModel.Dispatcher.ExceptionHandler&quot;> </xref> object waarvoor onverwerkte uitzonderingen die op asynchrone optreden [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] threads."
  overload: System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)
  id: HandleException(System.Exception)
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  langs:
  - csharp
  name: HandleException(Exception)
  nameWithType: ExceptionHandler.HandleException(Exception)
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(Exception)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Wanneer in een afgeleide klasse genegeerd, retourneert <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> als de uitzondering is afgehandeld, of <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als de uitzondering opnieuw optreden moet en de toepassing is beëindigd."
  remarks: "De eigenschap HandleException retourneert `true` als de uitzondering is afgehandeld. Als het resultaat `false` of een andere uitzondering, de oorspronkelijke uitzondering is opnieuw genereert."
  example:
  - "The following code example shows an implementation of the <xref:System.ServiceModel.Dispatcher.ExceptionHandler> abstract class that overrides the HandleException method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following code example shows how to enable the custom `MyExceptionHandler` for unhandled exceptions that occur within the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] runtime.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public abstract bool HandleException (Exception exception);
    parameters:
    - id: exception
      type: System.Exception
      description: "De uitzondering het opgetreden binnen de [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] runtime en dat de toepassing mogelijk beëindigt."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de uitzondering is afgehandeld; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Dispatcher.ExceptionHandler.HandleException*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler
  id: TransportExceptionHandler
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  langs:
  - csharp
  name: TransportExceptionHandler
  nameWithType: ExceptionHandler.TransportExceptionHandler
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Opgehaald of ingesteld van het huidige transport <xref href=&quot;System.ServiceModel.Dispatcher.ExceptionHandler&quot;> </xref> implementatie voor het toepassingsdomein."
  remarks: "De eigenschap TransportExceptionHandler is standaard ingesteld op de waarde van <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle%2A>, veroorzaakt door onverwerkte uitzonderingen binnen [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] transporten worden genegeerd.</xref:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle%2A>  Deze eigenschap instellen op een exemplaar van <xref:System.ServiceModel.Dispatcher.ExceptionHandler>ontvangen en reageren op deze uitzonderingen.</xref:System.ServiceModel.Dispatcher.ExceptionHandler>       Als er een niet-verwerkte uitzondering optreedt binnen een globale [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] transport en deze handler bereikt bestaat de kans dat de status van het toepassingsdomein is geknoeid. <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A>kan retourneren `false` voor deze uitzonderingen om te zorgen dat de toepassing moet worden beëindigd.</xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A>"
  syntax:
    content: public static System.ServiceModel.Dispatcher.ExceptionHandler TransportExceptionHandler { get; set; }
    return:
      type: System.ServiceModel.Dispatcher.ExceptionHandler
      description: "Een aangepaste <xref href=&quot;System.ServiceModel.Dispatcher.ExceptionHandler&quot;> </xref> object waarvoor onverwerkte uitzonderingen die in de globale optreden [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] transporten."
  overload: System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.#ctor
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: ExceptionHandler()
  nameWithType: ExceptionHandler.ExceptionHandler()
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.ExceptionHandler()
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: AlwaysHandle
  nameWithType: ExceptionHandler.AlwaysHandle
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle
- uid: System.ServiceModel.Dispatcher.ExceptionHandler
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: ExceptionHandler
  nameWithType: ExceptionHandler
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: AsynchronousThreadExceptionHandler
  nameWithType: ExceptionHandler.AsynchronousThreadExceptionHandler
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: HandleException(Exception)
  nameWithType: ExceptionHandler.HandleException(Exception)
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(Exception)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: TransportExceptionHandler
  nameWithType: ExceptionHandler.TransportExceptionHandler
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.#ctor*
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: ExceptionHandler
  nameWithType: ExceptionHandler.ExceptionHandler
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle*
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: AlwaysHandle
  nameWithType: ExceptionHandler.AlwaysHandle
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler*
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: AsynchronousThreadExceptionHandler
  nameWithType: ExceptionHandler.AsynchronousThreadExceptionHandler
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.HandleException*
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: HandleException
  nameWithType: ExceptionHandler.HandleException
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler*
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: TransportExceptionHandler
  nameWithType: ExceptionHandler.TransportExceptionHandler
