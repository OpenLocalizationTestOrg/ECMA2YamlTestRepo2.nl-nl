### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Design.EventHandlerService
  id: EventHandlerService
  children:
  - System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)
  - System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
  - System.Windows.Forms.Design.EventHandlerService.FocusWindow
  - System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)
  - System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)
  - System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)
  langs:
  - csharp
  name: EventHandlerService
  nameWithType: EventHandlerService
  fullName: System.Windows.Forms.Design.EventHandlerService
  type: Class
  summary: "Biedt een systematische manier voor het beheren van gebeurtenis-handlers voor het huidige document."
  remarks: "Ontwikkelaars willen kunnen schrijven van code op één plek die verantwoordelijk is voor gebeurtenissen van een bepaald type.       Ontwikkelaars wilt ook het gedrag van de handlers voor specifieke gebeurtenissen of typen gebeurtenissen die kunnen worden verdeeld over designer onderdelen globaal wijzigen.       De designers voor een typische project zijn veel andere objecten, zodat dit kan nuttig zijn voor het weergeven en opslaan van de verwijzing naar deze gebeurtenissen van een algemene plaats zijn.       Deze service wordt geïmplementeerd voor een &quot;gebeurtenis stack&quot; met de huidige set van gebeurtenis-handlers. De stack misschien tal van verschillende soorten handlers op de stack.       Een ontwerpfunctie kan bijvoorbeeld push of een toetsenbordhandler en muis handler op de stack toevoegen. Wanneer een ontwerper van een gebeurtenis-handler aanvraagt, wordt de service de bovenste handler vinden op de stack die overeenkomt met de klasse die u hebt aangevraagd.       Op deze manier de service kan worden uitgebreid naar een schema eventing en kunt u ook specifieke typen van gebeurtenis-handlers worden vervangen. U kunt bijvoorbeeld muis gebeurtenis-handlers vervangen zonder menu gebeurtenis-handlers of gebeurtenis-toetsenbordhandlers te beïnvloeden."
  syntax:
    content: public sealed class EventHandlerService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)
  id: '#ctor(System.Windows.Forms.Control)'
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: EventHandlerService(Control)
  nameWithType: EventHandlerService.EventHandlerService(Control)
  fullName: System.Windows.Forms.Design.EventHandlerService.EventHandlerService(Control)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Forms.Design.EventHandlerService&quot;> </xref> klasse."
  syntax:
    content: public EventHandlerService (System.Windows.Forms.Control focusWnd);
    parameters:
    - id: focusWnd
      type: System.Windows.Forms.Control
      description: "De <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> worden ontworpen."
  overload: System.Windows.Forms.Design.EventHandlerService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
  id: EventHandlerChanged
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: EventHandlerChanged
  nameWithType: EventHandlerService.EventHandlerChanged
  fullName: System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
  type: Event
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "Een OnEventHandlerChanged-gebeurtenis wordt gestart."
  syntax:
    content: public event EventHandler EventHandlerChanged;
    return:
      type: System.EventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.FocusWindow
  id: FocusWindow
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: FocusWindow
  nameWithType: EventHandlerService.FocusWindow
  fullName: System.Windows.Forms.Design.EventHandlerService.FocusWindow
  type: Property
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "Hiermee haalt u het besturingselement aan welke gebeurtenis handlers zijn gekoppeld."
  syntax:
    content: public System.Windows.Forms.Control FocusWindow { get; }
    return:
      type: System.Windows.Forms.Control
      description: "De <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> die is gekoppeld via de constructor."
  overload: System.Windows.Forms.Design.EventHandlerService.FocusWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)
  id: GetHandler(System.Type)
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: GetHandler(Type)
  nameWithType: EventHandlerService.GetHandler(Type)
  fullName: System.Windows.Forms.Design.EventHandlerService.GetHandler(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "Hiermee haalt u de momenteel actieve gebeurtenis-handler van het opgegeven type."
  remarks: "U moet deze waarde nooit cache omdat andere onderdelen zijn beschikbaar om deze te wijzigen. Deze aanroep is echter vrij snel met name voor gevallen wanneer u altijd voor de handler van hetzelfde type vragen."
  syntax:
    content: public object GetHandler (Type handlerType);
    parameters:
    - id: handlerType
      type: System.Type
      description: "Het type van de handler om op te halen."
    return:
      type: System.Object
      description: "Een exemplaar van de handler of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen handler van het aangevraagde type is."
  overload: System.Windows.Forms.Design.EventHandlerService.GetHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)
  id: PopHandler(System.Object)
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: PopHandler(Object)
  nameWithType: EventHandlerService.PopHandler(Object)
  fullName: System.Windows.Forms.Design.EventHandlerService.PopHandler(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "De opgegeven handler op de stack verschijnt."
  remarks: "Als de handler niet het bovenste onderdeel op de stack is, wordt dit alle handlers tot aan en inclusief handler uitklappictogram."
  syntax:
    content: public void PopHandler (object handler);
    parameters:
    - id: handler
      type: System.Object
      description: "De handler om te verwijderen uit de stack."
  overload: System.Windows.Forms.Design.EventHandlerService.PopHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)
  id: PushHandler(System.Object)
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: PushHandler(Object)
  nameWithType: EventHandlerService.PushHandler(Object)
  fullName: System.Windows.Forms.Design.EventHandlerService.PushHandler(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "Een nieuwe gebeurtenis-handler duwt op de stack."
  remarks: "Deze handler wordt gebruikt door alle onderdelen die aanvragen van een compatibel handler-type. Als het aangevraagde type wordt niet ondersteund door deze handler, kunt u de volgende handler op de stack wordt gebruikt."
  syntax:
    content: public void PushHandler (object handler);
    parameters:
    - id: handler
      type: System.Object
      description: "De handler toevoegen aan de stack."
  overload: System.Windows.Forms.Design.EventHandlerService.PushHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: EventHandlerService(Control)
  nameWithType: EventHandlerService.EventHandlerService(Control)
  fullName: System.Windows.Forms.Design.EventHandlerService.EventHandlerService(Control)
- uid: System.Windows.Forms.Control
  parent: System.Windows.Forms
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Windows.Forms.Control
- uid: System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: EventHandlerChanged
  nameWithType: EventHandlerService.EventHandlerChanged
  fullName: System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.Design.EventHandlerService.FocusWindow
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: FocusWindow
  nameWithType: EventHandlerService.FocusWindow
  fullName: System.Windows.Forms.Design.EventHandlerService.FocusWindow
- uid: System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: GetHandler(Type)
  nameWithType: EventHandlerService.GetHandler(Type)
  fullName: System.Windows.Forms.Design.EventHandlerService.GetHandler(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: PopHandler(Object)
  nameWithType: EventHandlerService.PopHandler(Object)
  fullName: System.Windows.Forms.Design.EventHandlerService.PopHandler(Object)
- uid: System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: PushHandler(Object)
  nameWithType: EventHandlerService.PushHandler(Object)
  fullName: System.Windows.Forms.Design.EventHandlerService.PushHandler(Object)
- uid: System.Windows.Forms.Design.EventHandlerService.#ctor*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: EventHandlerService
  nameWithType: EventHandlerService.EventHandlerService
- uid: System.Windows.Forms.Design.EventHandlerService.FocusWindow*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: FocusWindow
  nameWithType: EventHandlerService.FocusWindow
- uid: System.Windows.Forms.Design.EventHandlerService.GetHandler*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: GetHandler
  nameWithType: EventHandlerService.GetHandler
- uid: System.Windows.Forms.Design.EventHandlerService.PopHandler*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: PopHandler
  nameWithType: EventHandlerService.PopHandler
- uid: System.Windows.Forms.Design.EventHandlerService.PushHandler*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: PushHandler
  nameWithType: EventHandlerService.PushHandler
