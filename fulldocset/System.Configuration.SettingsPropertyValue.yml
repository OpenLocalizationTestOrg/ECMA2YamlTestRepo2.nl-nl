### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsPropertyValue
  id: SettingsPropertyValue
  children:
  - System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)
  - System.Configuration.SettingsPropertyValue.Deserialized
  - System.Configuration.SettingsPropertyValue.IsDirty
  - System.Configuration.SettingsPropertyValue.Name
  - System.Configuration.SettingsPropertyValue.Property
  - System.Configuration.SettingsPropertyValue.PropertyValue
  - System.Configuration.SettingsPropertyValue.SerializedValue
  - System.Configuration.SettingsPropertyValue.UsingDefaultValue
  langs:
  - csharp
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue
  fullName: System.Configuration.SettingsPropertyValue
  type: Class
  summary: "Bevat de waarde van een eigenschap voor instellingen die kan worden geladen en opgeslagen door een exemplaar van <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref>."
  remarks: "Een klasse-weergave van de werkelijke hoeveelheid profielgegevens. Een <xref:System.Configuration.SettingsProperty>exemplaar beschrijft een waarde die is opgeslagen in een exemplaar van een object SettingsPropertyValue.</xref:System.Configuration.SettingsProperty>"
  syntax:
    content: public class SettingsPropertyValue
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)
  id: '#ctor(System.Configuration.SettingsProperty)'
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: SettingsPropertyValue(SettingsProperty)
  nameWithType: SettingsPropertyValue.SettingsPropertyValue(SettingsProperty)
  fullName: System.Configuration.SettingsPropertyValue.SettingsPropertyValue(SettingsProperty)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> klasse, op basis van de opgegeven parameters."
  remarks: "> [!IMPORTANT]> Aanroepen van deze methode met niet-vertrouwde gegevens vormt een beveiligingsrisico. Deze methode alleen met vertrouwde aanroepen. Zie voor meer informatie [niet-vertrouwde gegevens beveiligingsrisico&quot;s](http://go.microsoft.com/fwlink/?LinkId=330378).       De <xref:System.Configuration.SettingsProperty>object bevat informatie over de waarde die is opgeslagen door de <xref:System.Configuration.SettingsPropertyValue>object.</xref:System.Configuration.SettingsPropertyValue> </xref:System.Configuration.SettingsProperty>"
  syntax:
    content: public SettingsPropertyValue (System.Configuration.SettingsProperty property);
    parameters:
    - id: property
      type: System.Configuration.SettingsProperty
      description: "Hiermee geeft u een <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> object."
  overload: System.Configuration.SettingsPropertyValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsPropertyValue.Deserialized
  id: Deserialized
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: Deserialized
  nameWithType: SettingsPropertyValue.Deserialized
  fullName: System.Configuration.SettingsPropertyValue.Deserialized
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Opgehaald of ingesteld of de waarde van een <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> object gedeserialiseerd."
  remarks: "Deserialisatie van eigenschapswaarden wordt alleen uitgevoerd op aanvraag."
  syntax:
    content: public bool Deserialized { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarde van een <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> object is gedeserialiseerd, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SettingsPropertyValue.Deserialized*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsPropertyValue.IsDirty
  id: IsDirty
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: IsDirty
  nameWithType: SettingsPropertyValue.IsDirty
  fullName: System.Configuration.SettingsPropertyValue.IsDirty
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Opgehaald of ingesteld of de waarde van een <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> -object is gewijzigd."
  remarks: "De eigenschap IsDirty geeft aan dat de waarde die is opgeslagen door deze klasse is gewijzigd. De standaardwaarde is `false`. De eigenschap IsDirty is ingesteld op `true` in de volgende situaties: 1.  De waarde in de <xref:System.Configuration.SettingsPropertyValue>object wordt gewijzigd.</xref:System.Configuration.SettingsPropertyValue>      2.  De waarde in de <xref:System.Configuration.SettingsPropertyValue>-object wordt geopend en de waarde is geen tekenreeks of een primitief type, zoals `int`, `float`, `real`, of `DateTime`.</xref:System.Configuration.SettingsPropertyValue> Wanneer de waarde wordt beheerd door een <xref:System.Configuration.SettingsPropertyValue>-object is een complex type zijn (bijvoorbeeld een <xref:System.Collections.ArrayList>), is er geen manier voor een <xref:System.Configuration.SettingsPropertyValue>object om te detecteren wanneer wijzigingen zijn aangebracht.</xref:System.Configuration.SettingsPropertyValue> </xref:System.Collections.ArrayList> </xref:System.Configuration.SettingsPropertyValue> Als gevolg hiervan de <xref:System.Configuration.SettingsPropertyValue>object volledig wordt ervan uitgegaan dat een complex type niet-weggeschreven zodra deze zijn geopend vanuit de <xref:System.Configuration.SettingsPropertyValue.PropertyValue%2A>eigenschap.</xref:System.Configuration.SettingsPropertyValue.PropertyValue%2A> </xref:System.Configuration.SettingsPropertyValue>"
  syntax:
    content: public bool IsDirty { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarde van een <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> -object is gewijzigd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SettingsPropertyValue.IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsPropertyValue.Name
  id: Name
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: Name
  nameWithType: SettingsPropertyValue.Name
  fullName: System.Configuration.SettingsPropertyValue.Name
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Hiermee wordt de naam van de eigenschap van het bijbehorende <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> object."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "De naam van de <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> object."
  overload: System.Configuration.SettingsPropertyValue.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsPropertyValue.Property
  id: Property
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: Property
  nameWithType: SettingsPropertyValue.Property
  fullName: System.Configuration.SettingsPropertyValue.Property
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Haalt de <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> object."
  syntax:
    content: public System.Configuration.SettingsProperty Property { get; }
    return:
      type: System.Configuration.SettingsProperty
      description: "De <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> object die worden beschreven de <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> object."
  overload: System.Configuration.SettingsPropertyValue.Property*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsPropertyValue.PropertyValue
  id: PropertyValue
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: PropertyValue
  nameWithType: SettingsPropertyValue.PropertyValue
  fullName: System.Configuration.SettingsPropertyValue.PropertyValue
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Opgehaald of ingesteld van de waarde van de <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> object."
  syntax:
    content: public object PropertyValue { get; set; }
    return:
      type: System.Object
      description: "De waarde van de <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> object. Wanneer deze waarde is ingesteld, de <> </> *> eigenschap is ingesteld op <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> en <> </> *> is ingesteld op <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       Wanneer een waarde voor het eerst uit de eigenschap PropertyValue is geopend, en als de waarde in eerste instantie is opgeslagen in de <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> object als een geserialiseerde weergave met de <> </> *> eigenschap, de eigenschap PropertyValue deserialisatie van de onderliggende waarde wordt geactiveerd.  Als een neveneffect de <> </> *> eigenschap wordt ingesteld op <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.       Als deze keten van gebeurtenissen in ASP.NET optreedt, en als een fout optreedt tijdens de deserialisatie, wordt de fout vastgelegd met behulp van de functie health monitoring van ASP.NET. Dit betekent dat deserialisatie fouten worden weergegeven in het gebeurtenislogboek van toepassing bij uitvoering onder ASP.NET standaard. Als dit proces vindt plaats buiten ASP.NET, en als er een fout optreedt tijdens de deserialisatie, de fout wordt onderdrukt en de rest van de logica tijdens de deserialisatie optreedt. Als er geen geserialiseerde waarde te deserialiseren wanneer het deserialiseren wordt uitgevoerd, klikt u vervolgens <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> object in plaats daarvan wordt geprobeerd een standaardwaarde retourneren als dat is geconfigureerd zoals is gedefinieerd in het bijbehorende <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> exemplaar. In dit geval als de <> </> *> eigenschap is ingesteld op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, of op de tekenreeks &quot;[null]&quot;, wordt de <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> object wordt de eigenschap PropertyValue te initialiseren <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> voor verwijzingstypen of op de standaardwaarde voor de gekoppelde waarde-type.  Aan de andere kant als <> </> *> eigenschap bevat een geldig object verwijzing of string-waarde (anders dan &quot;[null]&quot;), wordt de <> </> *> eigenschap geretourneerd.       Er is geen geserialiseerde waarde voor het deserialiseren van bij het deserialiseren wordt uitgevoerd en geen standaardwaarde is opgegeven, wordt een lege tekenreeks worden geretourneerd voor tekenreekstypen. Voor alle andere typen, een standaardexemplaar worden geretourneerd door het aanroepen van <> </> *>: voor dit betekent dat een poging gedaan om te maken van een exemplaar van het object met behulp van de standaardconstructor van het type verwijzing.  Als dit niet, klikt u vervolgens lukt <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> wordt geretourneerd."
  overload: System.Configuration.SettingsPropertyValue.PropertyValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Bij het gebruik van de standaardwaarde van de <> </> *> is een fout opgetreden in de eigenschap.  Ofwel de poging om te converteren <> </> *> kan niet de eigenschap naar een geldig type of de resulterende waarde is niet compatibel met het type dat is gedefinieerd door <xref:System.Configuration.SettingsProperty.PropertyType*>.</xref:System.Configuration.SettingsProperty.PropertyType*>"
  platform:
  - net462
- uid: System.Configuration.SettingsPropertyValue.SerializedValue
  id: SerializedValue
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: SerializedValue
  nameWithType: SettingsPropertyValue.SerializedValue
  fullName: System.Configuration.SettingsPropertyValue.SerializedValue
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Opgehaald of ingesteld van de geserialiseerde waarde van de <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> object."
  remarks: "Als de <xref:System.Configuration.SettingsPropertyValue>exemplaar gedetecteerd dat de <xref:System.Configuration.SettingsPropertyValue.PropertyValue%2A>eigenschap is gewijzigd sinds de laatste keer dat de eigenschap SerializedValue is aangeroepen, treden er <xref:System.Configuration.SettingsPropertyValue.PropertyValue%2A>eigenschap moet worden geconverteerd naar de geserialiseerde representatie.</xref:System.Configuration.SettingsPropertyValue.PropertyValue%2A> </xref:System.Configuration.SettingsPropertyValue.PropertyValue%2A> </xref:System.Configuration.SettingsPropertyValue> Het specifieke serialisatiemechanisme moet worden gebruikt, wordt gedefinieerd door de <xref:System.Configuration.SettingsProperty.SerializeAs%2A>-eigenschap op de <xref:System.Configuration.SettingsProperty>exemplaar die zijn gekoppeld aan de <xref:System.Configuration.SettingsPropertyValue>exemplaar.</xref:System.Configuration.SettingsPropertyValue> </xref:System.Configuration.SettingsProperty> </xref:System.Configuration.SettingsProperty.SerializeAs%2A> De huidige ondersteunde serialisatie-opties zijn voor het object niet converteren naar een tekenreeks met een tekenreeks-type-conversieprogramma, serialiseren met behulp van de <xref:System.Xml.Serialization.XmlSerializer>, of uit te voeren binaire serialisatie.</xref:System.Xml.Serialization.XmlSerializer>      > [!NOTE] > De onderliggende objectserializers uitzonderingen kunnen genereren tijdens de serialisatie.       De onmiddellijke aanroeper-code vereist de <xref:System.Security.Permissions.SecurityPermissionFlag>machtiging (een van de machtigingen die beschikbaar zijn als onderdeel van <xref:System.Security.Permissions.SecurityPermission>) voor het aanroepen van de getter of setter van deze eigenschap.</xref:System.Security.Permissions.SecurityPermission> </xref:System.Security.Permissions.SecurityPermissionFlag>  Deze machtiging wordt afgedwongen met een <xref:System.Security.Permissions.SecurityAction>opsommingswaarde.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public object SerializedValue { get; set; }
    return:
      type: System.Object
      description: "De geserialiseerde waarde van een <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> object."
  overload: System.Configuration.SettingsPropertyValue.SerializedValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De serialisatie-opties voor de eigenschap aangegeven dat het gebruik van een tekenreeks-type-conversieprogramma, maar er is geen type-conversieprogramma beschikbaar."
  platform:
  - net462
- uid: System.Configuration.SettingsPropertyValue.UsingDefaultValue
  id: UsingDefaultValue
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: UsingDefaultValue
  nameWithType: SettingsPropertyValue.UsingDefaultValue
  fullName: System.Configuration.SettingsPropertyValue.UsingDefaultValue
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Haalt een Booleaanse waarde die aangeeft of de waarde van de <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> object is de standaardwaarde zoals gedefinieerd door de <xref:System.Configuration.SettingsProperty.DefaultValue*>waarde van de gekoppelde eigenschap <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> object.</xref:System.Configuration.SettingsProperty.DefaultValue*>"
  syntax:
    content: public bool UsingDefaultValue { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarde van de <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> object, de standaardwaarde is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SettingsPropertyValue.UsingDefaultValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: SettingsPropertyValue(SettingsProperty)
  nameWithType: SettingsPropertyValue.SettingsPropertyValue(SettingsProperty)
  fullName: System.Configuration.SettingsPropertyValue.SettingsPropertyValue(SettingsProperty)
- uid: System.Configuration.SettingsProperty
  parent: System.Configuration
  isExternal: false
  name: SettingsProperty
  nameWithType: SettingsProperty
  fullName: System.Configuration.SettingsProperty
- uid: System.Configuration.SettingsPropertyValue.Deserialized
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: Deserialized
  nameWithType: SettingsPropertyValue.Deserialized
  fullName: System.Configuration.SettingsPropertyValue.Deserialized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.SettingsPropertyValue.IsDirty
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: IsDirty
  nameWithType: SettingsPropertyValue.IsDirty
  fullName: System.Configuration.SettingsPropertyValue.IsDirty
- uid: System.Configuration.SettingsPropertyValue.Name
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: Name
  nameWithType: SettingsPropertyValue.Name
  fullName: System.Configuration.SettingsPropertyValue.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.SettingsPropertyValue.Property
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: Property
  nameWithType: SettingsPropertyValue.Property
  fullName: System.Configuration.SettingsPropertyValue.Property
- uid: System.Configuration.SettingsPropertyValue.PropertyValue
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: PropertyValue
  nameWithType: SettingsPropertyValue.PropertyValue
  fullName: System.Configuration.SettingsPropertyValue.PropertyValue
- uid: System.Configuration.SettingsPropertyValue.SerializedValue
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: SerializedValue
  nameWithType: SettingsPropertyValue.SerializedValue
  fullName: System.Configuration.SettingsPropertyValue.SerializedValue
- uid: System.Configuration.SettingsPropertyValue.UsingDefaultValue
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: UsingDefaultValue
  nameWithType: SettingsPropertyValue.UsingDefaultValue
  fullName: System.Configuration.SettingsPropertyValue.UsingDefaultValue
- uid: System.Configuration.SettingsPropertyValue.#ctor*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue.SettingsPropertyValue
- uid: System.Configuration.SettingsPropertyValue.Deserialized*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: Deserialized
  nameWithType: SettingsPropertyValue.Deserialized
- uid: System.Configuration.SettingsPropertyValue.IsDirty*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: IsDirty
  nameWithType: SettingsPropertyValue.IsDirty
- uid: System.Configuration.SettingsPropertyValue.Name*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: Name
  nameWithType: SettingsPropertyValue.Name
- uid: System.Configuration.SettingsPropertyValue.Property*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: Property
  nameWithType: SettingsPropertyValue.Property
- uid: System.Configuration.SettingsPropertyValue.PropertyValue*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: PropertyValue
  nameWithType: SettingsPropertyValue.PropertyValue
- uid: System.Configuration.SettingsPropertyValue.SerializedValue*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: SerializedValue
  nameWithType: SettingsPropertyValue.SerializedValue
- uid: System.Configuration.SettingsPropertyValue.UsingDefaultValue*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: UsingDefaultValue
  nameWithType: SettingsPropertyValue.UsingDefaultValue
