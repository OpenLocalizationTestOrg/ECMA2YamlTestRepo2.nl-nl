### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Services.ModelService
  id: ModelService
  children:
  - System.Activities.Presentation.Services.ModelService.#ctor
  - System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)
  - System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])
  - System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)
  - System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})
  - System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)
  - System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)
  - System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)
  - System.Activities.Presentation.Services.ModelService.ModelChanged
  - System.Activities.Presentation.Services.ModelService.Root
  langs:
  - csharp
  name: ModelService
  nameWithType: ModelService
  fullName: System.Activities.Presentation.Services.ModelService
  type: Class
  summary: "Deze klasse is het belangrijkste toegangspunt dat gebruikmaakt van de ontwerpfunctie om te communiceren met het model."
  remarks: "De service heeft een splitsing tussen openbare en beveiligde methoden die u bij het maken van een afgeleide klasse moet implementeren. Openbare methoden zijn aanroepbare voor iedereen. Beveiligde methoden worden aangeroepen door het model."
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public abstract class ModelService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: ModelService()
  nameWithType: ModelService.ModelService()
  fullName: System.Activities.Presentation.Services.ModelService.ModelService()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "Maakt een nieuw <xref href=&quot;System.Activities.Presentation.Services.ModelService&quot;> </xref>."
  syntax:
    content: protected ModelService ();
    parameters: []
  overload: System.Activities.Presentation.Services.ModelService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)
  id: CreateItem(System.Object)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: CreateItem(Object)
  nameWithType: ModelService.CreateItem(Object)
  fullName: System.Activities.Presentation.Services.ModelService.CreateItem(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "Een bestaand exemplaar neemt en maakt u een modelitem dat een grondige kloon van het exemplaar."
  syntax:
    content: protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (object item);
    parameters:
    - id: item
      type: System.Object
      description: "Het item klonen en verpakken."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Retourneert een nieuw gemaakte <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> die een kloon van het bestaande item."
  overload: System.Activities.Presentation.Services.ModelService.CreateItem*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])
  id: CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: CreateItem(Type,CreateOptions,Object[])
  nameWithType: ModelService.CreateItem(Type,CreateOptions,Object[])
  fullName: System.Activities.Presentation.Services.ModelService.CreateItem(Type,CreateOptions,Object[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "Maakt een <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> voor een bepaald type. Deze methode wordt aangeroepen door <xref href=&quot;System.Activities.Presentation.Model.ModelFactory&quot;> </xref> wanneer de gebruiker wil een nieuw item maken."
  syntax:
    content: protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (Type itemType, System.Activities.Presentation.Model.CreateOptions options, object[] arguments);
    parameters:
    - id: itemType
      type: System.Type
      description: "Het type van item maken."
    - id: options
      type: System.Activities.Presentation.Model.CreateOptions
      description: "Opties voor het maken. U kunt opgeven of u dat wilt de standaardwaarden voor een artikel te initialiseren."
    - id: arguments
      type: System.Object[]
      description: "Een matrix met argumenten voor de constructor van het item."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Retourneert het zojuist gemaakte <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>."
  overload: System.Activities.Presentation.Services.ModelService.CreateItem*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)
  id: CreateStaticMemberItem(System.Type,System.String)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: CreateStaticMemberItem(Type,String)
  nameWithType: ModelService.CreateStaticMemberItem(Type,String)
  fullName: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(Type,String)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "Maakt een nieuw modelitem waarmee de waarde van een statisch lid van de opgegeven klasse."
  remarks: "Bijvoorbeeld een verwijzing naar `Brushes.Red` deze methode met het model niet aanroepen `typeof(Brushes)` en de tekenreeks &quot;Red&quot; als parameters. Hiermee worden geserialiseerd in XAML als `{x:Static Brushes.Red}`."
  syntax:
    content: protected abstract System.Activities.Presentation.Model.ModelItem CreateStaticMemberItem (Type type, string memberName);
    parameters:
    - id: type
      type: System.Type
      description: "Het type dat het statische lid waarnaar wordt verwezen bevat."
    - id: memberName
      type: System.String
      description: "De naam van het statische lid waarnaar wordt verwezen."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returns <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>."
  overload: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})
  id: Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: Find(ModelItem,Predicate<Type>)
  nameWithType: ModelService.Find(ModelItem,Predicate<Type>)
  fullName: System.Activities.Presentation.Services.ModelService.Find(ModelItem,Predicate<Type>)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "Overeenkomende model-items zoeken krijgt een beginpunt waaruit u wilt zoeken."
  remarks: "Alle leidt zijn recursieve."
  syntax:
    content: public abstract System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem> Find (System.Activities.Presentation.Model.ModelItem startingItem, Predicate<Type> match);
    parameters:
    - id: startingItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "De <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> waaruit u wilt beginnen met zoeken. Items boven dit item wordt genegeerd. Dit object en elk item in de hiÃ«rarchie worden opgenomen in de zoekopdracht. Als deze waarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref:System.Activities.Presentation.Services.ModelService.Root*>in plaats daarvan wordt gebruikt.</xref:System.Activities.Presentation.Services.ModelService.Root*>"
    - id: match
      type: System.Predicate{System.Type}
      description: "Een predikaat waarmee complexe typen die overeenkomt met die moet worden gebruikt. Deze methode wordt alle items die overeenkomen met het predicaat binnen het bereik van de gegeven bovenliggende opsommen."
    return:
      type: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
      description: "Retourneert een &lt;xref:System.Collections.Generic.IEnumerable%601&gt; die alle model-items die overeenkomen met de query bevat."
  overload: System.Activities.Presentation.Services.ModelService.Find*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>match</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)
  id: Find(System.Activities.Presentation.Model.ModelItem,System.Type)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: Find(ModelItem,Type)
  nameWithType: ModelService.Find(ModelItem,Type)
  fullName: System.Activities.Presentation.Services.ModelService.Find(ModelItem,Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "Overeenkomende model-items zoeken krijgt een beginpunt waaruit u wilt zoeken."
  remarks: "Alle leidt zijn recursieve."
  syntax:
    content: public abstract System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem> Find (System.Activities.Presentation.Model.ModelItem startingItem, Type type);
    parameters:
    - id: startingItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "De <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> waaruit u wilt beginnen met zoeken. Items boven dit item wordt genegeerd. Dit object en elk item in de hiÃ«rarchie worden opgenomen in de zoekopdracht. Als deze waarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref:System.Activities.Presentation.Services.ModelService.Root*>in plaats daarvan wordt gebruikt.</xref:System.Activities.Presentation.Services.ModelService.Root*>"
    - id: type
      type: System.Type
      description: "De <xref:System.Type>van het object te vinden.</xref:System.Type> Deze methode geeft een lijst van alle items binnen het bereik van de gegeven bovenliggende van het aangevraagde type."
    return:
      type: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
      description: "Retourneert een &lt;xref:System.Collections.Generic.IEnumerable%601&gt; die alle model-items die overeenkomen met de query bevat."
  overload: System.Activities.Presentation.Services.ModelService.Find*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)
  id: FromName(System.Activities.Presentation.Model.ModelItem,System.String)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: FromName(ModelItem,String)
  nameWithType: ModelService.FromName(ModelItem,String)
  fullName: System.Activities.Presentation.Services.ModelService.FromName(ModelItem,String)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "Zoekt naar de <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> in het opgegeven bereik met de opgegeven naam."
  syntax:
    content: public System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name);
    parameters:
    - id: scope
      type: System.Activities.Presentation.Model.ModelItem
      description: "Een optionele scope om te bieden. Als het bereik niet is opgegeven, <xref:System.Activities.Presentation.Services.ModelService.Root*>wordt gebruikt als bereik.</xref:System.Activities.Presentation.Services.ModelService.Root*> Als het bereik is opgegeven, het dichtstbijzijnde <xref:System.Windows.Markup.INameScope>in de hiÃ«rarchie wordt gebruikt voor het item te zoeken.</xref:System.Windows.Markup.INameScope>"
    - id: name
      type: System.String
      description: "De naam vinden."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Retourneert een <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> waarvan de naam overeenkomt met <code> name </code>, of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen overeenkomst is gevonden."
  overload: System.Activities.Presentation.Services.ModelService.FromName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)
  id: FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: FromName(ModelItem,String,StringComparison)
  nameWithType: ModelService.FromName(ModelItem,String,StringComparison)
  fullName: System.Activities.Presentation.Services.ModelService.FromName(ModelItem,String,StringComparison)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "Zoekt naar de <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> in het opgegeven bereik met de opgegeven naam."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name, StringComparison comparison);
    parameters:
    - id: scope
      type: System.Activities.Presentation.Model.ModelItem
      description: "Een optionele scope om te bieden. Als het bereik niet is opgegeven, <xref:System.Activities.Presentation.Services.ModelService.Root*>wordt gebruikt als bereik.</xref:System.Activities.Presentation.Services.ModelService.Root*> Als het bereik is opgegeven, het dichtstbijzijnde <xref:System.Windows.Markup.INameScope>in de hiÃ«rarchie wordt gebruikt voor het item te zoeken.</xref:System.Windows.Markup.INameScope>"
    - id: name
      type: System.String
      description: "De naam vinden."
    - id: comparison
      type: System.StringComparison
      description: "Hiermee wordt bepaald hoe de naam moet worden vergeleken. De standaardwaarde is om te kunnen vergelijken rangtelwoord."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Retourneert een <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> waarvan de naam overeenkomt met <code> name </code>, of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen overeenkomst is gevonden."
  overload: System.Activities.Presentation.Services.ModelService.FromName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.ModelChanged
  id: ModelChanged
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: ModelChanged
  nameWithType: ModelService.ModelChanged
  fullName: System.Activities.Presentation.Services.ModelService.ModelChanged
  type: Event
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "Deze gebeurtenis treedt op wanneer er iets in het model is gewijzigd."
  remarks: "De gebeurtenisargumenten kunnen in het logboek worden gebruikt om te zoeken wat is er gewijzigd."
  syntax:
    content: public abstract event EventHandler<System.Activities.Presentation.Services.ModelChangedEventArgs> ModelChanged;
    return:
      type: System.EventHandler{System.Activities.Presentation.Services.ModelChangedEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.Root
  id: Root
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: Root
  nameWithType: ModelService.Root
  fullName: System.Activities.Presentation.Services.ModelService.Root
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "De hoofdmap van de objecthiÃ«rarchie."
  remarks: "Voor lineaire slaat is de hoofdmap het eerste object in de store. Hiermee wordt het bovenste knooppunt van de boomstructuur bij winkels die een structuur van objecten vertegenwoordigen."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem Root { get; }
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Retourneert de hoofdmap van de modelhiÃ«rarchie als een <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>."
  overload: System.Activities.Presentation.Services.ModelService.Root*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Activities.Presentation.Services.ModelService.#ctor
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: ModelService()
  nameWithType: ModelService.ModelService()
  fullName: System.Activities.Presentation.Services.ModelService.ModelService()
- uid: System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateItem(Object)
  nameWithType: ModelService.CreateItem(Object)
  fullName: System.Activities.Presentation.Services.ModelService.CreateItem(Object)
- uid: System.Activities.Presentation.Model.ModelItem
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
- uid: System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateItem(Type,CreateOptions,Object[])
  nameWithType: ModelService.CreateItem(Type,CreateOptions,Object[])
  fullName: System.Activities.Presentation.Services.ModelService.CreateItem(Type,CreateOptions,Object[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Model.CreateOptions
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: CreateOptions
  nameWithType: CreateOptions
  fullName: System.Activities.Presentation.Model.CreateOptions
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateStaticMemberItem(Type,String)
  nameWithType: ModelService.CreateStaticMemberItem(Type,String)
  fullName: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(Type,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Find(ModelItem,Predicate<Type>)
  nameWithType: ModelService.Find(ModelItem,Predicate<Type>)
  fullName: System.Activities.Presentation.Services.ModelService.Find(ModelItem,Predicate<Type>)
- uid: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ModelItem>
  nameWithType: IEnumerable<ModelItem>
  fullName: System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Activities.Presentation.Model.ModelItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Predicate{System.Type}
  parent: System
  isExternal: true
  name: Predicate<Type>
  nameWithType: Predicate<Type>
  fullName: System.Predicate<System.Type>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: Predicate<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Find(ModelItem,Type)
  nameWithType: ModelService.Find(ModelItem,Type)
  fullName: System.Activities.Presentation.Services.ModelService.Find(ModelItem,Type)
- uid: System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: FromName(ModelItem,String)
  nameWithType: ModelService.FromName(ModelItem,String)
  fullName: System.Activities.Presentation.Services.ModelService.FromName(ModelItem,String)
- uid: System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: FromName(ModelItem,String,StringComparison)
  nameWithType: ModelService.FromName(ModelItem,String,StringComparison)
  fullName: System.Activities.Presentation.Services.ModelService.FromName(ModelItem,String,StringComparison)
- uid: System.StringComparison
  parent: System
  isExternal: true
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: System.Activities.Presentation.Services.ModelService.ModelChanged
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: ModelChanged
  nameWithType: ModelService.ModelChanged
  fullName: System.Activities.Presentation.Services.ModelService.ModelChanged
- uid: System.EventHandler{System.Activities.Presentation.Services.ModelChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ModelChangedEventArgs>
  nameWithType: EventHandler<ModelChangedEventArgs>
  fullName: System.EventHandler<System.Activities.Presentation.Services.ModelChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Activities.Presentation.Services.ModelChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Services.ModelChangedEventArgs
    name: ModelChangedEventArgs
    nameWithType: ModelChangedEventArgs
    fullName: ModelChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.Services.ModelService.Root
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Root
  nameWithType: ModelService.Root
  fullName: System.Activities.Presentation.Services.ModelService.Root
- uid: System.Activities.Presentation.Services.ModelService.#ctor*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: ModelService
  nameWithType: ModelService.ModelService
- uid: System.Activities.Presentation.Services.ModelService.CreateItem*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateItem
  nameWithType: ModelService.CreateItem
- uid: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateStaticMemberItem
  nameWithType: ModelService.CreateStaticMemberItem
- uid: System.Activities.Presentation.Services.ModelService.Find*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Find
  nameWithType: ModelService.Find
- uid: System.Activities.Presentation.Services.ModelService.FromName*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: FromName
  nameWithType: ModelService.FromName
- uid: System.Activities.Presentation.Services.ModelService.Root*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Root
  nameWithType: ModelService.Root
