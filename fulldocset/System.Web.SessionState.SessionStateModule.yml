### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateModule
  id: SessionStateModule
  children:
  - System.Web.SessionState.SessionStateModule.#ctor
  - System.Web.SessionState.SessionStateModule.Dispose
  - System.Web.SessionState.SessionStateModule.End
  - System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  - System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateModule.Start
  langs:
  - csharp
  name: SessionStateModule
  nameWithType: SessionStateModule
  fullName: System.Web.SessionState.SessionStateModule
  type: Class
  summary: "Sessiestatus services biedt voor een toepassing. Deze klasse kan niet worden overgenomen."
  remarks: "SessionStateModule is ASP. De NET standaard sessiestatus handler. Sessiegegevens naar wordt geschreven en opgehaald uit de sessiestatus store en verhoogt de **Session_OnStart** en **Session_OnEnd** gebeurtenissen. Zie voor meer informatie over het gebruik van ASP.NET-sessiestatus opslaan en ophalen van waarden voor een gebruikerssessie [overzicht van ASP.NET-sessiestatus](~/add/includes/ajax-current-ext-md.md).       U kunt de SessionStateModule vervangen door een aangepaste implementatie van de <xref:System.Web.IHttpModule>interface waarmee de sessiestatus wordt beheerd.</xref:System.Web.IHttpModule> Zie voor een voorbeeld van een aangepaste module voor sessiestatus, de <xref:System.Web.SessionState.SessionStateUtility>overzicht van de klasse.</xref:System.Web.SessionState.SessionStateUtility>"
  syntax:
    content: 'public sealed class SessionStateModule : System.Web.SessionState.ISessionStateModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.SessionState.ISessionStateModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: SessionStateModule()
  nameWithType: SessionStateModule.SessionStateModule()
  fullName: System.Web.SessionState.SessionStateModule.SessionStateModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> klasse."
  remarks: "Deze constructor is niet bedoeld om te worden aangeroepen vanuit de toepassingscode.       Een <xref:System.Web.HttpApplication>object wordt gemaakt wanneer u een ASP.NET-toepassing is gestart.</xref:System.Web.HttpApplication> De <xref:System.Web.HttpApplication>aanroepen object de <xref:System.Web.SessionState.SessionStateModule>constructor voor het maken van de <xref:System.Web.SessionState.SessionStateModule>object voor de toepassing.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> De <xref:System.Web.SessionState.SessionStateModule>is opgegeven in de configuratie voor een toepassing.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public SessionStateModule ();
    parameters: []
  overload: System.Web.SessionState.SessionStateModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Dispose
  id: Dispose
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: SessionStateModule.Dispose()
  fullName: System.Web.SessionState.SessionStateModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Voert laatste opschoning code voordat de <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> object uit het geheugen wordt vrijgegeven."
  remarks: "Deze methode is niet bedoeld om te worden aangeroepen vanuit de toepassingscode.       Een <xref:System.Web.HttpApplication>object wordt gemaakt wanneer u een ASP.NET-toepassing is gestart.</xref:System.Web.HttpApplication> De <xref:System.Web.HttpApplication>object maakt en initialiseert de <xref:System.Web.SessionState.SessionStateModule>object voor de toepassing en de methode Dispose wordt aangeroepen wanneer het object wordt vrijgegeven.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> De <xref:System.Web.SessionState.SessionStateModule>is opgegeven in de configuratie voor een toepassing.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.SessionState.SessionStateModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.End
  id: End
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: End
  nameWithType: SessionStateModule.End
  fullName: System.Web.SessionState.SessionStateModule.End
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Treedt op wanneer een sessie wordt beëindigd."
  remarks: "De End-gebeurtenis aan het einde van een aanvraag wordt geactiveerd wanneer de <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>methode is aangeroepen of wanneer de sessie is verlopen.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Een sessie is verlopen wanneer het aantal minuten opgegeven door de <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>eigenschap zonder een aanvraag wordt gedaan voor de sessie is geslaagd.</xref:System.Web.SessionState.HttpSessionState.Timeout%2A>       De **Session_OnEnd** gebeurtenis wordt gebruikt voor het uitvoeren van een werk opschonen voor een sessie zoals verwijdering van de resources die worden gebruikt door de sessie.       U kunt een handler voor de End-gebeurtenis opgeven door een openbare subroutine met de naam toe te voegen **Session_OnEnd** naar het bestand Global.asax.      > [!NOTE] > De **Session_OnEnd** gebeurtenis wordt alleen ondersteund wanneer de sessiestatus <xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=fullName>eigenschapswaarde <xref:System.Web.SessionState.SessionStateMode>, dit is de standaardoptie.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=fullName> Als de sessiestatus <xref:System.Web.SessionState.HttpSessionState.Mode%2A>is ingesteld op <xref:System.Web.SessionState.SessionStateMode>of <xref:System.Web.SessionState.SessionStateMode>, wordt de **Session_OnEnd** gebeurtenis in het bestand Global.asax is genegeerd.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A> Als de sessiestatus <xref:System.Web.SessionState.HttpSessionState.Mode%2A>eigenschapswaarde <xref:System.Web.SessionState.SessionStateMode>, wordt ondersteund voor de **Session_OnEnd** gebeurtenis wordt bepaald door de provider aangepast sessiestatus archief.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A>       Hoewel de End-gebeurtenis openbaar is, kunt u deze alleen door een gebeurtenis-handler toe te voegen in het bestand Global.asax verwerken. Deze beperking is geïmplementeerd, omdat <xref:System.Web.HttpApplication>exemplaren opnieuw worden gebruikt voor prestaties.</xref:System.Web.HttpApplication> Wanneer de sessie is verlopen, alleen de **Session_OnEnd** gebeurtenis is opgegeven in het bestand Global.asax wordt uitgevoerd, om te voorkomen dat code aanroepen van een End-gebeurtenis-handler die zijn gekoppeld aan een <xref:System.Web.HttpApplication>-exemplaar dat is momenteel in gebruik.</xref:System.Web.HttpApplication>       Zie voor meer informatie over het bestand Global.asax [Global.asax syntaxis](http://msdn.microsoft.com/en-us/9ade9d4d-4d52-4e88-af52-53a9ffa26582)."
  example:
  - "The following code example shows the contents of a Global.asax file with the **Session_OnStart** and **Session_OnEnd** events defined.  \n  \n```vb#  \n<script language=\"VB\" runat=\"server\">  \nPublic Sub Session_OnStart()  \n  \nEnd Sub  \n  \nPublic Sub Session_OnEnd()  \n  \nEnd Sub  \n</script>  \n```  \n  \n```c#  \n<script language=\"C#\" runat=\"server\">  \npublic void Session_OnStart()  \n{  \n  \n}  \n  \npublic void Session_OnEnd()  \n{  \n  \n}  \n</script>  \n```"
  syntax:
    content: public event EventHandler End;
    return:
      type: System.EventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: SessionStateModule.Init(HttpApplication)
  fullName: System.Web.SessionState.SessionStateModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Aanroepen van de initialisatie van de code als een <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> object is gemaakt."
  remarks: "Deze methode is niet bedoeld om te worden aangeroepen vanuit de toepassingscode.       Een <xref:System.Web.HttpApplication>wordt gemaakt wanneer u een ASP.NET-toepassing is gestart.</xref:System.Web.HttpApplication> De <xref:System.Web.HttpApplication>object roept de Init-methode bij het maken van de <xref:System.Web.SessionState.SessionStateModule>object voor de toepassing.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> De <xref:System.Web.SessionState.SessionStateModule>klasse is opgegeven in de configuratie voor een toepassing.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "De huidige toepassing."
  overload: System.Web.SessionState.SessionStateModule.Init*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "De <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> kenmerk in de [sessionState Element (ASP.NET-instellingenschema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) configuratie-element is ingesteld op <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> of <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref>, en de ASP.NET-toepassing heeft minder dan <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> vertrouwen."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "De <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> kenmerk in de [sessionState Element (ASP.NET-instellingenschema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) configuratie-element is ingesteld op <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> en de <xref uid=&quot;langword_csharp_customProvider&quot; name=&quot;customProvider&quot; href=&quot;&quot;> </xref> kenmerk is leeg of bestaat niet.       - of - de <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> kenmerk in de [sessionState Element (ASP.NET-instellingenschema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) configuratie-element is ingesteld op <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> en de provider die wordt geïdentificeerd door de naam in de <xref uid=&quot;langword_csharp_customProvider&quot; name=&quot;customProvider&quot; href=&quot;&quot;> </xref> kenmerk niet is toegevoegd aan de [providers Element voor sessionState (ASP.NET-instellingenschema)](http://msdn.microsoft.com/en-us/219d6778-9fb8-48ac-810d-bec68cf7d6aa) subelement."
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  id: ReleaseSessionState(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: ReleaseSessionState(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionState(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionState(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Heft de sessiestatus voor het opgegeven <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  syntax:
    content: public void ReleaseSessionState (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "De <xref href=&quot;System.Web.HttpContext&quot;> </xref> waarvoor u om de sessiestatus release."
  overload: System.Web.SessionState.SessionStateModule.ReleaseSessionState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  id: ReleaseSessionStateAsync(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: ReleaseSessionStateAsync(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "De sessiestatus voor het opgegeven asynchroon worden vrijgegeven <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  syntax:
    content: public System.Threading.Tasks.Task ReleaseSessionStateAsync (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "De <xref href=&quot;System.Web.HttpContext&quot;> </xref> waarvoor u om de sessiestatus release."
    return:
      type: System.Threading.Tasks.Task
      description: "Een <xref:System.Threading.Tasks.Task>voor de asynchrone bewerking.</xref:System.Threading.Tasks.Task>"
  overload: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Start
  id: Start
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Start
  nameWithType: SessionStateModule.Start
  fullName: System.Web.SessionState.SessionStateModule.Start
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "De gebeurtenis die optreedt wanneer een sessie wordt gemaakt."
  remarks: "De begin-gebeurtenis wordt gestart aan het begin van een aanvraag wanneer een nieuwe sessie wordt gestart. Een nieuwe sessie wordt gestart als een aanvraag wordt gedaan die een sessie-id niet bevat, de sessie-id ongeldig is of de sessie die is gekoppeld aan een sessie-id is verlopen.       De **Session_OnStart** gebeurtenis naar het werk initialisatie uitgevoerd voor een sessie zoals het instellen van standaardwaarden voor sessievariabelen wordt gebruikt.       U kunt een handler voor de gebeurtenis Start opgeven door een openbare subroutine met de naam toe te voegen **Session_OnStart** naar het bestand Global.asax.       Zie voor meer informatie over het bestand Global.asax [Global.asax syntaxis](http://msdn.microsoft.com/en-us/9ade9d4d-4d52-4e88-af52-53a9ffa26582)."
  example:
  - "The following code example shows the contents of a Global.asax file with the **Session_OnStart** and **Session_OnEnd** events defined.  \n  \n```vb#  \n<script language=\"VB\" runat=\"server\">  \nPublic Sub Session_OnStart()  \n  \nEnd Sub  \n  \nPublic Sub Session_OnEnd()  \n  \nEnd Sub  \n</script>  \n```  \n  \n```c#  \n<script language=\"C#\" runat=\"server\">  \npublic void Session_OnStart()  \n{  \n  \n}  \n  \npublic void Session_OnEnd()  \n{  \n  \n}  \n</script>  \n```"
  syntax:
    content: public event EventHandler Start;
    return:
      type: System.EventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Web.SessionState.SessionStateModule.#ctor
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: SessionStateModule()
  nameWithType: SessionStateModule.SessionStateModule()
  fullName: System.Web.SessionState.SessionStateModule.SessionStateModule()
- uid: System.Web.SessionState.SessionStateModule.Dispose
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Dispose()
  nameWithType: SessionStateModule.Dispose()
  fullName: System.Web.SessionState.SessionStateModule.Dispose()
- uid: System.Web.SessionState.SessionStateModule.End
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: End
  nameWithType: SessionStateModule.End
  fullName: System.Web.SessionState.SessionStateModule.End
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: SessionStateModule.Init(HttpApplication)
  fullName: System.Web.SessionState.SessionStateModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionState(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionState(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionState(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionStateAsync(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(HttpContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Web.SessionState.SessionStateModule.Start
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Start
  nameWithType: SessionStateModule.Start
  fullName: System.Web.SessionState.SessionStateModule.Start
- uid: System.Web.SessionState.SessionStateModule.#ctor*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: SessionStateModule
  nameWithType: SessionStateModule.SessionStateModule
- uid: System.Web.SessionState.SessionStateModule.Dispose*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Dispose
  nameWithType: SessionStateModule.Dispose
- uid: System.Web.SessionState.SessionStateModule.Init*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Init
  nameWithType: SessionStateModule.Init
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionState
  nameWithType: SessionStateModule.ReleaseSessionState
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionStateAsync
  nameWithType: SessionStateModule.ReleaseSessionStateAsync
