### YamlMime:ManagedReference
items:
- uid: System.Net.AuthenticationManager
  id: AuthenticationManager
  children:
  - System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  - System.Net.AuthenticationManager.CredentialPolicy
  - System.Net.AuthenticationManager.CustomTargetNameDictionary
  - System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  - System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)
  - System.Net.AuthenticationManager.RegisteredModules
  - System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)
  - System.Net.AuthenticationManager.Unregister(System.String)
  langs:
  - csharp
  name: AuthenticationManager
  nameWithType: AuthenticationManager
  fullName: System.Net.AuthenticationManager
  type: Class
  summary: "De verificatiemodules aangeroepen tijdens het Clientverificatieproces beheert."
  remarks: "CustomTargetNameDictionary is een statische klasse die de verificatiemodules die gebruikmaakt van een toepassing beheert. Wanneer een aanvraag wordt gedaan voor beveiligde bronnen, het aanroepen van de AuthenticationManager de <xref:System.Net.AuthenticationManager.Authenticate%2A>methode voor het ophalen van een <xref:System.Net.Authorization>exemplaar moet worden gebruikt in de volgende aanvragen.</xref:System.Net.Authorization> </xref:System.Net.AuthenticationManager.Authenticate%2A>       De AuthenticationManager query elke geregistreerde verificatiemodule door het aanroepen van de <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName>methode voor elke module.</xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName> De eerste verificatiemodule om terug te keren een <xref:System.Net.Authorization>exemplaar wordt gebruikt voor verificatie van de aanvraag.</xref:System.Net.Authorization>       Modules die de basis, digest, negotiate, NTLM, en Kerberos-verificatietypen zijn geregistreerd bij de AuthenticationManager standaard. Aanvullende verificatiemodules die worden geïmplementeerd de <xref:System.Net.IAuthenticationModule>interface kan worden toegevoegd met de <xref:System.Net.AuthenticationManager.Register%2A>methode.</xref:System.Net.AuthenticationManager.Register%2A> </xref:System.Net.IAuthenticationModule> Verificatiemodules worden genoemd in de volgorde waarin ze zijn toegevoegd aan de lijst.      > [!NOTE] > De Kerberos en om te onderhandelen over verificatietype wordt niet ondersteund op Windows 95/98 of Windows NT 4.0."
  example:
  - >-
    [!code-cs[System.Net.Authentication#1](~/add/codesnippet/csharp/t-system.net.authenticat_0_1.cs)]
     [!code-cpp[System.Net.Authentication#1](~/add/codesnippet/cpp/t-system.net.authenticat_0_1.cpp)]
     [!code-vb[System.Net.Authentication#1](~/add/codesnippet/visualbasic/t-system.net.authenticat_0_1.vb)]
  syntax:
    content: public class AuthenticationManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  id: Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Authenticate(String,WebRequest,ICredentials)
  nameWithType: AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Elke geregistreerde verificatiemodule Ga voor de eerste module die op de verificatieaanvraag reageren kan-aanroepen."
  remarks: "De Authenticate-methodeaanroepen de <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName>methode op elke geregistreerde verificatiemodule totdat een van de module met reageert een <xref:System.Net.Authorization>exemplaar.</xref:System.Net.Authorization> </xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName>       De eerste <xref:System.Net.Authorization>exemplaar geretourneerd wordt gebruikt voor verificatie van de aanvraag.</xref:System.Net.Authorization> De Authenticate-methode retourneert als kan geen module voor verificatie de aanvraag verifiëren kan, `null`.       Verificatiemodules worden genoemd in de volgorde waarin ze zijn geregistreerd bij de <xref:System.Net.AuthenticationManager>.</xref:System.Net.AuthenticationManager>"
  syntax:
    content: public static System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);
    parameters:
    - id: challenge
      type: System.String
      description: "De uitdaging waar geretourneerd door de Internet-bron."
    - id: request
      type: System.Net.WebRequest
      description: "De <xref:System.Net.WebRequest>die de verificatievraag gestart.</xref:System.Net.WebRequest>"
    - id: credentials
      type: System.Net.ICredentials
      description: "De <xref:System.Net.ICredentials>gekoppeld aan deze aanvraag.</xref:System.Net.ICredentials>"
    return:
      type: System.Net.Authorization
      description: "Een exemplaar van de <xref href=&quot;System.Net.Authorization&quot;> </xref> klasse die het resultaat van de autorisatie bevat. Als er geen verificatiemodule om te reageren op de uitdaging waar is, wordt deze methode retourneert <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.AuthenticationManager.Authenticate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>challenge</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>request</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>credentials</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.CredentialPolicy
  id: CredentialPolicy
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: CredentialPolicy
  nameWithType: AuthenticationManager.CredentialPolicy
  fullName: System.Net.AuthenticationManager.CredentialPolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Opgehaald of ingesteld van de referentie-beleid moet worden gebruikt voor de resource-aanvragen die zijn gemaakt met behulp van de <xref:System.Net.HttpWebRequest>klasse.</xref:System.Net.HttpWebRequest>"
  remarks: "De referentie-beleid wordt bepaald of referenties verzonden bij het verzenden van een aanvraag voor een netwerk-resource, zoals de inhoud van een webpagina. Als referenties worden verzonden, worden servers waarvoor clientverificatie kunnen proberen om te verifiëren van de client wanneer de aanvraag is ontvangen in plaats van stuurt een reactie waarmee wordt aangegeven dat de referenties van de client vereist zijn. Hoewel dit een retouren naar de server opgeslagen, moet dit worden afgewogen tegen referenties niet verzenden via het netwerk zijn inherente beveiligingsrisico. Wanneer de doelserver geen clientverificatie vereist is het raadzaam te geen referenties verzendt.       De referentie-beleid wordt alleen worden opgeroepen voor aanvragen die Geef referenties op of gebruik een <xref:System.Net.WebProxy>-object dat referenties.</xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates setting the credential policy.  \n  \n [!code-cpp[NclCredPolicy#2](~/add/codesnippet/cpp/p-system.net.authenticat_1_1.cpp)]\n [!code-cs[NclCredPolicy#2](~/add/codesnippet/csharp/p-system.net.authenticat_1_1.cs)]"
  syntax:
    content: public static System.Net.ICredentialPolicy CredentialPolicy { get; set; }
    return:
      type: System.Net.ICredentialPolicy
      description: "Een object dat u implementeert de <xref href=&quot;System.Net.ICredentialPolicy&quot;> </xref> interface waarmee wordt bepaald of de referenties met aanvragen worden verzonden. De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.AuthenticationManager.CredentialPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary
  id: CustomTargetNameDictionary
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: CustomTargetNameDictionary
  nameWithType: AuthenticationManager.CustomTargetNameDictionary
  fullName: System.Net.AuthenticationManager.CustomTargetNameDictionary
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "De woordenlijst met de Service Principal Names (SPN&quot;s) die worden gebruikt voor het identificeren van hosts tijdens Kerberos-verificatie voor aanvragen die zijn gemaakt met behulp van opgehaald <xref:System.Net.WebRequest>en afgeleide klassen.</xref:System.Net.WebRequest>"
  remarks: "Een SPN is een naam waarmee een client een unieke identificatie van een exemplaar van een service of toepassing op een server voor de doeleinden van wederzijdse verificatie. Wederzijdse verificatie wordt gevraagd standaard en u kunt deze vereisen door in te stellen <xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=fullName>naar <xref:System.Net.Security.AuthenticationLevel>in uw aanvraag.</xref:System.Net.Security.AuthenticationLevel> </xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=fullName>       Wanneer een <xref:System.Net.WebRequest>wederzijdse verificatie, de SPN-naam nodig is voor het doel moet worden geleverd door de client.</xref:System.Net.WebRequest> Als u de SPN-naam weet, kunt u deze toevoegen aan de AuthenticationManager voordat de aanvraag wordt verzonden. Als u hebt geen SPN informatie toegevoegd aan deze woordenlijst de <xref:System.Net.AuthenticationManager>maakt gebruik van de <xref:System.Net.WebRequest.RequestUri%2A>methode voor het opstellen van de meest waarschijnlijke SPN; dit is echter een berekende waarde en is mogelijk onjuist.</xref:System.Net.WebRequest.RequestUri%2A> </xref:System.Net.AuthenticationManager> Als wederzijdse verificatie wordt uitgevoerd en mislukt, kunt u het woordenboek om te bepalen van de berekende SPN controleren. Er is geen SPN wordt ingevoerd in de woordenlijst als het verificatieprotocol biedt geen ondersteuning voor wederzijdse verificatie.       U kunt een SPN-waarde toevoegen aan deze woordenlijst met de <xref:System.Uri.AbsoluteUri%2A>van de <xref:System.Net.WebRequest.RequestUri%2A>Als de sleutel.</xref:System.Net.WebRequest.RequestUri%2A> </xref:System.Uri.AbsoluteUri%2A> Intern, de sleutel is afgekapt zodat de <xref:System.Uri.Scheme%2A>, <xref:System.Uri.Host%2A>, en de <xref:System.Uri.Port%2A>Als dit niet de standaard poort</xref:System.Uri.Port%2A> </xref:System.Uri.Host%2A> </xref:System.Uri.Scheme%2A>      > [!NOTE] > <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> Onbeperkte toegang tot de methoden en eigenschappen van de AuthenticationManager vereist      > [!NOTE] > Wanneer Kerberos-verificatie wordt uitgevoerd via een proxy, zowel de proxy- en de ultieme hostnaam moeten worden omgezet naar een SPN-naam. De naamomzetting van de proxy wordt beveiligd door een time-out. Omzetting van de ultieme hostnaam een SPN is een DNS-zoekopdracht vereist en er is geen time-out rechtstreeks gekoppeld aan deze bewerking. Daarom kunnen synchrone bewerkingen op out langer duren. Toevoegen van de ultieme host de voorvoegsels van URI naar de SPN-cache voordat aanvragen naar als u wilt, omzeilen.       Versie 3.5 SP1 is nu standaard ingesteld op te geven voor de hostnaam die is gebruikt in de aanvraag-URL in de SPN-naam in de authenticatie-uitwisseling van NTLM (NT LAN Manager) wanneer de eigenschap AuthenticationManager is niet ingesteld. De hostnaam die is gebruikt in de aanvraag-URL mag afwijken van de Host-header opgegeven in de <xref:System.Net.HttpRequestHeader?displayProperty=fullName>in de clientaanvraag.</xref:System.Net.HttpRequestHeader?displayProperty=fullName> De hostnaam die is gebruikt in de aanvraag-URL kan afwijken van de werkelijke hostnaam van de server, de computernaam van de server, IP-adres van de computer of het loopback-adres. In dergelijke gevallen mislukt Windows de verificatieaanvraag. Om het probleem op te lossen, mogelijk moet u kennis van Windows die de hostnaam van de gebruikt in de aanvraag-URL in de client is aanvraag (&quot;contoso&quot;, bijvoorbeeld) daadwerkelijk een alternatieve naam voor de lokale computer."
  example:
  - "The following code example demonstrates displaying the contents of the CustomTargetNameDictionary.  \n  \n [!code-cpp[NclCredPolicy#5](~/add/codesnippet/cpp/p-system.net.authenticat_0_1.cpp)]\n [!code-cs[NclCredPolicy#5](~/add/codesnippet/csharp/p-system.net.authenticat_0_1.cs)]"
  syntax:
    content: public static System.Collections.Specialized.StringDictionary CustomTargetNameDictionary { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "Een beschrijfbare <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> waarin de SPN-waarden voor sleutels van informatie over de host bestaat."
  overload: System.Net.AuthenticationManager.CustomTargetNameDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  id: PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: PreAuthenticate(WebRequest,ICredentials)
  nameWithType: AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Een aanvraag voor webtoepassingsproxy."
  remarks: "Als de verificatiemodule de aanvraag worden kan, wordt de methode PreAuthenticate retourneert een verificatie-instantie en verzendt de autorisatie-informatie naar de server optie preventief in plaats van te wachten op de resource toe aan een challenge uitgeven. Dit gedrag is beschreven in RFC 2617 sectie 3.3 (HTTP-verificatie: Basic- en Digest-verificatie voor toegang). Verificatiemodules die ondersteuning bieden voor verificatie vooraf kunnen clients de efficiëntie van de server door een extra retouren veroorzaakt door verificatiecontroles voorkomen.       Autorisatie-modules die kunnen worden ingesteld vraagt de <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=fullName>eigenschap `true`.</xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=fullName>"
  syntax:
    content: public static System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "Een <xref:System.Net.WebRequest>en een Internet-resource.</xref:System.Net.WebRequest>"
    - id: credentials
      type: System.Net.ICredentials
      description: "De <xref:System.Net.ICredentials>die zijn gekoppeld aan de aanvraag.</xref:System.Net.ICredentials>"
    return:
      type: System.Net.Authorization
      description: "Een exemplaar van de <xref href=&quot;System.Net.Authorization&quot;> </xref> klasse als de aanvraag geverifieerd, anders wordt worden kan <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. If <code>credentials</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, this method returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Net.AuthenticationManager.PreAuthenticate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>request</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)
  id: Register(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Register(IAuthenticationModule)
  nameWithType: AuthenticationManager.Register(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Register(IAuthenticationModule)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Registreert een module voor verificatie bij de verificatie-manager."
  remarks: "De registermethode authentication modules toegevoegd aan het einde van de lijst met modules aangeroepen door de <xref:System.Net.AuthenticationManager.Authenticate%2A>methode.</xref:System.Net.AuthenticationManager.Authenticate%2A> Verificatiemodules worden genoemd in de volgorde waarin ze zijn toegevoegd aan de lijst. Als een module met dezelfde <xref:System.Net.IAuthenticationModule.AuthenticationType%2A>is al geregistreerd, deze methode verwijdert u de geregistreerde module en voegt `authenticationModule` aan het einde van de lijst.</xref:System.Net.IAuthenticationModule.AuthenticationType%2A>"
  example:
  - "The following example registers an authentication module with the authentication manager. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Sockets.Authentication#2](~/add/codesnippet/csharp/m-system.net.authenticat_2_1.cs)]\n [!code-cpp[System.Net.Sockets.Authentication#2](~/add/codesnippet/cpp/m-system.net.authenticat_2_1.cpp)]\n [!code-vb[System.Net.Sockets.Authentication#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_2_1.vb)]"
  syntax:
    content: public static void Register (System.Net.IAuthenticationModule authenticationModule);
    parameters:
    - id: authenticationModule
      type: System.Net.IAuthenticationModule
      description: "De <xref href=&quot;System.Net.IAuthenticationModule&quot;> </xref> registreren bij de verificatie-manager."
  overload: System.Net.AuthenticationManager.Register*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authenticationModule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.RegisteredModules
  id: RegisteredModules
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: RegisteredModules
  nameWithType: AuthenticationManager.RegisteredModules
  fullName: System.Net.AuthenticationManager.RegisteredModules
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee wordt een lijst met verificatiemodules die zijn geregistreerd bij de verificatie-manager opgehaald."
  remarks: "De eigenschap RegisteredModules biedt een <xref:System.Collections.IEnumerator>exemplaar waarmee de lijst met geregistreerd authentication modules moeten worden gelezen.</xref:System.Collections.IEnumerator> De <xref:System.Net.AuthenticationManager.Register%2A>methode voegt modules aan de lijst, en de <xref:System.Net.AuthenticationManager.Unregister%2A>methode verwijdert modules ervan.</xref:System.Net.AuthenticationManager.Unregister%2A> </xref:System.Net.AuthenticationManager.Register%2A>"
  example:
  - "The following example uses the RegisteredModules property to get a list of authentication modules that are registered with the authentication manager. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Authentication#8](~/add/codesnippet/csharp/p-system.net.authenticat_2_1.cs)]\n [!code-cpp[System.Net.Authentication#8](~/add/codesnippet/cpp/p-system.net.authenticat_2_1.cpp)]\n [!code-vb[System.Net.Authentication#8](~/add/codesnippet/visualbasic/p-system.net.authenticat_2_1.vb)]"
  syntax:
    content: public static System.Collections.IEnumerator RegisteredModules { get; }
    return:
      type: System.Collections.IEnumerator
      description: "Een <xref:System.Collections.IEnumerator>waarmee de geregistreerde verificatiemodules om te lezen.</xref:System.Collections.IEnumerator>"
  overload: System.Net.AuthenticationManager.RegisteredModules*
  exceptions: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)
  id: Unregister(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Unregister(IAuthenticationModule)
  nameWithType: AuthenticationManager.Unregister(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Unregister(IAuthenticationModule)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "De opgegeven verificatiemodule verwijdert uit de lijst met geregistreerde modules."
  remarks: "De methode Unregister verwijdert de opgegeven verificatiemodule aan de lijst met verificatiemodules aangeroepen door de <xref:System.Net.AuthenticationManager.Authenticate%2A>methode.</xref:System.Net.AuthenticationManager.Authenticate%2A> De module moet worden toegevoegd aan de lijst met behulp van de <xref:System.Net.AuthenticationManager.Register%2A>methode voordat het kan worden verwijderd uit de lijst.</xref:System.Net.AuthenticationManager.Register%2A>"
  example:
  - "The following example uses the Unregister method to remove the specified authentication module from the list of registered modules. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Sockets.Authentication#2](~/add/codesnippet/csharp/m-system.net.authenticat_0_1.cs)]\n [!code-cpp[System.Net.Sockets.Authentication#2](~/add/codesnippet/cpp/m-system.net.authenticat_0_1.cpp)]\n [!code-vb[System.Net.Sockets.Authentication#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_0_1.vb)]"
  syntax:
    content: public static void Unregister (System.Net.IAuthenticationModule authenticationModule);
    parameters:
    - id: authenticationModule
      type: System.Net.IAuthenticationModule
      description: "De <xref href=&quot;System.Net.IAuthenticationModule&quot;> </xref> verwijderen uit de lijst met geregistreerde modules."
  overload: System.Net.AuthenticationManager.Unregister*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authenticationModule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De opgegeven <xref href=&quot;System.Net.IAuthenticationModule&quot;> </xref> is niet geregistreerd."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Unregister(System.String)
  id: Unregister(System.String)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Unregister(String)
  nameWithType: AuthenticationManager.Unregister(String)
  fullName: System.Net.AuthenticationManager.Unregister(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee verwijdert u de verificatiemodules met het opgegeven verificatieschema uit de lijst met geregistreerde modules."
  remarks: "De <xref:System.Net.AuthenticationManager.Unregister%2A>methode de module voor verificatie met het opgegeven verificatieschema verwijdert uit de lijst met verificatiemodules aangeroepen door de <xref:System.Net.AuthenticationManager.Authenticate%2A>methode.</xref:System.Net.AuthenticationManager.Authenticate%2A> </xref:System.Net.AuthenticationManager.Unregister%2A> De module moet worden toegevoegd aan de lijst met behulp van de <xref:System.Net.AuthenticationManager.Register%2A>methode voordat het kan worden verwijderd uit de lijst.</xref:System.Net.AuthenticationManager.Register%2A>"
  example:
  - "The following example uses the <xref:System.Net.AuthenticationManager.Unregister%2A> method to remove an authentication module with the specified authentication scheme from the list of registered modules.  \n  \n [!code-vb[AuthenticationManager_UnRegister2#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_1_1.vb)]\n [!code-cpp[AuthenticationManager_UnRegister2#2](~/add/codesnippet/cpp/m-system.net.authenticat_1_1.cpp)]\n [!code-cs[AuthenticationManager_UnRegister2#2](~/add/codesnippet/csharp/m-system.net.authenticat_1_1.cs)]"
  syntax:
    content: public static void Unregister (string authenticationScheme);
    parameters:
    - id: authenticationScheme
      type: System.String
      description: "Het verificatieschema van de module te verwijderen."
  overload: System.Net.AuthenticationManager.Unregister*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authenticationScheme</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een module voor dit verificatieschema is niet geregistreerd."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Authenticate(String,WebRequest,ICredentials)
  nameWithType: AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
- uid: System.Net.Authorization
  parent: System.Net
  isExternal: false
  name: Authorization
  nameWithType: Authorization
  fullName: System.Net.Authorization
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: true
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.AuthenticationManager.CredentialPolicy
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CredentialPolicy
  nameWithType: AuthenticationManager.CredentialPolicy
  fullName: System.Net.AuthenticationManager.CredentialPolicy
- uid: System.Net.ICredentialPolicy
  parent: System.Net
  isExternal: false
  name: ICredentialPolicy
  nameWithType: ICredentialPolicy
  fullName: System.Net.ICredentialPolicy
- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CustomTargetNameDictionary
  nameWithType: AuthenticationManager.CustomTargetNameDictionary
  fullName: System.Net.AuthenticationManager.CustomTargetNameDictionary
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: PreAuthenticate(WebRequest,ICredentials)
  nameWithType: AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
- uid: System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Register(IAuthenticationModule)
  nameWithType: AuthenticationManager.Register(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Register(IAuthenticationModule)
- uid: System.Net.IAuthenticationModule
  parent: System.Net
  isExternal: false
  name: IAuthenticationModule
  nameWithType: IAuthenticationModule
  fullName: System.Net.IAuthenticationModule
- uid: System.Net.AuthenticationManager.RegisteredModules
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: RegisteredModules
  nameWithType: AuthenticationManager.RegisteredModules
  fullName: System.Net.AuthenticationManager.RegisteredModules
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Unregister(IAuthenticationModule)
  nameWithType: AuthenticationManager.Unregister(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Unregister(IAuthenticationModule)
- uid: System.Net.AuthenticationManager.Unregister(System.String)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Unregister(String)
  nameWithType: AuthenticationManager.Unregister(String)
  fullName: System.Net.AuthenticationManager.Unregister(String)
- uid: System.Net.AuthenticationManager.Authenticate*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Authenticate
  nameWithType: AuthenticationManager.Authenticate
- uid: System.Net.AuthenticationManager.CredentialPolicy*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CredentialPolicy
  nameWithType: AuthenticationManager.CredentialPolicy
- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CustomTargetNameDictionary
  nameWithType: AuthenticationManager.CustomTargetNameDictionary
- uid: System.Net.AuthenticationManager.PreAuthenticate*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: PreAuthenticate
  nameWithType: AuthenticationManager.PreAuthenticate
- uid: System.Net.AuthenticationManager.Register*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Register
  nameWithType: AuthenticationManager.Register
- uid: System.Net.AuthenticationManager.RegisteredModules*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: RegisteredModules
  nameWithType: AuthenticationManager.RegisteredModules
- uid: System.Net.AuthenticationManager.Unregister*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Unregister
  nameWithType: AuthenticationManager.Unregister
