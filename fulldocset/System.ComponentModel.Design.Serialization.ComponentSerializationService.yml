### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService
  id: ComponentSerializationService
  children:
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  langs:
  - csharp
  name: ComponentSerializationService
  nameWithType: ComponentSerializationService
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService
  type: Class
  summary: "Biedt de basisklasse voor het serialiseren van een reeks onderdelen of serializable-objecten in een serialisatiearchief van de."
  remarks: "De ComponentSerializationService serialiseert een reeks onderdelen of serializable-objecten in een serialisatiearchief van de. De store kan vervolgens later worden gedeserialiseerd. De klasse ComponentSerializationService verschilt van andere serialisatie-schema&quot;s in die de serialisatie-indeling ondoorzichtige is, waardoor het voor gedeeltelijke serialisatie van objecten. U kunt bijvoorbeeld alleen geselecteerde eigenschappen voor een object te serialiseren.       Deze klasse is `abstract`. Normaal gesproken een <xref:System.ComponentModel.Design.Serialization.DesignerLoader>wordt een concrete implementatie van deze klasse en toe te voegen als een service in de <xref:System.ComponentModel.Design.DesignSurface>.</xref:System.ComponentModel.Design.DesignSurface> </xref:System.ComponentModel.Design.Serialization.DesignerLoader> Dit kan objecten in de indeling die het meest geschikt voor hen worden geserialiseerd.       De klasse ComponentSerializationService vervangt de <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>interface van de .NET Framework versie 1.0, hoewel de laatste voor achterwaartse compatibiliteit behouden blijft.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>"
  syntax:
    content: public abstract class ComponentSerializationService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: ComponentSerializationService()
  nameWithType: ComponentSerializationService.ComponentSerializationService()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.ComponentSerializationService()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.Design.Serialization.ComponentSerializationService&quot;> </xref> klasse."
  syntax:
    content: protected ComponentSerializationService ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore
  id: CreateStore
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: CreateStore()
  nameWithType: ComponentSerializationService.CreateStore()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Maakt een nieuw <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref>."
  remarks: "Meerdere objecten kunnen worden geserialiseerd in het serialisatiearchief met dezelfde. Wanneer u klaar met de store bent, roept u de <xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A>of <xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A>methode.</xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A> </xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A> Als gesloten, een serialisatiearchief kan worden gebruikt voor deserialisatie of deze kan worden opgeslagen in een stroom.       Het serialisatiearchief kan worden doorgegeven aan een van de verschillende serialiseren methoden om op te bouwen serialisatie-status voor een groep objecten."
  syntax:
    content: public abstract System.ComponentModel.Design.Serialization.SerializationStore CreateStore ();
    parameters: []
    return:
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "Een nieuw gemaakte serialisatiearchief."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  id: Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: Deserialize(SerializationStore)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "De opgegeven store om te produceren van een verzameling van objecten deserializes."
  remarks: "Deze methode deserializes `store` voor het produceren van een verzameling van objecten die hierin zijn opgenomen. Objecten worden in dezelfde volgorde waarin ze zijn geserialiseerd gedeserialiseerd."
  syntax:
    content: public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "De <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> te deserialiseren."
    return:
      type: System.Collections.ICollection
      description: "Een verzameling van objecten die gemaakt zijn afhankelijk van de opgeslagen status."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>bevat geen gegevens in een indeling die kan worden verwerkt door de serialisatie-container."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  id: Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: Deserialize(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore,IContainer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "De opgegeven store deserializes en vult de opgegeven <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> gedeserialiseerd met <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> objecten."
  remarks: "Deze methode deserializes `store` voor het produceren van een verzameling van objecten die hierin zijn opgenomen. Objecten worden in dezelfde volgorde waarin ze zijn geserialiseerd gedeserialiseerd.       Objecten die worden geïmplementeerd gemaakt <xref:System.ComponentModel.IComponent>worden toegevoegd aan `container`.</xref:System.ComponentModel.IComponent>"
  syntax:
    content: public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "De <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> te deserialiseren."
    - id: container
      type: System.ComponentModel.IContainer
      description: "De <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> waarnaar <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> objecten worden toegevoegd."
    return:
      type: System.Collections.ICollection
      description: "Een verzameling van objecten die gemaakt zijn afhankelijk van de opgeslagen status."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>bevat geen gegevens in een indeling die kan worden verwerkt door de serialisatie-container."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  id: DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: DeserializeTo(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Deserializes de gegeven <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> naar de opgegeven container."
  remarks: "De methode DeserializeTo deserializes `store`, maar in plaats van het opstellen van nieuwe objecten, de gegevens in het archief van toepassing op een bestaande set van objecten die worden uitgevoerd vanuit de opgegeven container. Als gevolg hiervan de aanroeper van tevoren een object kunt maken maar het dit nodig acht. Als een object een status voor deserialisatie heeft en het object heeft geen naam in de reeks bestaande objecten, wordt er een nieuw object gemaakt. Als u dat object implementeert ook <xref:System.ComponentModel.IComponent>, wordt deze toegevoegd aan `container`.</xref:System.ComponentModel.IComponent> Objecten in de container moeten hebben namen en typen die overeenkomen met de objecten in het serialisatiearchief om een bestaand object moet worden gebruikt."
  syntax:
    content: public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "De <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> te deserialiseren."
    - id: container
      type: System.ComponentModel.IContainer
      description: "De container waarnaar <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> objecten worden toegevoegd."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>bevat geen gegevens in een indeling die kan worden verwerkt door de serialisatie-container."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  id: DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: DeserializeTo(SerializationStore,IContainer,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Deserializes de gegeven <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> naar de opgegeven container typen eventueel valideren gerecycled."
  remarks: "De <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A>methode deserializes `store`, maar in plaats van het opstellen van nieuwe objecten, de gegevens in het archief van toepassing op een bestaande set van objecten die worden uitgevoerd vanuit de opgegeven container.</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> Als gevolg hiervan de aanroeper van tevoren een object kunt maken maar het dit nodig acht. Als een object een status voor deserialisatie heeft en het object heeft geen naam in de reeks bestaande objecten, wordt er een nieuw object gemaakt. Als u dat object implementeert ook <xref:System.ComponentModel.IComponent>, wordt deze toegevoegd aan `container`.</xref:System.ComponentModel.IComponent> Objecten in de container moeten hebben namen en typen die overeenkomen met de objecten in het serialisatiearchief om een bestaand object moet worden gebruikt."
  syntax:
    content: public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "De <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> te deserialiseren."
    - id: container
      type: System.ComponentModel.IContainer
      description: "De container waarnaar <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> objecten worden toegevoegd."
    - id: validateRecycledTypes
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om te garanderen dat de deserialisatie werkt alleen als toegepast op een object van hetzelfde type."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>bevat geen gegevens in een indeling die kan worden verwerkt door de serialisatie-container."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  id: DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Deserializes de gegeven <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> naar de opgegeven container standaardwaarden voor de eigenschap eventueel toepassen."
  remarks: "De <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A>methode deserializes `store`, maar in plaats van het opstellen van nieuwe objecten, de gegevens in het archief van toepassing op een bestaande set van objecten die worden uitgevoerd vanuit de opgegeven container.</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> Als gevolg hiervan de aanroeper van tevoren een object kunt maken maar het dit nodig acht. Als een object een status voor deserialisatie heeft en het object heeft geen naam in de reeks bestaande objecten, wordt er een nieuw object gemaakt. Als u dat object implementeert ook <xref:System.ComponentModel.IComponent>, wordt deze toegevoegd aan `container`.</xref:System.ComponentModel.IComponent> Objecten in de container moeten hebben namen en typen die overeenkomen met de objecten in het serialisatiearchief om een bestaand object moet worden gebruikt."
  syntax:
    content: public abstract void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes, bool applyDefaults);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "De <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> te deserialiseren."
    - id: container
      type: System.ComponentModel.IContainer
      description: "De container waarnaar <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> objecten worden toegevoegd."
    - id: validateRecycledTypes
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om te garanderen dat de deserialisatie werkt alleen als toegepast op een object van hetzelfde type."
    - id: applyDefaults
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om aan te geven dat de standaardwaarden van de eigenschap moeten worden toegepast."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>bevat geen gegevens in een indeling die kan worden verwerkt door de serialisatie-container."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)
  id: LoadStore(System.IO.Stream)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: LoadStore(Stream)
  nameWithType: ComponentSerializationService.LoadStore(Stream)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(Stream)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Laadt een <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> uit een stroom."
  remarks: "U kunt de geretourneerde store te deserialiseren van objecten door doorgegeven aan een van de <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A>methoden.</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A>"
  syntax:
    content: public abstract System.ComponentModel.Design.Serialization.SerializationStore LoadStore (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "De <xref:System.IO.Stream>uit het archief wordt worden geladen.</xref:System.IO.Stream>"
    return:
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "Een nieuwe <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> exemplaar."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>stream</code>bevat geen gegevens die zijn opgeslagen door een eerdere aanroep voor <xref:System.ComponentModel.Design.Serialization.SerializationStore.Save*>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  id: Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: Serialize(SerializationStore,Object)
  nameWithType: ComponentSerializationService.Serialize(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(SerializationStore,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serialiseert van het gegeven object naar de opgegeven <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref>."
  remarks: "De store kan worden gebruikt voor het serialiseren van meer dan één object door meer dan één keer u deze methode aanroept."
  syntax:
    content: public abstract void Serialize (System.ComponentModel.Design.Serialization.SerializationStore store, object value);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "De <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> waarvoor de status van `value` wordt geschreven."
    - id: value
      type: System.Object
      description: "Het object te serialiseren."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>is gesloten of <code>store</code> is geen ondersteund type serialisatiearchief. Gebruik een archief dat wordt geretourneerd door <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  id: SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: SerializeAbsolute(SerializationStore,Object)
  nameWithType: ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Het gegeven object, accounting voor standaardwaarden voor de eigenschap serialiseert."
  remarks: "Standaard serialisatie, als geïmplementeerd via de <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A>methode, serialiseert alleen waarden die afwijken van de standaardstatus van het onderdeel.</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A> Dit is de meest compacte serialisatiemechanisme voor, maar wordt ervan uitgegaan dat een nieuw object wordt gebruikt tijdens de deserialisatie. Als een bestaand object wordt gebruikt, de resulterende deserialiseerbaar object kan niet worden gegarandeerd te dupliceren van de oorspronkelijke status van het geserialiseerde object. de eigenschappen die standaardwaarden tijdens de serialisatie opgenomen wordt niet opnieuw worden ingesteld naar hun standaardwaarden tijdens de deserialisatie.       De methode SerializeAbsolute maakt geen gebruik van deze sneltoets. Deze serialiseert alle eigenschappen van het bronobject zodat deserialisatie eigenschappen van het object, ongeacht de standaardstatus kunt herstellen.       Deze methode is bijzonder nuttig voor het serialiseren van verzamelingen, omdat de volgorde van de samenstellende items binnen de verzameling kunt wijzigen. In dit geval is de veiligste proces voor het herstellen van de oorspronkelijke status van de volledige verzameling worden alle items met hun oorspronkelijke eigenschapswaarden overschrijven."
  syntax:
    content: public abstract void SerializeAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object value);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "De <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> waarvoor de status van `value` worden geserialiseerd."
    - id: value
      type: System.Object
      description: "Het object te serialiseren."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>is gesloten of <code>store</code> is geen ondersteund type serialisatiearchief. Gebruik een archief dat wordt geretourneerd door <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  id: SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: SerializeMember(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Het opgegeven lid in het gegeven object serialiseert."
  remarks: "De methode SerializeMember kan meerdere keren worden aangeroepen voor hetzelfde object voor het bouwen van een lijst van geserialiseerde leden in het serialisatiearchief. In het algemeen moet lid een eigenschap of een gebeurtenis."
  syntax:
    content: public abstract void SerializeMember (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "De <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> waarvoor de status van `member` worden geserialiseerd."
    - id: owningObject
      type: System.Object
      description: "Het object waarnaar `member` is gekoppeld."
    - id: member
      type: System.ComponentModel.MemberDescriptor
      description: "Een <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> opgeven van het lid te serialiseren."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>is gesloten of <code>store</code> is geen ondersteund type serialisatiearchief. Gebruik een archief dat wordt geretourneerd door <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  id: SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Het opgegeven lid in het gegeven object accounting voor de eigenschap standaardwaarde serialiseert."
  remarks: "De methode SerializeMemberAbsolute serialiseert de `member` op `owningObject`, zelfs als `member` bevat de standaardwaarde voor de eigenschap.       Houd er rekening mee dat voor een aantal leden met de standaardwaarde en herstellen van de instelling van dezelfde waarde naar het lid verschillende concepten zijn. Bijvoorbeeld, als de waarde een eigenschap van een bovenliggend object overneemt wanneer er geen lokale waarde is ingesteld, instellen van de waarde terug naar de eigenschap mogelijk niet wat gewenst is. De methode SerializeMemberAbsolute rekening wordt gehouden dit en de status van de eigenschap in dit geval wilt wissen."
  syntax:
    content: public abstract void SerializeMemberAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "De <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> waarvoor de status van `member` worden geserialiseerd."
    - id: owningObject
      type: System.Object
      description: "Het object waarnaar `member` is gekoppeld."
    - id: member
      type: System.ComponentModel.MemberDescriptor
      description: "Het lid te serialiseren."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>is gesloten of <code>store</code> is geen ondersteund type serialisatiearchief. Gebruik een archief dat wordt geretourneerd door <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: ComponentSerializationService()
  nameWithType: ComponentSerializationService.ComponentSerializationService()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.ComponentSerializationService()
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: CreateStore()
  nameWithType: ComponentSerializationService.CreateStore()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore()
- uid: System.ComponentModel.Design.Serialization.SerializationStore
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: SerializationStore
  nameWithType: SerializationStore
  fullName: System.ComponentModel.Design.Serialization.SerializationStore
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Deserialize(SerializationStore)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Deserialize(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore,IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo(SerializationStore,IContainer,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: LoadStore(Stream)
  nameWithType: ComponentSerializationService.LoadStore(Stream)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Serialize(SerializationStore,Object)
  nameWithType: ComponentSerializationService.Serialize(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(SerializationStore,Object)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeAbsolute(SerializationStore,Object)
  nameWithType: ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMember(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: ComponentSerializationService
  nameWithType: ComponentSerializationService.ComponentSerializationService
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: CreateStore
  nameWithType: ComponentSerializationService.CreateStore
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Deserialize
  nameWithType: ComponentSerializationService.Deserialize
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo
  nameWithType: ComponentSerializationService.DeserializeTo
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: LoadStore
  nameWithType: ComponentSerializationService.LoadStore
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Serialize
  nameWithType: ComponentSerializationService.Serialize
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeAbsolute
  nameWithType: ComponentSerializationService.SerializeAbsolute
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMember
  nameWithType: ComponentSerializationService.SerializeMember
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMemberAbsolute
  nameWithType: ComponentSerializationService.SerializeMemberAbsolute
