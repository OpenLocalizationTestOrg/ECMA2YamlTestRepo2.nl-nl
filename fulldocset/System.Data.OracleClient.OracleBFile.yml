### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleBFile
  id: OracleBFile
  children:
  - System.Data.OracleClient.OracleBFile.CanRead
  - System.Data.OracleClient.OracleBFile.CanSeek
  - System.Data.OracleClient.OracleBFile.CanWrite
  - System.Data.OracleClient.OracleBFile.Clone
  - System.Data.OracleClient.OracleBFile.Connection
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  - System.Data.OracleClient.OracleBFile.DirectoryName
  - System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  - System.Data.OracleClient.OracleBFile.FileExists
  - System.Data.OracleClient.OracleBFile.FileName
  - System.Data.OracleClient.OracleBFile.Flush
  - System.Data.OracleClient.OracleBFile.IsNull
  - System.Data.OracleClient.OracleBFile.Length
  - System.Data.OracleClient.OracleBFile.Null
  - System.Data.OracleClient.OracleBFile.Position
  - System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  - System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  - System.Data.OracleClient.OracleBFile.Value
  - System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: OracleBFile
  nameWithType: OracleBFile
  fullName: System.Data.OracleClient.OracleBFile
  type: Class
  summary: "Hiermee geeft u een beheerd OracleBFile-object dat is ontworpen voor gebruik met de Oracle <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> gegevenstype. Deze klasse kan niet worden overgenomen."
  remarks: "De Oracle `BFILE` gegevenstype is een Oracle `LOB` gegevenstype met een verwijzing naar binaire gegevens met een maximale grootte van 4 GB. Een Oracle `BFILE` verschilt van andere Oracle `LOB` gegevenstypen in dat de gegevens worden opgeslagen in een fysiek bestand in het besturingssysteem in plaats van op de server. Houd er rekening mee dat de `BFILE` gegevenstype biedt alleen-lezen toegang tot gegevens. Daarom schrijven gerichte methoden overgenomen van de <xref:System.IO.Stream>klasse worden niet ondersteund.</xref:System.IO.Stream>       Andere kenmerken van een `BFILE` gegevenstype dat onderscheiden van een `LOB` gegevenstype dat deze zijn:-ongestructureerde gegevens bevat.      -Serverzijde verdeling in segmenten ondersteunt.      -Gebruik verwijzen naar semantiek kopiëren. Bijvoorbeeld, als u een kopieerbewerking uitvoeren op een `BFILE`, alleen de `BFILE` locator (dit is een verwijzing naar het bestand) wordt gekopieerd. De gegevens in het bestand is niet gekopieerd.       De `BFILE` gegevenstype moet worden gebruikt voor het verwijzen naar `LOB`s die groot, en daarom niet praktisch is om op te slaan in de database. De overhead voor het gebruik van client en server-communicatie wordt een `BFILE` gegevenstype vergeleken met de `LOB` gegevenstype. Het is efficiënter voor toegang tot een `BFILE` als u alleen moet een kleine hoeveelheid gegevens te verkrijgen. Het is efficiënter voor toegang tot database residente `LOB`s als u nodig hebt om het gehele object te verkrijgen.       Elk niet - NULL OracleBFile-object is gekoppeld aan twee entiteiten die de locatie van het onderliggende fysieke bestand definiëren:-een Oracle-DIRECTORY-object is een database-alias voor een map in het bestandssysteem en -de bestandsnaam van het onderliggende fysieke bestand, dat in de map die is gekoppeld aan de DIRECTORY-object bevindt zich.       Na een `BFILE` is gemaakt, vindt u de locator in de vorm van een OracleBFile object met behulp van de <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>of <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>methoden.</xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       Aanroepen voor een object OracleBFile de <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A>methode.</xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A>       Het fysieke bestand dat een OracleBFile-object is gekoppeld aan hoeft niet bestaan totdat u probeert om deze te openen. Een toepassing een OracleBFile binden aan een niet-bestaand bestand, het fysieke bestand maken op de verwachte locatie en vervolgens aanroepen <xref:System.Data.OracleClient.OracleBFile.Read%2A>.</xref:System.Data.OracleClient.OracleBFile.Read%2A>       Elke poging om toegang te krijgen tot een gesloten OracleBFile met de <xref:System.Data.OracleClient.OracleBFile.Read%2A>of <xref:System.Data.OracleClient.OracleBFile.Seek%2A>methoden opnieuw een stroom OracleBFile automatisch geopend.</xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleBFile.Read%2A>       De volgende C#-voorbeeld laat zien hoe u kunt maken een `BFILE` in een Oracle tabel en vervolgens in de vorm van een object OracleBFile opgehaald. Het voorbeeld ziet u het gebruik van de <xref:System.Data.OracleClient.OracleDataReader>object en de OracleBFile<xref:System.Data.OracleClient.OracleBFile.Seek%2A> en <xref:System.Data.OracleClient.OracleBFile.Read%2A>methoden.</xref:System.Data.OracleClient.OracleBFile.Read%2A> </xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleDataReader>       [!code-cs[DataWorks OracleClient.BFile#1](~/add/codesnippet/csharp/t-system.data.oracleclie_3_1.cs) ] voor meer informatie over het maken en gebruiken van een Oracle `BFILE`, Zie de betreffende onderwerpen in de Oracle-documentatie.      > [!NOTE] > De `BeginWrite`, `EndWrite`, en `WriteByte` methoden die zijn overgenomen van de `System.IO.Stream` klasse, worden niet ondersteund omdat de `BFILE` gegevenstype is alleen-lezen."
  syntax:
    content: 'public sealed class OracleBFile : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable'
  inheritance:
  - System.IO.Stream
  implements:
  - System.Data.SqlTypes.INullable
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanRead
  id: CanRead
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanRead
  nameWithType: OracleBFile.CanRead
  fullName: System.Data.OracleClient.OracleBFile.CanRead
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Haalt een waarde die aangeeft of de <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> stroom kan worden gelezen."
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Als een <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> is gesloten of verwijderd, anders <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanSeek
  id: CanSeek
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
  fullName: System.Data.OracleClient.OracleBFile.CanSeek
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Haalt een waarde die aangeeft of forward zoeken en achterwaartse-zoekbewerkingen kunnen worden uitgevoerd."
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Als een <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> is gesloten of verwijderd, anders <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanWrite
  id: CanWrite
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
  fullName: System.Data.OracleClient.OracleBFile.CanWrite
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Haalt een waarde die aangeeft of het object schrijven ondersteunt."
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "Retourneert altijd <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> omdat de Oracle <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> gegevenstype is alleen-lezen."
  overload: System.Data.OracleClient.OracleBFile.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Clone
  id: Clone
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Clone()
  nameWithType: OracleBFile.Clone()
  fullName: System.Data.OracleClient.OracleBFile.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Maakt een kopie van dit <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> object dat is gekoppeld aan de dezelfde fysiek bestand als het origineel."
  remarks: "De eigenschappen van de nieuwe <xref:System.Data.OracleClient.OracleBFile>object in eerste instantie hebben dezelfde waarden als die van het oorspronkelijke object.</xref:System.Data.OracleClient.OracleBFile> Echter, nadat het klonen voltooid, elke is <xref:System.Data.OracleClient.OracleBFile>object is niet afhankelijk van de andere.</xref:System.Data.OracleClient.OracleBFile> Als u bijvoorbeeld de waarde van de <xref:System.Data.OracleClient.OracleBFile.Position%2A>eigenschap op de oorspronkelijke <xref:System.Data.OracleClient.OracleBFile>verandert niet de waarde van <xref:System.Data.OracleClient.OracleBFile.Position%2A>op de kopie.</xref:System.Data.OracleClient.OracleBFile.Position%2A> </xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Position%2A>"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Een nieuwe <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> object gekoppeld aan hetzelfde fysieke bestand als de oorspronkelijke <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> object."
  overload: System.Data.OracleClient.OracleBFile.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Connection
  id: Connection
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Connection
  nameWithType: OracleBFile.Connection
  fullName: System.Data.OracleClient.OracleBFile.Connection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Haalt de <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> gebruikt door dit exemplaar van de <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref>."
  syntax:
    content: public System.Data.OracleClient.OracleConnection Connection { get; }
    return:
      type: System.Data.OracleClient.OracleConnection
      description: "De verbinding met een gegevensbron. De standaardwaarde is een null-waarde."
  overload: System.Data.OracleClient.OracleBFile.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  id: CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(OracleLob)
  nameWithType: OracleBFile.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Kopieert de volledige inhoud van dit <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> aan het begin van een bestemming <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "De onderliggende gegevenstypen van de bron <xref:System.Data.OracleClient.OracleBFile>en de bestemming <xref:System.Data.OracleClient.OracleLob>moet compatibel zijn.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleBFile> Bijvoorbeeld, u binaire gegevens kan niet kopiëren naar een bestemming <xref:System.Data.OracleClient.OracleLob>die een character-gegevenstype heeft.</xref:System.Data.OracleClient.OracleLob>       U moet schrijftoegang tot de bestemming <xref:System.Data.OracleClient.OracleLob>voor de bewerking CopyTo correct uitgevoerd.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "De bestemming<xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref>"
    return:
      type: System.Int64
      description: "Het aantal bytes dat wordt gekopieerd."
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De bestemming <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> een verwijzing is null-object."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het doel is een null <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref>.       - of - de verbinding met waarvoor deze <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> is gekoppeld is gesloten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> object is gesloten of verwijderd."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  id: CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleBFile.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Kopieert de volledige inhoud van dit <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> naar een bestemming <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> bij de opgegeven offset."
  remarks: "De onderliggende gegevenstypen van de bron <xref:System.Data.OracleClient.OracleBFile>en de bestemming <xref:System.Data.OracleClient.OracleLob>moet compatibel zijn.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleBFile> Bijvoorbeeld, u binaire gegevens kan niet kopiëren naar een bestemming <xref:System.Data.OracleClient.OracleLob>die een character-gegevenstype heeft.</xref:System.Data.OracleClient.OracleLob>       U moet schrijftoegang tot de bestemming <xref:System.Data.OracleClient.OracleLob>voor de <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>bewerking correct uitgevoerd.</xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> </xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "De bestemming <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
    - id: destinationOffset
      type: System.Int64
      description: "De offset waarnaar u wilt kopiëren."
    return:
      type: System.Int64
      description: "Het aantal bytes dat wordt gekopieerd."
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De bestemming <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> een verwijzing is null-object."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het doel is een null <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref>.       - of - de verbinding met waarvoor deze <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> is gekoppeld is gesloten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> object is gesloten of verwijderd."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  id: CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Exemplaren van deze <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> naar een bestemming <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> met de opgegeven hoeveelheid gegevens, de verschuiving van de bron en de verschuiving van de bestemming."
  remarks: "De onderliggende gegevenstypen van de bron <xref:System.Data.OracleClient.OracleBFile>en de bestemming <xref:System.Data.OracleClient.OracleLob>moet compatibel zijn.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleBFile> Bijvoorbeeld, u binaire gegevens kan niet kopiëren naar een bestemming <xref:System.Data.OracleClient.OracleLob>die een character-gegevenstype heeft.</xref:System.Data.OracleClient.OracleLob>       U moet schrijftoegang tot de bestemming <xref:System.Data.OracleClient.OracleLob>voor de <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>bewerking correct uitgevoerd.</xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> </xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);
    parameters:
    - id: sourceOffset
      type: System.Int64
      description: "De offset waaruit u wilt kopiëren."
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "De bestemming <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
    - id: destinationOffset
      type: System.Int64
      description: "De offset waarnaar u wilt kopiëren."
    - id: amount
      type: System.Int64
      description: "De hoeveelheid gegevens, in bytes, te kopiëren."
    return:
      type: System.Int64
      description: "Het aantal bytes dat wordt gekopieerd."
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De waarde van de parameter bedrag is kleiner dan nul of groter zijn dan 4 GB."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De bestemming <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> een verwijzing is null-object."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het doel is een null <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref>.       - of - de verbinding met waarvoor deze <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> is gekoppeld is gesloten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> object is gesloten of verwijderd."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.DirectoryName
  id: DirectoryName
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
  fullName: System.Data.OracleClient.OracleBFile.DirectoryName
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hiermee wordt de naam van de DIRECTORY-object waarmee een <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> object is gekoppeld."
  remarks: "Elke niet-NULL <xref:System.Data.OracleClient.OracleBFile>object is gekoppeld aan twee entiteiten die de locatie van de onderliggende fysieke bestand definiëren:-een Oracle-DIRECTORY-object is een database-alias voor een map in het bestandssysteem en -de bestandsnaam van het onderliggende fysieke bestand, dat in de map die is gekoppeld aan de DIRECTORY-object bevindt zich.</xref:System.Data.OracleClient.OracleBFile>       De eigenschap DirectoryName retourneert de naam van het DIRECTORY-object van de Oracle-database.       Voor meer informatie over het maken en gebruiken van een Oracle `BFILE`, Zie de betreffende onderwerpen in de Oracle-documentatie."
  syntax:
    content: public string DirectoryName { get; }
    return:
      type: System.String
      description: "De naam van het DIRECTORY-object."
  overload: System.Data.OracleClient.OracleBFile.DirectoryName*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Er is geprobeerd om aan te roepen <xref uid=&quot;langword_csharp_DirectoryName&quot; name=&quot;DirectoryName&quot; href=&quot;&quot;> </xref> op een gesloten of verwijderd <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> object."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OracleBFile.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleBFile.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Moet worden toegevoegd."
  overload: System.Data.OracleClient.OracleBFile.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.FileExists
  id: FileExists
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: FileExists
  nameWithType: OracleBFile.FileExists
  fullName: System.Data.OracleClient.OracleBFile.FileExists
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Haalt een waarde die aangeeft of een fysieke bestand met <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> gegevens aanwezig in het besturingssysteem."
  syntax:
    content: public bool FileExists { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een fysieke bestand met <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> gegevens bestaat; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleBFile.FileExists*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> object is gesloten of verwijderd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verbinding waarmee een <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> is gekoppeld is gesloten."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.FileName
  id: FileName
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: FileName
  nameWithType: OracleBFile.FileName
  fullName: System.Data.OracleClient.OracleBFile.FileName
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hiermee wordt de naam van de <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> zonder het pad."
  remarks: "Voor <xref:System.Data.OracleClient.OracleBFile.Null>, een lege tekenreeks geretourneerd.</xref:System.Data.OracleClient.OracleBFile.Null>"
  syntax:
    content: public string FileName { get; }
    return:
      type: System.String
      description: "De naam van de BBESTAND."
  overload: System.Data.OracleClient.OracleBFile.FileName*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> object is gesloten of verwijderd."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Flush
  id: Flush
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Flush()
  nameWithType: OracleBFile.Flush()
  fullName: System.Data.OracleClient.OracleBFile.Flush()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Momenteel niet ondersteund."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Data.OracleClient.OracleBFile.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.IsNull
  id: IsNull
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: IsNull
  nameWithType: OracleBFile.IsNull
  fullName: System.Data.OracleClient.OracleBFile.IsNull
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hiermee wordt een waarde die aangeeft of de <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> is een <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;> </xref> stroom."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;></xref> is a <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref> stream; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Length
  id: Length
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Length
  nameWithType: OracleBFile.Length
  fullName: System.Data.OracleClient.OracleBFile.Length
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hiermee wordt een waarde die de lengte in bytes van het fysieke bestand waarmee retourneert de <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> object is gekoppeld."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "Een lange waarde op voor de lengte van het fysieke bestand in bytes."
  overload: System.Data.OracleClient.OracleBFile.Length*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Methoden zijn aangeroepen nadat de stroom is gesloten of verwijderd."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Null
  id: "Null"
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: "Null"
  nameWithType: OracleBFile.Null
  fullName: System.Data.OracleClient.OracleBFile.Null
  type: Field
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hiermee geeft u een null <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> -object dat niet is gebonden aan een fysiek bestand."
  remarks: "Null kan nuttig zijn wanneer u een bewerking voor tekenreeksvergelijking uitvoeren wilt op een <xref:System.Data.OracleClient.OracleBFile>om te bepalen van null-waarden.</xref:System.Data.OracleClient.OracleBFile>       Elke poging om uit te voeren een leesbewerking op een Null-object is geslaagd, maar geen gegevens geretourneerd. Elke poging om uit te voeren een schrijfbewerking voor een Null-object wordt een uitzondering gegenereerd. Als u een `BFILE` kolom met een null-waarde retourneert Null."
  syntax:
    content: public static readonly System.Data.OracleClient.OracleBFile Null;
    return:
      type: System.Data.OracleClient.OracleBFile
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Position
  id: Position
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Position
  nameWithType: OracleBFile.Position
  fullName: System.Data.OracleClient.OracleBFile.Position
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "De huidige positie in lezen opgehaald de <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> stroom."
  remarks: "Zoeken naar andere locaties dan de lengte van de stroom wordt niet ondersteund.       De `Position` eigenschap komt niet bijhouden van het aantal bytes uit de stroom die is verbruikt, overgeslagen, of beide."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "De huidige positie binnen de <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> stroom."
  overload: System.Data.OracleClient.OracleBFile.Position*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Er is geprobeerd om een positie met een negatieve waarde of groter is dan de lengte van de stroom te stellen."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Methoden zijn aangeroepen nadat de stroom is gesloten of verwijderd."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Een reeks bytes leest uit de huidige <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> stream en ontwikkelingen de positie binnen de stroom door het aantal bytes gelezen."
  remarks: "De methode Read lezen maximaal `count` bytes uit de huidige stream en op te slaan in `buffer` beginnen bij `offset`. De huidige positie in de stroom is geavanceerde door het aantal gelezen bytes. echter, als een uitzondering optreedt, de huidige positie in de stroom blijft ongewijzigd. Lees retourneert het aantal bytes dat is gelezen. De geretourneerde waarde gelijk is aan nul alleen als de positie momenteel aan het einde van de stroom is. Lezen wordt geblokkeerd totdat ten minste één byte aan gegevens kan worden gelezen in het geval dat gegevens niet beschikbaar. Alleen-lezen retourneert 0 wanneer het einde van het bestand is bereikt. Gelezen is gratis minder bytes dan aangevraagde retourneren, zelfs als het einde van de stroom niet is bereikt.       Elke poging om toegang te krijgen tot een gesloten <xref:System.Data.OracleClient.OracleBFile>met het lezen of <xref:System.Data.OracleClient.OracleBFile.Seek%2A>methoden opent opnieuw een <xref:System.Data.OracleClient.OracleBFile>automatisch stream.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleBFile>       De volgende C#-voorbeeld wordt ervan uitgegaan dat dit schema in een tabel Oracle: ```   (col1 number, col2 BFILE)   ``` het voorbeeld worden de lees en <xref:System.Data.OracleClient.OracleBFile.Seek%2A>methoden gebruiken om een <xref:System.Data.OracleClient.OracleBFile>object.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Seek%2A>      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {               OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Een matrix met bytes. Wanneer deze methode retourneert, de buffer bevat de opgegeven byte-matrix met de waarden tussen `offset` en (`offset` + `count`) vervangen door het aantal bytes lezen uit de huidige bron."
    - id: offset
      type: System.Int32
      description: "De op nul gebaseerde byte-offset in `buffer` waarop u wilt beginnen met opslaan van de gegevens uit de huidige stroom lezen."
    - id: count
      type: System.Int32
      description: "Het maximum aantal bytes dat moet worden gelezen uit de huidige stroom."
    return:
      type: System.Int32
      description: "Het totale aantal bytes in de buffer gelezen. Dit kan zijn dat kleiner is dan het aantal bytes aangevraagd als dat veel bytes momenteel niet beschikbaar zijn, of nul als het einde van het bestand is bereikt."
  overload: System.Data.OracleClient.OracleBFile.Read*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De som van <code> offset </code> en <code> count </code> groter is dan de bufferlengte."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>of <code>count</code> negatief is."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verbinding waarmee een <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> is gekoppeld is gesloten."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Methoden zijn aangeroepen nadat de stroom is gesloten of verwijderd."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleBFile.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleBFile.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hiermee stelt u de positie op de huidige <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> stroom."
  remarks: "Als `offset` is negatief, de nieuwe positie moet worden voorafgegaan door de positie die is opgegeven door `origin` door het aantal bytes dat is opgegeven door `offset`. Als `offset` gelijk is aan nul, de nieuwe positie is vereist voor de positie die is opgegeven door `origin`. Als `offset` positief is, de nieuwe positie is vereist voor het volgen van de positie die is opgegeven door `origin` door het aantal bytes dat is opgegeven door `offset`.       Zoeken naar andere locaties dan de lengte van de stroom wordt niet ondersteund.       Elke poging om toegang te krijgen tot een gesloten <xref:System.Data.OracleClient.OracleBFile>met behulp van de <xref:System.Data.OracleClient.OracleBFile.Read%2A>of methoden opent opnieuw proberen een <xref:System.Data.OracleClient.OracleBFile>automatisch stream.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Read%2A> </xref:System.Data.OracleClient.OracleBFile>       De volgende C#-voorbeeld wordt ervan uitgegaan dat dit schema in een tabel Oracle: ```   (col1 number, col2 BFILE)   ``` het voorbeeld worden de <xref:System.Data.OracleClient.OracleBFile.Read%2A>en zoekmethoden voor toegang tot een <xref:System.Data.OracleClient.OracleBFile>object.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Read%2A>      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {               OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Een byte-offset ten opzichte van oorsprong. Als `offset` is negatief, de nieuwe positie voorafgaat aan de positie die is opgegeven door `origin` door het aantal bytes dat is opgegeven door `offset`. Als `offset` gelijk is aan nul, de nieuwe positie is de positie die is opgegeven door `origin`. Als `offset` positief is, wordt de positie die is opgegeven door volgt u de nieuwe positie `origin` door het aantal bytes dat is opgegeven door `offset`."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Een waarde van het type <xref uid=&quot;langword_csharp_System.IO.SeekOrigin&quot; name=&quot;System.IO.SeekOrigin&quot; href=&quot;&quot;> </xref> die wijzen op het referentiepunt gebruikt voor het verkrijgen van de nieuwe positie."
    return:
      type: System.Int64
      description: "De nieuwe positie binnen de huidige stroom."
  overload: System.Data.OracleClient.OracleBFile.Seek*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Er is geprobeerd om een positie met een negatieve waarde of groter is dan de lengte van de stroom te stellen."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Methoden zijn aangeroepen nadat de stroom is gesloten of verwijderd."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  id: SetFileName(System.String,System.String)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: SetFileName(String,String)
  nameWithType: OracleBFile.SetFileName(String,String)
  fullName: System.Data.OracleClient.OracleBFile.SetFileName(String,String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Koppelt de <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> object naar een ander bestand in het besturingssysteem."
  remarks: "De bewerking SetFileName moet binnen een transactie te kunnen uitvoeren. Aanroepen van SetFileName gewoon op een `BFILE` koppelt de <xref:System.Data.OracleClient.OracleBFile>object met een ander bestand, maar worden niet bijgewerkt in de tabel Oracle.</xref:System.Data.OracleClient.OracleBFile> Voor het bijwerken van de Oracle-tabel na het aanroepen van SetFileName, belt u het `Update` methode van de <xref:System.Data.OracleClient.OracleDataAdapter>en voer vervolgens de transactie.</xref:System.Data.OracleClient.OracleDataAdapter>       Zodra u ophalen de <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>of <xref:System.Data.OracleClient.OracleBFile.FileName%2A>eigenschap, worden deze opgeslagen in de <xref:System.Data.OracleClient.OracleBFile>object en worden hierdoor niet beïnvloed door een gekloond <xref:System.Data.OracleClient.OracleBFile>objecten aanroepen naar SetFileName of door wijzigingen in de `BFILE` in de database.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.FileName%2A> </xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> Met andere woorden: ze mogelijk niet weer de werkelijke waarden van de `BFILE` -object in de server.       Bovendien ophalen van de eigenschap (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> of <xref:System.Data.OracleClient.OracleBFile.FileName%2A>) zorgt ervoor dat beide eigenschapswaarden worden opgehaald van de server en in het cachegeheugen van de <xref:System.Data.OracleClient.OracleBFile>object.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.FileName%2A> </xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>       De volgende C#-voorbeeld wordt ervan uitgegaan dat dit schema in een tabel Oracle: ```   (col1 number, col2 BFILE)   ``` het voorbeeld worden de SetFileName <xref:System.Data.OracleClient.OracleBFile.Read%2A>en <xref:System.Data.OracleClient.OracleBFile.Seek%2A>methoden gebruiken om een <xref:System.Data.OracleClient.OracleBFile>object.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleBFile.Read%2A>      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {           OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);               command.Transaction = connection.BeginTransaction();               BFile.SetFileName(&quot;TESTDIR&quot;, &quot;File1.jpg&quot;);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public void SetFileName (string directory, string file);
    parameters:
    - id: directory
      type: System.String
      description: "De alias van de directoryobject dat een fysiek bestand bevat."
    - id: file
      type: System.String
      description: "De naam van het bestand in het besturingssysteem."
  overload: System.Data.OracleClient.OracleBFile.SetFileName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De bewerking moet binnen een transactie."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: OracleBFile.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleBFile.SetLength(Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Momenteel niet ondersteund."
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Momenteel niet ondersteund."
  overload: System.Data.OracleClient.OracleBFile.SetLength*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De uitzondering die wordt gegenereerd wanneer een aangeroepen methode wordt niet ondersteund, of wanneer er een poging om te lezen, zoeken en schrijven naar een stroom die geen ondersteuning biedt voor de aangeroepen functie."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Value
  id: Value
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Value
  nameWithType: OracleBFile.Value
  fullName: System.Data.OracleClient.OracleBFile.Value
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Haalt een <xref:System.Array>van het type <xref:System.Byte>die bevat de <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> gegevens.</xref:System.Byte> </xref:System.Array>"
  remarks: "De eigenschap Value leest de gehele `BFILE` in één keer.      > [!NOTE] > Voordeel van het gebruik `BFILE`s is de mogelijkheid om op te halen van grote hoeveelheden gegevens in reeksen op de client. Echter als u de waarde gebruikt, krijgt u de gegevens voor de kolom BBESTAND als één aaneengesloten chunk die kan toepassing overhead aanzienlijk verhogen."
  syntax:
    content: public object Value { get; }
    return:
      type: System.Object
      description: "Een <xref:System.Array>van het type <xref:System.Byte>die bevat de <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> gegevens.</xref:System.Byte> </xref:System.Array>"
  overload: System.Data.OracleClient.OracleBFile.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Momenteel niet ondersteund."
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Momenteel niet ondersteund."
    - id: offset
      type: System.Int32
      description: "Momenteel niet ondersteund."
    - id: count
      type: System.Int32
      description: "Momenteel niet ondersteund."
  overload: System.Data.OracleClient.OracleBFile.Write*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De uitzondering die wordt gegenereerd wanneer een aangeroepen methode wordt niet ondersteund, of wanneer er een poging om te lezen, zoeken en schrijven naar een stroom die geen ondersteuning biedt voor de aangeroepen functie."
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Data.OracleClient.OracleBFile.CanRead
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanRead
  nameWithType: OracleBFile.CanRead
  fullName: System.Data.OracleClient.OracleBFile.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleBFile.CanSeek
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
  fullName: System.Data.OracleClient.OracleBFile.CanSeek
- uid: System.Data.OracleClient.OracleBFile.CanWrite
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
  fullName: System.Data.OracleClient.OracleBFile.CanWrite
- uid: System.Data.OracleClient.OracleBFile.Clone
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Clone()
  nameWithType: OracleBFile.Clone()
  fullName: System.Data.OracleClient.OracleBFile.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleBFile.Connection
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Connection
  nameWithType: OracleBFile.Connection
  fullName: System.Data.OracleClient.OracleBFile.Connection
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(OracleLob)
  nameWithType: OracleBFile.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.OracleClient.OracleLob
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleBFile.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob,Int64)
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
- uid: System.Data.OracleClient.OracleBFile.DirectoryName
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
  fullName: System.Data.OracleClient.OracleBFile.DirectoryName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OracleBFile.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleBFile.Dispose(Boolean)
- uid: System.Data.OracleClient.OracleBFile.FileExists
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileExists
  nameWithType: OracleBFile.FileExists
  fullName: System.Data.OracleClient.OracleBFile.FileExists
- uid: System.Data.OracleClient.OracleBFile.FileName
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileName
  nameWithType: OracleBFile.FileName
  fullName: System.Data.OracleClient.OracleBFile.FileName
- uid: System.Data.OracleClient.OracleBFile.Flush
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Flush()
  nameWithType: OracleBFile.Flush()
  fullName: System.Data.OracleClient.OracleBFile.Flush()
- uid: System.Data.OracleClient.OracleBFile.IsNull
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: IsNull
  nameWithType: OracleBFile.IsNull
  fullName: System.Data.OracleClient.OracleBFile.IsNull
- uid: System.Data.OracleClient.OracleBFile.Length
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Length
  nameWithType: OracleBFile.Length
  fullName: System.Data.OracleClient.OracleBFile.Length
- uid: System.Data.OracleClient.OracleBFile.Null
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: "Null"
  nameWithType: OracleBFile.Null
  fullName: System.Data.OracleClient.OracleBFile.Null
- uid: System.Data.OracleClient.OracleBFile
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleBFile
  nameWithType: OracleBFile
  fullName: System.Data.OracleClient.OracleBFile
- uid: System.Data.OracleClient.OracleBFile.Position
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Position
  nameWithType: OracleBFile.Position
  fullName: System.Data.OracleClient.OracleBFile.Position
- uid: System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Read(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleBFile.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleBFile.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetFileName(String,String)
  nameWithType: OracleBFile.SetFileName(String,String)
  fullName: System.Data.OracleClient.OracleBFile.SetFileName(String,String)
- uid: System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetLength(Int64)
  nameWithType: OracleBFile.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleBFile.SetLength(Int64)
- uid: System.Data.OracleClient.OracleBFile.Value
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Value
  nameWithType: OracleBFile.Value
  fullName: System.Data.OracleClient.OracleBFile.Value
- uid: System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Write(Byte[],Int32,Int32)
- uid: System.Data.OracleClient.OracleBFile.CanRead*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanRead
  nameWithType: OracleBFile.CanRead
- uid: System.Data.OracleClient.OracleBFile.CanSeek*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
- uid: System.Data.OracleClient.OracleBFile.CanWrite*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
- uid: System.Data.OracleClient.OracleBFile.Clone*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Clone
  nameWithType: OracleBFile.Clone
- uid: System.Data.OracleClient.OracleBFile.Connection*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Connection
  nameWithType: OracleBFile.Connection
- uid: System.Data.OracleClient.OracleBFile.CopyTo*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo
  nameWithType: OracleBFile.CopyTo
- uid: System.Data.OracleClient.OracleBFile.DirectoryName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
- uid: System.Data.OracleClient.OracleBFile.Dispose*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Dispose
  nameWithType: OracleBFile.Dispose
- uid: System.Data.OracleClient.OracleBFile.FileExists*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileExists
  nameWithType: OracleBFile.FileExists
- uid: System.Data.OracleClient.OracleBFile.FileName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileName
  nameWithType: OracleBFile.FileName
- uid: System.Data.OracleClient.OracleBFile.Flush*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Flush
  nameWithType: OracleBFile.Flush
- uid: System.Data.OracleClient.OracleBFile.IsNull*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: IsNull
  nameWithType: OracleBFile.IsNull
- uid: System.Data.OracleClient.OracleBFile.Length*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Length
  nameWithType: OracleBFile.Length
- uid: System.Data.OracleClient.OracleBFile.Position*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Position
  nameWithType: OracleBFile.Position
- uid: System.Data.OracleClient.OracleBFile.Read*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Read
  nameWithType: OracleBFile.Read
- uid: System.Data.OracleClient.OracleBFile.Seek*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Seek
  nameWithType: OracleBFile.Seek
- uid: System.Data.OracleClient.OracleBFile.SetFileName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetFileName
  nameWithType: OracleBFile.SetFileName
- uid: System.Data.OracleClient.OracleBFile.SetLength*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetLength
  nameWithType: OracleBFile.SetLength
- uid: System.Data.OracleClient.OracleBFile.Value*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Value
  nameWithType: OracleBFile.Value
- uid: System.Data.OracleClient.OracleBFile.Write*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Write
  nameWithType: OracleBFile.Write
