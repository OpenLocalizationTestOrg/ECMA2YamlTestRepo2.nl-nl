### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlDataAdapter
  id: SqlDataAdapter
  children:
  - System.Data.SqlClient.SqlDataAdapter.#ctor
  - System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)
  - System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  - System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)
  - System.Data.SqlClient.SqlDataAdapter.AddToBatch(System.Data.IDbCommand)
  - System.Data.SqlClient.SqlDataAdapter.ClearBatch
  - System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.SqlClient.SqlDataAdapter.DeleteCommand
  - System.Data.SqlClient.SqlDataAdapter.ExecuteBatch
  - System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  - System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  - System.Data.SqlClient.SqlDataAdapter.InitializeBatching
  - System.Data.SqlClient.SqlDataAdapter.InsertCommand
  - System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  - System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.SqlClient.SqlDataAdapter.RowUpdated
  - System.Data.SqlClient.SqlDataAdapter.RowUpdating
  - System.Data.SqlClient.SqlDataAdapter.SelectCommand
  - System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  - System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  - System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  - System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  - System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone
  - System.Data.SqlClient.SqlDataAdapter.TerminateBatching
  - System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
  - System.Data.SqlClient.SqlDataAdapter.UpdateCommand
  langs:
  - csharp
  name: SqlDataAdapter
  nameWithType: SqlDataAdapter
  fullName: System.Data.SqlClient.SqlDataAdapter
  type: Class
  summary: "Hiermee geeft u een reeks opdrachten voor gegevens en de verbinding met een database die worden gebruikt voor het vervullen van de <xref href=&quot;System.Data.DataSet&quot;> </xref> en een SQL Server-database bijwerken. Deze klasse kan niet worden overgenomen."
  remarks: "De SqlCeDataAdapter fungeert als een brug tussen een <xref:System.Data.DataSet>en SQL Server voor het ophalen en opslaan van gegevens.</xref:System.Data.DataSet> De SqlDataAdapter biedt deze brug door toe te wijzen <xref:System.Data.Common.DbDataAdapter.Fill%2A>, welke wijzigingen van de gegevens in de <xref:System.Data.DataSet>overeenkomen met de gegevens in de gegevensbron en <xref:System.Data.Common.DbDataAdapter.Update%2A>, welke wijzigingen van de gegevens in de gegevensbron om de gegevens in de <xref:System.Data.DataSet>, met de juiste Transact-SQL-instructies voor de gegevensbron.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A> De update wordt uitgevoerd op basis van de rij op. Voor elke rij ingevoegd, gewijzigd en verwijderd, de <xref:System.Data.Common.DbDataAdapter.Update%2A>methode bepaalt het type wijziging die is uitgevoerd op het (`Insert`, `Update`, of `Delete`).</xref:System.Data.Common.DbDataAdapter.Update%2A> Afhankelijk van het type wijziging, de `Insert`, `Update`, of `Delete` opdrachtsjabloon wordt uitgevoerd om de gewijzigde rij met de gegevensbron is doorgegeven. Wanneer de SqlCeDataAdapter vult een <xref:System.Data.DataSet>, het maakt de benodigde tabellen en kolommen voor de geretourneerde gegevens als deze niet al bestaan.</xref:System.Data.DataSet> Primaire-sleutelgegevens is echter niet opgenomen in het schema impliciet gemaakt tenzij de <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>eigenschap is ingesteld op <xref:System.Data.MissingSchemaAction>.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> Misschien hebt u ook de SqlCeDataAdapter maken van het schema van de <xref:System.Data.DataSet>, met inbegrip van gegevens van primaire sleutel, voordat het vullen met gegevens met `FillSchema`.</xref:System.Data.DataSet> Zie voor meer informatie [bestaande beperkingen toe te voegen aan een gegevensset](~/add/includes/ajax-current-ext-md.md).       SqlDataAdapter wordt gebruikt in combinatie met <xref:System.Data.SqlClient.SqlConnection>en <xref:System.Data.SqlClient.SqlCommand>voor betere prestaties bij het verbinden met een SQL Server-database.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlConnection>      > [!NOTE] > Als u SQL Server opgeslagen procedures gebruikt voor bewerken of verwijderen van gegevens met een `DataAdapter`, zorg ervoor dat u geen SET NOCOUNT ON in de definitie van de opgeslagen procedure gebruikt. Dit zorgt ervoor dat het aantal beïnvloede rijen is aan nul, worden geretourneerd die de `DataAdapter` wordt geïnterpreteerd als een conflict gelijktijdigheid van taken. In dit geval een <xref:System.Data.DBConcurrencyException>gegenereerd.</xref:System.Data.DBConcurrencyException>       De SqlDataAdapter bevat ook de <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, en <xref:System.Data.Common.DataAdapter.TableMappings%2A>Eigenschappen om het laden en het bijwerken van gegevens te vergemakkelijken.</xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>       Wanneer een exemplaar van SqlDataAdapter is gemaakt, worden de eigenschappen lezen/schrijven ingesteld op de beginwaarden. Zie voor een lijst van deze waarden, de SqlDataAdapter-constructor.       De <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, en <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>algemene sjablonen zijn die automatisch zijn gevuld met afzonderlijke waarden uit elke gewijzigde rij via de parameters-mechanisme.</xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>       Voor elke kolom die u aan de gegevensbron worden doorgegeven op <xref:System.Data.Common.DbDataAdapter.Update%2A>, een parameter moet worden toegevoegd aan de `InsertCommand`, `UpdateCommand`, of `DeleteCommand`.</xref:System.Data.Common.DbDataAdapter.Update%2A> De <xref:System.Data.Common.DbParameter.SourceColumn%2A>eigenschap van de <xref:System.Data.Common.DbParameter>object moet worden ingesteld op de naam van de kolom.</xref:System.Data.Common.DbParameter> </xref:System.Data.Common.DbParameter.SourceColumn%2A> Deze instelling geeft aan dat de waarde van de parameter niet handmatig is ingesteld, maar is genomen van de desbetreffende kolom in de rij momenteel verwerkt.      > [!NOTE] > Een <xref:System.InvalidOperationException>treedt op als de <xref:System.Data.Common.DbDataAdapter.Fill%2A>methode wordt aangeroepen en de tabel bevat een door de gebruiker gedefinieerde type dat is niet beschikbaar op de clientcomputer.</xref:System.Data.Common.DbDataAdapter.Fill%2A> </xref:System.InvalidOperationException> Zie voor meer informatie [maken en Using User-Defined typen](http://go.microsoft.com/fwlink/?LinkId=139492) in SQL Server Books Online."
  example:
  - "The following example uses the <xref:System.Data.SqlClient.SqlCommand>, SqlDataAdapter, and <xref:System.Data.SqlClient.SqlConnection> to select records from a database and populate a <xref:System.Data.DataSet> with the selected rows. The filled <xref:System.Data.DataSet> is then returned. To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.  \n  \n [!code-vb[Classic WebData SqlDataAdapter Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._14_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._14_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RowUpdated")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.SqlDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class SqlDataAdapter : System.Data.Common.DbDataAdapter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DataAdapter
  - System.Data.Common.DbDataAdapter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DbDataAdapter.DefaultSourceTableName
  - System.Data.Common.DbDataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])
  - System.Data.Common.DbDataAdapter.FillCommandBehavior
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.GetFillParameters
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SqlDataAdapter()
  nameWithType: SqlDataAdapter.SqlDataAdapter()
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> klasse."
  remarks: "Wanneer een exemplaar van <xref:System.Data.SqlClient.SqlDataAdapter>is gemaakt, het volgende lezen/schrijven-eigenschappen zijn ingesteld op de volgende beginwaarden.</xref:System.Data.SqlClient.SqlDataAdapter>      | Eigenschappen | Initiële waarde |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       U kunt de waarde van een van deze eigenschappen via een afzonderlijke aanroep van de eigenschap wijzigen.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._37_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.SqlDataAdapter Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._37_1.cs)]"
  syntax:
    content: public SqlDataAdapter ();
    parameters: []
  overload: System.Data.SqlClient.SqlDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)
  id: '#ctor(System.Data.SqlClient.SqlCommand)'
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SqlDataAdapter(SqlCommand)
  nameWithType: SqlDataAdapter.SqlDataAdapter(SqlCommand)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(SqlCommand)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> klasse met de opgegeven <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> als de <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>eigenschap.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>"
  remarks: "Deze implementatie van de <xref:System.Data.SqlClient.SqlDataAdapter>constructor stelt de <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>eigenschap in op de opgegeven waarde in de `selectCommand` parameter.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter>       Wanneer een exemplaar van <xref:System.Data.SqlClient.SqlDataAdapter>is gemaakt, het volgende lezen/schrijven-eigenschappen zijn ingesteld op de volgende beginwaarden.</xref:System.Data.SqlClient.SqlDataAdapter>      | Eigenschappen | Initiële waarde |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       U kunt de waarde van een van deze eigenschappen via een afzonderlijke aanroep van de eigenschap wijzigen.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>       Wanneer <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>(of een van de overige Opdrachteigenschappen) is toegewezen aan een eerder gemaakte <xref:System.Data.SqlClient.SqlCommand>, wordt de <xref:System.Data.SqlClient.SqlCommand>niet is gekloond.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> De <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>onderhoudt een verwijzing naar het eerder gemaakte <xref:System.Data.SqlClient.SqlCommand>object.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1](~/add/codesnippet/csharp/9d168a15-4587-40fd-a80e-_1.cs)]\n [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1](~/add/codesnippet/visualbasic/9d168a15-4587-40fd-a80e-_1.vb)]"
  syntax:
    content: public SqlDataAdapter (System.Data.SqlClient.SqlCommand selectCommand);
    parameters:
    - id: selectCommand
      type: System.Data.SqlClient.SqlCommand
      description: "Een <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> die een Transact-SQL SELECT-instructie of opgeslagen procedure is en is ingesteld als de <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>eigenschap van de <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref>.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>"
  overload: System.Data.SqlClient.SqlDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection)'
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SqlDataAdapter(String,SqlConnection)
  nameWithType: SqlDataAdapter.SqlDataAdapter(String,SqlConnection)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(String,SqlConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> klasse met een <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>en een <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> object.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>"
  remarks: "Deze implementatie van de <xref:System.Data.SqlClient.SqlDataAdapter>wordt geopend en wordt gesloten een <xref:System.Data.SqlClient.SqlConnection>Als deze nog niet is geopend.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlDataAdapter> Dit is handig in een toepassing die moet worden aangeroepen de <xref:System.Data.Common.DbDataAdapter.Fill%2A>methode voor twee of meer <xref:System.Data.SqlClient.SqlDataAdapter>objecten.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Als de <xref:System.Data.SqlClient.SqlConnection>is al is geopend, moet u expliciet aanroepen **sluiten** of **buitengebruikstelling** deze sluiten</xref:System.Data.SqlClient.SqlConnection>       Wanneer een exemplaar van <xref:System.Data.SqlClient.SqlDataAdapter>is gemaakt, het volgende lezen/schrijven-eigenschappen zijn ingesteld op de volgende beginwaarden.</xref:System.Data.SqlClient.SqlDataAdapter>      | Eigenschappen | Initiële waarde |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       U kunt de waarde van deze eigenschappen via een afzonderlijke aanroep van de eigenschap wijzigen.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1](~/add/codesnippet/visualbasic/fa8f1b27-cd12-4c35-bbde-_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1](~/add/codesnippet/csharp/fa8f1b27-cd12-4c35-bbde-_1.cs)]"
  syntax:
    content: public SqlDataAdapter (string selectCommandText, System.Data.SqlClient.SqlConnection selectConnection);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "Een <xref:System.String>die een Transact-SQL SELECT-instructie of opgeslagen procedure moet worden gebruikt door de <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>eigenschap van de <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref>.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*> </xref:System.String>"
    - id: selectConnection
      type: System.Data.SqlClient.SqlConnection
      description: "Een <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> die staat voor de verbinding. Als de verbindingsreeks geen gebruikt <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, kunt u <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> aan de gebruikers-ID en wachtwoord veiliger dan door de gebruikers-ID en het wachtwoord als tekst in de verbindingsreeks opgeven."
  overload: System.Data.SqlClient.SqlDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SqlDataAdapter(String,String)
  nameWithType: SqlDataAdapter.SqlDataAdapter(String,String)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(String,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> klasse met een <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>en een verbindingsreeks.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>"
  remarks: "Deze overbelasting van de <xref:System.Data.SqlClient.SqlDataAdapter>constructor gebruikt de `selectCommandText` parameter in te stellen de <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>eigenschap.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter> De <xref:System.Data.SqlClient.SqlDataAdapter>wordt gemaakt en onderhouden van de verbinding gemaakt met de `selectConnectionString` parameter.</xref:System.Data.SqlClient.SqlDataAdapter>       Wanneer een exemplaar van <xref:System.Data.SqlClient.SqlDataAdapter>is gemaakt, het volgende lezen/schrijven-eigenschappen zijn ingesteld op de volgende beginwaarden.</xref:System.Data.SqlClient.SqlDataAdapter>      | Eigenschappen | Initiële waarde |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       U kunt de waarde van een van deze eigenschappen via een afzonderlijke aanroep van de eigenschap wijzigen.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._6_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._6_1.cs)]"
  syntax:
    content: public SqlDataAdapter (string selectCommandText, string selectConnectionString);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "Een <xref:System.String>die een Transact-SQL SELECT-instructie of opgeslagen procedure moet worden gebruikt door de <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>eigenschap van de <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref>.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*> </xref:System.String>"
    - id: selectConnectionString
      type: System.String
      description: "De verbindingstekenreeks. Als de verbindingsreeks geen gebruikt <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, kunt u &lt;xref:System.Data.SqlClient.SqlDataAdapter.%23ctor%2A&gt; en <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> aan de gebruikers-ID en wachtwoord veiliger dan door de gebruikers-ID en het wachtwoord als tekst in de verbindingsreeks opgeven."
  overload: System.Data.SqlClient.SqlDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.AddToBatch(System.Data.IDbCommand)
  id: AddToBatch(System.Data.IDbCommand)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: AddToBatch(IDbCommand)
  nameWithType: SqlDataAdapter.AddToBatch(IDbCommand)
  fullName: System.Data.SqlClient.SqlDataAdapter.AddToBatch(IDbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override int AddToBatch (System.Data.IDbCommand command);
    parameters:
    - id: command
      type: System.Data.IDbCommand
      description: "Moet worden toegevoegd."
    return:
      type: System.Int32
      description: "Moet worden toegevoegd."
  overload: System.Data.SqlClient.SqlDataAdapter.AddToBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.ClearBatch
  id: ClearBatch
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: ClearBatch()
  nameWithType: SqlDataAdapter.ClearBatch()
  fullName: System.Data.SqlClient.SqlDataAdapter.ClearBatch()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void ClearBatch ();
    parameters: []
  overload: System.Data.SqlClient.SqlDataAdapter.ClearBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: SqlDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "Moet worden toegevoegd."
    - id: command
      type: System.Data.IDbCommand
      description: "Moet worden toegevoegd."
    - id: statementType
      type: System.Data.StatementType
      description: "Moet worden toegevoegd."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "Moet worden toegevoegd."
    return:
      type: System.Data.Common.RowUpdatedEventArgs
      description: "Moet worden toegevoegd."
  overload: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: SqlDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "Moet worden toegevoegd."
    - id: command
      type: System.Data.IDbCommand
      description: "Moet worden toegevoegd."
    - id: statementType
      type: System.Data.StatementType
      description: "Moet worden toegevoegd."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "Moet worden toegevoegd."
    return:
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Moet worden toegevoegd."
  overload: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: SqlDataAdapter.DeleteCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld voor een Transact-SQL-instructie of opgeslagen procedure om records te verwijderen van de gegevensset."
  remarks: "Tijdens <xref:System.Data.Common.DbDataAdapter.Update%2A>, als deze eigenschap niet is ingesteld en gegevens van primaire sleutel aanwezig in het <xref:System.Data.DataSet>DeleteCommand kan worden gegenereerd, automatisch als u de <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>eigenschap en gebruik de <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> instellen is</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Vervolgens worden alle extra opdrachten die u instelt gegenereerd door de <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> Deze logica generatie vereist sleutelkolomgegevens moeten zich in de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Zie voor meer informatie [opdrachten genereren met CommandBuilders](~/add/includes/ajax-current-ext-md.md).       Wanneer de DeleteCommand wordt toegewezen aan een eerder gemaakte <xref:System.Data.SqlClient.SqlCommand>, wordt de <xref:System.Data.SqlClient.SqlCommand>niet is gekloond.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> De DeleteCommand onderhoudt een verwijzing naar het eerder gemaakte <xref:System.Data.SqlClient.SqlCommand>object.</xref:System.Data.SqlClient.SqlCommand>       Voor elke kolom die u aan de gegevensbron worden doorgegeven op <xref:System.Data.Common.DbDataAdapter.Update%2A>, een parameter moet worden toegevoegd aan de `InsertCommand`, `UpdateCommand`, of `DeleteCommand`.</xref:System.Data.Common.DbDataAdapter.Update%2A> De `SourceColumn` eigenschap van de parameter moet worden ingesteld op de naam van de kolom. Dit geeft aan dat de waarde van de parameter niet handmatig is ingesteld, maar is genomen van de desbetreffende kolom in de rij momenteel verwerkt."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and DeleteCommand properties. It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.  \n  \n [!code-vb[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._16_1.vb)]\n [!code-cs[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/csharp/p-system.data.sqlclient._16_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlCommand DeleteCommand { get; set; }
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Een <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> gebruikt tijdens <xref:System.Data.Common.DbDataAdapter.Update*>Verwijderde records verwijderen uit de database die overeenkomen met rijen in de <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch
  id: ExecuteBatch
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: ExecuteBatch()
  nameWithType: SqlDataAdapter.ExecuteBatch()
  fullName: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override int ExecuteBatch ();
    parameters: []
    return:
      type: System.Int32
      description: "Moet worden toegevoegd."
  overload: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  id: GetBatchedParameter(System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: GetBatchedParameter(Int32,Int32)
  nameWithType: SqlDataAdapter.GetBatchedParameter(Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);
    parameters:
    - id: commandIdentifier
      type: System.Int32
      description: "Moet worden toegevoegd."
    - id: parameterIndex
      type: System.Int32
      description: "Moet worden toegevoegd."
    return:
      type: System.Data.IDataParameter
      description: "Moet worden toegevoegd."
  overload: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  id: GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: GetBatchedRecordsAffected(Int32,Int32,Exception)
  nameWithType: SqlDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  fullName: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);
    parameters:
    - id: commandIdentifier
      type: System.Int32
      description: "Moet worden toegevoegd."
    - id: recordsAffected
      type: System.Int32
      description: "Moet worden toegevoegd."
    - id: error
      type: System.Exception
      description: "Moet worden toegevoegd."
    return:
      type: System.Boolean
      description: "Moet worden toegevoegd."
  overload: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.InitializeBatching
  id: InitializeBatching
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: InitializeBatching()
  nameWithType: SqlDataAdapter.InitializeBatching()
  fullName: System.Data.SqlClient.SqlDataAdapter.InitializeBatching()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void InitializeBatching ();
    parameters: []
  overload: System.Data.SqlClient.SqlDataAdapter.InitializeBatching*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: SqlDataAdapter.InsertCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld voor een Transact-SQL-instructie of opgeslagen procedure voor het invoegen van nieuwe records in de gegevensbron."
  remarks: "Tijdens <xref:System.Data.Common.DbDataAdapter.Update%2A>, als deze eigenschap niet is ingesteld en gegevens van primaire sleutel aanwezig in het <xref:System.Data.DataSet>InsertCommand kan worden gegenereerd, automatisch als u de <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>eigenschap en gebruik de <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> instellen is</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Vervolgens worden alle extra opdrachten die u instelt gegenereerd door de <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> Deze logica generatie vereist sleutelkolomgegevens moeten zich in de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Zie voor meer informatie [opdrachten genereren met CommandBuilders](~/add/includes/ajax-current-ext-md.md).       Wanneer InsertCommand is toegewezen aan een eerder gemaakte <xref:System.Data.SqlClient.SqlCommand>, wordt de <xref:System.Data.SqlClient.SqlCommand>niet is gekloond.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> Het object InsertCommand onderhoudt een verwijzing naar het eerder gemaakte <xref:System.Data.SqlClient.SqlCommand>object.</xref:System.Data.SqlClient.SqlCommand>       Als de uitvoering van deze opdracht rijen retourneert, deze rijen kunnen worden toegevoegd aan de <xref:System.Data.DataSet>, afhankelijk van hoe u stelt de **UpdatedRowSource** eigenschap van de <xref:System.Data.SqlClient.SqlCommand>object.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.DataSet>       Voor elke kolom die u aan de gegevensbron worden doorgegeven op <xref:System.Data.Common.DbDataAdapter.Update%2A>, een parameter moet worden toegevoegd aan `InsertCommand`, `UpdateCommand`, of `DeleteCommand`.</xref:System.Data.Common.DbDataAdapter.Update%2A> De `SourceColumn` eigenschap van de parameter moet worden ingesteld op de naam van de kolom. Dit geeft aan dat de waarde van de parameter niet handmatig is ingesteld, maar is genomen van de desbetreffende kolom in de rij momenteel verwerkt."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, InsertCommand, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties. It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.  \n  \n [!code-vb[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._33_1.vb)]\n [!code-cs[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/csharp/p-system.data.sqlclient._33_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlCommand InsertCommand { get; set; }
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Een <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> gebruikt tijdens <xref:System.Data.Common.DbDataAdapter.Update*>records invoegen in de database die overeenkomen met de nieuwe rijen in de <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  id: OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: SqlDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatedEventArgs
      description: "Moet worden toegevoegd."
  overload: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  id: OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: SqlDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Moet worden toegevoegd."
  overload: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.RowUpdated
  id: RowUpdated
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: RowUpdated
  nameWithType: SqlDataAdapter.RowUpdated
  fullName: System.Data.SqlClient.SqlDataAdapter.RowUpdated
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Deze gebeurtenis treedt op tijdens <xref:System.Data.Common.DbDataAdapter.Update*>nadat een opdracht is uitgevoerd voor de gegevensbron.</xref:System.Data.Common.DbDataAdapter.Update*> Het bijwerken wordt geprobeerd, zodat de gebeurtenis wordt gestart."
  remarks: "Wanneer u <xref:System.Data.Common.DbDataAdapter.Update%2A>, er zijn twee gebeurtenissen die per gegevensrij bijgewerkt plaatsvinden.</xref:System.Data.Common.DbDataAdapter.Update%2A> De volgorde van de uitvoering is als volgt: 1.  De waarden in de <xref:System.Data.DataRow>worden verplaatst naar de parameterwaarden.</xref:System.Data.DataRow>      2.  De <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>gebeurtenis is opgetreden.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  De opdracht wordt uitgevoerd.      4.  Als de opdracht is ingesteld op `FirstReturnedRecord`, de eerste geretourneerd resultaat wordt geplaatst in de <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Als er output-parameters, zijn ze in de <xref:System.Data.DataRow>.</xref:System.Data.DataRow> geplaatst      6.  De <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>gebeurtenis is opgetreden.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>wordt aangeroepen.</xref:System.Data.DataRow.AcceptChanges%2A>"
  example:
  - "The following example shows how to use both the <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> and RowUpdated events.  \n  \n The <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> event returns this output:  \n  \n event args: (command=System.Data.SqlClient.SqlCommand commandType=2 status=0)  \n  \n The RowUpdated event returns this output:  \n  \n event args: (command=System.Data.SqlClient.SqlCommand commandType=2 recordsAffected=1 row=System.Data.DataRow[37] status=0)  \n  \n [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/add/codesnippet/visualbasic/e-system.data.sqlclient._0_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/add/codesnippet/csharp/e-system.data.sqlclient._0_1.cs)]"
  syntax:
    content: public event System.Data.SqlClient.SqlRowUpdatedEventHandler RowUpdated;
    return:
      type: System.Data.SqlClient.SqlRowUpdatedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.RowUpdating
  id: RowUpdating
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: RowUpdating
  nameWithType: SqlDataAdapter.RowUpdating
  fullName: System.Data.SqlClient.SqlDataAdapter.RowUpdating
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Deze gebeurtenis treedt op tijdens <xref:System.Data.Common.DbDataAdapter.Update*>voordat een opdracht is uitgevoerd voor de gegevensbron.</xref:System.Data.Common.DbDataAdapter.Update*> Het bijwerken wordt geprobeerd, zodat de gebeurtenis wordt gestart."
  remarks: "Wanneer u <xref:System.Data.Common.DbDataAdapter.Update%2A>, er zijn twee gebeurtenissen die per gegevensrij bijgewerkt plaatsvinden.</xref:System.Data.Common.DbDataAdapter.Update%2A> De volgorde van de uitvoering is als volgt: 1.  De waarden in de <xref:System.Data.DataRow>worden verplaatst naar de parameterwaarden.</xref:System.Data.DataRow>      2.  De <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>gebeurtenis is opgetreden.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  De opdracht wordt uitgevoerd.      4.  Als de opdracht is ingesteld op `FirstReturnedRecord`, de eerste geretourneerd resultaat wordt geplaatst in de <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Als er output-parameters, zijn ze in de <xref:System.Data.DataRow>.</xref:System.Data.DataRow> geplaatst      6.  De <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>gebeurtenis is opgetreden.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>wordt aangeroepen.</xref:System.Data.DataRow.AcceptChanges%2A>"
  example:
  - "The following example shows how to use both the RowUpdating and <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> events.  \n  \n The RowUpdating event returns this output:  \n  \n event args: (command=System.Data.SqlClient.SqlCommand commandType=2 status=0)  \n  \n The <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> event returns this output:  \n  \n event args: (command=System.Data.SqlClient.SqlCommand commandType=2 recordsAffected=1 row=System.Data.DataRow[37] status=0)  \n  \n [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/add/codesnippet/visualbasic/e-system.data.sqlclient._1_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/add/codesnippet/csharp/e-system.data.sqlclient._1_1.cs)]"
  syntax:
    content: public event System.Data.SqlClient.SqlRowUpdatingEventHandler RowUpdating;
    return:
      type: System.Data.SqlClient.SqlRowUpdatingEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: SqlDataAdapter.SelectCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld voor een Transact-SQL-instructie of opgeslagen procedure gebruikt om records te selecteren in de gegevensbron."
  remarks: "Wanneer de SelectCommand is toegewezen aan een eerder gemaakte <xref:System.Data.SqlClient.SqlCommand>, wordt de <xref:System.Data.SqlClient.SqlCommand>niet is gekloond.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> De SelectCommand onderhoudt een verwijzing naar het eerder gemaakte <xref:System.Data.SqlClient.SqlCommand>object.</xref:System.Data.SqlClient.SqlCommand>       Als de SelectCommand geen waarde alle rijen retourneert, er zijn geen tabellen worden toegevoegd aan de <xref:System.Data.DataSet>, en geen uitzondering gegenereerd.</xref:System.Data.DataSet>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the SelectCommand, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties. It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.  \n  \n [!code-vb[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._23_1.vb)]\n [!code-cs[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/csharp/p-system.data.sqlclient._23_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlCommand SelectCommand { get; set; }
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Een <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> gebruikt tijdens <xref:System.Data.Common.DbDataAdapter.Fill*>om records te selecteren uit de database voor de plaatsing in de <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Fill*>"
  overload: System.Data.SqlClient.SqlDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  id: System#Data#IDbDataAdapter#DeleteCommand
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Zie voor een beschrijving van dit lid, <xref:System.Data.IDbDataAdapter.DeleteCommand*>.</xref:System.Data.IDbDataAdapter.DeleteCommand*>"
  remarks: "Dit lid is een expliciete interface lid-implementatie. Het kan worden gebruikt alleen wanneer de <xref:System.Data.SqlClient.SqlDataAdapter>exemplaar is geconverteerd naar een <xref:System.Data.IDbDataAdapter>interface.</xref:System.Data.IDbDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Een <xref href=&quot;System.Data.IDbCommand&quot;> </xref> die wordt gebruikt tijdens <xref:System.Data.Common.DbDataAdapter.Update*>om records in de gegevensbron voor verwijderde rijen in de gegevensset te verwijderen.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  id: System#Data#IDbDataAdapter#InsertCommand
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Zie voor een beschrijving van dit lid, <xref:System.Data.IDbDataAdapter.InsertCommand*>.</xref:System.Data.IDbDataAdapter.InsertCommand*>"
  remarks: "Dit lid is een expliciete interface lid-implementatie. Het kan worden gebruikt alleen wanneer de <xref:System.Data.SqlClient.SqlDataAdapter>exemplaar is geconverteerd naar een <xref:System.Data.IDbDataAdapter>interface.</xref:System.Data.IDbDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Een <xref href=&quot;System.Data.IDbCommand&quot;> </xref> die wordt gebruikt tijdens <xref:System.Data.Common.DbDataAdapter.Update*>records invoegen in de gegevensbron voor nieuwe rijen in de gegevensset.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  id: System#Data#IDbDataAdapter#SelectCommand
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Zie voor een beschrijving van dit lid, <xref:System.Data.IDbDataAdapter.SelectCommand*>.</xref:System.Data.IDbDataAdapter.SelectCommand*>"
  remarks: "Dit lid is een expliciete interface lid-implementatie. Het kan worden gebruikt alleen wanneer de <xref:System.Data.SqlClient.SqlDataAdapter>exemplaar is geconverteerd naar een <xref:System.Data.IDbDataAdapter>interface.</xref:System.Data.IDbDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Een <xref href=&quot;System.Data.IDbCommand&quot;> </xref> die wordt gebruikt tijdens <xref:System.Data.Common.DbDataAdapter.Update*>om records te selecteren van gegevensbron voor de plaatsing in de gegevensset.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  id: System#Data#IDbDataAdapter#UpdateCommand
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Zie voor een beschrijving van dit lid, <xref:System.Data.IDbDataAdapter.UpdateCommand*>.</xref:System.Data.IDbDataAdapter.UpdateCommand*>"
  remarks: "Dit lid is een expliciete interface lid-implementatie. Het kan worden gebruikt alleen wanneer de <xref:System.Data.SqlClient.SqlDataAdapter>exemplaar is geconverteerd naar een <xref:System.Data.IDbDataAdapter>interface.</xref:System.Data.IDbDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Een <xref:System.Data.IdbCommand>die wordt gebruikt tijdens <xref:System.Data.Common.DbDataAdapter.Update*>records in de gegevensbron voor gewijzigde rijen in de gegevensset wilt bijwerken.</xref:System.Data.Common.DbDataAdapter.Update*> </xref:System.Data.IdbCommand>"
  overload: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: SqlDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlDataAdapter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Zie voor een beschrijving van dit lid, <xref:System.ICloneable.Clone*>.</xref:System.ICloneable.Clone*>"
  remarks: "Dit lid is een expliciete interface lid-implementatie. Het kan worden gebruikt alleen wanneer de <xref:System.Data.SqlClient.SqlDataAdapter>exemplaar is geconverteerd naar een <xref:System.ICloneable>interface.</xref:System.ICloneable> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Een nieuw object dat een kopie van het huidige exemplaar."
  overload: System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.TerminateBatching
  id: TerminateBatching
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: TerminateBatching()
  nameWithType: SqlDataAdapter.TerminateBatching()
  fullName: System.Data.SqlClient.SqlDataAdapter.TerminateBatching()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void TerminateBatching ();
    parameters: []
  overload: System.Data.SqlClient.SqlDataAdapter.TerminateBatching*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
  id: UpdateBatchSize
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: UpdateBatchSize
  nameWithType: SqlDataAdapter.UpdateBatchSize
  fullName: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld van het aantal rijen dat wordt verwerkt in elke interactie met de server."
  remarks: "Opgehaald of ingesteld van een waarde die Hiermee schakelt ondersteuning voor batchverwerking of en geeft het aantal opdrachten die kunnen worden uitgevoerd in een batch.       Gebruik de eigenschap UpdateBatchSize een gegevensbron bijwerken met wijzigingen van een <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Hierdoor kan de prestaties van toepassingen toenemen doordat het aantal retouren naar de server.       Uitvoeren van een extreem grote batch, kan de prestaties verminderen. Daarom moet u testen voor de instelling voor de optimale batch voordat u uw toepassing implementeert.       Een <xref:System.ArgumentOutOfRangeException>gegenereerd als de waarde is ingesteld op een getal kleiner is dan nul.</xref:System.ArgumentOutOfRangeException>"
  syntax:
    content: public override int UpdateBatchSize { get; set; }
    return:
      type: System.Int32
      description: "Het aantal rijen per batch te verwerken.       <table><thead><tr><th> De waarde is       </th><th> Effect       </th></tr></thead><tbody><tr><td> 0       </td><td> Er is geen limiet voor de batchgrootte...       </td></tr><tr><td> 1       </td><td> Hiermee schakelt u batchupdates.       </td></tr><tr><td> &gt;1       </td><td> Wijzigingen worden verzonden met behulp van batches van UpdateBatchSize bewerkingen tegelijk.       </td></tr></tbody></table>       Als u dit op een andere waarde dan 1, alle opdrachten die zijn gekoppeld aan de <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> te hebben hun **UpdatedRowSource** eigenschap ingesteld op <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref> of <xref uid=&quot;langword_csharp_OutputParameters&quot; name=&quot;OutputParameters&quot; href=&quot;&quot;> </xref>. Anders is er een uitzondering gegenereerd."
  overload: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: SqlDataAdapter.UpdateCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld voor een Transact-SQL-instructie of opgeslagen procedure gebruikt voor het bijwerken van de records in de gegevensbron."
  remarks: "Tijdens <xref:System.Data.Common.DbDataAdapter.Update%2A>, als deze eigenschap niet is ingesteld en gegevens van primaire sleutel aanwezig in het <xref:System.Data.DataSet>UpdateCommand kan worden gegenereerd, automatisch als u de <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>eigenschap en gebruik de <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> instellen is</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Vervolgens worden alle extra opdrachten die u instelt gegenereerd door de <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> Deze logica generatie vereist sleutelkolomgegevens moeten zich in de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Zie voor meer informatie [opdrachten genereren met CommandBuilders](~/add/includes/ajax-current-ext-md.md).       Wanneer de UpdateCommand wordt toegewezen aan een eerder gemaakte <xref:System.Data.SqlClient.SqlCommand>, wordt de <xref:System.Data.SqlClient.SqlCommand>niet is gekloond.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> De UpdateCommand onderhoudt een verwijzing naar het eerder gemaakte <xref:System.Data.SqlClient.SqlCommand>object.</xref:System.Data.SqlClient.SqlCommand>      > [!NOTE] > Als de uitvoering van deze opdracht rijen retourneert, worden de bijgewerkte rijen kunnen worden samengevoegd met de <xref:System.Data.DataSet>, afhankelijk van hoe u stelt de **UpdatedRowSource** eigenschap van de <xref:System.Data.SqlClient.SqlCommand>object.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.DataSet>       Voor elke kolom die u aan de gegevensbron worden doorgegeven op <xref:System.Data.Common.DbDataAdapter.Update%2A>, een parameter moet worden toegevoegd aan `InsertCommand`, `UpdateCommand`, of `DeleteCommand`.</xref:System.Data.Common.DbDataAdapter.Update%2A>       De `SourceColumn` eigenschap van de parameter moet worden ingesteld op de naam van de kolom. Dit geeft aan dat de waarde van de parameter is niet handmatig instellen, maar die afkomstig zijn uit de desbetreffende kolom in de rij momenteel verwerkt."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, UpdateCommand and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties. It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.  \n  \n [!code-vb[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._31_1.vb)]\n [!code-cs[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/csharp/p-system.data.sqlclient._31_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlCommand UpdateCommand { get; set; }
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Een <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> gebruikt tijdens <xref:System.Data.Common.DbDataAdapter.Update*>gewijzigd om bij te werken records in de database die overeenkomen met rijen in de <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.Common.DbDataAdapter
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter()
  nameWithType: SqlDataAdapter.SqlDataAdapter()
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter()
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter(SqlCommand)
  nameWithType: SqlDataAdapter.SqlDataAdapter(SqlCommand)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(SqlCommand)
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter(String,SqlConnection)
  nameWithType: SqlDataAdapter.SqlDataAdapter(String,SqlConnection)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(String,SqlConnection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter(String,String)
  nameWithType: SqlDataAdapter.SqlDataAdapter(String,String)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(String,String)
- uid: System.Data.SqlClient.SqlDataAdapter.AddToBatch(System.Data.IDbCommand)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: AddToBatch(IDbCommand)
  nameWithType: SqlDataAdapter.AddToBatch(IDbCommand)
  fullName: System.Data.SqlClient.SqlDataAdapter.AddToBatch(IDbCommand)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.SqlClient.SqlDataAdapter.ClearBatch
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: ClearBatch()
  nameWithType: SqlDataAdapter.ClearBatch()
  fullName: System.Data.SqlClient.SqlDataAdapter.ClearBatch()
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: SqlDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatedEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatedEventArgs
  nameWithType: RowUpdatedEventArgs
  fullName: System.Data.Common.RowUpdatedEventArgs
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Data.Common.DataTableMapping
  parent: System.Data.Common
  isExternal: false
  name: DataTableMapping
  nameWithType: DataTableMapping
  fullName: System.Data.Common.DataTableMapping
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: SqlDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatingEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatingEventArgs
  nameWithType: RowUpdatingEventArgs
  fullName: System.Data.Common.RowUpdatingEventArgs
- uid: System.Data.SqlClient.SqlDataAdapter.DeleteCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataAdapter.DeleteCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.DeleteCommand
- uid: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: ExecuteBatch()
  nameWithType: SqlDataAdapter.ExecuteBatch()
  fullName: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch()
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: GetBatchedParameter(Int32,Int32)
  nameWithType: SqlDataAdapter.GetBatchedParameter(Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(Int32,Int32)
- uid: System.Data.IDataParameter
  parent: System.Data
  isExternal: false
  name: IDataParameter
  nameWithType: IDataParameter
  fullName: System.Data.IDataParameter
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: GetBatchedRecordsAffected(Int32,Int32,Exception)
  nameWithType: SqlDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  fullName: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Data.SqlClient.SqlDataAdapter.InitializeBatching
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: InitializeBatching()
  nameWithType: SqlDataAdapter.InitializeBatching()
  fullName: System.Data.SqlClient.SqlDataAdapter.InitializeBatching()
- uid: System.Data.SqlClient.SqlDataAdapter.InsertCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataAdapter.InsertCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.InsertCommand
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: SqlDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: SqlDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
- uid: System.Data.SqlClient.SqlDataAdapter.RowUpdated
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: RowUpdated
  nameWithType: SqlDataAdapter.RowUpdated
  fullName: System.Data.SqlClient.SqlDataAdapter.RowUpdated
- uid: System.Data.SqlClient.SqlRowUpdatedEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlRowUpdatedEventHandler
  nameWithType: SqlRowUpdatedEventHandler
  fullName: System.Data.SqlClient.SqlRowUpdatedEventHandler
- uid: System.Data.SqlClient.SqlDataAdapter.RowUpdating
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: RowUpdating
  nameWithType: SqlDataAdapter.RowUpdating
  fullName: System.Data.SqlClient.SqlDataAdapter.RowUpdating
- uid: System.Data.SqlClient.SqlRowUpdatingEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlRowUpdatingEventHandler
  nameWithType: SqlRowUpdatingEventHandler
  fullName: System.Data.SqlClient.SqlRowUpdatingEventHandler
- uid: System.Data.SqlClient.SqlDataAdapter.SelectCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataAdapter.SelectCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.SelectCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: SqlDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlDataAdapter.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlDataAdapter.TerminateBatching
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: TerminateBatching()
  nameWithType: SqlDataAdapter.TerminateBatching()
  fullName: System.Data.SqlClient.SqlDataAdapter.TerminateBatching()
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: UpdateBatchSize
  nameWithType: SqlDataAdapter.UpdateBatchSize
  fullName: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataAdapter.UpdateCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.UpdateCommand
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter
  nameWithType: SqlDataAdapter.SqlDataAdapter
- uid: System.Data.SqlClient.SqlDataAdapter.AddToBatch*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: AddToBatch
  nameWithType: SqlDataAdapter.AddToBatch
- uid: System.Data.SqlClient.SqlDataAdapter.ClearBatch*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: ClearBatch
  nameWithType: SqlDataAdapter.ClearBatch
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent
  nameWithType: SqlDataAdapter.CreateRowUpdatedEvent
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent
  nameWithType: SqlDataAdapter.CreateRowUpdatingEvent
- uid: System.Data.SqlClient.SqlDataAdapter.DeleteCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataAdapter.DeleteCommand
- uid: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: ExecuteBatch
  nameWithType: SqlDataAdapter.ExecuteBatch
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: GetBatchedParameter
  nameWithType: SqlDataAdapter.GetBatchedParameter
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: GetBatchedRecordsAffected
  nameWithType: SqlDataAdapter.GetBatchedRecordsAffected
- uid: System.Data.SqlClient.SqlDataAdapter.InitializeBatching*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: InitializeBatching
  nameWithType: SqlDataAdapter.InitializeBatching
- uid: System.Data.SqlClient.SqlDataAdapter.InsertCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataAdapter.InsertCommand
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: OnRowUpdated
  nameWithType: SqlDataAdapter.OnRowUpdated
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: OnRowUpdating
  nameWithType: SqlDataAdapter.OnRowUpdating
- uid: System.Data.SqlClient.SqlDataAdapter.SelectCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataAdapter.SelectCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: SqlDataAdapter.System.ICloneable.Clone
- uid: System.Data.SqlClient.SqlDataAdapter.TerminateBatching*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: TerminateBatching
  nameWithType: SqlDataAdapter.TerminateBatching
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: UpdateBatchSize
  nameWithType: SqlDataAdapter.UpdateBatchSize
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataAdapter.UpdateCommand
