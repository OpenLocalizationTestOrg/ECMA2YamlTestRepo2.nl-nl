### YamlMime:ManagedReference
items:
- uid: System.Web.DefaultHttpHandler
  id: DefaultHttpHandler
  children:
  - System.Web.DefaultHttpHandler.#ctor
  - System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.DefaultHttpHandler.Context
  - System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)
  - System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  - System.Web.DefaultHttpHandler.IsReusable
  - System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure
  - System.Web.DefaultHttpHandler.OverrideExecuteUrlPath
  - System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)
  langs:
  - csharp
  name: DefaultHttpHandler
  nameWithType: DefaultHttpHandler
  fullName: System.Web.DefaultHttpHandler
  type: Class
  summary: "Hiermee geeft u de eigenschappen en methoden van een standaard-HTTP-handler."
  remarks: "Een object DefaultHttpHandler onderschept binnenkomende aanvragen in de pijplijn HTTP wanneer zowel aanvraag worden onderschept via Internet Information Services (IIS) 6.0 is geconfigureerd als geen expliciete bindingen zijn van toepassing op de aangevraagde uitbreiding.       Aanvraag worden onderschept, kunt u instellen via de functie voor toewijzing met jokertekens ge√Øntroduceerd in IIS 6.0. Zoek voor meer informatie de [MSDN-bibliotheek](http://go.microsoft.com/fwlink/?linkid=37118) voor informatie over het gebruik van jokertekens toepassing maps opnieuw toewijzen van een URL.       De DefaultHttpHandler klasse implementeert de <xref:System.Web.IHttpAsyncHandler>interface voor asynchrone verwerking.</xref:System.Web.IHttpAsyncHandler> Raadpleeg voor algemene informatie over HTTP-handlers [HTTP-Handlers en HTTP-Modules overzicht](~/add/includes/ajax-current-ext-md.md). Zie ook voor meer informatie het volgende: - over het maken van asynchrone HTTP-handlers, Zie [Walkthrough: maken van een asynchrone HTTP-Handler](~/add/includes/ajax-current-ext-md.md).      -Informatie over het registreren van HTTP-handlers, Zie [hoe: http-Handlers registreren](~/add/includes/ajax-current-ext-md.md).       Klassen kunnen worden afgeleid van de klasse DefaultHttpHandler om aangepaste afhandeling van aanvragen. Een asynchrone HTTP-handler die is afgeleid van de DefaultHttpHandler kan overschrijven de <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A>methode te wijzigen hoe aanvragen worden verwerkt.</xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A>       Een DefaultHttpHandler gebruikt geen fouten in ASP.NET. Bestaande inhoud die gebruikmaakt van IIS-fouten of een eigen ISAPI aangepaste fout mechanisme ongewijzigd zou werken."
  example:
  - "The following code example demonstrates how to implement a customized HTTP handler by deriving from the DefaultHttpHandler class.  \n  \n [!code-vb[System.Web.DefaultHttpHandler#1](~/add/codesnippet/visualbasic/t-system.web.defaulthttp_1.vb)]\n [!code-cs[System.Web.DefaultHttpHandler#1](~/add/codesnippet/csharp/t-system.web.defaulthttp_1.cs)]"
  syntax:
    content: 'public class DefaultHttpHandler : System.Web.IHttpAsyncHandler'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpAsyncHandler
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.#ctor
  id: '#ctor'
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: DefaultHttpHandler()
  nameWithType: DefaultHttpHandler.DefaultHttpHandler()
  fullName: System.Web.DefaultHttpHandler.DefaultHttpHandler()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> klasse."
  syntax:
    content: public DefaultHttpHandler ();
    parameters: []
  overload: System.Web.DefaultHttpHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Initieert een asynchrone aanroep van de HTTP-handler."
  remarks: "Bij het maken van een HTTP-handler voor asynchrone gebruik uw handler moet worden gebruikt voor het implementeren van de asynchrone BeginProcessRequest en <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A>methoden die asynchroon worden aangeroepen door ASP.NET.</xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A>"
  syntax:
    content: public virtual IAsyncResult BeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object state);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Een object dat de verwijzingen naar intrinsieke server objecten die worden gebruikt om HTTP-aanvragen te verwerken."
    - id: callback
      type: System.AsyncCallback
      description: "De methode aan te roepen wanneer de asynchrone methode-aanroep voltooid is. Als `callback` is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, de gemachtigde is niet aangeroepen."
    - id: state
      type: System.Object
      description: "Statusgegevens die nodig is voor de aanvraag niet verwerken."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>bevat informatie over de status van het proces.</xref:System.IAsyncResult>"
  overload: System.Web.DefaultHttpHandler.BeginProcessRequest*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "De voorwaarden voor het verwerken van een aanvraag is mislukt en het aangevraagde bestand heeft de achtervoegsel ASP of de aanvraag is verzonden via de POST."
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.Context
  id: Context
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: Context
  nameWithType: DefaultHttpHandler.Context
  fullName: System.Web.DefaultHttpHandler.Context
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "De context die is gekoppeld aan de huidige opgehaald <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> object."
  remarks: "De eigenschap Context biedt toegang tot de huidige <xref:System.Web.HttpContext>-object voor afgeleide klassen.</xref:System.Web.HttpContext> Een <xref:System.Web.HttpContext>object biedt toegang tot de intrinsieke <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, en <xref:System.Web.HttpApplication.Server%2A>Eigenschappen voor de aanvraag.</xref:System.Web.HttpApplication.Server%2A> </xref:System.Web.HttpApplication.Response%2A> </xref:System.Web.HttpApplication.Request%2A> </xref:System.Web.HttpContext> Zie voor meer informatie over het openen van contextuele informatie <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>"
  syntax:
    content: protected System.Web.HttpContext Context { get; }
    return:
      type: System.Web.HttpContext
      description: "Een <xref href=&quot;System.Web.HttpContext&quot;> </xref> object met de huidige context."
  overload: System.Web.DefaultHttpHandler.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)
  id: EndProcessRequest(System.IAsyncResult)
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: EndProcessRequest(IAsyncResult)
  nameWithType: DefaultHttpHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.DefaultHttpHandler.EndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Biedt een end-methode voor een asynchrone proces."
  remarks: "De methode EndProcessRequest kunt u eventuele uitzonderingen die zijn opgepikt tijdens de asynchrone genereert."
  syntax:
    content: public virtual void EndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Een object dat informatie over de status van het proces bevat."
  overload: System.Web.DefaultHttpHandler.EndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  id: ExecuteUrlHeaders
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: ExecuteUrlHeaders
  nameWithType: DefaultHttpHandler.ExecuteUrlHeaders
  fullName: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee wordt een verzameling aanvraagheaders en waarden van de aanvraag om over te dragen samen met de aanvraag."
  remarks: "De eigenschap ExecuteUrlHeaders retourneert een lege verzameling tenzij dit ingevuld in een klasse die is afgeleid van de <xref:System.Web.DefaultHttpHandler>klasse.</xref:System.Web.DefaultHttpHandler> De headers die zijn toegevoegd, worden toegevoegd aan de verzameling van kopteksten in de aanvraag voordat deze de aanvraag terug naar Internet Information Services (IIS)."
  syntax:
    content: protected System.Collections.Specialized.NameValueCollection ExecuteUrlHeaders { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "Een <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> met aanvraagheaders en waarden."
  overload: System.Web.DefaultHttpHandler.ExecuteUrlHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.IsReusable
  id: IsReusable
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: IsReusable
  nameWithType: DefaultHttpHandler.IsReusable
  fullName: System.Web.DefaultHttpHandler.IsReusable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Haalt een Boolean die aangeeft dat een andere aanvraag het huidige exemplaar van kunt de <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> klasse."
  remarks: "De eigenschap IsReusable expliciet instellen op `true` of `false`, de eigenschap IsReusable te vervangen."
  syntax:
    content: public virtual bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> is herbruikbare, anders, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DefaultHttpHandler.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure
  id: OnExecuteUrlPreconditionFailure
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: OnExecuteUrlPreconditionFailure()
  nameWithType: DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
  fullName: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wordt aangeroepen wanneer de voorwaarden verhinderen dat de <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> object van het verwerken van een aanvraag."
  remarks: "Voorwaarden zijn opgegeven door de client in de aanvraag-header-velden en op de webserver worden ge√´valueerd. Bijvoorbeeld, met behulp van de voorwaarden clients kunnen voorkomen dat een aangevraagde methode (bijvoorbeeld GET) wordt toegepast op een andere bron dan de bedoeld. Voor meer informatie raadpleegt u de sectie 14, &quot;Header velddefinities&quot;, in de [Hypertext Transfer Protocol--HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) specificatie op de website van de World Wide Web Consortium (W3C).       De methode OnExecuteUrlPreconditionFailure wordt aangeroepen wanneer de voorwaarden verhinderen dat de <xref:System.Web.DefaultHttpHandler>object van het verwerken van een aanvraag.</xref:System.Web.DefaultHttpHandler> Een hiervan afgeleide klasse mogelijk Negeer de methode OnExecuteUrlPreconditionFailure Veroorzaak een exception wanneer de voorwaarden mislukken. De <xref:System.Web.DefaultHttpHandler>Veroorzaak een exception niet in de methode OnExecuteUrlPreconditionFailure.</xref:System.Web.DefaultHttpHandler>       Geen van de volgende, zal de voorwaarden mislukken:- <xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName> aanroepen      - <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName> Aanroepen      - <xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName> Aanroepen      -Het wijzigen van het cachebeleid voor het antwoord.      -Toevoegen van een <xref:System.IO.Stream>object als een filter voor de <xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName>eigenschap.</xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName> </xref:System.IO.Stream>"
  syntax:
    content: public virtual void OnExecuteUrlPreconditionFailure ();
    parameters: []
  overload: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath
  id: OverrideExecuteUrlPath
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: OverrideExecuteUrlPath()
  nameWithType: DefaultHttpHandler.OverrideExecuteUrlPath()
  fullName: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "De doel-URL voor de huidige aanvraag overschrijft."
  remarks: "De methode OverrideExecuteUrlPath retourneert `null` tenzij deze is genegeerd in een klasse die is afgeleid van de <xref:System.Web.DefaultHttpHandler>klasse.</xref:System.Web.DefaultHttpHandler>       De methode OverrideExecuteUrlPath wordt aangeroepen alleen als ASP.NET wordt uitgevoerd in de isolatiemodus van werkprocessen op IIS 6.0, en als het antwoord is niet gewijzigd v√≥√≥r de <xref:System.Web.DefaultHttpHandler>object is aangeroepen.</xref:System.Web.DefaultHttpHandler> Het antwoord is gewijzigd door een van de volgende:- <xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName> aanroepen      - <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName> Aanroepen      - <xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName> Aanroepen      -Het wijzigen van het cachebeleid voor het antwoord.      -Toevoegen van een <xref:System.IO.Stream>object als een filter voor de <xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName>eigenschap.</xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName> </xref:System.IO.Stream>"
  syntax:
    content: public virtual string OverrideExecuteUrlPath ();
    parameters: []
    return:
      type: System.String
      description: "De overschreven URL voor gebruik in de aanvraag; of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als een genegeerde URL is niet opgegeven."
  overload: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: DefaultHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.DefaultHttpHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Maakt een <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> verwerken van webaanvragen HTTP-object."
  remarks: "De methode ProcessRequest moet niet synchroon worden aangeroepen. Klassen die zijn afgeleid van de <xref:System.Web.DefaultHttpHandler>klasse de ProcessRequest om aangepaste aanvraagverwerking kunt negeren.</xref:System.Web.DefaultHttpHandler>"
  syntax:
    content: public virtual void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Een object dat de verwijzingen naar intrinsieke serverobjecten gebruikt om HTTP-aanvragen te verwerken."
  overload: System.Web.DefaultHttpHandler.ProcessRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De ProcessRequest is synchroon aangeroepen."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DefaultHttpHandler.#ctor
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: DefaultHttpHandler()
  nameWithType: DefaultHttpHandler.DefaultHttpHandler()
  fullName: System.Web.DefaultHttpHandler.DefaultHttpHandler()
- uid: System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.DefaultHttpHandler.Context
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: Context
  nameWithType: DefaultHttpHandler.Context
  fullName: System.Web.DefaultHttpHandler.Context
- uid: System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: EndProcessRequest(IAsyncResult)
  nameWithType: DefaultHttpHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.DefaultHttpHandler.EndProcessRequest(IAsyncResult)
- uid: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ExecuteUrlHeaders
  nameWithType: DefaultHttpHandler.ExecuteUrlHeaders
  fullName: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.DefaultHttpHandler.IsReusable
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: DefaultHttpHandler.IsReusable
  fullName: System.Web.DefaultHttpHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OnExecuteUrlPreconditionFailure()
  nameWithType: DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
  fullName: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
- uid: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OverrideExecuteUrlPath()
  nameWithType: DefaultHttpHandler.OverrideExecuteUrlPath()
  fullName: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: DefaultHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.DefaultHttpHandler.ProcessRequest(HttpContext)
- uid: System.Web.DefaultHttpHandler.#ctor*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: DefaultHttpHandler
  nameWithType: DefaultHttpHandler.DefaultHttpHandler
- uid: System.Web.DefaultHttpHandler.BeginProcessRequest*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: BeginProcessRequest
  nameWithType: DefaultHttpHandler.BeginProcessRequest
- uid: System.Web.DefaultHttpHandler.Context*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: Context
  nameWithType: DefaultHttpHandler.Context
- uid: System.Web.DefaultHttpHandler.EndProcessRequest*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: EndProcessRequest
  nameWithType: DefaultHttpHandler.EndProcessRequest
- uid: System.Web.DefaultHttpHandler.ExecuteUrlHeaders*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ExecuteUrlHeaders
  nameWithType: DefaultHttpHandler.ExecuteUrlHeaders
- uid: System.Web.DefaultHttpHandler.IsReusable*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: DefaultHttpHandler.IsReusable
- uid: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OnExecuteUrlPreconditionFailure
  nameWithType: DefaultHttpHandler.OnExecuteUrlPreconditionFailure
- uid: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OverrideExecuteUrlPath
  nameWithType: DefaultHttpHandler.OverrideExecuteUrlPath
- uid: System.Web.DefaultHttpHandler.ProcessRequest*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ProcessRequest
  nameWithType: DefaultHttpHandler.ProcessRequest
