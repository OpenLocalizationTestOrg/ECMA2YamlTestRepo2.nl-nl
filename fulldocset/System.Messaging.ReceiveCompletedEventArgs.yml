### YamlMime:ManagedReference
items:
- uid: System.Messaging.ReceiveCompletedEventArgs
  id: ReceiveCompletedEventArgs
  children:
  - System.Messaging.ReceiveCompletedEventArgs.AsyncResult
  - System.Messaging.ReceiveCompletedEventArgs.Message
  langs:
  - csharp
  name: ReceiveCompletedEventArgs
  nameWithType: ReceiveCompletedEventArgs
  fullName: System.Messaging.ReceiveCompletedEventArgs
  type: Class
  summary: "Biedt gegevens voor de <xref href=&quot;System.Messaging.MessageQueue.ReceiveCompleted&quot;> </xref> gebeurtenis. Wanneer uw asynchrone ontvangst bewerking aanroept een gebeurtenis-handler, een exemplaar van deze klasse wordt doorgegeven aan de handler."
  remarks: "Wanneer u gebeurtenismelding gebruikt om berichten te ontvangen asynchroon uit de wachtrij, moet u een methode die verantwoordelijk is voor de verwerking van uw bericht maken. Uw code moet worden aangeroepen <xref:System.Messaging.MessageQueue.BeginReceive%2A>om te beginnen met de asynchrone verwerking.</xref:System.Messaging.MessageQueue.BeginReceive%2A> Wanneer een bericht wordt ontvangen, uw toepassing wordt geïnformeerd via de <xref:System.Messaging.MessageQueue.ReceiveCompleted>gebeurtenis.</xref:System.Messaging.MessageQueue.ReceiveCompleted> Een exemplaar van ReceiveCompletedEventArgs is doorgegeven aan de gebeurtenisgemachtigde voor de die de gebeurtenis-handler aanroept. De gegevens die zijn gekoppeld aan de <xref:System.Messaging.MessageQueue.ReceiveCompleted>gebeurtenis deel uitmaakt van de gemachtigde <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A>parameter.</xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> </xref:System.Messaging.MessageQueue.ReceiveCompleted>       Er zijn twee manieren worden gemeld van voltooiing van de gebeurtenis: gebeurtenismelding en retouraanroepen. ReceiveCompletedEventArgs wordt alleen gebruikt met gebeurtenismelding. Zie voor informatie retouraanroepen en gebeurtenismelding vergelijken &quot;vs gebeurtenissen. Retouraanroepen&quot; op MSDN.       ReceiveCompletedEventArgs toegang biedt ontvangen aan het bericht die geïnitieerd het einde van de asynchrone bewerking via de <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A>lid.</xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> Dit is een alternatieve toegang tot het bericht en gedraagt zich grotendeels hetzelfde als een aanroep van <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName>.</xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName>"
  example:
  - "The following code example creates an event handler for the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event and associates it with the event delegate by using the <xref:System.Messaging.ReceiveCompletedEventHandler>. The event handler, `MyReceiveCompleted`, receives a message from a queue and writes its body to the screen.  \n  \n [!code-cs[MessageQueue.ReceiveCompleted#1](~/add/codesnippet/csharp/t-system.messaging.recei_1_1.cs)]\n [!code-cpp[MessageQueue.ReceiveCompleted#1](~/add/codesnippet/cpp/t-system.messaging.recei_1_1.cpp)]\n [!code-vb[MessageQueue.ReceiveCompleted#1](~/add/codesnippet/visualbasic/t-system.messaging.recei_1_1.vb)]"
  syntax:
    content: 'public class ReceiveCompletedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.ReceiveCompletedEventArgs.AsyncResult
  id: AsyncResult
  parent: System.Messaging.ReceiveCompletedEventArgs
  langs:
  - csharp
  name: AsyncResult
  nameWithType: ReceiveCompletedEventArgs.AsyncResult
  fullName: System.Messaging.ReceiveCompletedEventArgs.AsyncResult
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Opgehaald of ingesteld van het resultaat van de asynchrone bewerking aangevraagd."
  remarks: "AsyncResult identificeert lopende of voltooide asynchrone bewerkingen. De eigenschap gegevens bevat die helpt bepalen welke van verschillende mogelijke asynchrone bewerkingen zijn voltooid te, en wanneer doorgegeven aan de gebeurtenis-handler, kunt u <xref:System.Messaging.MessageQueue.EndReceive%2A>voor toegang tot het bericht dat is gekoppeld aan de voltooide bewerking.</xref:System.Messaging.MessageQueue.EndReceive%2A>       Als u aanroept <xref:System.Messaging.MessageQueue.BeginReceive%2A>, een <xref:System.IAsyncResult>onmiddellijk geretourneerd, hoewel er een bericht als dit bestaat, is nog niet opgehaald omdat de bewerking is niet voltooid.</xref:System.IAsyncResult> </xref:System.Messaging.MessageQueue.BeginReceive%2A> Het AsyncResult geeft de status van de asynchrone bewerking. <xref:System.Messaging.MessageQueue.BeginReceive%2A>maakt het object, dat wordt gewijzigd in de bewerking totdat <xref:System.Messaging.MessageQueue.EndReceive%2A>deze is voltooid</xref:System.Messaging.MessageQueue.EndReceive%2A></xref:System.Messaging.MessageQueue.BeginReceive%2A>"
  syntax:
    content: public IAsyncResult AsyncResult { get; set; }
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>die de gegevens die zijn gekoppeld aan de ontvangstbewerking bevat.</xref:System.IAsyncResult>"
  overload: System.Messaging.ReceiveCompletedEventArgs.AsyncResult*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.ReceiveCompletedEventArgs.Message
  id: Message
  parent: System.Messaging.ReceiveCompletedEventArgs
  langs:
  - csharp
  name: Message
  nameWithType: ReceiveCompletedEventArgs.Message
  fullName: System.Messaging.ReceiveCompletedEventArgs.Message
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Haalt het bericht dat is gekoppeld met de asynchrone ontvangen bewerking."
  remarks: "De berichteigenschap biedt een manier voor het ophalen van het bericht dat geïnitieerd het einde van de asynchrone bewerking ontvangen.       <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName>wordt aangeroepen voor het eerst de berichteigenschap wordt gelezen, zodat deze niet nodig om aan te roepen <xref:System.Messaging.MessageQueue.EndReceive%2A>voorafgaand aan de waarde van deze eigenschap.</xref:System.Messaging.MessageQueue.EndReceive%2A></xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName>"
  syntax:
    content: public System.Messaging.Message Message { get; }
    return:
      type: System.Messaging.Message
      description: "Een <xref href=&quot;System.Messaging.Message&quot;> </xref> die staat voor het einde resultaat van de asynchrone bewerking ontvangen."
  overload: System.Messaging.ReceiveCompletedEventArgs.Message*
  exceptions:
  - type: System.Messaging.MessageQueueException
    commentId: T:System.Messaging.MessageQueueException
    description: "Het bericht kan niet worden opgehaald. De time-out van de asynchrone bewerking is mogelijk verlopen."
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Messaging.MessageQueueException
  parent: System.Messaging
  isExternal: false
  name: MessageQueueException
  nameWithType: MessageQueueException
  fullName: System.Messaging.MessageQueueException
- uid: System.Messaging.ReceiveCompletedEventArgs.AsyncResult
  parent: System.Messaging.ReceiveCompletedEventArgs
  isExternal: false
  name: AsyncResult
  nameWithType: ReceiveCompletedEventArgs.AsyncResult
  fullName: System.Messaging.ReceiveCompletedEventArgs.AsyncResult
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Messaging.ReceiveCompletedEventArgs.Message
  parent: System.Messaging.ReceiveCompletedEventArgs
  isExternal: false
  name: Message
  nameWithType: ReceiveCompletedEventArgs.Message
  fullName: System.Messaging.ReceiveCompletedEventArgs.Message
- uid: System.Messaging.Message
  parent: System.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message
- uid: System.Messaging.ReceiveCompletedEventArgs.AsyncResult*
  parent: System.Messaging.ReceiveCompletedEventArgs
  isExternal: false
  name: AsyncResult
  nameWithType: ReceiveCompletedEventArgs.AsyncResult
- uid: System.Messaging.ReceiveCompletedEventArgs.Message*
  parent: System.Messaging.ReceiveCompletedEventArgs
  isExternal: false
  name: Message
  nameWithType: ReceiveCompletedEventArgs.Message
