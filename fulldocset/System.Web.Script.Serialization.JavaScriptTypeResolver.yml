### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver
  id: JavaScriptTypeResolver
  children:
  - System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor
  - System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)
  - System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)
  langs:
  - csharp
  name: JavaScriptTypeResolver
  nameWithType: JavaScriptTypeResolver
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver
  type: Class
  summary: "Biedt de abstracte basisklasse voor de uitvoering van een aangepast type-resolver."
  remarks: "De klasse JavaScriptTypeResolver biedt de services voor:-converteren van beheerde Typ gegevens in een tekenreekswaarde via de <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>methode.</xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>      -Het omzetten van een string-waarde op de juiste beheerde type via de <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>methode.</xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>       Wanneer de <xref:System.Web.Script.Serialization.JavaScriptSerializer>object serialiseert aangepaste typen, deze kan desgewenst opnemen in de geserialiseerde JSON JavaScript Object Notation ()-tekenreeks een waarde die informatie bevat.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Tijdens de deserialisatie- <xref:System.Web.Script.Serialization.JavaScriptSerializer>kunnen vervolgens de verwijzing naar deze string-waarde om te bepalen van de juiste beheerde type die de JSON-tekenreeks geconverteerd.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Als u een type-resolver bieden de <xref:System.Web.Script.Serialization.JavaScriptSerializer>exemplaar, de serialisatiefunctie gebruikt de <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>en <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>methoden tussen het beheerde type en de tekenreekswaarde toewijzen tijdens de serialisatie en deserialisatie, respectievelijk.</xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> </xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       De klasse JavaScriptTypeResolver is de basisklasse voor de <xref:System.Web.Script.Serialization.SimpleTypeResolver>klasse, die voorziet in een implementatie van een type resolver die gebruikmaakt van de beheerde assembly gekwalificeerde typenaam.</xref:System.Web.Script.Serialization.SimpleTypeResolver>"
  example:
  - "The following example demonstrates how to create a custom type resolver.  \n  \n [!code-vb[System.Web.Script.Serialization.TypeResolver#2](~/add/codesnippet/visualbasic/t-system.web.script.seri_0_1.vb)]\n [!code-cs[System.Web.Script.Serialization.TypeResolver#2](~/add/codesnippet/csharp/t-system.web.script.seri_0_1.cs)]"
  syntax:
    content: public abstract class JavaScriptTypeResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor
  id: '#ctor'
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  langs:
  - csharp
  name: JavaScriptTypeResolver()
  nameWithType: JavaScriptTypeResolver.JavaScriptTypeResolver()
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.JavaScriptTypeResolver()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.Script.Serialization.JavaScriptTypeResolver&quot;> </xref> klasse."
  syntax:
    content: protected JavaScriptTypeResolver ();
    parameters: []
  overload: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)
  id: ResolveType(System.String)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  langs:
  - csharp
  name: ResolveType(String)
  nameWithType: JavaScriptTypeResolver.ResolveType(String)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Wanneer in een afgeleide klasse genegeerd, retourneert de <xref:System.Type>-object dat is gekoppeld aan de opgegeven typenaam.</xref:System.Type>"
  remarks: "Wanneer een resolver type is gekoppeld aan een <xref:System.Web.Script.Serialization.JavaScriptSerializer>exemplaar, de serialisatiefunctie gebruikt de methode ResolveType wanneer doorlopen een JSON-tekenreeks om te bepalen van de specifieke beheerd type waarop u het JSON-type worden geconverteerd.</xref:System.Web.Script.Serialization.JavaScriptSerializer>"
  syntax:
    content: public abstract Type ResolveType (string id);
    parameters:
    - id: id
      type: System.String
      description: "De naam van het beheerde type."
    return:
      type: System.Type
      description: "De <xref:System.Type>-object dat is gekoppeld aan de opgegeven typenaam.</xref:System.Type>"
  overload: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)
  id: ResolveTypeId(System.Type)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  langs:
  - csharp
  name: ResolveTypeId(Type)
  nameWithType: JavaScriptTypeResolver.ResolveTypeId(Type)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Wanneer in een afgeleide klasse genegeerd, retourneert de typenaam voor de opgegeven <xref:System.Type>object.</xref:System.Type>"
  remarks: "Als de ResolveTypeId-methode een retourneert `null` of <xref:System.String>, en vervolgens het type niet wordt ondersteund door de type-resolver.</xref:System.String>"
  syntax:
    content: public abstract string ResolveTypeId (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Het beheerde type kunnen worden omgezet."
    return:
      type: System.String
      description: "De naam van het opgegeven beheerde type."
  overload: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: JavaScriptTypeResolver()
  nameWithType: JavaScriptTypeResolver.JavaScriptTypeResolver()
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.JavaScriptTypeResolver()
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveType(String)
  nameWithType: JavaScriptTypeResolver.ResolveType(String)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveTypeId(Type)
  nameWithType: JavaScriptTypeResolver.ResolveTypeId(Type)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(Type)
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor*
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: JavaScriptTypeResolver
  nameWithType: JavaScriptTypeResolver.JavaScriptTypeResolver
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType*
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveType
  nameWithType: JavaScriptTypeResolver.ResolveType
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId*
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveTypeId
  nameWithType: JavaScriptTypeResolver.ResolveTypeId
