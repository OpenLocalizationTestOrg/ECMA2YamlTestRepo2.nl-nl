### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.XmlSerializerFactory
  id: XmlSerializerFactory
  children:
  - System.Xml.Serialization.XmlSerializerFactory.#ctor
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  langs:
  - csharp
  name: XmlSerializerFactory
  nameWithType: XmlSerializerFactory
  fullName: System.Xml.Serialization.XmlSerializerFactory
  type: Class
  summary: "Hiermee maakt u getypte versies van de <xref:System.Xml.Serialization.XmlSerializer>voor efficiënter serialisatie.</xref:System.Xml.Serialization.XmlSerializer>"
  syntax:
    content: public class XmlSerializerFactory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: XmlSerializerFactory()
  nameWithType: XmlSerializerFactory.XmlSerializerFactory()
  fullName: System.Xml.Serialization.XmlSerializerFactory.XmlSerializerFactory()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref> klasse."
  syntax:
    content: public XmlSerializerFactory ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializerFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)
  id: CreateSerializer(System.Type)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Retourneert een afleiding van de <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref> klasse die wordt gebruikt voor het serialiseren van het opgegeven type."
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "De <xref:System.Type>te serialiseren.</xref:System.Type>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "Een afleiding van de <xref:System.Xml.Serialization.XmlSerializer>klasse die specifiek is gemaakt voor het serialiseren van het opgegeven type.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  id: CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(XmlTypeMapping)
  nameWithType: XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Retourneert een afleiding van de <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref> met behulp van een object dat één type wordt toegewezen aan een andere klasse."
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);
    parameters:
    - id: xmlTypeMapping
      type: System.Xml.Serialization.XmlTypeMapping
      description: "Een <xref:System.Xml.Serialization.XmlTypeMapping>die één type wordt toegewezen aan een andere.</xref:System.Xml.Serialization.XmlTypeMapping>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "Een afleiding van de <xref:System.Xml.Serialization.XmlSerializer>klasse die specifiek is gemaakt voor het serialiseren van het toegewezen type.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)
  id: CreateSerializer(System.Type,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Retourneert een afleiding van de <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref> klasse die wordt gebruikt voor het serialiseren van het opgegeven type en de naamruimte."
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, string defaultNamespace);
    parameters:
    - id: type
      type: System.Type
      description: "De <xref:System.Type>te serialiseren.</xref:System.Type>"
    - id: defaultNamespace
      type: System.String
      description: "De standaard-naamruimte moet worden gebruikt voor de XML-elementen."
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "Een afleiding van de <xref:System.Xml.Serialization.XmlSerializer>klasse die specifiek is gemaakt voor het serialiseren van het opgegeven type.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])
  id: CreateSerializer(System.Type,System.Type[])
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,Type[])
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,Type[])
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,Type[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Retourneert een afleiding van de <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref> klasse die wordt gebruikt voor het serialiseren van het opgegeven type. Als een eigenschap of veld een matrix retourneert, de <code> extraTypes </code> parameter geeft u de objecten die kunnen worden ingevoegd in de matrix."
  remarks: "Het aanroepen van deze overbelasting is vergelijkbaar met het aanroepen van de [XmlSerializer (Type, Type\\[\\])](assetId:///M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])?qualifyHint=False&autoUpgrade=False) voor het maken van een exemplaar van de <xref:System.Xml.Serialization.XmlSerializer>klasse.</xref:System.Xml.Serialization.XmlSerializer>"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, Type[] extraTypes);
    parameters:
    - id: type
      type: System.Type
      description: "De <xref:System.Type>te serialiseren.</xref:System.Type>"
    - id: extraTypes
      type: System.Type[]
      description: "Een <xref:System.Type>matrix van aanvullende objecttypen te serialiseren.</xref:System.Type>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "Een afleiding van de <xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Retourneert een afleiding van de <xref:System.Xml.Serialization.XmlSerializer>klasse die serialisatie op objecten van het opgegeven type in XML-documenten toepassen kunt, en vice versa.</xref:System.Xml.Serialization.XmlSerializer> Elk object wordt geserialiseerd kan zichzelf exemplaren van klassen, die deze overbelasting door andere klassen vervangen kunt bevatten."
  remarks: "Het aanroepen van deze overbelasting is vergelijkbaar met het aanroepen van het <xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlAttributeOverrides%29>maken van een exemplaar van de <xref:System.Xml.Serialization.XmlSerializer>klasse.</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlAttributeOverrides%29>"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides);
    parameters:
    - id: type
      type: System.Type
      description: "De <xref:System.Type>te serialiseren.</xref:System.Type>"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "Een <xref:System.Xml.Serialization.XmlAttributeOverrides>die velden bevat die het standaardgedrag voor serialisatie negeren.</xref:System.Xml.Serialization.XmlAttributeOverrides>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "Een afleiding van de <xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlRootAttribute)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Retourneert een afleiding van de <xref:System.Xml.Serialization.XmlSerializer>klasse die serialisatie op objecten van het opgegeven type in XML-documenten toepassen kunt, en vice versa.</xref:System.Xml.Serialization.XmlSerializer> Hiermee geeft u het object dat het XML-hoofdelement vertegenwoordigt."
  remarks: "Het aanroepen van deze overbelasting is vergelijkbaar met het aanroepen van het <xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlRootAttribute%29?displayProperty=fullName>maken van een exemplaar van de <xref:System.Xml.Serialization.XmlSerializer>klasse.</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlRootAttribute%29?displayProperty=fullName>"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlRootAttribute root);
    parameters:
    - id: type
      type: System.Type
      description: "De <xref:System.Type>te serialiseren.</xref:System.Type>"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "Een <xref:System.Xml.Serialization.XmlRootAttribute>die staat voor de XML-hoofdelement.</xref:System.Xml.Serialization.XmlRootAttribute>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "Een afleiding van de <xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Retourneert een afleiding van de <xref:System.Xml.Serialization.XmlSerializer>klasse die objecten van het opgegeven type in XML-document exemplaren kan serialiseren en vice versa.</xref:System.Xml.Serialization.XmlSerializer> Elk object wordt geserialiseerd kan zichzelf exemplaren van klassen, die deze overbelasting door andere klassen vervangen kunt bevatten. Deze overbelasting geeft ook de standaardnaamruimte voor alle XML-elementen en de klasse om te gebruiken als de XML-hoofdelement."
  remarks: "Het aanroepen van deze overbelasting is vergelijkbaar met het aanroepen van de [XmlSerializer (Type, XmlAttributeOverrides, Type\\[\\], XmlRootAttribute, String)](assetId:///M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)?qualifyHint=False&autoUpgrade=False) voor het maken van een exemplaar van de <xref:System.Xml.Serialization.XmlSerializer>klasse.</xref:System.Xml.Serialization.XmlSerializer>"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace);
    parameters:
    - id: type
      type: System.Type
      description: "De <xref:System.Type>te serialiseren.</xref:System.Type>"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "Een <xref:System.Xml.Serialization.XmlAttributeOverrides>die velden bevat die het standaardgedrag voor serialisatie negeren.</xref:System.Xml.Serialization.XmlAttributeOverrides>"
    - id: extraTypes
      type: System.Type[]
      description: "Een <xref:System.Type>matrix van aanvullende objecttypen te serialiseren.</xref:System.Type>"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "Een <xref:System.Xml.Serialization.XmlRootAttribute>die staat voor de XML-hoofdelement.</xref:System.Xml.Serialization.XmlRootAttribute>"
    - id: defaultNamespace
      type: System.String
      description: "De standaardnaamruimte met alle XML-elementen in het XML-document."
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "Een afleiding van de <xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Retourneert een afleiding van de <xref:System.Xml.Serialization.XmlSerializer>klasse die objecten van het opgegeven type in XML-document exemplaren kan serialiseren en vice versa.</xref:System.Xml.Serialization.XmlSerializer> Elk object wordt geserialiseerd kan zichzelf exemplaren van klassen, die deze overbelasting door andere klassen vervangen kunt bevatten. Deze overbelasting geeft ook de standaardnaamruimte voor alle XML-elementen en de klasse om te gebruiken als de XML-hoofdelement."
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location);
    parameters:
    - id: type
      type: System.Type
      description: "De <xref:System.Type>van het object dat deze <xref:System.Xml.Serialization.XmlSerializer>kan serialiseren.</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Type>"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "Een <xref:System.Xml.Serialization.XmlAttributeOverrides>die wordt uitgebreid of overschrijft het gedrag van de klasse die is opgegeven in het typeparameter.</xref:System.Xml.Serialization.XmlAttributeOverrides>"
    - id: extraTypes
      type: System.Type[]
      description: "Een <xref:System.Type>matrix van aanvullende objecttypen te serialiseren.</xref:System.Type>"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "Een <xref:System.Xml.Serialization.XmlRootAttribute>die definieert de eigenschappen van de basis-XML-element.</xref:System.Xml.Serialization.XmlRootAttribute>"
    - id: defaultNamespace
      type: System.String
      description: "De standaardnaamruimte met alle XML-elementen in het XML-document."
    - id: location
      type: System.String
      description: "Het pad dat de locatie van de typen geeft."
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "Een afleiding van de <xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Retourneert een afleiding van de <xref:System.Xml.Serialization.XmlSerializer>klasse die objecten van het opgegeven type in XML-document exemplaren kan serialiseren en vice versa.</xref:System.Xml.Serialization.XmlSerializer> Elk object wordt geserialiseerd kan zichzelf exemplaren van klassen, die deze overbelasting door andere klassen vervangen kunt bevatten. Deze overbelasting geeft ook de standaardnaamruimte voor alle XML-elementen en de klasse om te gebruiken als de XML-hoofdelement."
  remarks: "Het aanroepen van deze overbelasting is vergelijkbaar met het aanroepen van de [XmlSerializer (Type, XmlAttributeOverrides, Type\\[\\], XmlRootAttribute, String, String, bewijs)](assetId:///M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)?qualifyHint=False&autoUpgrade=False) voor het maken van een exemplaar van de <xref:System.Xml.Serialization.XmlSerializer>klasse.</xref:System.Xml.Serialization.XmlSerializer>"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location, System.Security.Policy.Evidence evidence);
    parameters:
    - id: type
      type: System.Type
      description: "De <xref:System.Type>van het object dat deze <xref:System.Xml.Serialization.XmlSerializer>kan serialiseren.</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Type>"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "Een <xref:System.Xml.Serialization.XmlAttributeOverrides>die wordt uitgebreid of overschrijft het gedrag van de klasse die is opgegeven in het typeparameter.</xref:System.Xml.Serialization.XmlAttributeOverrides>"
    - id: extraTypes
      type: System.Type[]
      description: "Een <xref:System.Type>matrix van aanvullende objecttypen te serialiseren.</xref:System.Type>"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "Een <xref:System.Xml.Serialization.XmlRootAttribute>die definieert de eigenschappen van de basis-XML-element.</xref:System.Xml.Serialization.XmlRootAttribute>"
    - id: defaultNamespace
      type: System.String
      description: "De standaardnaamruimte met alle XML-elementen in het XML-document."
    - id: location
      type: System.String
      description: "Het pad dat de locatie van de typen geeft."
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Een exemplaar van de <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> klasse met de referenties die nodig zijn voor toegang tot typen."
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "Een afleiding van de <xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.Serialization.XmlSerializerFactory.#ctor
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: XmlSerializerFactory()
  nameWithType: XmlSerializerFactory.XmlSerializerFactory()
  fullName: System.Xml.Serialization.XmlSerializerFactory.XmlSerializerFactory()
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type)
- uid: System.Xml.Serialization.XmlSerializer
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlSerializer
  nameWithType: XmlSerializer
  fullName: System.Xml.Serialization.XmlSerializer
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(XmlTypeMapping)
  nameWithType: XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
- uid: System.Xml.Serialization.XmlTypeMapping
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlTypeMapping
  nameWithType: XmlTypeMapping
  fullName: System.Xml.Serialization.XmlTypeMapping
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,Type[])
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,Type[])
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,Type[])
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
- uid: System.Xml.Serialization.XmlAttributeOverrides
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlAttributeOverrides
  nameWithType: XmlAttributeOverrides
  fullName: System.Xml.Serialization.XmlAttributeOverrides
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlRootAttribute)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
- uid: System.Xml.Serialization.XmlRootAttribute
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlRootAttribute
  nameWithType: XmlRootAttribute
  fullName: System.Xml.Serialization.XmlRootAttribute
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Xml.Serialization.XmlSerializerFactory.#ctor*
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: XmlSerializerFactory
  nameWithType: XmlSerializerFactory.XmlSerializerFactory
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer
  nameWithType: XmlSerializerFactory.CreateSerializer
