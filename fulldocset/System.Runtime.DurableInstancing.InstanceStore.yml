### YamlMime:ManagedReference
items:
- uid: System.Runtime.DurableInstancing.InstanceStore
  id: InstanceStore
  children:
  - System.Runtime.DurableInstancing.InstanceStore.#ctor
  - System.Runtime.DurableInstancing.InstanceStore.BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle
  - System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Guid)
  - System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)
  - System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)
  - System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner
  - System.Runtime.DurableInstancing.InstanceStore.EndExecute(System.IAsyncResult)
  - System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(System.IAsyncResult)
  - System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(System.IAsyncResult)
  - System.Runtime.DurableInstancing.InstanceStore.Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  - System.Runtime.DurableInstancing.InstanceStore.GetEvents(System.Runtime.DurableInstancing.InstanceOwner)
  - System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners
  - System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)
  - System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)
  - System.Runtime.DurableInstancing.InstanceStore.ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  - System.Runtime.DurableInstancing.InstanceStore.SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  - System.Runtime.DurableInstancing.InstanceStore.TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  - System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)
  langs:
  - csharp
  name: InstanceStore
  nameWithType: InstanceStore
  fullName: System.Runtime.DurableInstancing.InstanceStore
  type: Class
  summary: "Hiermee geeft u een exemplaar-store."
  remarks: "Een persistentieprovider biedt toegang tot een exemplaar store via een concrete implementatie van de InstanceStore-klasse.       Persistentie providers kunnen InstanceHandle.Free aanroepen voor ingangen doorgegeven aan TryCommand, zelfs nadat de uitvoering van de opdracht is voltooid. Maar persistentie providers niet sterk moeten bevatten verwijzingen naar InstanceHandle of InstanceOwner-objecten, zoals dit kan verhinderen InstanceStore garbage collector zijn verzameld.      > [!WARNING] > Werkstroomdefinities voor persistent gemaakte workflows kunnen niet worden gewijzigd. Als de werkstroomdefinitie van een is gewijzigd nadat deze wordt bewaard, wordt de workflowruntime vastlopen wanneer de werkstroom opnieuw wordt geladen."
  syntax:
    content: public abstract class InstanceStore
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.#ctor
  id: '#ctor'
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: InstanceStore()
  nameWithType: InstanceStore.InstanceStore()
  fullName: System.Runtime.DurableInstancing.InstanceStore.InstanceStore()
  type: Constructor
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Initialiseert een exemplaar van de <xref href=&quot;System.Runtime.DurableInstancing.InstanceStore&quot;> </xref> klasse."
  syntax:
    content: protected InstanceStore ();
    parameters: []
  overload: System.Runtime.DurableInstancing.InstanceStore.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: BeginExecute(InstanceHandle,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceStore.BeginExecute(InstanceHandle,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.BeginExecute(InstanceHandle,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Asynchroon persistentie Hiermee worden opdrachten uitgevoerd, zoals <xref href=&quot;System.Activities.DurableInstancing.LoadWorkflowCommand&quot;> </xref> en <xref href=&quot;System.Activities.DurableInstancing.SaveWorkflowCommand&quot;> </xref>."
  remarks: "Een host roept de methode BeginExecute om een opdracht persistentie tegen een ingang exemplaar asynchroon uitgevoerd. De host de exemplaar-ingang door aan te roepen verkrijgt de <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A>methode.</xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> De ingang van het exemplaar kan voor entiteiten waarbij de context en het onderwerp van de opdracht, zoals een exemplaar, een exemplaareigenaar of een vergrendeling voor exemplaar worden gebonden.  Slechts één opdracht kan worden uitgegeven op basis van een exemplaar-ingang op een tijdstip."
  syntax:
    content: public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: handle
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "Een exemplaar-ingang."
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "De opdracht om te worden uitgevoerd."
    - id: timeout
      type: System.TimeSpan
      description: "De time-outwaarde voor de uitvoering van de opdracht."
    - id: callback
      type: System.AsyncCallback
      description: "De asynchrone callback-gemachtigde die ontvangt een melding van de voltooiing van de asynchrone bewerking."
    - id: state
      type: System.Object
      description: "De statusinformatie."
    return:
      type: System.IAsyncResult
      description: "De status van de asynchrone bewerking."
  overload: System.Runtime.DurableInstancing.InstanceStore.BeginExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: BeginTryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceStore.BeginTryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Een persistentieprovider implementeert deze methode, waarmee wordt bepaald of een bepaalde persistentie-opdracht kan worden uitgevoerd. Als de opdracht kan worden uitgevoerd, voert de opdracht asynchroon."
  remarks: "Als de opdracht kan worden uitgevoerd, roept de persistentieprovider relevante methoden voor de InstancePersistenceContext voor de resultaten van de opdracht.      > [!WARNING] > Zelfs als deze methode is gedeclareerd als `virtual` plaats `abstract`, er is geen implementatie. Deze methode moet worden vervangen om functionaliteit bieden."
  syntax:
    content: protected virtual IAsyncResult BeginTryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: context
      type: System.Runtime.DurableInstancing.InstancePersistenceContext
      description: "De context van het exemplaar."
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "De opdracht persistentie moet worden uitgevoerd."
    - id: timeout
      type: System.TimeSpan
      description: "De time-outwaarde voor de uitvoering van de opdracht."
    - id: callback
      type: System.AsyncCallback
      description: "De asynchrone callback-gemachtigde die ontvangt een melding van de voltooiing van de asynchrone bewerking."
    - id: state
      type: System.Object
      description: "De statusinformatie."
    return:
      type: System.IAsyncResult
      description: "De status van de asynchrone bewerking."
  overload: System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: BeginWaitForEvents(InstanceHandle,TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceStore.BeginWaitForEvents(InstanceHandle,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(InstanceHandle,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Een asynchrone bewerking om te luisteren naar alle gebeurtenissen die worden gegenereerd door de exemplaaropslag voor een specifiek exemplaar ingang begint."
  syntax:
    content: public IAsyncResult BeginWaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: handle
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "Een exemplaar-ingang."
    - id: timeout
      type: System.TimeSpan
      description: "De periode waarna de bewerking een optreedt time-out."
    - id: callback
      type: System.AsyncCallback
      description: "De methode die moet worden aangeroepen nadat de asynchrone bewerking voltooid is."
    - id: state
      type: System.Object
      description: "Een object met de van statusgegevens die zijn gekoppeld aan de asynchrone bewerking."
    return:
      type: System.IAsyncResult
      description: "Retourneert een <xref:System.IAsyncResult>object...</xref:System.IAsyncResult>"
  overload: System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle
  id: CreateInstanceHandle
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: CreateInstanceHandle()
  nameWithType: InstanceStore.CreateInstanceHandle()
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle()
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee maakt u een exemplaar-ingang."
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle ();
    parameters: []
    return:
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "De exemplaar-koppeling."
  overload: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Guid)
  id: CreateInstanceHandle(System.Guid)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: CreateInstanceHandle(Guid)
  nameWithType: InstanceStore.CreateInstanceHandle(Guid)
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee maakt u een exemplaar-ingang.  Als DefaultInstanceOwner is ingesteld, wordt de waarde automatisch als eigenaar van de nieuwe ingang exemplaar gebonden.  De exemplaar-id die is doorgegeven als parameter wordt automatisch als de nieuwe ingang exemplaar gebonden."
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (Guid instanceId);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "Een exemplaar-id. Mag geen Guid.Empty."
    return:
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "De exemplaar-koppeling."
  overload: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)
  id: CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: CreateInstanceHandle(InstanceOwner)
  nameWithType: InstanceStore.CreateInstanceHandle(InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(InstanceOwner)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee maakt u een exemplaar-ingang. Als de exemplaareigenaar van het is doorgegeven als een parameter niet null is, wordt de waarde automatisch als eigenaar van de nieuwe ingang exemplaar gebonden.  (Anders geen exemplaareigenaar is gebonden, zelfs als DefaultInstanceOwner is ingesteld.)"
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner);
    parameters:
    - id: owner
      type: System.Runtime.DurableInstancing.InstanceOwner
      description: "De eigenaar van een exemplaar."
    return:
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "De exemplaar-koppeling. Een null-waarde geeft aan dat de nieuwe ingang niet automatisch worden gebonden aan een exemplaareigenaar."
  overload: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)
  id: CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: CreateInstanceHandle(InstanceOwner,Guid)
  nameWithType: InstanceStore.CreateInstanceHandle(InstanceOwner,Guid)
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(InstanceOwner,Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee maakt u een exemplaar-ingang. Als de exemplaareigenaar van het is doorgegeven als een parameter niet null is, wordt de waarde automatisch als eigenaar van de nieuwe ingang exemplaar gebonden.  (Anders geen exemplaareigenaar is gebonden, zelfs als DefaultInstanceOwner is ingesteld.) De exemplaar-id die is doorgegeven als parameter wordt automatisch als de nieuwe ingang exemplaar gebonden."
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner, Guid instanceId);
    parameters:
    - id: owner
      type: System.Runtime.DurableInstancing.InstanceOwner
      description: "Een InstanceOwner-object dat de eigenaar van een exemplaar vertegenwoordigt. Null zijn als de waarde voor deze parameter om aan te geven dat de nieuwe ingang niet automatisch worden gebonden aan een exemplaareigenaar doorgeven."
    - id: instanceId
      type: System.Guid
      description: "Een exemplaar-id. Mag geen Guid.Empty."
    return:
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "De exemplaar-koppeling."
  overload: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner
  id: DefaultInstanceOwner
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: DefaultInstanceOwner
  nameWithType: InstanceStore.DefaultInstanceOwner
  fullName: System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Opgehaald of ingesteld van de standaard exemplaareigenaar."
  remarks: "Sommige hosts afleiden de exemplaareigenaar van het om door te lezen van deze eigenschap wordt gebruikt. WorkflowApplication kunt gebruiken voor deze eigenschap. Deze eigenschap wordt niet gebruikt door WorkflowServiceHost.       De eigenschap DefaultInstanceOwner moet worden ingesteld op null wanneer is het niet meer nodig. Objecten van de InstanceStore mogelijk niet de garbage collector zijn verzameld als DefaultInstanceOwner niet null is.      > [!WARNING] > Zelfs als deze methode is gedeclareerd als `virtual` plaats `abstract`, er is geen implementatie. Deze methode moet worden vervangen om functionaliteit bieden."
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner { get; set; }
    return:
      type: System.Runtime.DurableInstancing.InstanceOwner
      description: "De standaard exemplaareigenaar."
  overload: System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.EndExecute(System.IAsyncResult)
  id: EndExecute(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: EndExecute(IAsyncResult)
  nameWithType: InstanceStore.EndExecute(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstanceStore.EndExecute(IAsyncResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "De asynchrone bewerking wordt beëindigd."
  remarks: "Als BeginExecute werd aangeroepen onder een transactie, kan deze status niet-doorgevoerde gegevens omvatten. Zodra de transactie is doorgevoerd is, worden de gegevens in de InstanceView object kan worden beschouwd als doorgevoerd."
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceView EndExecute (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Het resultaat van de bewerking."
    return:
      type: System.Runtime.DurableInstancing.InstanceView
      description: "Een InstanceView-object dat de bekende status van het exemplaar na de geslaagde uitvoering van de opdracht."
  overload: System.Runtime.DurableInstancing.InstanceStore.EndExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(System.IAsyncResult)
  id: EndTryCommand(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: EndTryCommand(IAsyncResult)
  nameWithType: InstanceStore.EndTryCommand(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(IAsyncResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Een asynchrone bewerking wordt beëindigd."
  remarks: >-
    > [!WARNING]

    >  Even though this method is declared as `virtual` rather than `abstract`, there is no implementation. This method must be overridden in order to provide functionality.
  syntax:
    content: protected virtual bool EndTryCommand (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Het resultaat van de bewerking."
    return:
      type: System.Boolean
      description: "Een implementatie van de persistentieprovider moet ONWAAR als het biedt geen ondersteuning voor de opdracht die is doorgegeven aan de methode BeginTryCommand retourneren. Anders moet true wordt geretourneerd of Veroorzaak een uitzondering."
  overload: System.Runtime.DurableInstancing.InstanceStore.EndTryCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(System.IAsyncResult)
  id: EndWaitForEvents(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: EndWaitForEvents(IAsyncResult)
  nameWithType: InstanceStore.EndWaitForEvents(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(IAsyncResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Eindigt de asynchrone bewerking gestart door de <xref:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents*>methode.</xref:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents*>"
  syntax:
    content: public System.Collections.Generic.List<System.Runtime.DurableInstancing.InstancePersistenceEvent> EndWaitForEvents (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Een IAsyncResult-object dat is afgegeven aan de client door de Begin-methode."
    return:
      type: System.Collections.Generic.List{System.Runtime.DurableInstancing.InstancePersistenceEvent}
      description: "Retourneert een lijst met <xref href=&quot;System.Runtime.DurableInstancing.InstancePersistenceEvent&quot;> </xref> objecten..."
  overload: System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  id: Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: Execute(InstanceHandle,InstancePersistenceCommand,TimeSpan)
  nameWithType: InstanceStore.Execute(InstanceHandle,InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstanceStore.Execute(InstanceHandle,InstancePersistenceCommand,TimeSpan)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: 'Een opdracht persistentie synchroon uitgevoerd. Voorbeelden van persistentie opdrachten zijn: <xref href=&quot;System.Activities.DurableInstancing.LoadWorkflowCommand&quot;> </xref> en <xref href=&quot;System.Activities.DurableInstancing.SaveWorkflowCommand&quot;> </xref>.'
  remarks: "Een host roept de Execute-methode voor het uitvoeren van een opdracht persistentie bij een sessie-ingang, waarmee de host door aan te roepen de <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A>methode.</xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> De ingang van het exemplaar kan voor entiteiten waarbij de context en het onderwerp van de opdracht, zoals een exemplaar, een exemplaareigenaar of een vergrendeling voor exemplaar worden gebonden.  Slechts één opdracht kan worden uitgegeven op basis van een exemplaar-ingang op een tijdstip.      > [!WARNING] > Als deze methode wordt uitgevoerd met een <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>, wordt gemaakt een <xref:System.Runtime.DurableInstancing.InstanceOwner>en bindt dit aan het exemplaar.</xref:System.Runtime.DurableInstancing.InstanceOwner> </xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> Dit betekent dat er geen andere processen kan worden voor toegang tot die werkstroom; Als het proces wordt beëindigd, kunnen de werkstroom kan niet worden hersteld of uitgevoerd. Als deze werkstroom wordt uitgevoerd, opnieuw een <xref:System.Runtime.DurableInstancing.InstanceLockedException>gegenereerd.</xref:System.Runtime.DurableInstancing.InstanceLockedException>   >> Als <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>wordt niet gebruikt, maakt de exemplaaropslag een tijdelijke <xref:System.Runtime.DurableInstancing.InstanceOwner>die aan het einde van het proces wordt verwijderd.</xref:System.Runtime.DurableInstancing.InstanceOwner> </xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> Echter, als het proces wordt beëindigd voordat de werkstroom laatste persistentie punt, deze uitzondering gegenereerd, tenzij de periode die is opgegeven in de **HostLockRenewalPeriod** parameter is verlopen."
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceView Execute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);
    parameters:
    - id: handle
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "Een exemplaar-ingang."
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "De opdracht om te worden uitgevoerd."
    - id: timeout
      type: System.TimeSpan
      description: "De time-outwaarde voor de bewerking."
    return:
      type: System.Runtime.DurableInstancing.InstanceView
      description: "Een InstanceView-object dat de bekende status van het exemplaar na de geslaagde uitvoering van de opdracht.  Als uitvoeren onder een transactie is aangeroepen, kan deze status niet-doorgevoerde gegevens bevatten. Zodra de transactie met succes toegewezen is, doorgevoerd de gegevens in de InstanceView object kan worden beschouwd als"
  overload: System.Runtime.DurableInstancing.InstanceStore.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.GetEvents(System.Runtime.DurableInstancing.InstanceOwner)
  id: GetEvents(System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: GetEvents(InstanceOwner)
  nameWithType: InstanceStore.GetEvents(InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.GetEvents(InstanceOwner)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Haalt alle de gesignaleerde gebeurtenissen die zijn gebonden aan een <xref href=&quot;System.Runtime.DurableInstancing.InstanceOwner&quot;> </xref> object."
  syntax:
    content: protected System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents (System.Runtime.DurableInstancing.InstanceOwner owner);
    parameters:
    - id: owner
      type: System.Runtime.DurableInstancing.InstanceOwner
      description: "Een <xref href=&quot;System.Runtime.DurableInstancing.InstanceOwner&quot;> </xref> -object dat de eigenaar van een exemplaar vertegenwoordigt."
    return:
      type: System.Runtime.DurableInstancing.InstancePersistenceEvent[]
      description: "Retourneert een matrix van <xref href=&quot;System.Runtime.DurableInstancing.InstancePersistenceEvent&quot;> </xref> objecten..."
  overload: System.Runtime.DurableInstancing.InstanceStore.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners
  id: GetInstanceOwners
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: GetInstanceOwners()
  nameWithType: InstanceStore.GetInstanceOwners()
  fullName: System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners()
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee haalt u elk InstanceOwner-object dat is gebonden aan een geldig exemplaar ingang of is niet permanent is verwijderd."
  remarks: "Retourneert een matrix van InstanceOwner-objecten."
  syntax:
    content: protected System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners ();
    parameters: []
    return:
      type: System.Runtime.DurableInstancing.InstanceOwner[]
      description: "De eigenaar van het exemplaar."
  overload: System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)
  id: OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: OnFreeInstanceHandle(InstanceHandle,Object)
  nameWithType: InstanceStore.OnFreeInstanceHandle(InstanceHandle,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(InstanceHandle,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Aangeroepen wanneer een sessie-ingang is vrijgemaakt."
  syntax:
    content: protected virtual void OnFreeInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext);
    parameters:
    - id: instanceHandle
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "De sessie-ingang die is vrijgemaakt."
    - id: userContext
      type: System.Object
      description: "De persistentieprovider gebruiker context informatie die is geretourneerd van OnNewInstanceHandle, of null als OnNewInstanceHandle niet kan worden genegeerd."
  overload: System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)
  id: OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: OnNewInstanceHandle(InstanceHandle)
  nameWithType: InstanceStore.OnNewInstanceHandle(InstanceHandle)
  fullName: System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(InstanceHandle)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Aangeroepen wanneer een nieuwe sessie-ingang is gemaakt."
  syntax:
    content: protected virtual object OnNewInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle);
    parameters:
    - id: instanceHandle
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "Een exemplaar-ingang."
    return:
      type: System.Object
      description: "Een object.  Deze gebruiker context-object is beschikbaar voor de persistentieprovider wanneer opdrachten worden uitgevoerd met de greep en wanneer de ingang is vrijgemaakt."
  overload: System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  id: ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: ResetEvent(InstancePersistenceEvent,InstanceOwner)
  nameWithType: InstanceStore.ResetEvent(InstancePersistenceEvent,InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.ResetEvent(InstancePersistenceEvent,InstanceOwner)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hiermee stelt u de gesignaleerde gebeurtenis en verwijdert u de gebeurtenis uit de lijst met gesignaleerde gebeurtenissen beheerd door de exemplaareigenaar van het."
  syntax:
    content: protected void ResetEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);
    parameters:
    - id: persistenceEvent
      type: System.Runtime.DurableInstancing.InstancePersistenceEvent
      description: "De persistentie gebeurtenis die eerder is gesignaleerd en opnieuw worden ingesteld."
    - id: owner
      type: System.Runtime.DurableInstancing.InstanceOwner
      description: "De exemplaareigenaar die is gekoppeld aan de persistentie-gebeurtenis."
  overload: System.Runtime.DurableInstancing.InstanceStore.ResetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  id: SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: SignalEvent(InstancePersistenceEvent,InstanceOwner)
  nameWithType: InstanceStore.SignalEvent(InstancePersistenceEvent,InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.SignalEvent(InstancePersistenceEvent,InstanceOwner)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Een exemplaaropslag roept deze methode om een gebeurtenis. Een werkstroom host die voor deze gebeurtenis persistentie is geabonneerd ontvangt en neemt een nodige actie."
  syntax:
    content: protected void SignalEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);
    parameters:
    - id: persistenceEvent
      type: System.Runtime.DurableInstancing.InstancePersistenceEvent
      description: "De gebeurtenis persistentie voor een signaal ontvangen."
    - id: owner
      type: System.Runtime.DurableInstancing.InstanceOwner
      description: "De exemplaareigenaar."
  overload: System.Runtime.DurableInstancing.InstanceStore.SignalEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  id: TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: TryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan)
  nameWithType: InstanceStore.TryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstanceStore.TryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Een persistentieprovider wordt deze methode, waarmee wordt bepaald of een bepaalde persistentie-opdracht kan worden uitgevoerd en als de opdracht kan worden uitgevoerd. deze asynchroon wordt geïmplementeerd."
  remarks: "Als de opdracht kan worden uitgevoerd, roept de persistentieprovider relevante methoden voor het <xref:System.Runtime.DurableInstancing.InstancePersistenceContext>voor de resultaten van de opdracht.</xref:System.Runtime.DurableInstancing.InstancePersistenceContext>"
  syntax:
    content: protected virtual bool TryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);
    parameters:
    - id: context
      type: System.Runtime.DurableInstancing.InstancePersistenceContext
      description: "De context van het exemplaar."
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "De opdracht om te worden uitgevoerd."
    - id: timeout
      type: System.TimeSpan
      description: "Time-outwaarde voor de bewerking."
    return:
      type: System.Boolean
      description: "Een implementatie van de persistentieprovider moet retourneren <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als deze biedt geen ondersteuning voor de opdracht die is doorgegeven als parameter; anders moet deze uitvoer retourneren <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> of Veroorzaak een uitzondering."
  overload: System.Runtime.DurableInstancing.InstanceStore.TryCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)
  id: WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: WaitForEvents(InstanceHandle,TimeSpan)
  nameWithType: InstanceStore.WaitForEvents(InstanceHandle,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(InstanceHandle,TimeSpan)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Een werkstroomhost roept meestal deze methode moet worden gewacht op een gebeurtenis naar een signaal ontvangen."
  syntax:
    content: public System.Collections.Generic.List<System.Runtime.DurableInstancing.InstancePersistenceEvent> WaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout);
    parameters:
    - id: handle
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "De ingang van het exemplaar dat is gekoppeld aan de gebeurtenis."
    - id: timeout
      type: System.TimeSpan
      description: "De tijdsduur waarna de bewerking uit te wachten op een optreedt time-out."
    return:
      type: System.Collections.Generic.List{System.Runtime.DurableInstancing.InstancePersistenceEvent}
      description: "Een lijst met <xref href=&quot;System.Runtime.DurableInstancing.InstancePersistenceEvent&quot;> </xref> objecten."
  overload: System.Runtime.DurableInstancing.InstanceStore.WaitForEvents*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.DurableInstancing.InstanceStore.#ctor
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: InstanceStore()
  nameWithType: InstanceStore.InstanceStore()
  fullName: System.Runtime.DurableInstancing.InstanceStore.InstanceStore()
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: BeginExecute(InstanceHandle,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceStore.BeginExecute(InstanceHandle,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.BeginExecute(InstanceHandle,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Runtime.DurableInstancing.InstanceHandle
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceHandle
  nameWithType: InstanceHandle
  fullName: System.Runtime.DurableInstancing.InstanceHandle
- uid: System.Runtime.DurableInstancing.InstancePersistenceCommand
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceCommand
  nameWithType: InstancePersistenceCommand
  fullName: System.Runtime.DurableInstancing.InstancePersistenceCommand
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: BeginTryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceStore.BeginTryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceContext
  nameWithType: InstancePersistenceContext
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: BeginWaitForEvents(InstanceHandle,TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceStore.BeginWaitForEvents(InstanceHandle,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(InstanceHandle,TimeSpan,AsyncCallback,Object)
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: CreateInstanceHandle()
  nameWithType: InstanceStore.CreateInstanceHandle()
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle()
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Guid)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: CreateInstanceHandle(Guid)
  nameWithType: InstanceStore.CreateInstanceHandle(Guid)
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: CreateInstanceHandle(InstanceOwner)
  nameWithType: InstanceStore.CreateInstanceHandle(InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(InstanceOwner)
- uid: System.Runtime.DurableInstancing.InstanceOwner
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceOwner
  nameWithType: InstanceOwner
  fullName: System.Runtime.DurableInstancing.InstanceOwner
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: CreateInstanceHandle(InstanceOwner,Guid)
  nameWithType: InstanceStore.CreateInstanceHandle(InstanceOwner,Guid)
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(InstanceOwner,Guid)
- uid: System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: DefaultInstanceOwner
  nameWithType: InstanceStore.DefaultInstanceOwner
  fullName: System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner
- uid: System.Runtime.DurableInstancing.InstanceStore.EndExecute(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: EndExecute(IAsyncResult)
  nameWithType: InstanceStore.EndExecute(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstanceStore.EndExecute(IAsyncResult)
- uid: System.Runtime.DurableInstancing.InstanceView
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceView
  nameWithType: InstanceView
  fullName: System.Runtime.DurableInstancing.InstanceView
- uid: System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: EndTryCommand(IAsyncResult)
  nameWithType: InstanceStore.EndTryCommand(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(IAsyncResult)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: EndWaitForEvents(IAsyncResult)
  nameWithType: InstanceStore.EndWaitForEvents(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(IAsyncResult)
- uid: System.Collections.Generic.List{System.Runtime.DurableInstancing.InstancePersistenceEvent}
  parent: System.Collections.Generic
  isExternal: true
  name: List<InstancePersistenceEvent>
  nameWithType: List<InstancePersistenceEvent>
  fullName: System.Collections.Generic.List<System.Runtime.DurableInstancing.InstancePersistenceEvent>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.Runtime.DurableInstancing.InstancePersistenceEvent>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Runtime.DurableInstancing.InstancePersistenceEvent
    name: InstancePersistenceEvent
    nameWithType: InstancePersistenceEvent
    fullName: InstancePersistenceEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.DurableInstancing.InstanceStore.Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: Execute(InstanceHandle,InstancePersistenceCommand,TimeSpan)
  nameWithType: InstanceStore.Execute(InstanceHandle,InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstanceStore.Execute(InstanceHandle,InstancePersistenceCommand,TimeSpan)
- uid: System.Runtime.DurableInstancing.InstanceStore.GetEvents(System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: GetEvents(InstanceOwner)
  nameWithType: InstanceStore.GetEvents(InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.GetEvents(InstanceOwner)
- uid: System.Runtime.DurableInstancing.InstancePersistenceEvent[]
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceEvent
  nameWithType: InstancePersistenceEvent
  fullName: System.Runtime.DurableInstancing.InstancePersistenceEvent[]
  spec.csharp:
  - uid: System.Runtime.DurableInstancing.InstancePersistenceEvent
    name: InstancePersistenceEvent
    nameWithType: InstancePersistenceEvent
    fullName: InstancePersistenceEvent[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: GetInstanceOwners()
  nameWithType: InstanceStore.GetInstanceOwners()
  fullName: System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners()
- uid: System.Runtime.DurableInstancing.InstanceOwner[]
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceOwner
  nameWithType: InstanceOwner
  fullName: System.Runtime.DurableInstancing.InstanceOwner[]
  spec.csharp:
  - uid: System.Runtime.DurableInstancing.InstanceOwner
    name: InstanceOwner
    nameWithType: InstanceOwner
    fullName: InstanceOwner[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: OnFreeInstanceHandle(InstanceHandle,Object)
  nameWithType: InstanceStore.OnFreeInstanceHandle(InstanceHandle,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(InstanceHandle,Object)
- uid: System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: OnNewInstanceHandle(InstanceHandle)
  nameWithType: InstanceStore.OnNewInstanceHandle(InstanceHandle)
  fullName: System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(InstanceHandle)
- uid: System.Runtime.DurableInstancing.InstanceStore.ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: ResetEvent(InstancePersistenceEvent,InstanceOwner)
  nameWithType: InstanceStore.ResetEvent(InstancePersistenceEvent,InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.ResetEvent(InstancePersistenceEvent,InstanceOwner)
- uid: System.Runtime.DurableInstancing.InstancePersistenceEvent
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceEvent
  nameWithType: InstancePersistenceEvent
  fullName: System.Runtime.DurableInstancing.InstancePersistenceEvent
- uid: System.Runtime.DurableInstancing.InstanceStore.SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: SignalEvent(InstancePersistenceEvent,InstanceOwner)
  nameWithType: InstanceStore.SignalEvent(InstancePersistenceEvent,InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.SignalEvent(InstancePersistenceEvent,InstanceOwner)
- uid: System.Runtime.DurableInstancing.InstanceStore.TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: TryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan)
  nameWithType: InstanceStore.TryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstanceStore.TryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan)
- uid: System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: WaitForEvents(InstanceHandle,TimeSpan)
  nameWithType: InstanceStore.WaitForEvents(InstanceHandle,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(InstanceHandle,TimeSpan)
- uid: System.Runtime.DurableInstancing.InstanceStore.#ctor*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: InstanceStore
  nameWithType: InstanceStore.InstanceStore
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginExecute*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: BeginExecute
  nameWithType: InstanceStore.BeginExecute
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: BeginTryCommand
  nameWithType: InstanceStore.BeginTryCommand
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: BeginWaitForEvents
  nameWithType: InstanceStore.BeginWaitForEvents
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: CreateInstanceHandle
  nameWithType: InstanceStore.CreateInstanceHandle
- uid: System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: DefaultInstanceOwner
  nameWithType: InstanceStore.DefaultInstanceOwner
- uid: System.Runtime.DurableInstancing.InstanceStore.EndExecute*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: EndExecute
  nameWithType: InstanceStore.EndExecute
- uid: System.Runtime.DurableInstancing.InstanceStore.EndTryCommand*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: EndTryCommand
  nameWithType: InstanceStore.EndTryCommand
- uid: System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: EndWaitForEvents
  nameWithType: InstanceStore.EndWaitForEvents
- uid: System.Runtime.DurableInstancing.InstanceStore.Execute*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: Execute
  nameWithType: InstanceStore.Execute
- uid: System.Runtime.DurableInstancing.InstanceStore.GetEvents*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: GetEvents
  nameWithType: InstanceStore.GetEvents
- uid: System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: GetInstanceOwners
  nameWithType: InstanceStore.GetInstanceOwners
- uid: System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: OnFreeInstanceHandle
  nameWithType: InstanceStore.OnFreeInstanceHandle
- uid: System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: OnNewInstanceHandle
  nameWithType: InstanceStore.OnNewInstanceHandle
- uid: System.Runtime.DurableInstancing.InstanceStore.ResetEvent*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: ResetEvent
  nameWithType: InstanceStore.ResetEvent
- uid: System.Runtime.DurableInstancing.InstanceStore.SignalEvent*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: SignalEvent
  nameWithType: InstanceStore.SignalEvent
- uid: System.Runtime.DurableInstancing.InstanceStore.TryCommand*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: TryCommand
  nameWithType: InstanceStore.TryCommand
- uid: System.Runtime.DurableInstancing.InstanceStore.WaitForEvents*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: WaitForEvents
  nameWithType: InstanceStore.WaitForEvents
