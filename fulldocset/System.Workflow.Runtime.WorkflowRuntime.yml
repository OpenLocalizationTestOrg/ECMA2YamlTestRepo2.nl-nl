### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.WorkflowRuntime
  id: WorkflowRuntime
  children:
  - System.Workflow.Runtime.WorkflowRuntime.#ctor
  - System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)
  - System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)
  - System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  - System.Workflow.Runtime.WorkflowRuntime.Dispose
  - System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)
  - System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1
  - System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows
  - System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)
  - System.Workflow.Runtime.WorkflowRuntime.GetService``1
  - System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)
  - System.Workflow.Runtime.WorkflowRuntime.IsStarted
  - System.Workflow.Runtime.WorkflowRuntime.Name
  - System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)
  - System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  - System.Workflow.Runtime.WorkflowRuntime.Started
  - System.Workflow.Runtime.WorkflowRuntime.StartRuntime
  - System.Workflow.Runtime.WorkflowRuntime.Stopped
  - System.Workflow.Runtime.WorkflowRuntime.StopRuntime
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  langs:
  - csharp
  name: WorkflowRuntime
  nameWithType: WorkflowRuntime
  fullName: System.Workflow.Runtime.WorkflowRuntime
  type: Class
  summary: "Hiermee geeft u de configureerbare uitvoeringsomgeving geleverd door de workflow runtime engine voor werkstromen."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]WorkflowRuntime bevat functionaliteit vereist voor een host-toepassingen en services te configureren en beheren van de workflow runtime engine en om te worden geïnformeerd over wijzigingen in de workflow runtime engine en een van de workflow-exemplaren."
  example:
  - "The following code example demonstrates how to use WorkflowRuntime functionality from a workflow host. It provides examples of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> constructor and the <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>, and <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> methods. The code also shows the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method. It also shows how to set event handlers for the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>, <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>, and <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> events.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class WorkflowRuntime : IDisposable, IServiceProvider
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowRuntime()
  nameWithType: WorkflowRuntime.WorkflowRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> klasse."
  remarks: "De <xref:System.Workflow.Runtime.WorkflowRuntime>is geïnitialiseerd met de standaardwaarden van de eigenschap en bevat de standaard basisservices.</xref:System.Workflow.Runtime.WorkflowRuntime> Als u wilt ook de configuratie van de workflow runtime engine, kunt u toevoegen en verwijderen van services met behulp van <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>en <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>, en u kunt <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> Na de <xref:System.Workflow.Runtime.WorkflowRuntime>is geconfigureerd, roepen <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>om de workflow runtime engine en de services te starten.</xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> </xref:System.Workflow.Runtime.WorkflowRuntime>       De volgende tabel toont de eerste waarden voor een instantie van <xref:System.Workflow.Runtime.WorkflowRuntime>klasse.</xref:System.Workflow.Runtime.WorkflowRuntime>      | Eigenschap | Initiële waarde |   |--------------|-------------------|   | <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>|&quot; WorkflowRuntime &quot;|   | <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>| `false`|       De standaard core services zijn <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService>en <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>.</xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> </xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>"
  example:
  - "The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. It provides an example of how to use the WorkflowRuntime constructor to create an instance of a <xref:System.Workflow.Runtime.WorkflowRuntime> and access its methods and events.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public WorkflowRuntime ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowRuntime(String)
  nameWithType: WorkflowRuntime.WorkflowRuntime(String)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(String)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> klasse met behulp van de opgegeven sectie van het toepassingsconfiguratiebestand."
  remarks: "De <xref:System.Workflow.Runtime.WorkflowRuntime>is geïnitialiseerd volgens de instellingen in de sectie die is opgegeven door `configSectionName` in het toepassingsconfiguratiebestand.</xref:System.Workflow.Runtime.WorkflowRuntime> `configSectionName`moet overeenkomen met een geldige `workflowSettings` gedeelte van een configuratiebestand.       Wanneer de werkstroom-runtime-engine is geconfigureerd met behulp van een toepassingsconfiguratiebestand, geladen en instantieert klassen van de typen die worden vermeld in de `Services` gedeelte van het configuratiebestand. Wanneer de workflow runtime engine constructs deze klassen deze zoekt klasseconstructors met de volgende handtekeningen in de volgende volgorde: 1.  Service(workflowruntime runtime, NameValueCollection parameters) 2.  Service(workflowruntime Runtime) 3.  Service(NameValueCollection parameters) 4.  Alle klassen die worden geladen uit een configuratiebestand service service() moet ten minste één van deze constructor handtekeningen worden geïmplementeerd.       [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>"
  syntax:
    content: public WorkflowRuntime (string configSectionName);
    parameters:
    - id: configSectionName
      type: System.String
      description: "De naam van een geldige <xref uid=&quot;langword_csharp_workflowSettings&quot; name=&quot;workflowSettings&quot; href=&quot;&quot;> </xref> sectie in het toepassingsconfiguratiebestand."
  overload: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>configSectionName</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Een geldige <xref uid=&quot;langword_csharp_workflowSettings&quot; name=&quot;workflowSettings&quot; href=&quot;&quot;> </xref> sectie is niet gevonden in het toepassingsconfiguratiebestand."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> bestaat al voor dit toepassingsdomein."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)
  id: '#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)'
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowRuntime(WorkflowRuntimeSection)
  nameWithType: WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> klasse met behulp van de instellingen in de opgegeven <xref href=&quot;System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&quot;> </xref>."
  remarks: "Deze constructor biedt een mechanisme voor het configureren van de werkstroom-runtime-engine met behulp van een aanroep van één methode voor hosts die geen van een toepassingsconfiguratiebestand gebruikmaken. Er zijn diverse redenen voor het configuratiebestand van de toepassing niet te gebruiken. Een host kan worden uitgevoerd in een omgeving die niet in staat gebruik configuratiebestanden; bijvoorbeeld in een vertrouwde omgeving die niet toegestaan bij het lezen van het toepassingsconfiguratiebestand uit veiligheidsoverwegingen. Een host kunt ook een eigen configuratie-mechanisme gebruiken de host kunt bijvoorbeeld de workflow runtime engine configuratie-instellingen opslaan in een SQL-database.       De workflow runtime engine wordt geladen en geïnstantieerd klassen van de typen die zijn opgenomen in <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=fullName>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=fullName> Wanneer de workflow runtime engine constructs deze klassen deze zoekt klasseconstructors met de volgende handtekeningen in de volgende volgorde: 1.  Service(workflowruntime runtime, NameValueCollection parameters) 2.  Service(workflowruntime Runtime) 3.  Service(NameValueCollection parameters) 4.  Alle klassen die zijn opgegeven in service service() `settings` moet ten minste één van deze constructor handtekeningen worden geïmplementeerd."
  syntax:
    content: public WorkflowRuntime (System.Workflow.Runtime.Configuration.WorkflowRuntimeSection settings);
    parameters:
    - id: settings
      type: System.Workflow.Runtime.Configuration.WorkflowRuntimeSection
      description: "A <xref href=&quot;System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&quot;></xref>."
  overload: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>settings</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> bestaat al voor dit toepassingsdomein."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)
  id: AddService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: AddService(Object)
  nameWithType: WorkflowRuntime.AddService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.AddService(Object)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Voegt de opgegeven service aan de workflow runtime engine."
  remarks: "U kunt de workflow runtime engine configureren door basisservices toe te voegen. Core-services zijn die zijn afgeleid van een van de volgende service-basisklassen: de <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>klasse, de <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>klasse, de <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>klasse, en de <xref:System.Workflow.Runtime.Tracking.TrackingService>klasse.</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>  Core-services kunnen alleen worden toegevoegd wanneer de werkstroom-runtime-engine wordt niet uitgevoerd. dus als <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>is `false`.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> De <xref:System.Workflow.Runtime.WorkflowRuntime>kan ook worden gebruikt als een opslagcontainer voor andere services die kunnen worden gebruikt door andere werkstromen of door toepassingen die worden uitgevoerd op een host.</xref:System.Workflow.Runtime.WorkflowRuntime> Als u een niet-core-service die is afgeleid van toevoegen de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klasse nadat de werkstroom-runtime-engine is gestart, AddService roept de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>methode die door deze service geïmplementeerd.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>      > [!NOTE] > AddService worden afgedwongen voor de beperking die geen twee services van de dezelfde <xref:System.Type>kunnen worden toegevoegd aan de <xref:System.Workflow.Runtime.WorkflowRuntime>.</xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Type> U kunt echter meerdere services die zijn afgeleid van de dezelfde basisklasse toevoegen.  Er mag slechts één service is afgeleid van elk van de volgende service basisklassen in de <xref:System.Workflow.Runtime.WorkflowRuntime>: de <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>klasse, de <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>klasse, en de <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>klasse</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> </xref:System.Workflow.Runtime.WorkflowRuntime>  Als u meerdere services afgeleid van een van deze klassen, voor voorbeeld twee persistentie services, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>genereert een <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>"
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. It provides example of how to use the AddService method to add an <xref:System.Workflow.Activities.ExternalDataExchangeService> and <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> to the workflow run-time engine.  \n  \n This code example is part of the [Cancelling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public void AddService (object service);
    parameters:
    - id: service
      type: System.Object
      description: "Een object met de service om toe te voegen."
  overload: System.Workflow.Runtime.WorkflowRuntime.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>service</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> is verwijderd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>service</code>is al geregistreerd bij de workflow runtime engine.       - of - <code>service</code> is een core-service en de workflow runtime engine wordt al uitgevoerd (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)
  id: CreateWorkflow(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(Type)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Een nieuw workflowexemplaar maakt met behulp van de opgegeven workflow <xref:System.Type>.</xref:System.Type>"
  remarks: "Voordat de <xref:System.Workflow.Runtime.WorkflowInstance>is gemaakt, validatie wordt uitgevoerd op deze</xref:System.Workflow.Runtime.WorkflowInstance> Als er validatiefouten optreden, de <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>gegenereerd.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Dit werkt goed voor eenvoudige scenario&quot;s, maar in een serveromgeving hervalideren van een werkstroom voor elke activering mogelijk onnodige overhead.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]validatie is uitgeschakeld, Zie <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>"
  example:
  - "The following code example demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the CreateWorkflow method.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#260](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#260)]\n [!code-vb[WF_Samples#260](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#260)]"
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType);
    parameters:
    - id: workflowType
      type: System.Type
      description: "De <xref:System.Type>van de werkstroom te maken.</xref:System.Type>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "Het gemaakte workflowexemplaar."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)
  id: CreateWorkflow(System.Xml.XmlReader)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(XmlReader)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Een workflowexemplaar maakt met behulp van de opgegeven <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "Het werkstroomexemplaar is gemaakt op basis van een XAML-werkstroom definitiebestand waarnaar wordt verwezen door de <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>       Voordat de <xref:System.Workflow.Runtime.WorkflowInstance>is gemaakt, validatie wordt uitgevoerd op deze</xref:System.Workflow.Runtime.WorkflowInstance> Als er validatiefouten optreden, de <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>gegenereerd.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Dit werkt goed voor eenvoudige scenario&quot;s, maar in een serveromgeving hervalideren van een werkstroom voor elke activering mogelijk onnodige overhead.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]validatie is uitgeschakeld, Zie <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>"
  example:
  - "The following example demonstrates how to create a workflow given a XAML-based workflow definition.  \n  \n```  \nstatic void Main(string[] args)  \n{  \n    using (WorkflowRuntime workflowRuntime = new WorkflowRuntime())  \n    {  \n        AutoResetEvent waitHandle = new AutoResetEvent(false);  \n        workflowRuntime.WorkflowCompleted += delegate(object sender, WorkflowCompletedEventArgs e)  \n        {  \n            waitHandle.Set();  \n        };  \n        workflowRuntime.WorkflowTerminated += delegate(object sender, WorkflowTerminatedEventArgs e)  \n        {  \n            Console.WriteLine(e.Exception.Message);  \n            waitHandle.Set();  \n        };  \n  \n        TypeProvider typeProvider = new TypeProvider(null);  \n        // Add referenced assemblies, if needed  \n        // typeProvider.AddAssembly(...);  \n        workflowRuntime.AddService(typeProvider);  \n  \n        using (XmlReader reader = XmlReader.Create(\"Workflow1.xoml\"))  \n        {  \n            WorkflowInstance instance = workflowRuntime.CreateWorkflow(reader);  \n            instance.Start();  \n        }  \n  \n        waitHandle.WaitOne();  \n    }  \n}  \n```"
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader);
    parameters:
    - id: workflowDefinitionReader
      type: System.Xml.XmlReader
      description: "Een <xref:System.Xml.XmlReader>waarin de werkstroomdefinitie.</xref:System.Xml.XmlReader>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "Het gemaakte workflowexemplaar."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowDefinitionReader</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> is verwijderd."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(Type,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Hiermee maakt u een workflowexemplaar met behulp van de opgegeven workflow <xref:System.Type>en de argumenten voor de werkstroom zijn opgenomen in de opgegeven &lt;xref:System.Collections.Generic.Dictionary%602&gt;.</xref:System.Type>"
  remarks: "Voordat de <xref:System.Workflow.Runtime.WorkflowInstance>is gemaakt, validatie wordt uitgevoerd op deze</xref:System.Workflow.Runtime.WorkflowInstance> Als er validatiefouten optreden, de <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>gegenereerd.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Dit werkt goed voor eenvoudige scenario&quot;s, maar in een serveromgeving hervalideren van een werkstroom voor elke activering mogelijk onnodige overhead.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]validatie is uitgeschakeld, Zie <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       Voor een voorbeeld van de doorgegeven in parameters `CreateWorkflow`, Zie [Workflow met Parameters voorbeeld](http://go.microsoft.com/fwlink/?LinkId=157403)."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary<string,object> namedArgumentValues);
    parameters:
    - id: workflowType
      type: System.Type
      description: "De <xref:System.Type>van de werkstroom te maken.</xref:System.Type>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "Een &lt;xref:System.Collections.Generic.Dictionary%602&gt; van objecten die zijn ingevoerd met de tekenreeks met de argumenten voor de werkstroom."
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "Het gemaakte workflowexemplaar."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  id: CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Maakt een werkstroomexemplaar dat door de opgegeven parameters."
  remarks: "Voordat de <xref:System.Workflow.Runtime.WorkflowInstance>is gemaakt, validatie wordt uitgevoerd op deze</xref:System.Workflow.Runtime.WorkflowInstance> Als er validatiefouten optreden, de <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>gegenereerd.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Dit werkt goed voor eenvoudige scenario&quot;s, maar in een serveromgeving hervalideren van een werkstroom voor elke activering mogelijk onnodige overhead.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]validatie is uitgeschakeld, Zie <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       De werkstroom `instanceId` voor alle actieve werkstromen die worden geladen door de <xref:System.Workflow.Runtime.WorkflowRuntime>moeten uniek zijn.</xref:System.Workflow.Runtime.WorkflowRuntime> Als u een `instanceId` maken van een werkstroom en een actieve werkstroom al wordt gebruikt die `instanceId`, een <xref:System.InvalidOperationException>gegenereerd.</xref:System.InvalidOperationException>       Voor een voorbeeld van de doorgegeven in parameters `CreateWorkflow`, Zie [Workflow met Parameters voorbeeld](http://go.microsoft.com/fwlink/?LinkID=157403)."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary<string,object> namedArgumentValues, Guid instanceId);
    parameters:
    - id: workflowType
      type: System.Type
      description: "De <xref:System.Type>van de werkstroom te maken.</xref:System.Type>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "Een &lt;xref:System.Collections.Generic.Dictionary%602&gt; van objecten die zijn ingevoerd met een tekenreeks met de argumenten voor de werkstroom."
    - id: instanceId
      type: System.Guid
      description: "De <xref:System.Guid>van de specifieke <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> maken.</xref:System.Guid>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "Het gemaakte workflowexemplaar."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Hiermee maakt u een workflowexemplaar met behulp van de opgegeven <xref:System.Xml.XmlReader>objecten en de argumenten die is opgenomen in de opgegeven &lt;xref:System.Collections.Generic.Dictionary%602&gt;.</xref:System.Xml.XmlReader>"
  remarks: "Het werkstroomexemplaar is gemaakt op basis van de workflowdefinitie waarnaar wordt verwezen door de <xref:System.Xml.XmlReader>en de argumenten zijn geleverd door `namedArgumentValues`.</xref:System.Xml.XmlReader>       Voordat de <xref:System.Workflow.Runtime.WorkflowInstance>is gemaakt, validatie wordt uitgevoerd op deze</xref:System.Workflow.Runtime.WorkflowInstance> Als er validatiefouten optreden, de <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>gegenereerd.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Dit werkt goed voor eenvoudige scenario&quot;s, maar in een serveromgeving hervalideren van een werkstroom voor elke activering mogelijk onnodige overhead.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]validatie is uitgeschakeld, Zie <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       Voor een voorbeeld van de doorgegeven in parameters `CreateWorkflow`, Zie [Workflow met Parameters voorbeeld](http://go.microsoft.com/fwlink/?LinkID=157403).       Zie voor een voorbeeld van het gebruik van regels die zijn gedefinieerd in XML [IfElse met regels voorbeeld](http://go.microsoft.com/fwlink/?LinkId=157404)."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary<string,object> namedArgumentValues);
    parameters:
    - id: workflowDefinitionReader
      type: System.Xml.XmlReader
      description: "Een <xref:System.Xml.XmlReader>waarin de werkstroomdefinitie.</xref:System.Xml.XmlReader>"
    - id: rulesReader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "Een &lt;xref:System.Collections.Generic.Dictionary%602&gt; van objecten die zijn ingevoerd met een tekenreeks met de argumenten voor de werkstroom."
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "Het gemaakte workflowexemplaar."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowDefinitionReader</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> is verwijderd."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  id: CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Maakt een werkstroomexemplaar dat door de opgegeven parameters."
  remarks: "Voordat de <xref:System.Workflow.Runtime.WorkflowInstance>is gemaakt, validatie wordt uitgevoerd op deze</xref:System.Workflow.Runtime.WorkflowInstance> Als er validatiefouten optreden, de <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>gegenereerd.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Dit werkt goed voor eenvoudige scenario&quot;s, maar in een serveromgeving hervalideren van een werkstroom voor elke activering mogelijk onnodige overhead.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]validatie is uitgeschakeld, Zie <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       De werkstroom `instanceId` voor alle actieve werkstromen die worden geladen door de <xref:System.Workflow.Runtime.WorkflowRuntime>moeten uniek zijn.</xref:System.Workflow.Runtime.WorkflowRuntime> Als u een `instanceId` maken van een werkstroom en een actieve werkstroom al wordt gebruikt die `instanceId`, een <xref:System.InvalidOperationException>gegenereerd.</xref:System.InvalidOperationException>       Voor een voorbeeld van de doorgegeven in parameters `CreateWorkflow`, Zie [Workflow met Parameters voorbeeld](http://go.microsoft.com/fwlink/?LinkID=157403).       Zie voor een voorbeeld van het gebruik van regels die zijn gedefinieerd in XML [IfElse met regels voorbeeld](http://go.microsoft.com/fwlink/?LinkID=157404)."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary<string,object> namedArgumentValues, Guid instanceId);
    parameters:
    - id: workflowDefinitionReader
      type: System.Xml.XmlReader
      description: "Een <xref:System.Xml.XmlReader>waarin de werkstroomdefinitie.</xref:System.Xml.XmlReader>"
    - id: rulesReader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "Een &lt;xref:System.Collections.Generic.Dictionary%602&gt; van objecten die zijn ingevoerd met een tekenreeks met de argumenten voor de werkstroom."
    - id: instanceId
      type: System.Guid
      description: "De <xref:System.Guid>van de specifieke <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> maken.</xref:System.Guid>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "Het gemaakte workflowexemplaar."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Dispose
  id: Dispose
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Dispose()
  nameWithType: WorkflowRuntime.Dispose()
  fullName: System.Workflow.Runtime.WorkflowRuntime.Dispose()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Versies van de resources die worden gebruikt door de <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>."
  remarks: "De <xref:System.Workflow.Runtime.WorkflowRuntime>probleemloos, moet u alleen Dispose nadat u hebt aangeroepen <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> aanroepen</xref:System.Workflow.Runtime.WorkflowRuntime> afsluiten Dit komt doordat het aanroepen van de methode Dispose alleen blijft de <xref:System.Workflow.Runtime.WorkflowRuntime>in een onbruikbare status.</xref:System.Workflow.Runtime.WorkflowRuntime> Dispose maakt de resources die wordt gebruikt door de runtime door geopende bestandsingangen en databaseverbindingen sluiten, maar deze niet verwijderen (Unload) workflowexemplaren, -services stoppen of voer een van de andere acties uitvoeren die <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>komt.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>       Dispose moet alleen worden aangeroepen als de host-toepassing moet de resources die worden gebruikt door gratis de <xref:System.Workflow.Runtime.WorkflowRuntime>voordat ze automatisch door de garbage collector zijn vrijgegeven.</xref:System.Workflow.Runtime.WorkflowRuntime> Raadpleeg voor algemene informatie over Dispose [onbeheerde hulpbronnen reinigen](~/add/includes/ajax-current-ext-md.md) en [uitvoering van een methode Dispose](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to call Dispose on a <xref:System.Workflow.Runtime.WorkflowRuntime> object. In this sample, the Dispose method is called from the FormClosing event handler for the main form of the application; this ensures that the objects created by the runtime are properly cleaned up when the application shuts down. This sample is from the [Speech Application Sample](http://go.microsoft.com/fwlink/?LinkId=157405).  \n  \n [!code-cs[WF_Samples#108](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#108)]\n [!code-vb[WF_Samples#108](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#108)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)
  id: GetAllServices(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetAllServices(Type)
  nameWithType: WorkflowRuntime.GetAllServices(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(Type)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Alle services die zijn toegevoegd aan de werkstroom-runtime-engine die implementeren of zijn afgeleid van de opgegeven <xref:System.Type>.</xref:System.Type> opgehaald"
  remarks: "Een lege <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>geeft aan dat er geen services die implementeren of zijn afgeleid van de opgegeven <xref:System.Type>zijn toegevoegd aan de workflow runtime engine.</xref:System.Type> </xref:System.Collections.ObjectModel.ReadOnlyCollection%601>"
  example:
  - "The following example demonstrates how to retrieve all services of a given type from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.  \n  \n [!code-cs[WF_Samples#19](~/add/codesnippet/csharp/wf_snippets/snippets.cs#19)]\n [!code-vb[WF_Samples#19](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#19)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<object> GetAllServices (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "De <xref:System.Type>dat services implementeren moeten om te worden geretourneerd.</xref:System.Type>"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Object}
      description: "Services die zijn afgeleid van de opgegeven <xref:System.Type>.</xref:System.Type> of geïmplementeerd"
  overload: System.Workflow.Runtime.WorkflowRuntime.GetAllServices*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> is verwijderd."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1
  id: GetAllServices``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetAllServices()
  nameWithType: WorkflowRuntime.GetAllServices()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<T> GetAllServices<T> ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{T}
      description: "Moet worden toegevoegd."
  overload: System.Workflow.Runtime.WorkflowRuntime.GetAllServices<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows
  id: GetLoadedWorkflows
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetLoadedWorkflows()
  nameWithType: WorkflowRuntime.GetLoadedWorkflows()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Hiermee haalt u een verzameling met alle werkstroomexemplaren die momenteel in het geheugen geladen."
  remarks: "Merk op dat, in tegenstelling tot <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>, niet door deze methode biedt genereert een <xref:System.InvalidOperationException>Als de runtime niet is gestart.</xref:System.InvalidOperationException> </xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>"
  example:
  - "The following example demonstrates how to retrieve a collection of loaded workflows from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.  \n  \n [!code-cs[WF_Samples#18](~/add/codesnippet/csharp/wf_snippets/snippets.cs#18)]\n [!code-vb[WF_Samples#18](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#18)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.Runtime.WorkflowInstance> GetLoadedWorkflows ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.Runtime.WorkflowInstance}
      description: "Een <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> object voor elk werkstroomexemplaar momenteel in het geheugen geladen."
  overload: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> is verwijderd."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: WorkflowRuntime.GetService(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService(Type)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Haalt een service van het opgegeven <xref:System.Type>van de workflow runtime engine.</xref:System.Type>"
  remarks: "Mag GetService genereert een <xref:System.InvalidOperationException>of meer dan één service voor de opgegeven <xref:System.Type>.</xref:System.Type> bestaat</xref:System.InvalidOperationException> Daarom moet u een van de overbelaste methoden van <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A>Als het is mogelijk dat meerdere services van het opgegeven type aanwezig in de <xref:System.Workflow.Runtime.WorkflowRuntime>.</xref:System.Workflow.Runtime.WorkflowRuntime> zijn</xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> De workflow runtime engine kan bijvoorbeeld meerdere bijhouden services. Als u een traceringsservice door op te geven aanvragen de <xref:System.Workflow.Runtime.Tracking.TrackingService>basisklasse, is het mogelijk dat een uitzondering gegenereerd.</xref:System.Workflow.Runtime.Tracking.TrackingService>"
  syntax:
    content: public object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "De <xref:System.Type>van de service om op te halen.</xref:System.Type>"
    return:
      type: System.Object
      description: "De service van de opgegeven <xref:System.Type>.</xref:System.Type>"
  overload: System.Workflow.Runtime.WorkflowRuntime.GetService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> is al verwijderd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meer dan één service van het type <code> serviceType </code> is gevonden."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService``1
  id: GetService``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetService()
  nameWithType: WorkflowRuntime.GetService()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  syntax:
    content: public T GetService<T> ();
    parameters: []
    return:
      type: T
      description: "Moet worden toegevoegd."
  overload: System.Workflow.Runtime.WorkflowRuntime.GetService<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)
  id: GetWorkflow(System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetWorkflow(Guid)
  nameWithType: WorkflowRuntime.GetWorkflow(Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Het werkstroomexemplaar met de opgegeven <xref:System.Guid>.</xref:System.Guid> opgehaald"
  remarks: "Als `instanceId` Hiermee geeft u op een workflowexemplaar dat momenteel niet in het geheugen van het werkstroomexemplaar is geladen in het geheugen en gepland voor uitvoering. Nadat een workflowexemplaar is afgebroken, kunt u bijvoorbeeld GetWorkflow om te laden van het workflowexemplaar weer in het geheugen aanroepen. In dit geval wordt is de laatste permanente status van het werkstroomexemplaar geladen in het geheugen door de persistentie-service."
  example:
  - "The following code example demonstrates a `ReloadWorkflow` method that calls the GetWorkflow method. The `ReloadWorkflow` method is part of a larger class that has a `Runtime` property to access all of the methods, properties, and events of the <xref:System.Workflow.Runtime.WorkflowRuntime> class.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkId=157351) sample.  \n  \n> [!NOTE]\n>  In the example, the call to <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> is redundant because both the GetWorkflow and <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> methods use the same internal helper method to load the workflow instance into memory.  \n  \n [!code-cs[WF_Samples#265](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#265)]\n [!code-vb[WF_Samples#265](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#265)]"
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance GetWorkflow (Guid instanceId);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "De <xref:System.Guid>van een workflowexemplaar.</xref:System.Guid>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "De <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> is met de opgegeven <xref:System.Guid>.</xref:System.Guid>"
  overload: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De WorkflowRuntime is niet gestart."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.IsStarted
  id: IsStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: IsStarted
  nameWithType: WorkflowRuntime.IsStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.IsStarted
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Haalt een waarde die aangeeft of de workflow runtime engine is gestart."
  remarks: "IsStarted geeft aan dat de workflow runtime engine-services worden uitgevoerd. IsStarted is `false` totdat de host aanroepen <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> Het blijft `true` totdat de host aanroepen <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>      > [!NOTE] > U kunt geen basisservices toevoegen aan de workflow runtime engine terwijl deze wordt uitgevoerd. Core-services zijn services die zijn afgeleid van de <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>klasse, de <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService>klasse, de <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>klasse, en de <xref:System.Workflow.Runtime.Tracking.TrackingService>klasse.</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>"
  example:
  - "The following example demonstrates how to access the IsStarted property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object. In this example, if the runtime is started, a message is printed to the console.  \n  \n [!code-cs[WF_Samples#21](~/add/codesnippet/csharp/wf_snippets/snippets.cs#21)]\n [!code-vb[WF_Samples#21](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#21)]"
  syntax:
    content: public bool IsStarted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de werkstroom-runtime-engine is gestart; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Runtime.WorkflowRuntime.IsStarted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Name
  id: Name
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Name
  nameWithType: WorkflowRuntime.Name
  fullName: System.Workflow.Runtime.WorkflowRuntime.Name
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Opgehaald of ingesteld van de naam gekoppeld aan de <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>."
  remarks: "U kunt de naam niet instellen terwijl de werkstroom-runtime-engine wordt uitgevoerd (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `true`).</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>"
  example:
  - "The following example demonstrates how to access the Name property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object. In this example, the name of the runtime is set to \"Main Runtime\".  \n  \n [!code-cs[WF_Samples#20](~/add/codesnippet/csharp/wf_snippets/snippets.cs#20)]\n [!code-vb[WF_Samples#20](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#20)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "De naam gekoppeld aan dit <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>."
  overload: System.Workflow.Runtime.WorkflowRuntime.Name*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Een poging om in te stellen op een <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> die is verwijderd. Deze gebeurtenis treedt op."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er treedt een poging om in te stellen terwijl de werkstroom-runtime-engine wordt uitgevoerd op."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)
  id: RemoveService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: RemoveService(Object)
  nameWithType: WorkflowRuntime.RemoveService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.RemoveService(Object)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Hiermee verwijdert u de opgegeven service van de workflow runtime engine."
  remarks: "U kunt een core-service niet verwijderen terwijl de werkstroom-runtime-engine wordt uitgevoerd (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `true`).</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> Core-services zijn services die zijn afgeleid van de <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>klasse, de <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>klasse, de <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>klasse, of de <xref:System.Workflow.Runtime.Tracking.TrackingService>klasse.</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>  Als `service` is afgeleid van de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klasse, RemoveService aanroepen de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>methode geïmplementeerd door `service`.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>"
  example:
  - "In the following example, a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> is added and removed from the <xref:System.Workflow.Runtime.WorkflowRuntime>.  \n  \n [!code-cs[WF_Samples#16](~/add/codesnippet/csharp/wf_snippets/snippets.cs#16)]\n [!code-vb[WF_Samples#16](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#16)]"
  syntax:
    content: public void RemoveService (object service);
    parameters:
    - id: service
      type: System.Object
      description: "Een object met de service te verwijderen."
  overload: System.Workflow.Runtime.WorkflowRuntime.RemoveService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>service</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> is al verwijderd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The workflow run-time engine has started (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>) and <code>service</code> is a core service.  \n  \n \\- or -  \n  \n <code>service</code> is not registered with the workflow run-time engine."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  id: ServicesExceptionNotHandled
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: ServicesExceptionNotHandled
  nameWithType: WorkflowRuntime.ServicesExceptionNotHandled
  fullName: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Deze gebeurtenis treedt op wanneer een service die is afgeleid van de <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;> </xref> aanroepen <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*> klasse"
  remarks: "Een service die is afgeleid van de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klasse kunt aanroepen de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>methode om te informeren over de ServicesExceptionNotHandled gebeurtenis die een uitzondering opgetreden die niet kan worden uitgevoerd om af te handelen is opgetreden tijdens de uitvoering ervan-abonnees.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> U kunt zich abonneren op deze gebeurtenis voor het implementeren van een mechanisme voor herstel.       Deze gebeurtenis treedt op wanneer een workflowexemplaar nog niet door de workflow runtime engine gemaakt is en er een uitzondering optreedt. In dit scenario is de enige manier om een host-toepassing is een uitzondering opgetreden in kennis te verhogen van deze gebeurtenis. Echter, de workflow runtime engine niet aan dit rechtstreeks. In plaats daarvan de workflow runtime engine ofwel een uitzondering levert aan het werkstroomexemplaar of, als er geen exemplaar is genereert terug naar de aanroeper, is in dit geval daadwerkelijk op de service die deze gebeurtenis wordt geactiveerd. Als u uw eigen persistentie of scheduler-service maakt, moet u implementeren deze gebeurtenis zelf via de base <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>methode.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>       Voor de gebeurtenis ServicesExceptionNotHandled de afzender bevat de <xref:System.Workflow.Runtime.WorkflowRuntime>en <xref:System.Workflow.Runtime.WorkflowEventArgs>bevat de <xref:System.Guid>van het workflowexemplaar dat is met de service en de <xref:System.Exception>die niet worden verwerkt.</xref:System.Exception> </xref:System.Guid> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]verwerken van gebeurtenissen, Zie [verbruikt gebeurtenissen](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates ServicesExceptionNotHandled with an event handler, a method named `OnExceptionNotHandled`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=157351).  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs> ServicesExceptionNotHandled;
    return:
      type: System.EventHandler{System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Started
  id: Started
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Started
  nameWithType: WorkflowRuntime.Started
  fullName: System.Workflow.Runtime.WorkflowRuntime.Started
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Deze gebeurtenis treedt op wanneer de werkstroom-runtime-engine wordt gestart."
  remarks: "De <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>methode leidt tot de gebeurtenis gestart nadat deze is de configuratie van de core-service van de workflow runtime engine gevalideerd, is aangeroepen de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>methode die is geïmplementeerd door elk van de services die zijn afgeleid van de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klasse en is ingesteld <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>naar `true`.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> Er is geen garantie over de volgorde waarin de services die zijn afgeleid van de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klasse worden gestart door de workflow runtime engine en sommige van deze workflow runtime engine-services afhankelijk zijn van de functionaliteit die door andere van deze services om hun taken starten te voltooien.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Workflow runtime engine-services kunnen overschrijven de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=fullName>methode voor het starten van de laatste taken waarvoor de ondersteuning van andere workflow runtime engine-services wanneer de gestarte gebeurtenis wordt gegenereerd.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=fullName>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]verwerken van gebeurtenissen, Zie [verbruikt gebeurtenissen](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "In the following example, an event handler is added to the Started event of the <xref:System.Workflow.Runtime.WorkflowRuntime>. In this example, the handler is an anonymous method that prints a simple message to the console.  \n  \n [!code-cs[WF_Samples#15](~/add/codesnippet/csharp/wf_snippets/snippets.cs#15)]\n [!code-vb[WF_Samples#15](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#15)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs> Started;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowRuntimeEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.StartRuntime
  id: StartRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: StartRuntime()
  nameWithType: WorkflowRuntime.StartRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StartRuntime()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Start de workflow runtime engine en de workflow runtime engine-services."
  remarks: "Deze methode wordt gecontroleerd of een geldige reeks basisservices bestaat en start vervolgens alle services die zijn afgeleid van de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klasse.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>  Moet er maar één van elk van de volgende basisservices: een werkstroom `CommitWorkBatch` service die is afgeleid van de <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>basisklasse en een scheduler-service die is afgeleid van de <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>basis-klasse.</xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>  Als een of beide van de kernservices ontbreken, de workflow runtime engine levert de juiste standaardservice: <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService>voor de werkstroom `CommitWorkBatch` service en <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>voor de scheduler-service.</xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> </xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> Een permanente service is optioneel, maar er mag hoogstens één permanente service aanwezig is. Nadat deze configuratie van de service heeft gevalideerd, aanroepen StartRuntime <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>op alle services die zijn afgeleid van de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klasse.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>  Ten slotte de workflow runtime engine ingesteld <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>en genereert de <xref:System.Workflow.Runtime.WorkflowRuntime.Started>gebeurtenis.</xref:System.Workflow.Runtime.WorkflowRuntime.Started> </xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       U kunt toevoegen of verwijderen van basisservices nadat de werkstroom-runtime-engine is gestart. Core-services zijn services die zijn afgeleid van de <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>klasse, de <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>klasse, de <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>klasse, of de <xref:System.Workflow.Runtime.Tracking.TrackingService>klasse.</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>  Als u StartRuntime aanroept terwijl de werkstroom-runtime-engine wordt uitgevoerd, wordt geen actie uitgevoerd."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code calls the StartRuntime after the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> creates a <xref:System.Workflow.Runtime.WorkflowRuntime> instance and after it calls <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> to add services to the runtime. It also calls StartRuntime before any other processing occurs.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public void StartRuntime ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.StartRuntime*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> is verwijderd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is meer dan één servicewerkstroom <xref uid=&quot;langword_csharp_CommitWorkBatch&quot; name=&quot;CommitWorkBatch&quot; href=&quot;&quot;> </xref> service geregistreerd bij dit <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>.       - of - er is meer dan één scheduler-service geregistreerd bij dit <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>.       - of - er is meer dan een permanente service geregistreerd bij dit <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Stopped
  id: Stopped
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Stopped
  nameWithType: WorkflowRuntime.Stopped
  fullName: System.Workflow.Runtime.WorkflowRuntime.Stopped
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Deze gebeurtenis treedt op wanneer de werkstroom-runtime-engine is gestopt."
  remarks: "De <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>methode wordt gegeven van de gebeurtenis gestopt nadat deze is aangeroepen met de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>methode wordt geïmplementeerd door elk van de services die zijn afgeleid van de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klasse.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>  Er is geen garantie over de volgorde waarin deze workflow runtime engine-services zijn gestopt en sommige van deze services moet wellicht behouden bepaalde functionaliteit die wordt vertrouwd op door andere services totdat zij te zijn gestopt. Dergelijke services kunnen overschrijven de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=fullName>methode voor het uitvoeren van alle logica achtergebleven afsluiten wanneer de gestopt gebeurtenis wordt geactiveerd.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=fullName>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]verwerken van gebeurtenissen, Zie [verbruikt gebeurtenissen](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "In the following example, an event handler is added to the Stopped event of the <xref:System.Workflow.Runtime.WorkflowRuntime>. In this example, the handler is an anonymous method that prints a simple message to the console.  \n  \n [!code-cs[WF_Samples#14](~/add/codesnippet/csharp/wf_snippets/snippets.cs#14)]\n [!code-vb[WF_Samples#14](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#14)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs> Stopped;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowRuntimeEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.StopRuntime
  id: StopRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: StopRuntime()
  nameWithType: WorkflowRuntime.StopRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StopRuntime()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Stopt de workflow runtime engine en runtime-services."
  remarks: "Deze methode zorgt ervoor dat de werkstroom-runtime-engine als elk van de workflow-exemplaren te verwijderen, stopt alle services die zijn afgeleid van de <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klasse, stelt u <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>naar `false`, en verhoogt de <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped>gebeurtenis.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> </xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>       De <xref:System.Workflow.Runtime.WorkflowRuntime>aanroep probleemloos, StopRuntime voordat u <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> aanroepen</xref:System.Workflow.Runtime.WorkflowRuntime> afsluiten       [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]de <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>methode.</xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>"
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. StopRuntime is called after the host has completed all other processing associated with the runtime.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#259](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#259)]\n [!code-vb[WF_Samples#259](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#259)]"
  syntax:
    content: public void StopRuntime ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.StopRuntime*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> is al verwijderd."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  id: WorkflowAborted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowAborted
  nameWithType: WorkflowRuntime.WorkflowAborted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Treedt op wanneer een workflowexemplaar is afgebroken."
  remarks: "WorkflowAborted vindt plaats nadat alle in behandeling zijnde taken voor de werkstroom exemplaar is uitgeschakeld, maar voordat de werkstroom exemplaar in het geheugen is ongeldig. U kunt een workflowexemplaar afbreken door het aanroepen van <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=fullName>.</xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=fullName>       Voor deze gebeurtenis, de afzender bevat de <xref:System.Workflow.Runtime.WorkflowRuntime>en <xref:System.Workflow.Runtime.WorkflowEventArgs>bevat de <xref:System.Workflow.Runtime.WorkflowInstance>die zijn gekoppeld aan de gebeurtenis.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]verwerken van gebeurtenissen, Zie [verbruikt gebeurtenissen](http://go.microsoft.com/fwlink/?LinkId=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowAborted with an event handler, a method named `OnWorkflowAborted`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#141](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#141)]\n [!code-vb[WF_Samples#141](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#141)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowAborted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  id: WorkflowCompleted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowCompleted
  nameWithType: WorkflowRuntime.WorkflowCompleted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Deze gebeurtenis treedt op wanneer een workflowexemplaar is voltooid."
  remarks: "WorkflowCompleted treedt op nadat het werkstroomexemplaar is voltooid, maar voordat het exemplaar ongeldig wordt gemaakt in het geheugen.       Voor de <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>gebeurtenis, de afzender bevat de <xref:System.Workflow.Runtime.WorkflowRuntime>en <xref:System.Workflow.Runtime.WorkflowCompletedEventArgs>bevat de <xref:System.Workflow.Runtime.WorkflowInstance>en de output-parameters.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowCompletedEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]verwerken van gebeurtenissen, Zie [verbruikt gebeurtenissen](http://go.microsoft.com/fwlink/?LinkId=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowCompleted with an event handler, a method named `OnWorkflowCompleted`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowCompletedEventArgs> WorkflowCompleted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowCompletedEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  id: WorkflowCreated
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowCreated
  nameWithType: WorkflowRuntime.WorkflowCreated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Deze gebeurtenis treedt op wanneer een werkstroomexemplaar dat wordt gemaakt."
  remarks: "De workflow runtime engine activeert de gebeurtenis WorkflowCreated nadat het werkstroomexemplaar is volledig samengesteld maar voordat de activiteiten worden verwerkt. Voor deze gebeurtenis, de afzender bevat de <xref:System.Workflow.Runtime.WorkflowRuntime>en <xref:System.Workflow.Runtime.WorkflowEventArgs>bevat de <xref:System.Workflow.Runtime.WorkflowInstance>die zijn gekoppeld aan de gebeurtenis.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]verwerken van gebeurtenissen, Zie [verbruikt gebeurtenissen](http://go.microsoft.com/fwlink/?LinkId=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowCreated with an event handler, a method named `OnWorkflowCreated`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=15735).  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowCreated;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  id: WorkflowIdled
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowIdled
  nameWithType: WorkflowRuntime.WorkflowIdled
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Deze gebeurtenis treedt op wanneer een workflowexemplaar in de niet-actieve status."
  remarks: "De workflow runtime engine activeert de gebeurtenis WorkflowIdled wanneer het workflowexemplaar in een niet-actieve status; bijvoorbeeld, wanneer de werkstroom wacht op een <xref:System.Workflow.Activities.DelayActivity>activiteit is voltooid.</xref:System.Workflow.Activities.DelayActivity>       Voor deze gebeurtenis, de afzender bevat de <xref:System.Workflow.Runtime.WorkflowRuntime>en <xref:System.Workflow.Runtime.WorkflowEventArgs>bevat de <xref:System.Workflow.Runtime.WorkflowInstance>die zijn gekoppeld aan de gebeurtenis.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]verwerken van gebeurtenissen, Zie [KROONTJESPEN: gebeurtenissen verbruikt](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowIdled with an event handler, a method named `OnWorkflowIdled`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowIdled;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  id: WorkflowLoaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowLoaded
  nameWithType: WorkflowRuntime.WorkflowLoaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Treedt op wanneer het werkstroomexemplaar is geladen in het geheugen."
  remarks: "WorkflowLoaded vindt plaats nadat de persistentie-service van het werkstroomexemplaar is hersteld, maar voordat de workflow runtime engine begint activiteiten uitvoeren.       Voor de gebeurtenis WorkflowLoaded de afzender bevat de <xref:System.Workflow.Runtime.WorkflowRuntime>en <xref:System.Workflow.Runtime.WorkflowEventArgs>bevat de <xref:System.Workflow.Runtime.WorkflowInstance>die zijn gekoppeld aan de gebeurtenis.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]verwerken van gebeurtenissen, Zie [verbruikt gebeurtenissen](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowLoaded with an event handler, a method named `OnWorkflowLoad`.  \n  \n This code example is part of the [Custom Persistence Service](http://go.microsoft.com/fwlink/?LinkID=157351) sample.  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowLoaded;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  id: WorkflowPersisted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowPersisted
  nameWithType: WorkflowRuntime.WorkflowPersisted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Treedt op wanneer de status van een workflowexemplaar is opgeslagen."
  remarks: "Het workflowexemplaar kan om diverse redenen voor worden gehandhaafd. Bijvoorbeeld, de host kunt aanroepen <xref:System.Workflow.Runtime.WorkflowInstance.UnLoad%2A?displayProperty=fullName>op een workflowexemplaar of de workflow runtime engine een workflowexemplaar kan behouden omdat het exemplaar niet actief is of omdat een atomic-scope is voltooid.</xref:System.Workflow.Runtime.WorkflowInstance.UnLoad%2A?displayProperty=fullName> Als een permanente service aanwezig is in de <xref:System.Workflow.Runtime.WorkflowRuntime>, WorkflowPersisted wordt gegenereerd door de runtime nadat de status van het werkstroomexemplaar is opgeslagen in het geheugen.</xref:System.Workflow.Runtime.WorkflowRuntime> Als een permanente service niet aanwezig is nog steeds door de gebeurtenis is opgetreden maar status van het exemplaar wordt niet opgeslagen. Als de WorkflowPersisted gebeurtenis treedt op omdat het werkstroomexemplaar wordt ongedaan gemaakt, wordt deze gevolgd door een <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>gebeurtenis.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>       Voor de gebeurtenis WorkflowPersisted de afzender bevat de <xref:System.Workflow.Runtime.WorkflowRuntime>en <xref:System.Workflow.Runtime.WorkflowEventArgs>bevat de <xref:System.Workflow.Runtime.WorkflowInstance>die zijn gekoppeld aan de gebeurtenis.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]verwerken van gebeurtenissen, Zie [verbruikt gebeurtenissen](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowPersisted with an event handler, a method named `OnWorkflowPersisted`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=15735).  \n  \n [!code-cs[WF_Samples#279](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#279)]\n [!code-vb[WF_Samples#279](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#279)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowPersisted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  id: WorkflowResumed
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowResumed
  nameWithType: WorkflowRuntime.WorkflowResumed
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Deze gebeurtenis treedt op wanneer de uitvoering van een workflowexemplaar is hervat na een opschorten."
  remarks: "De workflow runtime engine wordt gegeven van de gebeurtenis WorkflowResumed vlak voordat het werkstroomexemplaar is gepland. De gebeurtenis WorkflowResumed wordt meestal gegenereerd vanwege een expliciete aanroep <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName>.</xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName> De workflow runtime engine kan echter tijdelijk een instantie voor het uitvoeren van een bewerking, bijvoorbeeld, een werkstroom wijziging toepassen. In dit geval de WorkflowResumed gebeurtenis treedt op als de uitvoering van het workflowexemplaar na het opnieuw door de runtime wordt hervat.       Voor de gebeurtenis WorkflowResumed de afzender bevat de <xref:System.Workflow.Runtime.WorkflowRuntime>en <xref:System.Workflow.Runtime.WorkflowEventArgs>bevat de <xref:System.Workflow.Runtime.WorkflowInstance>die zijn gekoppeld aan de gebeurtenis.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]verwerken van gebeurtenissen, Zie [verbruikt gebeurtenissen](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowResumed with an event handler, a method named `OnWorkflowResume`.  \n  \n This code example is part of the [Suspend and Terminate Sample](http://go.microsoft.com/fwlink/?LinkId=157402).  \n  \n [!code-cs[WF_Samples#171](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#171)]\n [!code-vb[WF_Samples#171](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#171)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowResumed;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  id: WorkflowStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowStarted
  nameWithType: WorkflowRuntime.WorkflowStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Deze gebeurtenis treedt op wanneer een workflowexemplaar is gestart."
  remarks: "De workflow runtime engine wordt gegeven van de gebeurtenis WorkflowStarted nadat het werkstroomexemplaar is gestart door het plannen van de hoofdactiviteit voor uitvoering. Voor deze gebeurtenis, de afzender bevat de <xref:System.Workflow.Runtime.WorkflowRuntime>en <xref:System.Workflow.Runtime.WorkflowEventArgs>bevat de <xref:System.Workflow.Runtime.WorkflowInstance>die zijn gekoppeld aan de gebeurtenis.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]verwerken van gebeurtenissen, Zie [verbruikt gebeurtenissen](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowStarted with an event handler, a method named `OnWorkflowStarted`.  \n  \n This code example is part of the [Host Communication Sample](http://go.microsoft.com/fwlink/?LinkId=157406).  \n  \n [!code-cs[WF_Samples#297](~/add/codesnippet/csharp/wf_snippets/snippets38.cs#297)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowStarted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  id: WorkflowSuspended
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowSuspended
  nameWithType: WorkflowRuntime.WorkflowSuspended
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Treedt op wanneer een workflowexemplaar is onderbroken."
  remarks: "Het workflowexemplaar kan worden onderbroken door de host via een aanroep van de <xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A>methode, door een <xref:System.Workflow.ComponentModel.SuspendActivity>activiteit, of impliciet door de workflow runtime engine.</xref:System.Workflow.ComponentModel.SuspendActivity> </xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> Bijvoorbeeld, de workflow runtime engine tijdelijk wordt onderbroken het exemplaar wanneer dynamische wijzigingen van toepassing op het exemplaar.       Voor de gebeurtenis WorkflowSuspended de afzender bevat de <xref:System.Workflow.Runtime.WorkflowRuntime>en <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>bevat de <xref:System.Workflow.Runtime.WorkflowInstance>en een tekenreeks die de reden van het exemplaar beschrijft is onderbroken.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]verwerken van gebeurtenissen, Zie [verbruikt gebeurtenissen](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowSuspended with an event handler, a method named `OnWorkflowSuspended`.  \n  \n This code example is part of the [Suspend and Terminate Sample](http://go.microsoft.com/fwlink/?LinkID=157402).  \n  \n [!code-cs[WF_Samples#170](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#170)]\n [!code-vb[WF_Samples#170](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#170)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowSuspendedEventArgs> WorkflowSuspended;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowSuspendedEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  id: WorkflowTerminated
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowTerminated
  nameWithType: WorkflowRuntime.WorkflowTerminated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Treedt op wanneer een workflowexemplaar is beëindigd."
  remarks: "De werkstroom kan worden afgesloten met de host via een aanroep van de <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A>methode, door een <xref:System.Workflow.ComponentModel.TerminateActivity>activiteit, of door de workflow runtime engine wanneer er een niet-verwerkte uitzondering optreedt.</xref:System.Workflow.ComponentModel.TerminateActivity> </xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> De workflow runtime engine activeert de gebeurtenis WorkflowTerminated nadat het werkstroomexemplaar is beëindigd, maar voordat deze in het geheugen is ongeldig.       Voor de <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>gebeurtenis, de afzender bevat de <xref:System.Workflow.Runtime.WorkflowRuntime>en <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>bevat de <xref:System.Workflow.Runtime.WorkflowInstance>en informatie over de reden dat de sessie is beëindigd, in de <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=fullName>eigenschap.</xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=fullName> </xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]verwerken van gebeurtenissen, Zie [verbruikt gebeurtenissen](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> with an event handler, a method named `OnWorkflowCompleted`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#260](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#260)]\n [!code-vb[WF_Samples#260](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#260)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowTerminatedEventArgs> WorkflowTerminated;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowTerminatedEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  id: WorkflowUnloaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowUnloaded
  nameWithType: WorkflowRuntime.WorkflowUnloaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Deze gebeurtenis treedt op wanneer het werkstroomexemplaar uit het geheugen verwijderd is."
  remarks: "Een workflowexemplaar kan worden verwijderd uit het geheugen door een expliciete aanroep <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A>, of impliciet door de werkstroom-runtime-engine volgens een eigen semantiek.</xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> Bijvoorbeeld, een werkstroomexemplaar dat door de workflow runtime engine wordt verwijderd als de instantie is inactief geworden en de runtime heeft een <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>toegevoegd waarvoor <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A>is `true`.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>       De workflow runtime engine activeert de gebeurtenis WorkflowUnloaded nadat de status van het workflowexemplaar heeft gehandhaafd maar voordat het exemplaar ongeldig wordt gemaakt in het geheugen. Daarom een <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>gebeurtenis vóór de gebeurtenis WorkflowUnloaded.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>       Voor de <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnLoaded>gebeurtenis, de afzender bevat de <xref:System.Workflow.Runtime.WorkflowRuntime>en <xref:System.Workflow.Runtime.WorkflowEventArgs>bevat de <xref:System.Workflow.Runtime.WorkflowInstance>die zijn gekoppeld aan de gebeurtenis.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnLoaded>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]verwerken van gebeurtenissen, Zie [verbruikt gebeurtenissen](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowUnloaded with an event handler, a method named `OnWorkflowUnload`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=157351).  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowUnloaded;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime()
  nameWithType: WorkflowRuntime.WorkflowRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime()
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime(String)
  nameWithType: WorkflowRuntime.WorkflowRuntime(String)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime(WorkflowRuntimeSection)
  nameWithType: WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
- uid: System.Workflow.Runtime.Configuration.WorkflowRuntimeSection
  parent: System.Workflow.Runtime.Configuration
  isExternal: false
  name: WorkflowRuntimeSection
  nameWithType: WorkflowRuntimeSection
  fullName: System.Workflow.Runtime.Configuration.WorkflowRuntimeSection
- uid: System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: AddService(Object)
  nameWithType: WorkflowRuntime.AddService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.AddService(Object)
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(Type)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type)
- uid: System.Workflow.Runtime.WorkflowInstance
  parent: System.Workflow.Runtime
  isExternal: false
  name: WorkflowInstance
  nameWithType: WorkflowInstance
  fullName: System.Workflow.Runtime.WorkflowInstance
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(XmlReader)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(Type,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,Object>
  nameWithType: Dictionary<String,Object>
  fullName: System.Collections.Generic.Dictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
- uid: System.Workflow.Runtime.WorkflowRuntime.Dispose
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Dispose()
  nameWithType: WorkflowRuntime.Dispose()
  fullName: System.Workflow.Runtime.WorkflowRuntime.Dispose()
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices(Type)
  nameWithType: WorkflowRuntime.GetAllServices(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(Type)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Object}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Object>
  nameWithType: ReadOnlyCollection<Object>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Object>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices()
  nameWithType: WorkflowRuntime.GetAllServices()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{T}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetLoadedWorkflows()
  nameWithType: WorkflowRuntime.GetLoadedWorkflows()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.Runtime.WorkflowInstance}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<WorkflowInstance>
  nameWithType: ReadOnlyCollection<WorkflowInstance>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.Runtime.WorkflowInstance>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Workflow.Runtime.WorkflowInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowInstance
    name: WorkflowInstance
    nameWithType: WorkflowInstance
    fullName: WorkflowInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService(Type)
  nameWithType: WorkflowRuntime.GetService(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService(Type)
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService()
  nameWithType: WorkflowRuntime.GetService()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetWorkflow(Guid)
  nameWithType: WorkflowRuntime.GetWorkflow(Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(Guid)
- uid: System.Workflow.Runtime.WorkflowRuntime.IsStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: IsStarted
  nameWithType: WorkflowRuntime.IsStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.IsStarted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.WorkflowRuntime.Name
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Name
  nameWithType: WorkflowRuntime.Name
  fullName: System.Workflow.Runtime.WorkflowRuntime.Name
- uid: System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: RemoveService(Object)
  nameWithType: WorkflowRuntime.RemoveService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.RemoveService(Object)
- uid: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: ServicesExceptionNotHandled
  nameWithType: WorkflowRuntime.ServicesExceptionNotHandled
  fullName: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
- uid: System.EventHandler{System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ServicesExceptionNotHandledEventArgs>
  nameWithType: EventHandler<ServicesExceptionNotHandledEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs
    name: ServicesExceptionNotHandledEventArgs
    nameWithType: ServicesExceptionNotHandledEventArgs
    fullName: ServicesExceptionNotHandledEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.Started
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Started
  nameWithType: WorkflowRuntime.Started
  fullName: System.Workflow.Runtime.WorkflowRuntime.Started
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowRuntimeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowRuntimeEventArgs>
  nameWithType: EventHandler<WorkflowRuntimeEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowRuntimeEventArgs
    name: WorkflowRuntimeEventArgs
    nameWithType: WorkflowRuntimeEventArgs
    fullName: WorkflowRuntimeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.StartRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StartRuntime()
  nameWithType: WorkflowRuntime.StartRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StartRuntime()
- uid: System.Workflow.Runtime.WorkflowRuntime.Stopped
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Stopped
  nameWithType: WorkflowRuntime.Stopped
  fullName: System.Workflow.Runtime.WorkflowRuntime.Stopped
- uid: System.Workflow.Runtime.WorkflowRuntime.StopRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StopRuntime()
  nameWithType: WorkflowRuntime.StopRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StopRuntime()
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowAborted
  nameWithType: WorkflowRuntime.WorkflowAborted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowEventArgs>
  nameWithType: EventHandler<WorkflowEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowEventArgs
    name: WorkflowEventArgs
    nameWithType: WorkflowEventArgs
    fullName: WorkflowEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowCompleted
  nameWithType: WorkflowRuntime.WorkflowCompleted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowCompletedEventArgs>
  nameWithType: EventHandler<WorkflowCompletedEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowCompletedEventArgs
    name: WorkflowCompletedEventArgs
    nameWithType: WorkflowCompletedEventArgs
    fullName: WorkflowCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowCreated
  nameWithType: WorkflowRuntime.WorkflowCreated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowIdled
  nameWithType: WorkflowRuntime.WorkflowIdled
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowLoaded
  nameWithType: WorkflowRuntime.WorkflowLoaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowPersisted
  nameWithType: WorkflowRuntime.WorkflowPersisted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowResumed
  nameWithType: WorkflowRuntime.WorkflowResumed
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowStarted
  nameWithType: WorkflowRuntime.WorkflowStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowSuspended
  nameWithType: WorkflowRuntime.WorkflowSuspended
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowSuspendedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowSuspendedEventArgs>
  nameWithType: EventHandler<WorkflowSuspendedEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowSuspendedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowSuspendedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowSuspendedEventArgs
    name: WorkflowSuspendedEventArgs
    nameWithType: WorkflowSuspendedEventArgs
    fullName: WorkflowSuspendedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowTerminated
  nameWithType: WorkflowRuntime.WorkflowTerminated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowTerminatedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowTerminatedEventArgs>
  nameWithType: EventHandler<WorkflowTerminatedEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowTerminatedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowTerminatedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowTerminatedEventArgs
    name: WorkflowTerminatedEventArgs
    nameWithType: WorkflowTerminatedEventArgs
    fullName: WorkflowTerminatedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowUnloaded
  nameWithType: WorkflowRuntime.WorkflowUnloaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime
  nameWithType: WorkflowRuntime.WorkflowRuntime
- uid: System.Workflow.Runtime.WorkflowRuntime.AddService*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: AddService
  nameWithType: WorkflowRuntime.AddService
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow
  nameWithType: WorkflowRuntime.CreateWorkflow
- uid: System.Workflow.Runtime.WorkflowRuntime.Dispose*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Dispose
  nameWithType: WorkflowRuntime.Dispose
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices
  nameWithType: WorkflowRuntime.GetAllServices
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices<T>*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices<T>
  nameWithType: WorkflowRuntime.GetAllServices<T>
- uid: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetLoadedWorkflows
  nameWithType: WorkflowRuntime.GetLoadedWorkflows
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService
  nameWithType: WorkflowRuntime.GetService
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService<T>*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService<T>
  nameWithType: WorkflowRuntime.GetService<T>
- uid: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetWorkflow
  nameWithType: WorkflowRuntime.GetWorkflow
- uid: System.Workflow.Runtime.WorkflowRuntime.IsStarted*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: IsStarted
  nameWithType: WorkflowRuntime.IsStarted
- uid: System.Workflow.Runtime.WorkflowRuntime.Name*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Name
  nameWithType: WorkflowRuntime.Name
- uid: System.Workflow.Runtime.WorkflowRuntime.RemoveService*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: RemoveService
  nameWithType: WorkflowRuntime.RemoveService
- uid: System.Workflow.Runtime.WorkflowRuntime.StartRuntime*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StartRuntime
  nameWithType: WorkflowRuntime.StartRuntime
- uid: System.Workflow.Runtime.WorkflowRuntime.StopRuntime*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StopRuntime
  nameWithType: WorkflowRuntime.StopRuntime
