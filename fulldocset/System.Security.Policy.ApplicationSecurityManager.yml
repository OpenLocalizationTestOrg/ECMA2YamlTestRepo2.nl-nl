### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationSecurityManager
  id: ApplicationSecurityManager
  children:
  - System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  - System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  - System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  langs:
  - csharp
  name: ApplicationSecurityManager
  nameWithType: ApplicationSecurityManager
  fullName: System.Security.Policy.ApplicationSecurityManager
  type: Class
  summary: "Beheert vertrouwensrelatie beslissingen voor toepassingen manifest worden geactiveerd."
  remarks: "De klasse ApplicationSecurityManager biedt essentiële informatie voor het uitvoeren van een toepassing op basis van het manifest. De <xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A>eigenschap identificeert de vertrouwensrelatie manager verantwoordelijk voor het bepalen of een toepassing vertrouwd wordt.</xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A> De <xref:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust%2A>methode roept de vertrouwensrelatie van de toepassing manager om te bepalen of een toepassing vertrouwd wordt.</xref:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust%2A> De <xref:System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts%2A>eigenschap bevat de beslissingen die in de cache vertrouwensrelatie voor de gebruiker.</xref:System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class ApplicationSecurityManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  id: ApplicationTrustManager
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
  fullName: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee wordt de huidige toepassing vertrouwensrelatie manager opgehaald."
  remarks: "In de huidige versie is slechts één vertrouwensrelatie manager, wat kan een aangepaste implementatie van de <xref:System.Security.Policy.IApplicationTrustManager>interface.</xref:System.Security.Policy.IApplicationTrustManager> De standaardimplementatie van de vertrouwensrelatie-manager vraagt de gebruiker toestemming voor het installeren van de toepassing en worden de bevoegdheden gemachtigd om de toepassing. Andere trust manager-implementaties moet wellicht andere gebruikerservaringen. Een implementatie kan bijvoorbeeld een lijst van enterprise voor vertrouwde toepassingen in plaats van de gebruiker die informatie wordt gevraagd te controleren."
  syntax:
    content: public static System.Security.Policy.IApplicationTrustManager ApplicationTrustManager { get; }
    return:
      type: System.Security.Policy.IApplicationTrustManager
      description: "Een <xref href=&quot;System.Security.Policy.IApplicationTrustManager&quot;> </xref> die staat voor de huidige vertrouwensrelatie manager."
  overload: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager*
  exceptions:
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "Het beleid voor deze toepassing beschikt niet over een vertrouwensrelatie manager."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  id: DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee wordt bepaald of de gebruiker de opgegeven toepassing uit te voeren met de aangevraagde machtigingenset goedkeurt."
  remarks: "DetermineApplicationTrust maakt gebruik van de geconfigureerde <xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A>eigenschap om te bepalen of de uitvoering van de opgegeven toepassing met de machtigingenset opgegeven in het toepassingsmanifest.</xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A> Gedrag van de manager van de vertrouwensrelatie is afhankelijk van de implementatie van de vertrouwensrelatie manager en de gegevens doorgegeven de `context` parameter. Het standaardgedrag van de manager van de vertrouwensrelatie is tot stand brengen van een gebruikersdialoogvenster voor een gebruikersinterface (UI) om te bepalen van de gebruiker goedkeuring. Een vertrouwensrelatie manager kan echter ook de status van de vertrouwensrelatie van een toepassing op basis van andere criteria, zoals opgegeven door de database van een zakelijke beslissingen bepalen. De vertrouwensbeslissing kan worden gehandhaafd, al naar gelang de `context` parameters eigenschappen en de trust manager-implementatie. Als de vertrouwensrelatie voor de toepassing wordt bewaard voor een beslissing op basis van een gebruikersdialoogvenster, toekomstige aanroepen naar de <xref:System.Security.Policy.ApplicationSecurityManager>wordt het dialoogvenster van de gebruikersinterface voor elke aanvraag voor die toepassing niet aanwezig.</xref:System.Security.Policy.ApplicationSecurityManager> DetermineApplicationTrust wordt aangeroepen nadat het manifest, maar voordat de toepassing is gedownload naar het lokale systeem."
  syntax:
    content: public static bool DetermineApplicationTrust (ActivationContext activationContext, System.Security.Policy.TrustManagerContext context);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "Een <xref href=&quot;System.ActivationContext&quot;> </xref> de activeringscontext voor de toepassing te identificeren."
    - id: context
      type: System.Security.Policy.TrustManagerContext
      description: "Een <xref href=&quot;System.Security.Policy.TrustManagerContext&quot;> </xref> de context van de manager vertrouwensrelatie voor de toepassing te identificeren."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>uitvoeren van de opgegeven toepassing. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>activationContext</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  id: UserApplicationTrusts
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
  fullName: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee haalt u een toepassing vertrouwensrelatie verzameling die de beslissingen die in de cache vertrouwensrelatie voor de gebruiker bevat."
  remarks: "De vertrouwensbeslissingen in de verzameling worden onderhouden met behulp van de methoden van de verzameling, zoals de <xref:System.Security.Policy.ApplicationTrustCollection.Add%2A>methode of de <xref:System.Security.Policy.ApplicationTrustCollection.Remove%2A>methode.</xref:System.Security.Policy.ApplicationTrustCollection.Remove%2A> </xref:System.Security.Policy.ApplicationTrustCollection.Add%2A>"
  syntax:
    content: public static System.Security.Policy.ApplicationTrustCollection UserApplicationTrusts { get; }
    return:
      type: System.Security.Policy.ApplicationTrustCollection
      description: "Een <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> die de beslissingen die in de cache vertrouwensrelatie voor de gebruiker bevat."
  overload: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
  fullName: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
- uid: System.Security.Policy.IApplicationTrustManager
  parent: System.Security.Policy
  isExternal: false
  name: IApplicationTrustManager
  nameWithType: IApplicationTrustManager
  fullName: System.Security.Policy.IApplicationTrustManager
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Security.Policy.TrustManagerContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
  fullName: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
- uid: System.Security.Policy.ApplicationTrustCollection
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrustCollection
  nameWithType: ApplicationTrustCollection
  fullName: System.Security.Policy.ApplicationTrustCollection
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: DetermineApplicationTrust
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
