### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Serialization.SimpleTypeResolver
  id: SimpleTypeResolver
  children:
  - System.Web.Script.Serialization.SimpleTypeResolver.#ctor
  - System.Web.Script.Serialization.SimpleTypeResolver.ResolveType(System.String)
  - System.Web.Script.Serialization.SimpleTypeResolver.ResolveTypeId(System.Type)
  langs:
  - csharp
  name: SimpleTypeResolver
  nameWithType: SimpleTypeResolver
  fullName: System.Web.Script.Serialization.SimpleTypeResolver
  type: Class
  summary: "Biedt een type conflictoplosser voor begeleide typen."
  remarks: "Dit type-omzetter kan worden gebruikt met de <xref:System.Web.Script.Serialization.JavaScriptSerializer>klasse wilt opnemen in de geserialiseerde Object Notation JSON (JavaScript) de naam gekwalificeerd voor assembly&quot;s van beheerde type dat vereist dat de metagegevens van het aangepaste type string.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       De klasse SimpleTypeResolver kunt u beheerde typen serialiseren als JSON behoud de definitie van het beheerde type voor aangepaste typen.       Maken van een exemplaar van de <xref:System.Web.Script.Serialization.JavaScriptSerializer>klasse die gebruikmaakt van een type resolver, moet u de <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%28System.Web.Script.Serialization.JavaScriptTypeResolver%29>constructor.</xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%28System.Web.Script.Serialization.JavaScriptTypeResolver%29> </xref:System.Web.Script.Serialization.JavaScriptSerializer>"
  example:
  - "The following example demonstrates how to use the SimpleTypeResolver class and shows the resulting serialized strings by using different type resolvers.  \n  \n [!code-cs[System.Web.Script.Serialization.TypeResolver#1](~/add/codesnippet/csharp/t-system.web.script.seri_3_1.aspx)]\n [!code-vb[System.Web.Script.Serialization.TypeResolver#1](~/add/codesnippet/visualbasic/t-system.web.script.seri_3_1.aspx)]"
  syntax:
    content: 'public class SimpleTypeResolver : System.Web.Script.Serialization.JavaScriptTypeResolver'
  inheritance:
  - System.Object
  - System.Web.Script.Serialization.JavaScriptTypeResolver
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.SimpleTypeResolver.#ctor
  id: '#ctor'
  parent: System.Web.Script.Serialization.SimpleTypeResolver
  langs:
  - csharp
  name: SimpleTypeResolver()
  nameWithType: SimpleTypeResolver.SimpleTypeResolver()
  fullName: System.Web.Script.Serialization.SimpleTypeResolver.SimpleTypeResolver()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.Script.Serialization.SimpleTypeResolver&quot;> </xref> klasse."
  syntax:
    content: public SimpleTypeResolver ();
    parameters: []
  overload: System.Web.Script.Serialization.SimpleTypeResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.SimpleTypeResolver.ResolveType(System.String)
  id: ResolveType(System.String)
  parent: System.Web.Script.Serialization.SimpleTypeResolver
  langs:
  - csharp
  name: ResolveType(String)
  nameWithType: SimpleTypeResolver.ResolveType(String)
  fullName: System.Web.Script.Serialization.SimpleTypeResolver.ResolveType(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Retourneert de <xref:System.Type>van de opgegeven naam.</xref:System.Type>"
  remarks: "De methodeaanroepen ResolveType de <xref:System.Type.GetType%2A?displayProperty=fullName>methode voor het oplossen van het type.</xref:System.Type.GetType%2A?displayProperty=fullName>"
  syntax:
    content: public override Type ResolveType (string id);
    parameters:
    - id: id
      type: System.String
      description: "De assembly gekwalificeerde naam van het beheerde type."
    return:
      type: System.Type
      description: "Een <xref:System.Type>-object dat de opgegeven naam heeft als gevonden, anders wordt <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Web.Script.Serialization.SimpleTypeResolver.ResolveType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.SimpleTypeResolver.ResolveTypeId(System.Type)
  id: ResolveTypeId(System.Type)
  parent: System.Web.Script.Serialization.SimpleTypeResolver
  langs:
  - csharp
  name: ResolveTypeId(Type)
  nameWithType: SimpleTypeResolver.ResolveTypeId(Type)
  fullName: System.Web.Script.Serialization.SimpleTypeResolver.ResolveTypeId(Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Retourneert de gekwalificeerde assembly-naam van de opgegeven <xref:System.Type>.</xref:System.Type>"
  syntax:
    content: public override string ResolveTypeId (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Het type kunnen worden omgezet."
    return:
      type: System.String
      description: "Een tekenreeks met de assembly gekwalificeerde naam van het opgegeven type."
  overload: System.Web.Script.Serialization.SimpleTypeResolver.ResolveTypeId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: System.Web.Script.Serialization.JavaScriptTypeResolver
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Script.Serialization.SimpleTypeResolver.#ctor
  parent: System.Web.Script.Serialization.SimpleTypeResolver
  isExternal: false
  name: SimpleTypeResolver()
  nameWithType: SimpleTypeResolver.SimpleTypeResolver()
  fullName: System.Web.Script.Serialization.SimpleTypeResolver.SimpleTypeResolver()
- uid: System.Web.Script.Serialization.SimpleTypeResolver.ResolveType(System.String)
  parent: System.Web.Script.Serialization.SimpleTypeResolver
  isExternal: false
  name: ResolveType(String)
  nameWithType: SimpleTypeResolver.ResolveType(String)
  fullName: System.Web.Script.Serialization.SimpleTypeResolver.ResolveType(String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Script.Serialization.SimpleTypeResolver.ResolveTypeId(System.Type)
  parent: System.Web.Script.Serialization.SimpleTypeResolver
  isExternal: false
  name: ResolveTypeId(Type)
  nameWithType: SimpleTypeResolver.ResolveTypeId(Type)
  fullName: System.Web.Script.Serialization.SimpleTypeResolver.ResolveTypeId(Type)
- uid: System.Web.Script.Serialization.SimpleTypeResolver.#ctor*
  parent: System.Web.Script.Serialization.SimpleTypeResolver
  isExternal: false
  name: SimpleTypeResolver
  nameWithType: SimpleTypeResolver.SimpleTypeResolver
- uid: System.Web.Script.Serialization.SimpleTypeResolver.ResolveType*
  parent: System.Web.Script.Serialization.SimpleTypeResolver
  isExternal: false
  name: ResolveType
  nameWithType: SimpleTypeResolver.ResolveType
- uid: System.Web.Script.Serialization.SimpleTypeResolver.ResolveTypeId*
  parent: System.Web.Script.Serialization.SimpleTypeResolver
  isExternal: false
  name: ResolveTypeId
  nameWithType: SimpleTypeResolver.ResolveTypeId
