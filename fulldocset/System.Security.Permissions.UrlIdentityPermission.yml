### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.UrlIdentityPermission
  id: UrlIdentityPermission
  children:
  - System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)
  - System.Security.Permissions.UrlIdentityPermission.Copy
  - System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.UrlIdentityPermission.ToXml
  - System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)
  - System.Security.Permissions.UrlIdentityPermission.Url
  langs:
  - csharp
  name: UrlIdentityPermission
  nameWithType: UrlIdentityPermission
  fullName: System.Security.Permissions.UrlIdentityPermission
  type: Class
  summary: "Hiermee definieert u de machtiging identiteit voor de URL van waaraf de code is gemaakt. Deze klasse kan niet worden overgenomen."
  remarks: "The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file. For example, http://www.fourthcoffee.com/process/grind.htm is a complete URL.  \n  \n URLs can be matched exactly or by a wildcard in the final position, for example: http://www.fourthcoffee.com/process/*. URLs can also contain a wildcard (\"\\*\") prefix at the dot delimiter. For example, the URL name string http://www.fourthcoffee.com/process/grind.htm/ is a subset of http://\\*.fourthcoffee.com/process/grind.htm/ and http://\\*.com/process/grind.htm/.  \n  \n> [!IMPORTANT]\n>  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used.  \n>   \n>  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \n  \n In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \n  \n> [!NOTE]\n>  In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!NOTE]\n>  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class UrlIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: UrlIdentityPermission(PermissionState)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Permissions.UrlIdentityPermission&quot;> </xref> klasse met de opgegeven <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  remarks: "Hiermee maakt u een volledig beperkte (`None`) of `Unrestricted` machtiging.      > [!NOTE] > In de .NET Framework-versies 1.0 en 1.1, Identiteitsmachtigingen kunnen geen hebben een <xref:System.Security.Permissions.PermissionState>machtiging statuswaarde.</xref:System.Security.Permissions.PermissionState> Beginnen met de .NET Framework versie 2.0, kunnen Identiteitsmachtigingen elke waarde van de status machtiging hebben. Dit betekent dat in de versies 2.0 en hoger, Identiteitsmachtigingen hetzelfde gedrag als de machtigingen die u implementeert de <xref:System.Security.Permissions.IUnrestrictedPermission>interface.</xref:System.Security.Permissions.IUnrestrictedPermission> Dat wil zeggen, een aanvraag voor een identiteit altijd is geslaagd, ongeacht de identiteit van de assembly, als de assembly heeft gekregen volledig vertrouwen.       Aanvragen van de Identiteitsmachtigingen zijn in de .NET Framework-versies 1.0 en 1.1, effectieve, zelfs wanneer de aanroepende assembly volledig vertrouwd. Hoewel de aanroepende assembly volledig vertrouwen heeft, mislukt een aanvraag voor een identiteit machtiging dat wil zeggen, als de assembly niet aan de gevraagde criteria voldoet. Beginnen met de .NET Framework versie 2.0, zijn verzoeken voor Identiteitsmachtigingen niet effectief als de aanroepende assembly volledig vertrouwen. Dit zorgt ervoor consistentie voor alle machtigingen, de behandeling van Identiteitsmachtigingen uitzonderlijke gevallen elimineren."
  example:
  - "The following example shows the use of the UrlIdentityPermission constructor.  \n  \n [!code-cpp[System.Security.Permissions.UrlIdentityPermission#7](~/add/codesnippet/cpp/d852dbe8-5170-4e24-980e-_1.cpp)]\n [!code-cs[System.Security.Permissions.UrlIdentityPermission#7](~/add/codesnippet/csharp/d852dbe8-5170-4e24-980e-_1.cs)]\n [!code-vb[System.Security.Permissions.UrlIdentityPermission#7](~/add/codesnippet/visualbasic/d852dbe8-5170-4e24-980e-_1.vb)]"
  syntax:
    content: public UrlIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Een van de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> waarden."
  overload: System.Security.Permissions.UrlIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> state </code> parameter is geen geldige waarde van <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: UrlIdentityPermission(String)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(String)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Permissions.UrlIdentityPermission&quot;> </xref> klasse vertegenwoordigt de identiteit van de URL die wordt beschreven door <code> site </code>."
  remarks: "The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file, for example: http://www.fourthcoffee.com/process/grind.htm/.  \n  \n URLs can be matched exactly or by a wildcard in the final position, for example: http://www.fourthcoffee.com/process/*. URLs can also contain a wildcard (\"\\*\") prefix at the dot delimiter. For example, the URL name string http://www.fourthcoffee.com/process/grind.htm/ is a subset of http://\\*.fourthcoffee.com/process/grind.htm/ and http://\\*.com/process/grind.htm/.  \n  \n> [!NOTE]\n>  Starting with the .NET Framework version 2.0, for performance reasons, an invalid URL does not cause an argument exception at the time the new class instance is created.  The argument exception will occur when one of the set operations (Union, Intersect, or IsSubsetOf) is executed.  A demand on the permission causes <xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> to be called by the security infrastructure. The demand will fail because of the argument exception, resulting in a <xref:System.Security.SecurityException> being thrown. In this case, the original <xref:System.ArgumentException> exception will not be seen."
  example:
  - "The following example shows the use of the UrlIdentityPermission constructor.  \n  \n [!code-cpp[System.Security.Permissions.UrlIdentityPermission#8](~/add/codesnippet/cpp/m-system.security.permis_0_1.cpp)]\n [!code-cs[System.Security.Permissions.UrlIdentityPermission#8](~/add/codesnippet/csharp/m-system.security.permis_0_1.cs)]\n [!code-vb[System.Security.Permissions.UrlIdentityPermission#8](~/add/codesnippet/visualbasic/m-system.security.permis_0_1.vb)]"
  syntax:
    content: public UrlIdentityPermission (string site);
    parameters:
    - id: site
      type: System.String
      description: "Een expressie-URL of een jokerteken."
  overload: System.Security.Permissions.UrlIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>site</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "De lengte van de <code> site </code> parameter gelijk is aan nul."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De URL, map of site-gedeelte van de <code> site </code> parameter is niet geldig."
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: UrlIdentityPermission.Copy()
  fullName: System.Security.Permissions.UrlIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Maakt en een identieke kopie van de huidige machtiging retourneert."
  remarks: "Een kopie van een machtiging vertegenwoordigt dezelfde toegang tot bronnen als de oorspronkelijke machtiging."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Een kopie van de huidige machtiging."
  overload: System.Security.Permissions.UrlIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: UrlIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.UrlIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee reconstrueert machtiging met een opgegeven status van een XML-codering."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "De XML-codering voor het gebruik van de machtiging opnieuw."
  overload: System.Security.Permissions.UrlIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> esd </code> parameter is niet geldig machtigingselement.       - of - de <code> esd </code> versienummer van de parameter is niet geldig."
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: UrlIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Maakt en retourneert een machtiging die is het snijpunt van de huidige machtigingen en de opgegeven."
  remarks: "Het snijpunt van twee machtigingen is een machtiging die toegang tot de URL&quot;s die ze beide gemeenschappelijk beschrijven beschrijft. Alleen een vraag die wordt doorgegeven zowel oorspronkelijke machtigingen geeft het snijpunt. Bijvoorbeeld, het snijpunt van een machtiging die toegang tot http://www.fourthcoffee.com/process/grind.htm vertegenwoordigt en een machtiging die toegang tot http://www.fourthcoffee.com/ vertegenwoordigt* is een machtiging die toegang tot http://www.fourthcoffee.com/process/grind.htm vertegenwoordigt.       <xref:System.Security.Permissions.UrlIdentityPermission>ondersteunt operations ingesteld (<xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>, Intersect en <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) alleen wanneer de huidige machtiging is gelijk aan het object opgegeven machtigingen of wanneer een van de machtigingen gebruikmaakt van de operator jokertekens (&quot;*&quot;).</xref:System.Security.Permissions.UrlIdentityPermission.Union%2A> </xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> </xref:System.Security.Permissions.UrlIdentityPermission>"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Een machtiging voor intersect met de huidige machtiging. Deze moeten van hetzelfde type als de huidige machtiging."
    return:
      type: System.Security.IPermission
      description: "Een nieuwe machtiging die het snijpunt van de huidige machtigingen en de opgegeven vertegenwoordigt. Deze nieuwe machtiging is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als het snijpunt leeg is."
  overload: System.Security.Permissions.UrlIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> target </code> parameter is niet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> en is niet van hetzelfde type als de huidige machtiging.       - of - Url van de eigenschap is geen geldige URL."
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: UrlIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee wordt bepaald of de huidige machtiging een subset van de opgegeven machtiging."
  remarks: "De huidige machtiging is een subset van de opgegeven machtiging als de huidige machtiging toegang tot een URL die volledig is opgenomen in de opgegeven machtiging wordt geïdentificeerd. Een machtiging die toegang tot http://www.fourthcoffee.com/process/grind.htm vertegenwoordigt is bijvoorbeeld een subset van een machtiging die toegang tot http://www.fourthcoffee.com/ vertegenwoordigt*. Als deze methode retourneert `true`, de huidige machtiging vertegenwoordigt geen meer toegang tot de beveiligde bron dan de opgegeven machtiging.       <xref:System.Security.Permissions.UrlIdentityPermission>ondersteunt operations ingesteld (IsSubsetOf, <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>, en <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) alleen wanneer de huidige machtiging is gelijk aan de opgegeven machtiging of wanneer een van de machtigingen gebruikmaakt van de operator jokertekens (&quot;*&quot;).</xref:System.Security.Permissions.UrlIdentityPermission.Union%2A> </xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A> </xref:System.Security.Permissions.UrlIdentityPermission>"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Een machtiging die moet worden getest voor de relatie subset. Deze machtiging moet van hetzelfde type als de huidige machtiging."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de huidige machtiging een subset van de opgegeven machtiging is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> target </code> parameter is niet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> en is niet van hetzelfde type als de huidige machtiging.       - of - Url van de eigenschap is geen geldige URL."
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: UrlIdentityPermission.ToXml()
  fullName: System.Security.Permissions.UrlIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee maakt u een XML-codering van de machtigingen en de huidige status."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Een XML-codering van de machtiging, met inbegrip van eventuele statusgegevens."
  overload: System.Security.Permissions.UrlIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: UrlIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee maakt u een machtiging die is de vereniging van de huidige machtigingen en de opgegeven."
  remarks: "Het resultaat van een aanroep naar de methode Union is een machtiging die toegang tot de URL zoals voorgesteld door de huidige machtiging, evenals de toegang tot de URL, zoals wordt weergegeven met de opgegeven machtiging vertegenwoordigt.       De <xref:System.Security.Permissions.UrlIdentityPermission>klasse biedt ondersteuning voor set-bewerkingen <xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>, <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>, en Unie) alleen als de huidige machtiging gelijk is aan de opgegeven machtiging, of wanneer een van de machtigingen gebruikt de operator jokertekens (&quot; * &quot;) en een is een subset van de andere.</xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A> </xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> </xref:System.Security.Permissions.UrlIdentityPermission>"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Een machtiging te combineren met de huidige machtiging. Deze moeten van hetzelfde type als de huidige machtiging."
    return:
      type: System.Security.IPermission
      description: "Een nieuwe machtiging die de samenvoeging van de huidige machtigingen en de opgegeven vertegenwoordigt."
  overload: System.Security.Permissions.UrlIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> target </code> parameter is niet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> en is niet van hetzelfde type als de huidige machtiging.       - of - de <xref:System.Security.Permissions.UrlIdentityPermission.Url*>eigenschap is geen geldige URL.</xref:System.Security.Permissions.UrlIdentityPermission.Url*>       - of - twee machtigingen niet gelijk zijn en één is niet een subset van de andere."
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Url
  id: Url
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Url
  nameWithType: UrlIdentityPermission.Url
  fullName: System.Security.Permissions.UrlIdentityPermission.Url
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Opgehaald of ingesteld van een URL die de identiteit van de Internet-code."
  remarks: "De volledige URL als wordt beschouwd, met inbegrip van het protocol (HTTP, HTTPS, FTP) en het bestand, bijvoorbeeld: http://www.fourthcoffee.com/process/grind.htm/.       URL&quot;s kunnen worden afgestemd exact of door een jokerteken in de laatste positie, bijvoorbeeld: http://www.fourthcoffee.com/process/ *."
  syntax:
    content: public string Url { get; set; }
    return:
      type: System.String
      description: "Een URL die de identiteit van de Internet-code."
  overload: System.Security.Permissions.UrlIdentityPermission.Url*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De URL kan niet worden opgehaald omdat er een niet-eenduidige identiteit."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: UrlIdentityPermission(PermissionState)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: UrlIdentityPermission(String)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(String)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.UrlIdentityPermission.Copy
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: UrlIdentityPermission.Copy()
  fullName: System.Security.Permissions.UrlIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: UrlIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.UrlIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: UrlIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: UrlIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.UrlIdentityPermission.ToXml
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: UrlIdentityPermission.ToXml()
  fullName: System.Security.Permissions.UrlIdentityPermission.ToXml()
- uid: System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: UrlIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.UrlIdentityPermission.Url
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Url
  nameWithType: UrlIdentityPermission.Url
  fullName: System.Security.Permissions.UrlIdentityPermission.Url
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: UrlIdentityPermission
  nameWithType: UrlIdentityPermission.UrlIdentityPermission
- uid: System.Security.Permissions.UrlIdentityPermission.Copy*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: UrlIdentityPermission.Copy
- uid: System.Security.Permissions.UrlIdentityPermission.FromXml*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: UrlIdentityPermission.FromXml
- uid: System.Security.Permissions.UrlIdentityPermission.Intersect*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: UrlIdentityPermission.Intersect
- uid: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: UrlIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.UrlIdentityPermission.ToXml*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: UrlIdentityPermission.ToXml
- uid: System.Security.Permissions.UrlIdentityPermission.Union*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Union
  nameWithType: UrlIdentityPermission.Union
- uid: System.Security.Permissions.UrlIdentityPermission.Url*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Url
  nameWithType: UrlIdentityPermission.Url
