### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.RemotingServices
  id: RemotingServices
  children:
  - System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)
  - System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)
  - System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)
  - System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)
  - System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)
  - System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)
  - System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  - System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)
  - System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)
  - System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)
  - System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)
  - System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  - System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)
  - System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(System.Object)
  - System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(System.Object)
  - System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)
  - System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)
  - System.Runtime.Remoting.RemotingServices.LogRemotingStage(System.Int32)
  - System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)
  - System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)
  - System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)
  - System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)
  - System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)
  - System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)
  langs:
  - csharp
  name: RemotingServices
  nameWithType: RemotingServices
  fullName: System.Runtime.Remoting.RemotingServices
  type: Class
  summary: "Biedt verschillende methoden voor het gebruik en publiceren van knooppunten objecten en -proxy&quot;s. Deze klasse kan niet worden overgenomen."
  remarks: "Tenzij u een serviceprovider omgaan met problemen zoals activering, beheer van de levensduur of transacties, hoeft u niet onderscheid maken tussen proxyverwijzingen en objectverwijzingen. De externe infrastructuur transparante proxy&quot;s waarmee de indruk dat de externe objecten zich in de ruimte van de client bevinden gebruikt. Proxy&quot;s bereiken dit door het doorsturen van oproepen op deze naar de echte objecten op externe locaties."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class RemotingServices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)
  id: Connect(System.Type,System.String)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Connect(Type,String)
  nameWithType: RemotingServices.Connect(Type,String)
  fullName: System.Runtime.Remoting.RemotingServices.Connect(Type,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Maakt een proxy voor een bekend object, krijgt de <xref:System.Type>en de URL.</xref:System.Type>"
  remarks: "De geretourneerde proxyobject verwijst naar een eindpunt dat is geleverd door het opgegeven bekende object. Er zijn geen berichten worden verzonden via het netwerk als een methode wordt aangeroepen op de proxy."
  example:
  - "The following code example demonstrates how to use the Connect method to create a proxy to a well-known object.  \n  \n [!code-cpp[RemotingServices.BasicSample#1](~/add/codesnippet/cpp/m-system.runtime.remotin_104_1.cpp)]\n [!code-cs[RemotingServices.BasicSample#1](~/add/codesnippet/csharp/m-system.runtime.remotin_104_1.cs)]\n [!code-vb[RemotingServices.BasicSample#1](~/add/codesnippet/visualbasic/m-system.runtime.remotin_104_1.vb)]"
  syntax:
    content: public static object Connect (Type classToProxy, string url);
    parameters:
    - id: classToProxy
      type: System.Type
      description: "De <xref:System.Type>van een bekend object op de server waarmee u verbinding wilt maken.</xref:System.Type>"
    - id: url
      type: System.String
      description: "De URL van de serverklasse."
    return:
      type: System.Object
      description: "Een proxy voor het externe object die naar een eindpunt dat is geleverd door het opgegeven bekende object verwijst."
  overload: System.Runtime.Remoting.RemotingServices.Connect*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De onmiddellijke aanroeper heeft geen machtiging voor het configureren van externe toegang-typen en kanalen."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)
  id: Connect(System.Type,System.String,System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Connect(Type,String,Object)
  nameWithType: RemotingServices.Connect(Type,String,Object)
  fullName: System.Runtime.Remoting.RemotingServices.Connect(Type,String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Maakt een proxy voor een bekend object, krijgt de <xref:System.Type>, URL en de kanaal-specifieke gegevens.</xref:System.Type>"
  remarks: "De geretourneerde proxyobject verwijst naar een eindpunt dat is geleverd door het opgegeven bekende object. Er zijn geen berichten worden verzonden via het netwerk als een methode wordt aangeroepen op de proxy.       De `data` object wordt gebruikt om informatie naar het kanaal te communiceren en wordt doorgegeven aan de <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=fullName>methode.</xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=fullName>"
  syntax:
    content: public static object Connect (Type classToProxy, string url, object data);
    parameters:
    - id: classToProxy
      type: System.Type
      description: "De <xref:System.Type>van de bekende object waarmee u verbinding wilt maken.</xref:System.Type>"
    - id: url
      type: System.String
      description: "De URL van een bekend object."
    - id: data
      type: System.Object
      description: "Specifieke gegevens van kanaal. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "Een proxy die verwijst naar een eindpunt dat door de aangevraagde bekend object wordt behandeld."
  overload: System.Runtime.Remoting.RemotingServices.Connect*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De onmiddellijke aanroeper heeft geen machtiging voor het configureren van externe toegang-typen en kanalen."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)
  id: Disconnect(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Disconnect(MarshalByRefObject)
  nameWithType: RemotingServices.Disconnect(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.Disconnect(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Een object van het ontvangen van alle verdere berichten via de kanalen geregistreerde remoting stopt."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the Disconnect method to disconnect an object from the remoting channels.  \n  \n [!code-cpp[RemotingServices.BasicSample#2](~/add/codesnippet/cpp/m-system.runtime.remotin_81_1.cpp)]\n [!code-cs[RemotingServices.BasicSample#2](~/add/codesnippet/csharp/m-system.runtime.remotin_81_1.cs)]\n [!code-vb[RemotingServices.BasicSample#2](~/add/codesnippet/visualbasic/m-system.runtime.remotin_81_1.vb)]"
  syntax:
    content: public static bool Disconnect (MarshalByRefObject obj);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "Object ontkoppelt van het kanaal."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het object is losgekoppeld van de geregistreerde externe kanalen weer dat is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.RemotingServices.Disconnect*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> obj </code> -parameter is een proxy."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De onmiddellijke aanroeper heeft geen machtiging voor het configureren van externe toegang-typen en kanalen."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)
  id: ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: ExecuteMessage(MarshalByRefObject,IMethodCallMessage)
  nameWithType: RemotingServices.ExecuteMessage(MarshalByRefObject,IMethodCallMessage)
  fullName: System.Runtime.Remoting.RemotingServices.ExecuteMessage(MarshalByRefObject,IMethodCallMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Maakt verbinding met het opgegeven externe object en voert de opgegeven <xref href=&quot;System.Runtime.Remoting.Messaging.IMethodCallMessage&quot;> </xref> erop."
  remarks: "De huidige methode wordt gebruikt in bijzondere gevallen door de server voor het doorsturen van de opgegeven methode-aanroep naar een andere, mogelijk extern object. Deze methode kan worden aangeroepen wanneer de aanroeper in de juiste context."
  example:
  - "The following code example demonstrates how to use the ExecuteMessage method to forward method calls to remote objects.  \n  \n [!code-cs[RemotingServices.ExecuteMessage#1](~/add/codesnippet/csharp/491f5c62-582d-42d8-b526-_1.cs)]\n [!code-cpp[RemotingServices.ExecuteMessage#1](~/add/codesnippet/cpp/491f5c62-582d-42d8-b526-_1.cpp)]\n [!code-vb[RemotingServices.ExecuteMessage#1](~/add/codesnippet/visualbasic/491f5c62-582d-42d8-b526-_1.vb)]"
  syntax:
    content: public static System.Runtime.Remoting.Messaging.IMethodReturnMessage ExecuteMessage (MarshalByRefObject target, System.Runtime.Remoting.Messaging.IMethodCallMessage reqMsg);
    parameters:
    - id: target
      type: System.MarshalByRefObject
      description: "Het externe object waarvan de methode u wilt aanroepen."
    - id: reqMsg
      type: System.Runtime.Remoting.Messaging.IMethodCallMessage
      description: "Een bericht van de aanroep van methode voor het opgegeven externe object methode."
    return:
      type: System.Runtime.Remoting.Messaging.IMethodReturnMessage
      description: "Het antwoord van de externe methode."
  overload: System.Runtime.Remoting.RemotingServices.ExecuteMessage*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De onmiddellijke aanroeper is niet gemachtigd voor infrastructuur."
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "De methode is aangeroepen vanuit een andere context dan de systeemeigen context van het object."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)
  id: GetEnvoyChainForProxy(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetEnvoyChainForProxy(MarshalByRefObject)
  nameWithType: RemotingServices.GetEnvoyChainForProxy(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Retourneert een reeks envoy put die moeten worden gebruikt bij het verzenden van berichten naar het externe object dat wordt vertegenwoordigd door de opgegeven proxy."
  remarks: "Envoy put zijn put verzonden samen met de <xref:System.Runtime.Remoting.ObjRef>van een object dat wordt gebruikt wanneer dat object retourneren van berichten.</xref:System.Runtime.Remoting.ObjRef> De huidige methode retourneert de sinks envoy die worden gebruikt tijdens de communicatie tussen de proxy van het object en het object zelf."
  syntax:
    content: public static System.Runtime.Remoting.Messaging.IMessageSink GetEnvoyChainForProxy (MarshalByRefObject obj);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "De proxy van het externe object aangevraagde envoy put zijn gekoppeld."
    return:
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "Een keten van envoy-put die verband houden met de opgegeven proxy."
  overload: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De onmiddellijke aanroeper is niet gemachtigd voor infrastructuur."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)
  id: GetLifetimeService(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetLifetimeService(MarshalByRefObject)
  nameWithType: RemotingServices.GetLifetimeService(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetLifetimeService(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Retourneert een object van de levensduur van service die het beleid van de levensduur van het opgegeven object bepaalt."
  remarks: "Service voor de levensduur van het geretourneerde object is voor de standaard een object van type <xref:System.Runtime.Remoting.Lifetime.ILease>.</xref:System.Runtime.Remoting.Lifetime.ILease> Als de `obj` parameter `null`, de methode retourneert `null`."
  example:
  - "The following code example demonstrates how to use the GetLifetimeService method to get a lifetime lease for the specified object.  \n  \n [!code-cpp[RemotingServices.TimerSample#1](~/add/codesnippet/cpp/a7d2891c-3dad-448c-949c-_1.cpp)]\n [!code-cs[RemotingServices.TimerSample#1](~/add/codesnippet/csharp/a7d2891c-3dad-448c-949c-_1.cs)]\n [!code-vb[RemotingServices.TimerSample#1](~/add/codesnippet/visualbasic/a7d2891c-3dad-448c-949c-_1.vb)]  \n  \n To compile and run this example, you will need to compile and run a server, timerserver.exe, and compile a shared library, timerservice.dll.  \n  \n The source for timerserver.exe follows:  \n  \n [!code-vb[RemotingServices.TimerSample#2](~/add/codesnippet/visualbasic/a7d2891c-3dad-448c-949c-_2.vb)]\n [!code-cs[RemotingServices.TimerSample#2](~/add/codesnippet/csharp/a7d2891c-3dad-448c-949c-_2.cs)]  \n  \n The source for timerservice.dll follows:  \n  \n [!code-vb[RemotingServices.TimerSample#3](~/add/codesnippet/visualbasic/a7d2891c-3dad-448c-949c-_3.vb)]\n [!code-cs[RemotingServices.TimerSample#3](~/add/codesnippet/csharp/a7d2891c-3dad-448c-949c-_3.cs)]"
  syntax:
    content: public static object GetLifetimeService (MarshalByRefObject obj);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "Het object levensduur service voor verkrijgen."
    return:
      type: System.Object
      description: "Het object waarmee de levensduur van <code> obj </code>."
  overload: System.Runtime.Remoting.RemotingServices.GetLifetimeService*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De onmiddellijke aanroeper is niet gemachtigd voor infrastructuur."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  id: GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetMethodBaseFromMethodMessage(IMethodMessage)
  nameWithType: RemotingServices.GetMethodBaseFromMethodMessage(IMethodMessage)
  fullName: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(IMethodMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Retourneert de methode basis van de opgegeven <xref href=&quot;System.Runtime.Remoting.Messaging.IMethodMessage&quot;> </xref>."
  remarks: "Hiermee bepaalt u de methode basis van de <xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A>, <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A>, en <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A>Eigenschappen van <xref:System.Runtime.Remoting.Messaging.IMethodMessage>en wordt gebruikt door de implementatie van klassen de <xref:System.Runtime.Remoting.Messaging.IMethodMessage>interface.</xref:System.Runtime.Remoting.Messaging.IMethodMessage> </xref:System.Runtime.Remoting.Messaging.IMethodMessage> </xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A> </xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A> </xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A> Gebruikers van <xref:System.Runtime.Remoting.Messaging.IMethodMessage>klassen moeten verwijzen naar de <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=fullName>eigenschap.</xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=fullName> </xref:System.Runtime.Remoting.Messaging.IMethodMessage>"
  syntax:
    content: public static System.Reflection.MethodBase GetMethodBaseFromMethodMessage (System.Runtime.Remoting.Messaging.IMethodMessage msg);
    parameters:
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMethodMessage
      description: "Het bericht methode om op te halen van de basis van methode."
    return:
      type: System.Reflection.MethodBase
      description: "De methode base opgehaald uit de <code> msg </code> parameter."
  overload: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Ofwel de onmiddellijke aanroeper is niet gemachtigd infrastructuur of ten minste één van de aanroepfuncties hoger in de stack is niet gemachtigd voor het ophalen van de type-informatie van niet-openbare leden."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetObjectData(Object,SerializationInfo,StreamingContext)
  nameWithType: RemotingServices.GetObjectData(Object,SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.RemotingServices.GetObjectData(Object,SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "De opgegeven marshal serialiseert door reference-object in de opgegeven <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>."
  syntax:
    content: public static void GetObjectData (object obj, System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: obj
      type: System.Object
      description: "Het object te serialiseren."
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "De <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> in het object is geserialiseerd."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "De bron en bestemming van de serialisatie."
  overload: System.Runtime.Remoting.RemotingServices.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> or <code>info</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De onmiddellijke aanroeper is niet gemachtigd voor infrastructuur."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)
  id: GetObjectUri(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetObjectUri(MarshalByRefObject)
  nameWithType: RemotingServices.GetObjectUri(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetObjectUri(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "De URI voor het opgegeven object opgehaald."
  remarks: ''
  example:
  - >-
    [!code-vb[System.Runtime.Remoting.RemotingServices#18](~/add/codesnippet/visualbasic/318892c3-7b62-40bd-9e3b-_1.vb)]
     [!code-cs[System.Runtime.Remoting.RemotingServices#18](~/add/codesnippet/csharp/318892c3-7b62-40bd-9e3b-_1.cs)]
     [!code-cpp[System.Runtime.Remoting.RemotingServices#18](~/add/codesnippet/cpp/318892c3-7b62-40bd-9e3b-_1.cpp)]
  syntax:
    content: public static string GetObjectUri (MarshalByRefObject obj);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "De <xref href=&quot;System.MarshalByRefObject&quot;> </xref> waarvoor een URI wordt gevraagd."
    return:
      type: System.String
      description: "De URI van het opgegeven object indien aanwezig, of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als het object nog niet is gemarshald."
  overload: System.Runtime.Remoting.RemotingServices.GetObjectUri*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De onmiddellijke aanroeper is niet gemachtigd voor infrastructuur."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)
  id: GetObjRefForProxy(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetObjRefForProxy(MarshalByRefObject)
  nameWithType: RemotingServices.GetObjRefForProxy(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Retourneert de <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> die staat voor het externe object uit de opgegeven proxy."
  remarks: "Een <xref:System.Runtime.Remoting.ObjRef>is een serialiseerbare representatie van een object dat wordt gebruikt om over te dragen van een verwijzing naar een object in een domein toepassingsbegrenzing.</xref:System.Runtime.Remoting.ObjRef> Maken van een <xref:System.Runtime.Remoting.ObjRef>voor een object wordt ook wel marshal.</xref:System.Runtime.Remoting.ObjRef> De <xref:System.Runtime.Remoting.ObjRef>kunnen worden overgedragen via een kanaal naar een ander toepassingsdomein (mogelijk op een ander proces of computer).</xref:System.Runtime.Remoting.ObjRef> Eenmaal in de andere toepassingsdomein de <xref:System.Runtime.Remoting.ObjRef>voor het maken van een proxy voor het object, in het algemeen zijn verbonden met het juiste object moet worden geparseerd.</xref:System.Runtime.Remoting.ObjRef> Deze bewerking wordt unmarshaling genoemd. Tijdens het unmarshaling, de <xref:System.Runtime.Remoting.ObjRef>wordt geparseerd om op te halen van de methode-informatie van het externe object en de transparante proxy en <xref:System.Runtime.Remoting.Proxies.RealProxy>objecten worden gemaakt.</xref:System.Runtime.Remoting.Proxies.RealProxy> </xref:System.Runtime.Remoting.ObjRef>       Een <xref:System.Runtime.Remoting.ObjRef>bevat informatie over de <xref:System.Type>en de klasse van het object wordt gemarshald, een URI die een unieke identificatie van het exemplaar van het specifieke object en communicatie gerelateerde informatie over het bereiken van de externe toepassing waarin het object zich bevindt.</xref:System.Type> </xref:System.Runtime.Remoting.ObjRef>"
  example:
  - "The following code example demonstrates how to get a <xref:System.Runtime.Remoting.ObjRef> instance for the specified object.  \n  \n [!code-cpp[RemotingServices.GetObjRefForProxy#1](~/add/codesnippet/cpp/d6ce9a9a-8ec9-4559-9b2d-_1.cpp)]\n [!code-vb[RemotingServices.GetObjRefForProxy#1](~/add/codesnippet/visualbasic/d6ce9a9a-8ec9-4559-9b2d-_1.vb)]\n [!code-cs[RemotingServices.GetObjRefForProxy#1](~/add/codesnippet/csharp/d6ce9a9a-8ec9-4559-9b2d-_1.cs)]"
  syntax:
    content: public static System.Runtime.Remoting.ObjRef GetObjRefForProxy (MarshalByRefObject obj);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "Een proxy die is verbonden met het object dat u wilt maken een <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> voor."
    return:
      type: System.Runtime.Remoting.ObjRef
      description: "Een <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> die staat voor het externe object dat de opgegeven proxy is verbonden, of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als het object of de proxyserver niet zijn gemarshald."
  overload: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De onmiddellijke aanroeper is niet gemachtigd voor infrastructuur."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)
  id: GetRealProxy(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetRealProxy(Object)
  nameWithType: RemotingServices.GetRealProxy(Object)
  fullName: System.Runtime.Remoting.RemotingServices.GetRealProxy(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Retourneert de echte proxy back-ups maken van de opgegeven transparentproxy."
  remarks: "Een client die gebruikmaakt van een object voor elk soort externe communicatie grens daadwerkelijk een transparentproxy gebruikt voor het object. De transparentproxy geeft de indruk dat het object zich in de ruimte van de client bevindt. Het bereikt dit door het doorsturen van oproepen op deze naar het juiste object met behulp van de externe infrastructuur.       De transparentproxy wordt ondersteund door een instantie van een beheerde runtime-klasse van het type <xref:System.Runtime.Remoting.Proxies.RealProxy>.</xref:System.Runtime.Remoting.Proxies.RealProxy> De <xref:System.Runtime.Remoting.Proxies.RealProxy>implementeert een onderdeel van de functionaliteit die nodig zijn voor het doorsturen van de bewerkingen van de transparentproxy.</xref:System.Runtime.Remoting.Proxies.RealProxy>       Een proxyobject neemt over van de bijbehorende semantiek van beheerde objecten, zoals garbagecollection, ondersteuning voor leden en methoden en kan worden uitgebreid naar de nieuwe klassen formulier. De proxy fungeert als een object van dezelfde klasse als het externe object (transparentproxy) en is ook een beheerd object."
  syntax:
    content: public static System.Runtime.Remoting.Proxies.RealProxy GetRealProxy (object proxy);
    parameters:
    - id: proxy
      type: System.Object
      description: "Een transparentproxy."
    return:
      type: System.Runtime.Remoting.Proxies.RealProxy
      description: "Het back-ups maken van de transparentproxy echte proxy-exemplaar."
  overload: System.Runtime.Remoting.RemotingServices.GetRealProxy*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De onmiddellijke aanroeper is niet gemachtigd voor infrastructuur."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)
  id: GetServerTypeForUri(System.String)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetServerTypeForUri(String)
  nameWithType: RemotingServices.GetServerTypeForUri(String)
  fullName: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Retourneert de <xref:System.Type>van het object met de opgegeven URI.</xref:System.Type>"
  remarks: "Omdat de remoting identificeert eindpunten met behulp van URI&quot;s, de methode GetServerTypeForUri is erg nuttig zijn bij het pluggable onderdelen van de externe communicatie-infrastructuur (bijvoorbeeld kanaal Put, dynamische put en context PUT) die gebruikmaken van <xref:System.Runtime.Remoting.Messaging.IMessage>objecten, omdat de huidige methode wordt het bijbehorende type-object geretourneerd vanaf de URI.</xref:System.Runtime.Remoting.Messaging.IMessage>"
  example:
  - >-
    [!code-vb[System.Runtime.Remoting.RemotingServices#7](~/add/codesnippet/visualbasic/m-system.runtime.remotin_84_1.vb)]
     [!code-cs[System.Runtime.Remoting.RemotingServices#7](~/add/codesnippet/csharp/m-system.runtime.remotin_84_1.cs)]
     [!code-cpp[System.Runtime.Remoting.RemotingServices#7](~/add/codesnippet/cpp/m-system.runtime.remotin_84_1.cpp)]
  syntax:
    content: public static Type GetServerTypeForUri (string URI);
    parameters:
    - id: URI
      type: System.String
      description: "De URI van het object waarvan <xref:System.Type>wordt aangevraagd.</xref:System.Type>"
    return:
      type: System.Type
      description: "De <xref:System.Type>van het object met de opgegeven URI.</xref:System.Type>"
  overload: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Ofwel de onmiddellijke aanroeper is niet gemachtigd infrastructuur of ten minste één van de aanroepfuncties hoger in de stack is niet gemachtigd voor het ophalen van de type-informatie van niet-openbare leden."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  id: GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetSessionIdForMethodMessage(IMethodMessage)
  nameWithType: RemotingServices.GetSessionIdForMethodMessage(IMethodMessage)
  fullName: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(IMethodMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Hiermee haalt u een sessie-ID voor een bericht."
  remarks: "Dezelfde Sessionid kan worden geretourneerd voor objecten in dezelfde toepassing, maar deze methode wordt nooit dezelfde sessie-ID voor de twee objecten geretourneerd in een andere externe toepassingen.       Zie voor meer informatie over het identificeren van sessies en sessie-id&quot;s, ASP.Net [overzicht van ASP.NET-sessiestatus](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to get the session ID string for the current session.  \n  \n [!code-cs[RemotingServices.ExecuteMessage#1](~/add/codesnippet/csharp/b83444fc-48c3-47e9-b264-_1.cs)]\n [!code-cpp[RemotingServices.ExecuteMessage#1](~/add/codesnippet/cpp/b83444fc-48c3-47e9-b264-_1.cpp)]\n [!code-vb[RemotingServices.ExecuteMessage#1](~/add/codesnippet/visualbasic/b83444fc-48c3-47e9-b264-_1.vb)]"
  syntax:
    content: public static string GetSessionIdForMethodMessage (System.Runtime.Remoting.Messaging.IMethodMessage msg);
    parameters:
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMethodMessage
      description: "De <xref href=&quot;System.Runtime.Remoting.Messaging.IMethodMessage&quot;> </xref> waarvoor een sessie-ID wordt gevraagd."
    return:
      type: System.String
      description: "Een tekenreeks van de sessie-ID die een unieke identificatie van de huidige sessie."
  overload: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De onmiddellijke aanroeper is niet gemachtigd voor infrastructuur."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)
  id: IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: IsMethodOverloaded(IMethodMessage)
  nameWithType: RemotingServices.IsMethodOverloaded(IMethodMessage)
  fullName: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(IMethodMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Retourneert een Booleaanse waarde die aangeeft of de methode in het opgegeven bericht overbelast is."
  syntax:
    content: public static bool IsMethodOverloaded (System.Runtime.Remoting.Messaging.IMethodMessage msg);
    parameters:
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMethodMessage
      description: "Het bericht met een aanroep van de betreffende methode."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de methode wordt aangeroepen <code> msg </code> is overbelast, anders, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De onmiddellijke aanroeper is niet gemachtigd voor infrastructuur."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(System.Object)
  id: IsObjectOutOfAppDomain(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: IsObjectOutOfAppDomain(Object)
  nameWithType: RemotingServices.IsObjectOutOfAppDomain(Object)
  fullName: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Retourneert een Booleaanse waarde die aangeeft of het object dat is opgegeven door de opgegeven transparentproxy is opgenomen in een andere toepassingsdomein dan het object dat de huidige methode aangeroepen."
  remarks: "Zie voor meer informatie over toepassingsdomeinen [toepassingsdomeinen](http://msdn.microsoft.com/en-us/39e57d07-a740-4cd4-ae82-e119ea3856c1)."
  example:
  - >-
    [!code-cpp[RemotingServices IsObject Snippets#1](~/add/codesnippet/cpp/m-system.runtime.remotin_103_1.cpp)]
     [!code-vb[RemotingServices IsObject Snippets#1](~/add/codesnippet/visualbasic/m-system.runtime.remotin_103_1.vb)]
     [!code-cs[RemotingServices IsObject Snippets#1](~/add/codesnippet/csharp/m-system.runtime.remotin_103_1.cs)]
  syntax:
    content: public static bool IsObjectOutOfAppDomain (object tp);
    parameters:
    - id: tp
      type: System.Object
      description: "Het object om te controleren."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het object buiten het huidige toepassingsdomein; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(System.Object)
  id: IsObjectOutOfContext(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: IsObjectOutOfContext(Object)
  nameWithType: RemotingServices.IsObjectOutOfContext(Object)
  fullName: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Retourneert een Booleaanse waarde die aangeeft of het object dat wordt vertegenwoordigd door de opgegeven proxy is opgenomen in een andere context dan het object dat de huidige methode aangeroepen."
  remarks: "Een context is een geordende reeks eigenschappen die een omgeving voor de objecten die zich binnen het bepalen. Contexten worden gemaakt tijdens het activeringsproces voor objecten die zijn geconfigureerd om te vereisen dat bepaalde automatische services dergelijke synchronisatie transacties, activering just-in-time, beveiliging, enzovoort. Meerdere objecten kunnen livemigratie binnen een context."
  example:
  - >-
    [!code-cpp[RemotingServices IsObject Snippets#1](~/add/codesnippet/cpp/m-system.runtime.remotin_37_1.cpp)]
     [!code-vb[RemotingServices IsObject Snippets#1](~/add/codesnippet/visualbasic/m-system.runtime.remotin_37_1.vb)]
     [!code-cs[RemotingServices IsObject Snippets#1](~/add/codesnippet/csharp/m-system.runtime.remotin_37_1.cs)]
  syntax:
    content: public static bool IsObjectOutOfContext (object tp);
    parameters:
    - id: tp
      type: System.Object
      description: "Het object om te controleren."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het object buiten de huidige context; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)
  id: IsOneWay(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: IsOneWay(MethodBase)
  nameWithType: RemotingServices.IsOneWay(MethodBase)
  fullName: System.Runtime.Remoting.RemotingServices.IsOneWay(MethodBase)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Retourneert een Booleaanse waarde die aangeeft dat of de client die de methode aangeroepen die is opgegeven in het opgegeven bericht wacht op de server voor de verwerking van de methode voordat u doorgaat uitvoering voltooid."
  remarks: "Als een eenzijdige methode wordt aangeroepen, wacht de client niet totdat de server klaar bent met het verwerken van het bericht. De clientmethode retourneert aan de toepassing geen kennis van of de server het bericht is verwerkt. Methoden zijn gemarkeerd als een manier die met behulp van de <xref:System.Runtime.Remoting.Messaging.OneWayAttribute>.</xref:System.Runtime.Remoting.Messaging.OneWayAttribute>       Eenrichtingsmethoden geen retourwaarde of in een out-parameters."
  example:
  - >-
    [!code-vb[System.Runtime.Remoting.RemotingServices#2](~/add/codesnippet/visualbasic/e9c4a9fc-d92a-4e43-97a5-_1.vb)]
     [!code-cs[System.Runtime.Remoting.RemotingServices#2](~/add/codesnippet/csharp/e9c4a9fc-d92a-4e43-97a5-_1.cs)]
     [!code-cpp[System.Runtime.Remoting.RemotingServices#2](~/add/codesnippet/cpp/e9c4a9fc-d92a-4e43-97a5-_1.cpp)]
  syntax:
    content: public static bool IsOneWay (System.Reflection.MethodBase method);
    parameters:
    - id: method
      type: System.Reflection.MethodBase
      description: "De methode in kwestie."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de methode één manier is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.RemotingServices.IsOneWay*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De onmiddellijke aanroeper is niet gemachtigd voor infrastructuur."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)
  id: IsTransparentProxy(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: IsTransparentProxy(Object)
  nameWithType: RemotingServices.IsTransparentProxy(Object)
  fullName: System.Runtime.Remoting.RemotingServices.IsTransparentProxy(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Retourneert een Booleaanse waarde die aangeeft of het opgegeven object een transparentproxy of een echte-object is."
  remarks: "Een client die gebruikmaakt van een object tussen elk soort een grens remoting daadwerkelijk een transparentproxy gebruikt voor het object. De transparentproxy geeft de indruk dat het object zich in de ruimte van de client bevindt. Het bereikt dit door het doorsturen van oproepen op deze naar het juiste object met behulp van de externe infrastructuur.       De transparentproxy is ondergebracht door een exemplaar van een beheerde runtime-klasse van het type <xref:System.Runtime.Remoting.Proxies.RealProxy>.</xref:System.Runtime.Remoting.Proxies.RealProxy> De <xref:System.Runtime.Remoting.Proxies.RealProxy>implementeert een onderdeel van de functionaliteit die nodig zijn voor het doorsturen van de bewerkingen van de transparentproxy.</xref:System.Runtime.Remoting.Proxies.RealProxy> Een proxyobject neemt over van de bijbehorende semantiek van beheerde objecten, zoals garbagecollection, ondersteuning voor leden en methoden en kan worden uitgebreid naar de nieuwe klassen formulier. De proxy heeft dus een dual aard; enerzijds moet om te fungeren als een object van dezelfde klasse als het externe object (transparentproxy) en op de andere is een beheerd object zelf.       Een proxyobject kan worden gebruikt zonder rekening te houden remoting onderverdelingen binnen een <xref:System.AppDomain>.</xref:System.AppDomain> Toepassingen moeten geen onderscheid tussen proxyverwijzingen en objectverwijzingen. Serviceproviders omgaan met problemen zoals activering, moeten beheer van de levensduur en transacties echter een dergelijke onderscheid te maken."
  example:
  - "The following code example demonstrates the use of the IsTransparentProxy method to determine whether an object is a proxy or a real object. For the complete example code, see the example for the <xref:System.Runtime.Remoting.Messaging.AsyncResult> class.  \n  \n [!code-cpp[AsyncResult.NewExamples#6](~/add/codesnippet/cpp/m-system.runtime.remotin_47_1.cpp)]\n [!code-vb[AsyncResult.NewExamples#6](~/add/codesnippet/visualbasic/m-system.runtime.remotin_47_1.vb)]\n [!code-cs[AsyncResult.NewExamples#6](~/add/codesnippet/csharp/m-system.runtime.remotin_47_1.cs)]"
  syntax:
    content: public static bool IsTransparentProxy (object proxy);
    parameters:
    - id: proxy
      type: System.Object
      description: "De verwijzing naar het object om te controleren."
    return:
      type: System.Boolean
      description: "Een Boolean die aangeeft of het object opgegeven in de <code> proxy </code> parameter is een transparentproxy of een echte-object."
  overload: System.Runtime.Remoting.RemotingServices.IsTransparentProxy*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.LogRemotingStage(System.Int32)
  id: LogRemotingStage(System.Int32)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: LogRemotingStage(Int32)
  nameWithType: RemotingServices.LogRemotingStage(Int32)
  fullName: System.Runtime.Remoting.RemotingServices.LogRemotingStage(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Hiermee wordt de fase in een exchange remoting naar een externe foutopsporing."
  remarks: "Een `&quot;REMOTING_PERF&quot;` voorverwerking symbool aan de methode wordt toegepast met behulp van de <xref:System.Diagnostics.ConditionalAttribute>kenmerk.</xref:System.Diagnostics.ConditionalAttribute>"
  syntax:
    content: public static void LogRemotingStage (int stage);
    parameters:
    - id: stage
      type: System.Int32
      description: "Een intern gedefinieerde constante die de fase in een exchange remoting identificeert."
  overload: System.Runtime.Remoting.RemotingServices.LogRemotingStage*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)
  id: Marshal(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Marshal(MarshalByRefObject)
  nameWithType: RemotingServices.Marshal(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Neemt een <xref href=&quot;System.MarshalByRefObject&quot;> </xref>, registreert u deze met de externe infrastructuur en converteert naar een exemplaar van de <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> klasse."
  remarks: "Een <xref:System.Runtime.Remoting.ObjRef>is een serialiseerbare representatie van een object dat wordt gebruikt om over te dragen van een verwijzing naar een object in een domein toepassingsbegrenzing.</xref:System.Runtime.Remoting.ObjRef> Maken van een <xref:System.Runtime.Remoting.ObjRef>voor een object wordt ook wel marshal.</xref:System.Runtime.Remoting.ObjRef> De <xref:System.Runtime.Remoting.ObjRef>kunnen worden overgedragen via een kanaal naar een ander toepassingsdomein (mogelijk op een ander proces of computer).</xref:System.Runtime.Remoting.ObjRef> Eenmaal in de andere toepassingsdomein de <xref:System.Runtime.Remoting.ObjRef>voor het maken van een proxy voor het object, in het algemeen zijn verbonden met het juiste object moet worden geparseerd.</xref:System.Runtime.Remoting.ObjRef> Deze bewerking wordt unmarshaling genoemd.       Een <xref:System.Runtime.Remoting.ObjRef>bevat informatie over de <xref:System.Type>en de klasse van het object wordt gemarshald, een URI die een unieke identificatie van het exemplaar van het specifieke object en communicatie gerelateerde informatie over het bereiken van de onderverdeling remoting waar het object zich bevindt.</xref:System.Type> </xref:System.Runtime.Remoting.ObjRef>       Tijdens het bundelen, de context van de huidige thread wordt gebruikt, niet in de context die actief was toen het object is gemaakt. Als een URI is niet expliciet is ingesteld door de <xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A>methode, wordt automatisch gegenereerd door de externe communicatie-infrastructuur voor identiteiten.</xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A>       U kunt een URI niet koppelen aan een proxy voor een van twee redenen: de URI is gegenereerd op de server voor het object vertegenwoordigt of het object is bekend, in welk geval de URI bekend. Om deze reden als de `Obj` parameter een proxy, wordt een uitzondering gegenereerd. Deze beperking is voor een aangepaste proxy&quot;s versoepeld omdat de transparentproxy wordt behandeld als het serverobject."
  syntax:
    content: public static System.Runtime.Remoting.ObjRef Marshal (MarshalByRefObject Obj);
    parameters:
    - id: Obj
      type: System.MarshalByRefObject
      description: "Het object te converteren."
    return:
      type: System.Runtime.Remoting.ObjRef
      description: "Een exemplaar van de <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> klasse die staat voor het opgegeven object in de <code> Obj </code> parameter."
  overload: System.Runtime.Remoting.RemotingServices.Marshal*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "De <code> Obj </code> -parameter is de proxy voor een object."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Ten minste één van de aanroepfuncties hoger in de stack is niet gemachtigd om externe communicatie typen en kanalen te configureren."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)
  id: Marshal(System.MarshalByRefObject,System.String)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Marshal(MarshalByRefObject,String)
  nameWithType: RemotingServices.Marshal(MarshalByRefObject,String)
  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Converteert de opgegeven <xref href=&quot;System.MarshalByRefObject&quot;> </xref> in een exemplaar van de <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> klasse met de opgegeven URI."
  remarks: "Een <xref:System.Runtime.Remoting.ObjRef>is een serialiseerbare representatie van een object dat wordt gebruikt om over te dragen van een verwijzing naar een object in een domein toepassingsbegrenzing.</xref:System.Runtime.Remoting.ObjRef> Maken van een <xref:System.Runtime.Remoting.ObjRef>voor een object wordt ook wel marshal.</xref:System.Runtime.Remoting.ObjRef> De <xref:System.Runtime.Remoting.ObjRef>kunnen worden overgedragen via een kanaal naar een ander toepassingsdomein (mogelijk op een ander proces of computer).</xref:System.Runtime.Remoting.ObjRef> Eenmaal in de andere toepassingsdomein de <xref:System.Runtime.Remoting.ObjRef>voor het maken van een proxy voor het object, in het algemeen zijn verbonden met het juiste object moet worden geparseerd.</xref:System.Runtime.Remoting.ObjRef> Deze bewerking wordt unmarshaling genoemd.       Een <xref:System.Runtime.Remoting.ObjRef>bevat informatie over de <xref:System.Type>en de klasse van het object wordt gemarshald, een URI die een unieke identificatie van het exemplaar van het specifieke object en communicatie gerelateerde informatie over het bereiken van de onderverdeling remoting waar het object zich bevindt.</xref:System.Type> </xref:System.Runtime.Remoting.ObjRef>       Tijdens het bundelen, de context van de huidige thread wordt gebruikt, niet in de context die actief was toen het object is gemaakt.       U kunt een URI niet koppelen aan een proxy voor een van twee redenen: de URI is gegenereerd op de server voor het object vertegenwoordigt of het object is bekend, in welk geval de URI bekend. Om deze reden als de `Obj` parameter een proxy, wordt een uitzondering gegenereerd. Deze beperking is voor een aangepaste proxy&quot;s versoepeld omdat de transparentproxy wordt behandeld als het serverobject."
  example:
  - "The following code example demonstrates how to use the current <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> method to marshal a specified object.  \n  \n [!code-cpp[RemotingServices.BasicSample#2](~/add/codesnippet/cpp/01236a8e-f8c3-4b7b-875d-_1.cpp)]\n [!code-cs[RemotingServices.BasicSample#2](~/add/codesnippet/csharp/01236a8e-f8c3-4b7b-875d-_1.cs)]\n [!code-vb[RemotingServices.BasicSample#2](~/add/codesnippet/visualbasic/01236a8e-f8c3-4b7b-875d-_1.vb)]"
  syntax:
    content: public static System.Runtime.Remoting.ObjRef Marshal (MarshalByRefObject Obj, string URI);
    parameters:
    - id: Obj
      type: System.MarshalByRefObject
      description: "Het object te converteren."
    - id: URI
      type: System.String
      description: "De opgegeven URI die de nieuwe initialisatie <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref>. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Runtime.Remoting.ObjRef
      description: "Een exemplaar van de <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> klasse die staat voor het opgegeven object in de <code> Obj </code> parameter."
  overload: System.Runtime.Remoting.RemotingServices.Marshal*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "<code>Obj</code>een object-proxy is en de <code>URI</code> parameter is niet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Ten minste één van de aanroepfuncties hoger in de stack is niet gemachtigd om externe communicatie typen en kanalen te configureren."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)
  id: Marshal(System.MarshalByRefObject,System.String,System.Type)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Marshal(MarshalByRefObject,String,Type)
  nameWithType: RemotingServices.Marshal(MarshalByRefObject,String,Type)
  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject,String,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Neemt een <xref href=&quot;System.MarshalByRefObject&quot;> </xref> en converteert naar een exemplaar van de <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> klasse met de opgegeven URI en de opgegeven <xref:System.Type>.</xref:System.Type>"
  remarks: "Een <xref:System.Runtime.Remoting.ObjRef>is een serialiseerbare representatie van een object dat wordt gebruikt om over te dragen van een verwijzing naar een object in een domein toepassingsbegrenzing.</xref:System.Runtime.Remoting.ObjRef> Maken van een <xref:System.Runtime.Remoting.ObjRef>voor een object wordt ook wel marshal.</xref:System.Runtime.Remoting.ObjRef> De <xref:System.Runtime.Remoting.ObjRef>kunnen worden overgedragen via een kanaal naar een ander toepassingsdomein (mogelijk op een ander proces of computer).</xref:System.Runtime.Remoting.ObjRef> Eenmaal in de andere toepassingsdomein de <xref:System.Runtime.Remoting.ObjRef>voor het maken van een proxy voor het object, in het algemeen zijn verbonden met het juiste object moet worden geparseerd.</xref:System.Runtime.Remoting.ObjRef> Deze bewerking wordt unmarshaling genoemd.       Een <xref:System.Runtime.Remoting.ObjRef>bevat informatie over de <xref:System.Type>en de klasse van het object wordt gemarshald, een URI die een unieke identificatie van het exemplaar van het specifieke object en communicatie gerelateerde informatie over het bereiken van de onderverdeling remoting waar het object zich bevindt.</xref:System.Type> </xref:System.Runtime.Remoting.ObjRef>       De opgegeven <xref:System.Type>wordt gebruikt door de externe infrastructuur voor het bereik van de typehiërarchie blootgestelde beperken.</xref:System.Type> Bijvoorbeeld, als een object is afgeleid van object B, die is afgeleid van object C, en <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A>wordt aangeroepen, kan klikt u vervolgens de client geconverteerd de proxy tussen C en B, maar niet naar A.       Tijdens het bundelen, de context van de huidige thread wordt gebruikt, niet in de context die actief was toen het object is gemaakt.</xref:System.Runtime.Remoting.RemotingServices.Marshal%2A>       U kunt een URI niet koppelen aan een proxy voor een van twee redenen: de URI is gegenereerd op de server voor het object vertegenwoordigt of het object is bekend, in welk geval de URI bekend. Om deze reden als de `Obj` parameter een proxy, wordt een uitzondering gegenereerd. Deze beperking is voor een aangepaste proxy&quot;s versoepeld omdat de transparentproxy wordt behandeld als het serverobject."
  syntax:
    content: public static System.Runtime.Remoting.ObjRef Marshal (MarshalByRefObject Obj, string ObjURI, Type RequestedType);
    parameters:
    - id: Obj
      type: System.MarshalByRefObject
      description: "Het object te converteren naar een <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref>."
    - id: ObjURI
      type: System.String
      description: "De URI van het opgegeven object in de `Obj` parameter met is gemarshald. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: RequestedType
      type: System.Type
      description: "De <xref:System.Type> `Obj` is gemarshald als.</xref:System.Type> Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Runtime.Remoting.ObjRef
      description: "Een exemplaar van de <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> klasse die staat voor het opgegeven object in de <code> Obj </code> parameter."
  overload: System.Runtime.Remoting.RemotingServices.Marshal*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "<code>Obj</code>is een proxy van een extern object en de <code>ObjUri</code> parameter is niet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Ten minste één van de aanroepfuncties hoger in de stack is niet gemachtigd om externe communicatie typen en kanalen te configureren."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)
  id: SetObjectUriForMarshal(System.MarshalByRefObject,System.String)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: SetObjectUriForMarshal(MarshalByRefObject,String)
  nameWithType: RemotingServices.SetObjectUriForMarshal(MarshalByRefObject,String)
  fullName: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(MarshalByRefObject,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Hiermee stelt u de URI voor de volgende aanroep naar de <xref:System.Runtime.Remoting.RemotingServices.Marshal*>methode.</xref:System.Runtime.Remoting.RemotingServices.Marshal*>"
  remarks: "The URI set by the current method is used when marshaling the given object.  \n  \n After marshaling, the URI of the specified object is set to the string in the `uri` parameter appended onto the <xref:System.Guid> of the current <xref:System.AppDomain>.  \n  \n If the current application is listening on an HTTP port, then both the string specified in the `uri` parameter and the `uri` string appended onto the <xref:System.Guid> of the current <xref:System.AppDomain> route to the specified object. For example, if the application is listening on HTTP port 9000, then both http://localhost:9000/objectUri, and http://localhost:9000/\\<appdomainguid>/objectUri route to the object specified in the `obj` parameter."
  example:
  - "The following code example demonstrates how to set the URI that will be used by the <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> method when marshaling the specified object.  \n  \n [!code-cpp[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/cpp/2ed6d271-806d-4778-95aa-_1.cpp)]\n [!code-cs[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/csharp/2ed6d271-806d-4778-95aa-_1.cs)]\n [!code-vb[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/visualbasic/2ed6d271-806d-4778-95aa-_1.vb)]"
  syntax:
    content: public static void SetObjectUriForMarshal (MarshalByRefObject obj, string uri);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "Het object dat een URI voor ingesteld."
    - id: uri
      type: System.String
      description: "De URI toewijzen aan het opgegeven object."
  overload: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "<code>obj</code>is niet een lokaal object is al gemarshald of de huidige methode is al aangeroepen op."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Ten minste één van de aanroepfuncties hoger in de stack is niet gemachtigd om externe communicatie typen en kanalen te configureren."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)
  id: Unmarshal(System.Runtime.Remoting.ObjRef)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Unmarshal(ObjRef)
  nameWithType: RemotingServices.Unmarshal(ObjRef)
  fullName: System.Runtime.Remoting.RemotingServices.Unmarshal(ObjRef)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Neemt een <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> en maakt u een proxyobject buiten het."
  remarks: "Een <xref:System.Runtime.Remoting.ObjRef>is een serialiseerbare representatie van een object dat wordt gebruikt om over te dragen van een verwijzing naar een object in een domein toepassingsbegrenzing.</xref:System.Runtime.Remoting.ObjRef> Maken van een <xref:System.Runtime.Remoting.ObjRef>voor een object wordt ook wel marshal.</xref:System.Runtime.Remoting.ObjRef> De <xref:System.Runtime.Remoting.ObjRef>kunnen worden overgedragen via een kanaal naar een ander toepassingsdomein (mogelijk op een ander proces of computer).</xref:System.Runtime.Remoting.ObjRef> Eenmaal in de andere toepassingsdomein de <xref:System.Runtime.Remoting.ObjRef>voor het maken van een proxy voor het object, in het algemeen zijn verbonden met het juiste object moet worden geparseerd.</xref:System.Runtime.Remoting.ObjRef> Deze bewerking wordt unmarshaling genoemd. Tijdens het unmarshaling, de <xref:System.Runtime.Remoting.ObjRef>wordt geparseerd om op te halen van de methode-informatie van het externe object en de transparante proxy en <xref:System.Runtime.Remoting.Proxies.RealProxy>objecten worden gemaakt.</xref:System.Runtime.Remoting.Proxies.RealProxy> </xref:System.Runtime.Remoting.ObjRef> De inhoud van de geparseerde <xref:System.Runtime.Remoting.ObjRef>is toegevoegd aan de transparentproxy voordat de transparentproxy is geregistreerd bij de common language runtime.</xref:System.Runtime.Remoting.ObjRef>       Een <xref:System.Runtime.Remoting.ObjRef>bevat informatie over de <xref:System.Type>en de klasse van het object wordt gemarshald, een URI die een unieke identificatie van het exemplaar van het specifieke object en communicatie gerelateerde informatie over het bereiken van de onderverdeling remoting waar het object zich bevindt.</xref:System.Type> </xref:System.Runtime.Remoting.ObjRef>"
  example:
  - "The following code example demonstrates how to unmarshal an object.  \n  \n [!code-vb[RemotingServices.Unmarshal#2](~/add/codesnippet/visualbasic/b4be8871-533a-4641-8763-_1.vb)]\n [!code-cpp[RemotingServices.Unmarshal#2](~/add/codesnippet/cpp/b4be8871-533a-4641-8763-_1.cpp)]\n [!code-cs[RemotingServices.Unmarshal#2](~/add/codesnippet/csharp/b4be8871-533a-4641-8763-_1.cs)]"
  syntax:
    content: public static object Unmarshal (System.Runtime.Remoting.ObjRef objectRef);
    parameters:
    - id: objectRef
      type: System.Runtime.Remoting.ObjRef
      description: "De <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> die staat voor het externe object waarvoor de proxy wordt gemaakt."
    return:
      type: System.Object
      description: "Een proxy voor het object dat de opgegeven <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> vertegenwoordigt."
  overload: System.Runtime.Remoting.RemotingServices.Unmarshal*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> -exemplaar is opgegeven de <code> objectRef </code> parameter is niet grammaticaal correct."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Ten minste één van de aanroepfuncties hoger in de stack is niet gemachtigd om externe communicatie typen en kanalen te configureren."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)
  id: Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Unmarshal(ObjRef,Boolean)
  nameWithType: RemotingServices.Unmarshal(ObjRef,Boolean)
  fullName: System.Runtime.Remoting.RemotingServices.Unmarshal(ObjRef,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Neemt een <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> en maakt u een proxyobject buiten het verfijnen van het naar het type op de server."
  remarks: "Een <xref:System.Runtime.Remoting.ObjRef>is een serialiseerbare representatie van een object dat wordt gebruikt om over te dragen van een verwijzing naar een object in een domein toepassingsbegrenzing.</xref:System.Runtime.Remoting.ObjRef> Maken van een <xref:System.Runtime.Remoting.ObjRef>voor een object wordt ook wel marshal.</xref:System.Runtime.Remoting.ObjRef> De <xref:System.Runtime.Remoting.ObjRef>kunnen worden overgedragen via een kanaal naar een ander toepassingsdomein (mogelijk op een ander proces of computer).</xref:System.Runtime.Remoting.ObjRef> Eenmaal in de andere toepassingsdomein de <xref:System.Runtime.Remoting.ObjRef>voor het maken van een proxy voor het object, in het algemeen zijn verbonden met het juiste object moet worden geparseerd.</xref:System.Runtime.Remoting.ObjRef> Deze bewerking wordt unmarshaling genoemd. Tijdens het unmarshaling, de <xref:System.Runtime.Remoting.ObjRef>wordt geparseerd om op te halen van de methode-informatie van het externe object en de transparante proxy en <xref:System.Runtime.Remoting.Proxies.RealProxy>objecten worden gemaakt.</xref:System.Runtime.Remoting.Proxies.RealProxy> </xref:System.Runtime.Remoting.ObjRef> De inhoud van de geparseerde <xref:System.Runtime.Remoting.ObjRef>is toegevoegd aan de transparentproxy voordat de transparentproxy is geregistreerd bij de common language runtime.</xref:System.Runtime.Remoting.ObjRef>       Een <xref:System.Runtime.Remoting.ObjRef>bevat informatie over de <xref:System.Type>en de klasse van het object wordt gemarshald, een URI die een unieke identificatie van het exemplaar van het specifieke object en communicatie gerelateerde informatie over het bereiken van de onderverdeling remoting waar het object zich bevindt.</xref:System.Type> </xref:System.Runtime.Remoting.ObjRef>       Wanneer u het eerst hebt gemaakt, wordt de proxy is van het type <xref:System.MarshalByRefObject>.</xref:System.MarshalByRefObject> Als u dit in verschillende typen casten, houdt de externe infrastructuur de meest gebruikte type om te voorkomen tijdens het laden van het type onnodig van."
  syntax:
    content: public static object Unmarshal (System.Runtime.Remoting.ObjRef objectRef, bool fRefine);
    parameters:
    - id: objectRef
      type: System.Runtime.Remoting.ObjRef
      description: "De <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> die staat voor het externe object waarvoor de proxy wordt gemaakt."
    - id: fRefine
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om te verfijnen van de proxy voor het type op de server. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Een proxy voor het object dat de opgegeven <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> vertegenwoordigt."
  overload: System.Runtime.Remoting.RemotingServices.Unmarshal*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> -exemplaar is opgegeven de <code> objectRef </code> parameter is niet grammaticaal correct."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Ten minste één van de aanroepfuncties hoger in de stack is niet gemachtigd om externe communicatie typen en kanalen te configureren."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Remoting.RemotingException
  parent: System.Runtime.Remoting
  isExternal: false
  name: RemotingException
  nameWithType: RemotingException
  fullName: System.Runtime.Remoting.RemotingException
- uid: System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Connect(Type,String)
  nameWithType: RemotingServices.Connect(Type,String)
  fullName: System.Runtime.Remoting.RemotingServices.Connect(Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Connect(Type,String,Object)
  nameWithType: RemotingServices.Connect(Type,String,Object)
  fullName: System.Runtime.Remoting.RemotingServices.Connect(Type,String,Object)
- uid: System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Disconnect(MarshalByRefObject)
  nameWithType: RemotingServices.Disconnect(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.Disconnect(MarshalByRefObject)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.MarshalByRefObject
  parent: System
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: ExecuteMessage(MarshalByRefObject,IMethodCallMessage)
  nameWithType: RemotingServices.ExecuteMessage(MarshalByRefObject,IMethodCallMessage)
  fullName: System.Runtime.Remoting.RemotingServices.ExecuteMessage(MarshalByRefObject,IMethodCallMessage)
- uid: System.Runtime.Remoting.Messaging.IMethodReturnMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMethodReturnMessage
  nameWithType: IMethodReturnMessage
  fullName: System.Runtime.Remoting.Messaging.IMethodReturnMessage
- uid: System.Runtime.Remoting.Messaging.IMethodCallMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMethodCallMessage
  nameWithType: IMethodCallMessage
  fullName: System.Runtime.Remoting.Messaging.IMethodCallMessage
- uid: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetEnvoyChainForProxy(MarshalByRefObject)
  nameWithType: RemotingServices.GetEnvoyChainForProxy(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(MarshalByRefObject)
- uid: System.Runtime.Remoting.Messaging.IMessageSink
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink
- uid: System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetLifetimeService(MarshalByRefObject)
  nameWithType: RemotingServices.GetLifetimeService(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetLifetimeService(MarshalByRefObject)
- uid: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetMethodBaseFromMethodMessage(IMethodMessage)
  nameWithType: RemotingServices.GetMethodBaseFromMethodMessage(IMethodMessage)
  fullName: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(IMethodMessage)
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: true
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Runtime.Remoting.Messaging.IMethodMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMethodMessage
  nameWithType: IMethodMessage
  fullName: System.Runtime.Remoting.Messaging.IMethodMessage
- uid: System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetObjectData(Object,SerializationInfo,StreamingContext)
  nameWithType: RemotingServices.GetObjectData(Object,SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.RemotingServices.GetObjectData(Object,SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetObjectUri(MarshalByRefObject)
  nameWithType: RemotingServices.GetObjectUri(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetObjectUri(MarshalByRefObject)
- uid: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetObjRefForProxy(MarshalByRefObject)
  nameWithType: RemotingServices.GetObjRefForProxy(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(MarshalByRefObject)
- uid: System.Runtime.Remoting.ObjRef
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjRef
  nameWithType: ObjRef
  fullName: System.Runtime.Remoting.ObjRef
- uid: System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetRealProxy(Object)
  nameWithType: RemotingServices.GetRealProxy(Object)
  fullName: System.Runtime.Remoting.RemotingServices.GetRealProxy(Object)
- uid: System.Runtime.Remoting.Proxies.RealProxy
  parent: System.Runtime.Remoting.Proxies
  isExternal: false
  name: RealProxy
  nameWithType: RealProxy
  fullName: System.Runtime.Remoting.Proxies.RealProxy
- uid: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetServerTypeForUri(String)
  nameWithType: RemotingServices.GetServerTypeForUri(String)
  fullName: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(String)
- uid: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetSessionIdForMethodMessage(IMethodMessage)
  nameWithType: RemotingServices.GetSessionIdForMethodMessage(IMethodMessage)
  fullName: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(IMethodMessage)
- uid: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsMethodOverloaded(IMethodMessage)
  nameWithType: RemotingServices.IsMethodOverloaded(IMethodMessage)
  fullName: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(IMethodMessage)
- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsObjectOutOfAppDomain(Object)
  nameWithType: RemotingServices.IsObjectOutOfAppDomain(Object)
  fullName: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(Object)
- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsObjectOutOfContext(Object)
  nameWithType: RemotingServices.IsObjectOutOfContext(Object)
  fullName: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(Object)
- uid: System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsOneWay(MethodBase)
  nameWithType: RemotingServices.IsOneWay(MethodBase)
  fullName: System.Runtime.Remoting.RemotingServices.IsOneWay(MethodBase)
- uid: System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsTransparentProxy(Object)
  nameWithType: RemotingServices.IsTransparentProxy(Object)
  fullName: System.Runtime.Remoting.RemotingServices.IsTransparentProxy(Object)
- uid: System.Runtime.Remoting.RemotingServices.LogRemotingStage(System.Int32)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: LogRemotingStage(Int32)
  nameWithType: RemotingServices.LogRemotingStage(Int32)
  fullName: System.Runtime.Remoting.RemotingServices.LogRemotingStage(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Marshal(MarshalByRefObject)
  nameWithType: RemotingServices.Marshal(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject)
- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Marshal(MarshalByRefObject,String)
  nameWithType: RemotingServices.Marshal(MarshalByRefObject,String)
  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject,String)
- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Marshal(MarshalByRefObject,String,Type)
  nameWithType: RemotingServices.Marshal(MarshalByRefObject,String,Type)
  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject,String,Type)
- uid: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: SetObjectUriForMarshal(MarshalByRefObject,String)
  nameWithType: RemotingServices.SetObjectUriForMarshal(MarshalByRefObject,String)
  fullName: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(MarshalByRefObject,String)
- uid: System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Unmarshal(ObjRef)
  nameWithType: RemotingServices.Unmarshal(ObjRef)
  fullName: System.Runtime.Remoting.RemotingServices.Unmarshal(ObjRef)
- uid: System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Unmarshal(ObjRef,Boolean)
  nameWithType: RemotingServices.Unmarshal(ObjRef,Boolean)
  fullName: System.Runtime.Remoting.RemotingServices.Unmarshal(ObjRef,Boolean)
- uid: System.Runtime.Remoting.RemotingServices.Connect*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Connect
  nameWithType: RemotingServices.Connect
- uid: System.Runtime.Remoting.RemotingServices.Disconnect*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Disconnect
  nameWithType: RemotingServices.Disconnect
- uid: System.Runtime.Remoting.RemotingServices.ExecuteMessage*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: ExecuteMessage
  nameWithType: RemotingServices.ExecuteMessage
- uid: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetEnvoyChainForProxy
  nameWithType: RemotingServices.GetEnvoyChainForProxy
- uid: System.Runtime.Remoting.RemotingServices.GetLifetimeService*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetLifetimeService
  nameWithType: RemotingServices.GetLifetimeService
- uid: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetMethodBaseFromMethodMessage
  nameWithType: RemotingServices.GetMethodBaseFromMethodMessage
- uid: System.Runtime.Remoting.RemotingServices.GetObjectData*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetObjectData
  nameWithType: RemotingServices.GetObjectData
- uid: System.Runtime.Remoting.RemotingServices.GetObjectUri*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetObjectUri
  nameWithType: RemotingServices.GetObjectUri
- uid: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetObjRefForProxy
  nameWithType: RemotingServices.GetObjRefForProxy
- uid: System.Runtime.Remoting.RemotingServices.GetRealProxy*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetRealProxy
  nameWithType: RemotingServices.GetRealProxy
- uid: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetServerTypeForUri
  nameWithType: RemotingServices.GetServerTypeForUri
- uid: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetSessionIdForMethodMessage
  nameWithType: RemotingServices.GetSessionIdForMethodMessage
- uid: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsMethodOverloaded
  nameWithType: RemotingServices.IsMethodOverloaded
- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsObjectOutOfAppDomain
  nameWithType: RemotingServices.IsObjectOutOfAppDomain
- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsObjectOutOfContext
  nameWithType: RemotingServices.IsObjectOutOfContext
- uid: System.Runtime.Remoting.RemotingServices.IsOneWay*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsOneWay
  nameWithType: RemotingServices.IsOneWay
- uid: System.Runtime.Remoting.RemotingServices.IsTransparentProxy*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsTransparentProxy
  nameWithType: RemotingServices.IsTransparentProxy
- uid: System.Runtime.Remoting.RemotingServices.LogRemotingStage*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: LogRemotingStage
  nameWithType: RemotingServices.LogRemotingStage
- uid: System.Runtime.Remoting.RemotingServices.Marshal*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Marshal
  nameWithType: RemotingServices.Marshal
- uid: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: SetObjectUriForMarshal
  nameWithType: RemotingServices.SetObjectUriForMarshal
- uid: System.Runtime.Remoting.RemotingServices.Unmarshal*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Unmarshal
  nameWithType: RemotingServices.Unmarshal
