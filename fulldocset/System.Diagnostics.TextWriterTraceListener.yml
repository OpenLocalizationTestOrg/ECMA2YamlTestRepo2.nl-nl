### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TextWriterTraceListener
  id: TextWriterTraceListener
  children:
  - System.Diagnostics.TextWriterTraceListener.#ctor
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.String)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)
  - System.Diagnostics.TextWriterTraceListener.Close
  - System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  - System.Diagnostics.TextWriterTraceListener.Flush
  - System.Diagnostics.TextWriterTraceListener.Write(System.String)
  - System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  - System.Diagnostics.TextWriterTraceListener.Writer
  langs:
  - csharp
  name: TextWriterTraceListener
  nameWithType: TextWriterTraceListener
  fullName: System.Diagnostics.TextWriterTraceListener
  type: Class
  summary: "Directe ondergeschikten tracering of foutopsporing van uitvoer naar een <xref:System.IO.TextWriter>of naar een <xref:System.IO.Stream>, zoals <xref href=&quot;System.IO.FileStream&quot;> </xref>.</xref:System.IO.Stream> </xref:System.IO.TextWriter>"
  remarks: "De klasse TextWriterTraceListener biedt de <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>eigenschap ophalen of instellen van de tekstschrijver die de tracering of foutopsporing van uitvoer ontvangt.</xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>      > [!IMPORTANT] > Dit type implementeert de <xref:System.IDisposable>interface.</xref:System.IDisposable> Wanneer u klaar bent met het type, moet u beschikken over het direct of indirect. Aanroepen voor het rechtstreeks verwijderen van het type ervan <xref:System.IDisposable.Dispose%2A>methode in een `try` / `catch` blok.</xref:System.IDisposable.Dispose%2A> Gebruiken om de buitengebruikstelling van het indirect, een taal constructie zoals `using` (in C#) of `Using` (in Visual Basic). Zie voor meer informatie de sectie &quot;Met behulp van een Object dat wordt geïmplementeerd IDisposable&quot; in de <xref:System.IDisposable>interface onderwerp.</xref:System.IDisposable>       Deze klasse biedt ook methoden voor het <xref:System.Diagnostics.TextWriterTraceListener.Close%2A>de <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>zodat het niet meer ontvangt tracering of foutopsporing van uitvoer naar <xref:System.Diagnostics.TextWriterTraceListener.Flush%2A>uitvoerbuffer voor de <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>, en <xref:System.Diagnostics.TextWriterTraceListener.Write%2A>een</xref:System.Diagnostics.TextWriterTraceListener.Write%2A> bericht om de <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>.</xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> </xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> </xref:System.Diagnostics.TextWriterTraceListener.Flush%2A> </xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> </xref:System.Diagnostics.TextWriterTraceListener.Close%2A>       U kunt tracering of foutopsporing voor het gebruik van een traceringslistener moet inschakelen. De volgende syntaxis is specifiek compiler. Als u compilers dan C# of Visual Basic, Raadpleeg de documentatie voor de compiler.      -Als foutopsporing wilt inschakelen in C#, voeg de `/d:DEBUG` vlag aan de opdrachtregel voor de compiler wanneer u de code compileren of u kunt toevoegen `#define DEBUG` boven aan het bestand. In Visual Basic, voegt u de `/d:DEBUG=True` vlag aan de compiler-opdrachtregel.      -Toevoegen tracering wilt inschakelen in C#, de `/d:TRACE` vlag aan de opdrachtregel voor de compiler bij het compileren van uw code, of Voeg `#define TRACE` boven aan het bestand. In Visual Basic, voegt u de `/d:TRACE=True` vlag aan de compiler-opdrachtregel.       Als u wilt een traceringslistener toevoegen, bewerken het configuratiebestand dat overeenkomt met de naam van uw toepassing. In dit bestand kunt u toevoegen van een listener, instellen van het type en stel de parameter, een listener te verwijderen of wissen van alle listeners die eerder zijn ingesteld door de toepassing. Het configuratiebestand moet zijn geformatteerd als in het volgende voorbeeld.      ```   <configuration>     <system.diagnostics>       <trace autoflush=&quot;false&quot; indentsize=&quot;4&quot;>         <listeners>           <add name=&quot;myListener&quot;              type=&quot;System.Diagnostics.TextWriterTraceListener&quot;              initializeData=&quot;TextWriterOutput.log&quot; />           <remove name=&quot;Default&quot; />         </listeners>       </trace>     </system.diagnostics>   </configuration>   ```      > [!NOTE]> Als wordt geprobeerd om te schrijven naar een bestand dat wordt gebruikt of niet beschikbaar is, de bestandsnaam is automatisch voorafgegaan door een GUID."
  example:
  - "The following example implements an instance of the TextWriterTraceListener class that uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. First the example creates a file for output. Then it creates the <xref:System.IO.StreamWriter> for the first text writer, assigns it the output file, and adds it to the <xref:System.Diagnostics.Trace.Listeners%2A>. Then, the code outputs one line of text to the file. Finally, the example flushes the output buffer.  \n  \n After running this sample, you can open the `TestFile.txt` file to see the output.  \n  \n [!code-cpp[Classic TextWriterTraceListener Example#1](~/add/codesnippet/cpp/t-system.diagnostics.tex_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener Example#1](~/add/codesnippet/csharp/t-system.diagnostics.tex_1.cs)]\n [!code-vb[Classic TextWriterTraceListener Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.tex_1.vb)]"
  syntax:
    content: 'public class TextWriterTraceListener : System.Diagnostics.TraceListener'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.GetSupportedAttributes
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor
  id: '#ctor'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener()
  nameWithType: TextWriterTraceListener.TextWriterTraceListener()
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> klasse met <xref:System.IO.TextWriter>Als de ontvanger uitvoer.</xref:System.IO.TextWriter>"
  remarks: "Deze constructor gebruikt de <xref:System.IO.TextWriter>stroom als de ontvanger van de tracering of foutopsporing van uitvoer.</xref:System.IO.TextWriter> De <xref:System.Diagnostics.TraceListener.Name%2A>eigenschap wordt geïnitialiseerd in een lege tekenreeks (&quot;&quot;, of <xref:System.String.Empty?displayProperty=fullName>).</xref:System.String.Empty?displayProperty=fullName> </xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor. It sets the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to console output, and then adds the <xref:System.Diagnostics.TextWriterTraceListener> to the <xref:System.Diagnostics.TraceListenerCollection>. It writes a message in two segments, and then closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_3_1.cpp)]\n [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_3_1.vb)]\n [!code-cs[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_3_1.cs)]"
  syntax:
    content: public TextWriterTraceListener ();
    parameters: []
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(Stream)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> klasse, met behulp van de stroom als de ontvanger van de foutopsporing en tracering uitvoer."
  remarks: "Deze constructor initialiseert de <xref:System.Diagnostics.TraceListener.Name%2A>eigenschap op een lege tekenreeks (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_5_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_5_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Een <xref:System.IO.Stream>die staat voor de stream de <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> schrijft naar.</xref:System.IO.Stream>"
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De stroom is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(TextWriter)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> klasse met de opgegeven schrijver als ontvanger van de tracering of foutopsporing van uitvoer."
  remarks: "Deze constructor initialiseert de <xref:System.Diagnostics.TraceListener.Name%2A>eigenschap op een lege tekenreeks (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor. The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>, then closes this <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_6_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_6_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_6_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "Een <xref:System.IO.TextWriter>ontvangt dat de uitvoer van de <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref>.</xref:System.IO.TextWriter>"
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De writer is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> klasse, met behulp van het bestand als de ontvanger van de foutopsporing en tracering uitvoer."
  remarks: "Deze constructor initialiseert de <xref:System.Diagnostics.TraceListener.Name%2A>eigenschap op een lege tekenreeks (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/add/codesnippet/csharp/m-system.diagnostics.tex_1_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_1_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "De naam van het bestand de <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> schrijft naar."
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Het bestand is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(Stream,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> klasse met de opgegeven naam met behulp van de stroom als de ontvanger van de foutopsporing en tracering uitvoer."
  remarks: "Deze constructor initialiseert de <xref:System.Diagnostics.TraceListener.Name%2A>eigenschap in op de `name` parameter of op een lege tekenreeks (&quot;&quot;) als de `name` parameter `null`.</xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener> and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/add/codesnippet/csharp/904be5a7-d634-4f01-8e66-_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/add/codesnippet/visualbasic/904be5a7-d634-4f01-8e66-_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.Stream stream, string name);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Een <xref:System.IO.Stream>die staat voor de stream de <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> schrijft naar.</xref:System.IO.Stream>"
    - id: name
      type: System.String
      description: "De naam van het nieuwe exemplaar."
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De stroom is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  id: '#ctor(System.IO.TextWriter,System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(TextWriter,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> klasse met de opgegeven naam met behulp van de opgegeven schrijver als ontvanger van de tracering of foutopsporing van uitvoer."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor. The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/add/codesnippet/csharp/81bb968a-b680-446b-b301-_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/add/codesnippet/visualbasic/81bb968a-b680-446b-b301-_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.TextWriter writer, string name);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "Een <xref:System.IO.TextWriter>ontvangt dat de uitvoer van de <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref>.</xref:System.IO.TextWriter>"
    - id: name
      type: System.String
      description: "De naam van het nieuwe exemplaar."
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De writer is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(String,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> klasse met de opgegeven naam met behulp van het bestand als de ontvanger van de foutopsporing en tracering uitvoer."
  remarks: "Deze constructor initialiseert de <xref:System.Diagnostics.TraceListener.Name%2A>eigenschap in op de `name` parameter of op een lege tekenreeks (&quot;&quot;) als de `name` parameter `null`.</xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/add/codesnippet/visualbasic/9ea7970a-0298-4bde-b5e1-_1.vb)]\n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/add/codesnippet/csharp/9ea7970a-0298-4bde-b5e1-_1.cs)]"
  syntax:
    content: public TextWriterTraceListener (string fileName, string name);
    parameters:
    - id: fileName
      type: System.String
      description: "De naam van het bestand de <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> schrijft naar."
    - id: name
      type: System.String
      description: "De naam van het nieuwe exemplaar."
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De stroom is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Close
  id: Close
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: TextWriterTraceListener.Close()
  fullName: System.Diagnostics.TextWriterTraceListener.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee sluit u de <xref:System.Diagnostics.TextWriterTraceListener.Writer*>zodat het niet meer ontvangt tracering of foutopsporing van uitvoer.</xref:System.Diagnostics.TextWriterTraceListener.Writer*>"
  remarks: "Het aanroepen van een <xref:System.Diagnostics.TextWriterTraceListener.Write%2A>of <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A>methode na het aanroepen van sluit automatisch opnieuw heeft geopend de stroom.</xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A> </xref:System.Diagnostics.TextWriterTraceListener.Write%2A>"
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_2_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_2_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_2_1.vb)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Diagnostics.TextWriterTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: TextWriterTraceListener.Dispose(Boolean)
  fullName: System.Diagnostics.TextWriterTraceListener.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Dit verwijdert <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> object."
  remarks: "Gebruik de <xref:System.Diagnostics.TextWriterTraceListener.Close%2A>methode van de <xref:System.Diagnostics.TextWriterTraceListener>klasse voor het vrijgeven van de beheerde bronnen van een <xref:System.Diagnostics.TextWriterTraceListener>object.</xref:System.Diagnostics.TextWriterTraceListener> </xref:System.Diagnostics.TextWriterTraceListener> </xref:System.Diagnostics.TextWriterTraceListener.Close%2A>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>beheerde bronnen; vrijgeven Als <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, Dispose heeft geen effect."
  overload: System.Diagnostics.TextWriterTraceListener.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Flush
  id: Flush
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: TextWriterTraceListener.Flush()
  fullName: System.Diagnostics.TextWriterTraceListener.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "De uitvoerbuffer voor de <xref:System.Diagnostics.TextWriterTraceListener.Writer*>.</xref:System.Diagnostics.TextWriterTraceListener.Writer*> leegmaken"
  remarks: ''
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_7_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_7_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_7_1.vb)]"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Diagnostics.TextWriterTraceListener.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: TextWriterTraceListener.Write(String)
  fullName: System.Diagnostics.TextWriterTraceListener.Write(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een bericht schrijft met dit exemplaar <xref:System.Diagnostics.TextWriterTraceListener.Writer*>.</xref:System.Diagnostics.TextWriterTraceListener.Writer*>"
  remarks: ''
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen. The example writes two lines to the console screen. Note the second write appears on the same line as the first write. The example then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Write Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_0_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Write Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_0_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Write Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_0_1.vb)]"
  syntax:
    content: public override void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "Een bericht te schrijven."
  overload: System.Diagnostics.TextWriterTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: TextWriterTraceListener.WriteLine(String)
  fullName: System.Diagnostics.TextWriterTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een bericht naar dit exemplaar wordt geschreven <xref:System.Diagnostics.TextWriterTraceListener.Writer*>gevolgd door een regel terminator.</xref:System.Diagnostics.TextWriterTraceListener.Writer*> De regel standaard terminator is een regelterugloop, gevolgd door een regelinvoer (\\r)."
  remarks: ''
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen. The example writes two lines to the console screen. Note the second write appears on the same line as the first write. The example then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_4_1.cpp)]\n [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_4_1.vb)]\n [!code-cs[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_4_1.cs)]"
  syntax:
    content: public override void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "Een bericht te schrijven."
  overload: System.Diagnostics.TextWriterTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Writer
  id: Writer
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Writer
  nameWithType: TextWriterTraceListener.Writer
  fullName: System.Diagnostics.TextWriterTraceListener.Writer
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Opgehaald of ingesteld van de tekstschrijver die de tracering of foutopsporing van uitvoer ontvangt."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that writes to the console screen. Then the code adds the new trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> in the trace class.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Writer Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tex_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Writer Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tex_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Writer Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tex_1.vb)]"
  syntax:
    content: public System.IO.TextWriter Writer { get; set; }
    return:
      type: System.IO.TextWriter
      description: "Een <xref:System.IO.TextWriter>die staat voor de schrijver die tracering of foutopsporing van uitvoer ontvangt.</xref:System.IO.TextWriter>"
  overload: System.Diagnostics.TextWriterTraceListener.Writer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TraceListener
  isExternal: false
  name: System.Diagnostics.TraceListener
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Diagnostics.TextWriterTraceListener.#ctor
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener()
  nameWithType: TextWriterTraceListener.TextWriterTraceListener()
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener()
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(Stream)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(TextWriter)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(Stream,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream,String)
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(TextWriter,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(String,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String,String)
- uid: System.Diagnostics.TextWriterTraceListener.Close
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Close()
  nameWithType: TextWriterTraceListener.Close()
  fullName: System.Diagnostics.TextWriterTraceListener.Close()
- uid: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: TextWriterTraceListener.Dispose(Boolean)
  fullName: System.Diagnostics.TextWriterTraceListener.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TextWriterTraceListener.Flush
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Flush()
  nameWithType: TextWriterTraceListener.Flush()
  fullName: System.Diagnostics.TextWriterTraceListener.Flush()
- uid: System.Diagnostics.TextWriterTraceListener.Write(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: TextWriterTraceListener.Write(String)
  fullName: System.Diagnostics.TextWriterTraceListener.Write(String)
- uid: System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: TextWriterTraceListener.WriteLine(String)
  fullName: System.Diagnostics.TextWriterTraceListener.WriteLine(String)
- uid: System.Diagnostics.TextWriterTraceListener.Writer
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Writer
  nameWithType: TextWriterTraceListener.Writer
  fullName: System.Diagnostics.TextWriterTraceListener.Writer
- uid: System.Diagnostics.TextWriterTraceListener.#ctor*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener
  nameWithType: TextWriterTraceListener.TextWriterTraceListener
- uid: System.Diagnostics.TextWriterTraceListener.Close*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Close
  nameWithType: TextWriterTraceListener.Close
- uid: System.Diagnostics.TextWriterTraceListener.Dispose*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Dispose
  nameWithType: TextWriterTraceListener.Dispose
- uid: System.Diagnostics.TextWriterTraceListener.Flush*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Flush
  nameWithType: TextWriterTraceListener.Flush
- uid: System.Diagnostics.TextWriterTraceListener.Write*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Write
  nameWithType: TextWriterTraceListener.Write
- uid: System.Diagnostics.TextWriterTraceListener.WriteLine*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: TextWriterTraceListener.WriteLine
- uid: System.Diagnostics.TextWriterTraceListener.Writer*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Writer
  nameWithType: TextWriterTraceListener.Writer
