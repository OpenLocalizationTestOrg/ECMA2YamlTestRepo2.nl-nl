### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.SendKeys
  id: SendKeys
  children:
  - System.Windows.Forms.SendKeys.Flush
  - System.Windows.Forms.SendKeys.Send(System.String)
  - System.Windows.Forms.SendKeys.SendWait(System.String)
  langs:
  - csharp
  name: SendKeys
  nameWithType: SendKeys
  fullName: System.Windows.Forms.SendKeys
  type: Class
  summary: "Biedt methoden voor het verzenden van toetsaanslagen op een toepassing."
  remarks: "SendKeys toetsaanslagen verzenden en toetsaanslagen combinaties naar de actieve toepassing gebruiken. Deze klasse kan niet worden gemaakt. Gebruik een toetsaanslag verzenden naar een klasse en onmiddellijk gaan met de stroom van het programma, <xref:System.Windows.Forms.SendKeys.Send%2A>.</xref:System.Windows.Forms.SendKeys.Send%2A> Gebruiken om te wachten tot alle processen die zijn gestart door de toetsaanslag, <xref:System.Windows.Forms.SendKeys.SendWait%2A>.</xref:System.Windows.Forms.SendKeys.SendWait%2A>       Elke sleutel wordt vertegenwoordigd door een of meer tekens. Als u een enkel teken, u het teken zelf. Bijvoorbeeld, als u wilt de letter A vertegenwoordigen, in de tekenreeks &quot;A&quot; aan de methode doorgeven. Toevoegen elke extra tekens naar de voorafgaande ter vertegenwoordiging van meer dan één teken. Als u wilt de letters A, B en C vertegenwoordigen, geeft u de parameter in als &quot;ABC&quot;.       Het plusteken (+), dakje (^), procentteken (%), tilde (~) en tussen haakjes () hebben speciale betekenis voor SendKeys. Geef een van de volgende tekens, plaatst u tussen accolades ({}). Bijvoorbeeld: Geef op het plusteken door gebruiken &quot;{+}&quot;. Om op te geven accolade tekens, gebruik &quot;{{}&quot; en &quot;{}}&quot;. Vierkante haken ([]) hebben geen speciale betekenis voor SendKeys, maar u moet deze tussen accolades. In andere toepassingen hebt haken een speciale betekenis die mogelijk aanzienlijk als dynamische gegevens DDE (exchange) plaatsvindt.      > [!CAUTION] > Als uw toepassing is bestemd voor internationale met tal van toetsenborden, het gebruik van <xref:System.Windows.Forms.SendKeys.Send%2A>kan onvoorspelbare resultaten opleveren en moeten worden vermeden.</xref:System.Windows.Forms.SendKeys.Send%2A>       Tekens die niet worden weergegeven wanneer u een toets, zoals ENTER of TAB en de sleutels die acties in plaats van tekens vertegenwoordigen, gebruikt de codes in de volgende tabel.      | Sleutel | Code |   |---------|----------|   | BACKSPACE | {BACKSPACE}, {BS} of {BKSP} |   | OPSPLITSEN | {OPSPLITSEN} |   | CAPSLOCK IS | {CAPS LOCK} |   | DEL of verwijderen | {VERWIJDEREN} of {DEL} |   | PIJL-OMLAAG | {OMLAAG} |   | EINDE | {EINDE} |   | VOER | {Geef} of ~ |   | ESC | {ESC} |   | HELP | {HELPEN} |   | START | {START} |   | Modules of INSERT | {INVOEGEN} of {INS} |   | PIJL-LINKS | {LEFT} |   | NUMLOCK | {NUMLOCK} |   | PAGINA OMLAAG | {PAGE DOWN} |   | PAGINA OMHOOG | {PAGEUP} |   | PRINT SCREEN | {PRTSC} (gereserveerd voor toekomstig gebruik) |   | PIJL-RECHTS | {RIGHT} |   | SCROLL LOCK | {SCROLLLOCK} |   | TABBLAD | {TABBLAD} |   | PIJL-OMHOOG | {MAXIMAAL} |   | F1 | {F1} |   | F2 | {F2} |   | F3 | {F3} |   | F4 | {F4} |   | F5 | {F5} |   | F6 | {F6} |   | F7 | {F7} |   | F8 | {F8} |   | F9 | {F9} |   | F10 | {F10} |   | F11 | {F11} |   | F12 | {F12} |   | F13 | {F13} |   | F14 | {F14} |   | F15 | {F15} |   | F16 | {F16} |   | Toetsenblok toevoegen | {TOEVOEGEN} |   | Toetsenblok afgetrokken | {AFGETROKKEN} |   | Toetsenblok vermenigvuldigen | {VERMENIGVULDIGEN} |   | Verdeel toetsenblok | {VERDELEN} |       Als u sleutels in combinatie met een combinatie van de SHIFT, CTRL en ALT worden gebruikt, worden voorafgegaan door de code met een of meer van de volgende codes.      | Sleutel | Code |   |---------|----------|   | SHIFT | + |   | CTRL | ^ |   | ALT | % |       Als u wilt opgeven dat een combinatie van SHIFT en CTRL ALT moet worden ingedrukt terwijl verschillende andere sleutels worden ingedrukt, plaatst u de code voor die sleutels tussen haakjes. Bijvoorbeeld: als u wilt opgeven dat u SHIFT ingedrukt terwijl u E- en C worden ingedrukt, gebruiken &quot;+ (EC)&quot;. Als u wilt opgeven dat u SHIFT ingedrukt terwijl E wordt gedrukt, gevolgd door C zonder SHIFT, gebruiken &quot;+ EC&quot;.       Als herhalende sleutels opgeven, gebruikt u de indeling {sleutel number}. U moet een spatie staan tussen de sleutel en nummer plaatsen. {LEFT 42} betekent bijvoorbeeld dat druk 42 maal; op de toets pijl-links {h 10} betekent press die h 10 keer.      > [!NOTE] > Omdat er geen beheerde methode is voor het activeren van een andere toepassing, kunt u deze klasse in de huidige toepassing gebruiken of moet u gebruiken systeemeigen Windows-methoden, zoals `FindWindow` en `SetForegroundWindow`, gedwongen focus op andere toepassingen.      > [!NOTE] > De SendKeys-klasse is bijgewerkt voor de .NET Framework 3.0 voor het gebruik ervan in toepassingen die worden uitgevoerd op Windows Vista inschakelen. De verbeterde beveiliging van Windows Vista (bekend als User Account Control of UAC) voorkomt u dat de vorige implementatie werkt zoals verwacht.   >> De klasse SendKeys is gevoeliger voor problemen met timing, waarvan sommige moesten ontwikkelaars omzeilen. De implementatie van de bijgewerkte nog steeds gevoelig voor problemen met timing, maar is iets sneller en zijn mogelijk wijzigingen aan de tijdelijke oplossingen. De klasse SendKeys probeert eerst te gebruiken de vorige implementatie en als dat mislukt, gebruikt de nieuwe implementatie. De klasse SendKeys mogelijk als gevolg hiervan, anders werken op verschillende besturingssystemen. Bovendien wanneer de klasse SendKeys maakt gebruik van de nieuwe implementatie de <xref:System.Windows.Forms.SendKeys.SendWait%2A>methode wordt niet wachten op berichten te verwerken wanneer ze worden verzonden naar een ander proces.</xref:System.Windows.Forms.SendKeys.SendWait%2A>   >> Als uw toepassing op consistent gedrag ongeacht het besturingssysteem vertrouwt, kunt u de klasse SendKeys gebruik van de nieuwe implementatie door de volgende toepassingsinstelling toe te voegen aan het bestand app.config kunt afdwingen.   >> `<appSettings>` >> `<add key=&quot;SendKeys&quot; value=&quot;SendInput&quot;/>` >> `</appSettings>` >> Dat de klasse SendKeys gebruik van de vorige implementatie, gebruikt u de waarde `&quot;JournalHook&quot;` in plaats daarvan."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.SendKeys.Send%2A> method. To run the example, paste the following code in a form called Form1 containing a button called Button1. Ensure the click events are associated with their event-handling methods in this example. The button control's <xref:System.Windows.Forms.Control.TabIndex%2A> property should be set to 0. When the example is running, double-click the form to trigger the button's click event.  \n  \n [!code-cs[System.Windows.Forms.SendKeys#1](~/add/codesnippet/csharp/t-system.windows.forms.s_16_1.cs)]\n [!code-cpp[System.Windows.Forms.SendKeys#1](~/add/codesnippet/cpp/t-system.windows.forms.s_16_1.cpp)]\n [!code-vb[System.Windows.Forms.SendKeys#1](~/add/codesnippet/visualbasic/t-system.windows.forms.s_16_1.vb)]"
  syntax:
    content: public class SendKeys
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.SendKeys.Flush
  id: Flush
  parent: System.Windows.Forms.SendKeys
  langs:
  - csharp
  name: Flush()
  nameWithType: SendKeys.Flush()
  fullName: System.Windows.Forms.SendKeys.Flush()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Alle Windows-berichten momenteel in de wachtrij voor berichten worden verwerkt."
  remarks: "Gebruik Flush wachten tot de toepassing verwerkt toetsaanslagen en andere besturingssysteem berichten die zich in de berichtenwachtrij. Dit is gelijkwaardig aan aanroepen <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName>totdat er geen meer sleutels worden verwerkt.</xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName>      > [!NOTE] > Omdat er geen beheerde methode is voor het activeren van een andere toepassing, kunt u deze klasse in de huidige toepassing gebruiken of moet u gebruiken systeemeigen Windows-methoden, zoals `FindWindow` en `SetForegroundWindow`, gedwongen focus op andere toepassingen."
  syntax:
    content: public static void Flush ();
    parameters: []
  overload: System.Windows.Forms.SendKeys.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.SendKeys.Send(System.String)
  id: Send(System.String)
  parent: System.Windows.Forms.SendKeys
  langs:
  - csharp
  name: Send(String)
  nameWithType: SendKeys.Send(String)
  fullName: System.Windows.Forms.SendKeys.Send(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Toetsaanslagen verzendt naar de actieve toepassing."
  remarks: "Elke sleutel wordt vertegenwoordigd door een of meer tekens. Als u een enkel teken, u het teken zelf. Bijvoorbeeld, als u wilt de letter A vertegenwoordigen, in de tekenreeks &quot;A&quot; aan de methode doorgeven. Toevoegen elke extra tekens naar de voorafgaande ter vertegenwoordiging van meer dan één teken. Als u wilt de letters A, B en C vertegenwoordigen, geeft u de parameter in als &quot;ABC&quot;.       Het plusteken (+), dakje (^), procentteken (%), tilde (~) en tussen haakjes () hebben een speciale betekenis en <xref:System.Windows.Forms.SendKeys>.</xref:System.Windows.Forms.SendKeys> Geef een van de volgende tekens, plaatst u tussen accolades ({}). Bijvoorbeeld: Geef op het plusteken door gebruiken &quot;{+}&quot;. Om op te geven accolade tekens, gebruik &quot;{{}&quot; en &quot;{}}&quot;. Vierkante haken ([]) hebben geen speciale betekenis voor <xref:System.Windows.Forms.SendKeys>, maar u dient deze accolades.</xref:System.Windows.Forms.SendKeys> In andere toepassingen hebt haken een speciale betekenis die mogelijk aanzienlijk als dynamische gegevens DDE (exchange) plaatsvindt.      > [!CAUTION] > Als uw toepassing is bestemd voor internationale met tal van toetsenborden, het gebruik van verzenden kan onvoorspelbare resultaten oplevert, en moeten worden vermeden.       Tekens die niet worden weergegeven wanneer u een toets, zoals ENTER of TAB en de sleutels die acties in plaats van tekens vertegenwoordigen, gebruikt de codes in de volgende tabel.      | Sleutel | Code |   |---------|----------|   | BACKSPACE | {BACKSPACE}, {BS} of {BKSP} |   | OPSPLITSEN | {OPSPLITSEN} |   | CAPSLOCK IS | {CAPS LOCK} |   | DEL of verwijderen | {VERWIJDEREN} of {DEL} |   | PIJL-OMLAAG | {OMLAAG} |   | EINDE | {EINDE} |   | VOER | {Geef} of ~ |   | ESC | {ESC} |   | HELP | {HELPEN} |   | START | {START} |   | Modules of INSERT | {INVOEGEN} of {INS} |   | PIJL-LINKS | {LEFT} |   | NUMLOCK | {NUMLOCK} |   | PAGINA OMLAAG | {PAGE DOWN} |   | PAGINA OMHOOG | {PAGEUP} |   | PRINT SCREEN | {PRTSC} (gereserveerd voor toekomstig gebruik) |   | PIJL-RECHTS | {RIGHT} |   | SCROLL LOCK | {SCROLLLOCK} |   | TABBLAD | {TABBLAD} |   | PIJL-OMHOOG | {MAXIMAAL} |   | F1 | {F1} |   | F2 | {F2} |   | F3 | {F3} |   | F4 | {F4} |   | F5 | {F5} |   | F6 | {F6} |   | F7 | {F7} |   | F8 | {F8} |   | F9 | {F9} |   | F10 | {F10} |   | F11 | {F11} |   | F12 | {F12} |   | F13 | {F13} |   | F14 | {F14} |   | F15 | {F15} |   | F16 | {F16} |   | Toetsenblok toevoegen | {TOEVOEGEN} |   | Toetsenblok afgetrokken | {AFGETROKKEN} |   | Toetsenblok vermenigvuldigen | {VERMENIGVULDIGEN} |   | Verdeel toetsenblok | {VERDELEN} |       Als u sleutels in combinatie met een combinatie van de SHIFT, CTRL en ALT worden gebruikt, worden voorafgegaan door de code met een of meer van de volgende codes.      | Sleutel | Code |   |---------|----------|   | SHIFT | + |   | CTRL | ^ |   | ALT | % |       Als u wilt opgeven dat een combinatie van SHIFT en CTRL ALT moet worden ingedrukt terwijl verschillende andere sleutels worden ingedrukt, plaatst u de code voor die sleutels tussen haakjes. Bijvoorbeeld: als u wilt opgeven dat u SHIFT ingedrukt terwijl u E- en C worden ingedrukt, gebruiken &quot;+ (EC)&quot;. Als u wilt opgeven dat u SHIFT ingedrukt terwijl E wordt gedrukt, gevolgd door C zonder SHIFT, gebruiken &quot;+ EC&quot;.       Als herhalende sleutels opgeven, gebruikt u de indeling {sleutel number}. U moet een spatie staan tussen de sleutel en nummer plaatsen. {LEFT 42} betekent bijvoorbeeld dat druk 42 maal; op de toets pijl-links {h 10} betekent press die h 10 keer.      > [!NOTE] > Omdat er geen beheerde methode is voor het activeren van een andere toepassing, kunt u deze klasse in de huidige toepassing gebruiken of moet u gebruiken systeemeigen Windows-methoden, zoals `FindWindow` en `SetForegroundWindow`, gedwongen focus op andere toepassingen.      > [!NOTE] > De <xref:System.Windows.Forms.SendKeys>klasse is bijgewerkt voor de .NET Framework 3.0 voor het gebruik ervan in toepassingen die worden uitgevoerd op Windows Vista inschakelen.</xref:System.Windows.Forms.SendKeys> De verbeterde beveiliging van Windows Vista (bekend als User Account Control of UAC) voorkomt u dat de vorige implementatie werkt zoals verwacht.   >> De <xref:System.Windows.Forms.SendKeys>klasse is vatbaar voor problemen met timing, waarvan sommige ontwikkelaars omzeilen hebben gehad.</xref:System.Windows.Forms.SendKeys> De implementatie van de bijgewerkte nog steeds gevoelig voor problemen met timing, maar is iets sneller en zijn mogelijk wijzigingen aan de tijdelijke oplossingen. De <xref:System.Windows.Forms.SendKeys>klasse probeert eerst te gebruiken de vorige implementatie en als dat mislukt, gebruikt u de nieuwe implementatie.</xref:System.Windows.Forms.SendKeys> Als gevolg hiervan de <xref:System.Windows.Forms.SendKeys>klasse mogelijk anders werken op verschillende besturingssystemen.</xref:System.Windows.Forms.SendKeys> Bijkomend, wanneer de <xref:System.Windows.Forms.SendKeys>klasse maakt gebruik van de nieuwe implementatie de <xref:System.Windows.Forms.SendKeys.SendWait%2A>methode wordt niet wachten op berichten te verwerken wanneer ze worden verzonden naar een ander proces.</xref:System.Windows.Forms.SendKeys.SendWait%2A> </xref:System.Windows.Forms.SendKeys>   >> Als uw toepassing op consistent gedrag ongeacht het besturingssysteem vertrouwt, dwingt u de <xref:System.Windows.Forms.SendKeys>klasse moet worden gebruikt van de nieuwe implementatie door de volgende toepassingsinstelling toe te voegen aan het bestand app.config.</xref:System.Windows.Forms.SendKeys>   >> `<appSettings>` >> `<add key=&quot;SendKeys&quot; value=&quot;SendInput&quot;/>` >> `</appSettings>` >> Om af te dwingen de <xref:System.Windows.Forms.SendKeys>-klasse moet de vorige implementatie, gebruikt u de waarde `&quot;JournalHook&quot;` in plaats daarvan.</xref:System.Windows.Forms.SendKeys>"
  example:
  - "The following code example demonstrates how to use the Send method.To run the example, paste the following code in a form called Form1 containing a button called Button1. Ensure the click events are associated with their event-handling methods in this example. The button control's <xref:System.Windows.Forms.Control.TabIndex%2A> property should be set to 0. When the example is running, double-click the form to trigger the button's click event.  \n  \n [!code-cs[System.Windows.Forms.SendKeys#1](~/add/codesnippet/csharp/m-system.windows.forms.s_9_1.cs)]\n [!code-cpp[System.Windows.Forms.SendKeys#1](~/add/codesnippet/cpp/m-system.windows.forms.s_9_1.cpp)]\n [!code-vb[System.Windows.Forms.SendKeys#1](~/add/codesnippet/visualbasic/m-system.windows.forms.s_9_1.vb)]"
  syntax:
    content: public static void Send (string keys);
    parameters:
    - id: keys
      type: System.String
      description: "De tekenreeks van toetsaanslagen te verzenden."
  overload: System.Windows.Forms.SendKeys.Send*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een actieve toepassing toetsaanslagen te verzenden."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>keys</code>vertegenwoordigt geen geldige toetsaanslagen"
  platform:
  - net462
- uid: System.Windows.Forms.SendKeys.SendWait(System.String)
  id: SendWait(System.String)
  parent: System.Windows.Forms.SendKeys
  langs:
  - csharp
  name: SendWait(String)
  nameWithType: SendKeys.SendWait(String)
  fullName: System.Windows.Forms.SendKeys.SendWait(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "De opgegeven sleutels verzendt naar de actieve toepassing en wordt er gewacht totdat de berichten worden verwerkt."
  remarks: "Gebruik SendWait toetsaanslagen of combinaties van toetsaanslagen verzenden naar de actieve toepassing en wacht totdat de toetsaanslag berichten worden verwerkt. Deze methode kunt u toetsaanslagen verzenden naar een toepassing en wacht tot alle processen die zijn gestart door de toetsaanslagen worden voltooid. Dit kan zijn van belang als de andere toepassing moet zijn voltooid voordat de toepassing kan worden voortgezet.      > [!NOTE] > Omdat er geen beheerde methode is voor het activeren van een andere toepassing, kunt u deze klasse in de huidige toepassing gebruiken of moet u gebruiken systeemeigen Windows-methoden, zoals `FindWindow` en `SetForegroundWindow`, gedwongen focus op andere toepassingen.      > [!NOTE] > De <xref:System.Windows.Forms.SendKeys>klasse is bijgewerkt voor de .NET Framework 3.0 voor het gebruik ervan in toepassingen die worden uitgevoerd op Windows Vista inschakelen.</xref:System.Windows.Forms.SendKeys> De verbeterde beveiliging van Windows Vista (bekend als User Account Control of UAC) voorkomt u dat de vorige implementatie werkt zoals verwacht.   >> De <xref:System.Windows.Forms.SendKeys>klasse is vatbaar voor problemen met timing, waarvan sommige ontwikkelaars omzeilen hebben gehad.</xref:System.Windows.Forms.SendKeys> De implementatie van de bijgewerkte nog steeds gevoelig voor problemen met timing, maar is iets sneller en zijn mogelijk wijzigingen aan de tijdelijke oplossingen. De <xref:System.Windows.Forms.SendKeys>klasse probeert eerst te gebruiken de vorige implementatie en als dat mislukt, gebruikt u de nieuwe implementatie.</xref:System.Windows.Forms.SendKeys> Als gevolg hiervan de <xref:System.Windows.Forms.SendKeys>klasse mogelijk anders werken op verschillende besturingssystemen.</xref:System.Windows.Forms.SendKeys> Bijkomend, wanneer de <xref:System.Windows.Forms.SendKeys>klasse maakt gebruik van de nieuwe implementatie, de methode SendWait niet wachten berichten worden verwerkt wanneer ze worden verzonden naar een ander proces.</xref:System.Windows.Forms.SendKeys>   >> Als uw toepassing op consistent gedrag ongeacht het besturingssysteem vertrouwt, dwingt u de <xref:System.Windows.Forms.SendKeys>klasse moet worden gebruikt van de nieuwe implementatie door de volgende toepassingsinstelling toe te voegen aan het bestand app.config.</xref:System.Windows.Forms.SendKeys>   >> `<appSettings>` >> `<add key=&quot;SendKeys&quot; value=&quot;SendInput&quot;/>` >> `</appSettings>` >> Om af te dwingen de <xref:System.Windows.Forms.SendKeys>-klasse moet de vorige implementatie, gebruikt u de waarde `&quot;JournalHook&quot;` in plaats daarvan.</xref:System.Windows.Forms.SendKeys>"
  syntax:
    content: public static void SendWait (string keys);
    parameters:
    - id: keys
      type: System.String
      description: "De tekenreeks van toetsaanslagen te verzenden."
  overload: System.Windows.Forms.SendKeys.SendWait*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Forms.SendKeys.Flush
  parent: System.Windows.Forms.SendKeys
  isExternal: false
  name: Flush()
  nameWithType: SendKeys.Flush()
  fullName: System.Windows.Forms.SendKeys.Flush()
- uid: System.Windows.Forms.SendKeys.Send(System.String)
  parent: System.Windows.Forms.SendKeys
  isExternal: false
  name: Send(String)
  nameWithType: SendKeys.Send(String)
  fullName: System.Windows.Forms.SendKeys.Send(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.SendKeys.SendWait(System.String)
  parent: System.Windows.Forms.SendKeys
  isExternal: false
  name: SendWait(String)
  nameWithType: SendKeys.SendWait(String)
  fullName: System.Windows.Forms.SendKeys.SendWait(String)
- uid: System.Windows.Forms.SendKeys.Flush*
  parent: System.Windows.Forms.SendKeys
  isExternal: false
  name: Flush
  nameWithType: SendKeys.Flush
- uid: System.Windows.Forms.SendKeys.Send*
  parent: System.Windows.Forms.SendKeys
  isExternal: false
  name: Send
  nameWithType: SendKeys.Send
- uid: System.Windows.Forms.SendKeys.SendWait*
  parent: System.Windows.Forms.SendKeys
  isExternal: false
  name: SendWait
  nameWithType: SendKeys.SendWait
