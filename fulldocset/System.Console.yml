### YamlMime:ManagedReference
items:
- uid: System.Console
  id: Console
  children:
  - System.Console.BackgroundColor
  - System.Console.Beep
  - System.Console.Beep(System.Int32,System.Int32)
  - System.Console.BufferHeight
  - System.Console.BufferWidth
  - System.Console.CancelKeyPress
  - System.Console.CapsLock
  - System.Console.Clear
  - System.Console.CursorLeft
  - System.Console.CursorSize
  - System.Console.CursorTop
  - System.Console.CursorVisible
  - System.Console.Error
  - System.Console.ForegroundColor
  - System.Console.In
  - System.Console.InputEncoding
  - System.Console.IsErrorRedirected
  - System.Console.IsInputRedirected
  - System.Console.IsOutputRedirected
  - System.Console.KeyAvailable
  - System.Console.LargestWindowHeight
  - System.Console.LargestWindowWidth
  - System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  - System.Console.NumberLock
  - System.Console.OpenStandardError
  - System.Console.OpenStandardError(System.Int32)
  - System.Console.OpenStandardInput
  - System.Console.OpenStandardInput(System.Int32)
  - System.Console.OpenStandardOutput
  - System.Console.OpenStandardOutput(System.Int32)
  - System.Console.Out
  - System.Console.OutputEncoding
  - System.Console.Read
  - System.Console.ReadKey
  - System.Console.ReadKey(System.Boolean)
  - System.Console.ReadLine
  - System.Console.ResetColor
  - System.Console.SetBufferSize(System.Int32,System.Int32)
  - System.Console.SetCursorPosition(System.Int32,System.Int32)
  - System.Console.SetError(System.IO.TextWriter)
  - System.Console.SetIn(System.IO.TextReader)
  - System.Console.SetOut(System.IO.TextWriter)
  - System.Console.SetWindowPosition(System.Int32,System.Int32)
  - System.Console.SetWindowSize(System.Int32,System.Int32)
  - System.Console.Title
  - System.Console.TreatControlCAsInput
  - System.Console.WindowHeight
  - System.Console.WindowLeft
  - System.Console.WindowTop
  - System.Console.WindowWidth
  - System.Console.Write(System.Boolean)
  - System.Console.Write(System.Char)
  - System.Console.Write(System.Char[])
  - System.Console.Write(System.Decimal)
  - System.Console.Write(System.Double)
  - System.Console.Write(System.Int32)
  - System.Console.Write(System.Int64)
  - System.Console.Write(System.Object)
  - System.Console.Write(System.Single)
  - System.Console.Write(System.String)
  - System.Console.Write(System.UInt32)
  - System.Console.Write(System.UInt64)
  - System.Console.Write(System.String,System.Object)
  - System.Console.Write(System.String,System.Object[])
  - System.Console.Write(System.Char[],System.Int32,System.Int32)
  - System.Console.Write(System.String,System.Object,System.Object)
  - System.Console.Write(System.String,System.Object,System.Object,System.Object)
  - System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)
  - System.Console.WriteLine
  - System.Console.WriteLine(System.Boolean)
  - System.Console.WriteLine(System.Char)
  - System.Console.WriteLine(System.Char[])
  - System.Console.WriteLine(System.Decimal)
  - System.Console.WriteLine(System.Double)
  - System.Console.WriteLine(System.Int32)
  - System.Console.WriteLine(System.Int64)
  - System.Console.WriteLine(System.Object)
  - System.Console.WriteLine(System.Single)
  - System.Console.WriteLine(System.String)
  - System.Console.WriteLine(System.UInt32)
  - System.Console.WriteLine(System.UInt64)
  - System.Console.WriteLine(System.String,System.Object)
  - System.Console.WriteLine(System.String,System.Object[])
  - System.Console.WriteLine(System.Char[],System.Int32,System.Int32)
  - System.Console.WriteLine(System.String,System.Object,System.Object)
  - System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)
  - System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)
  langs:
  - csharp
  name: Console
  nameWithType: Console
  fullName: System.Console
  type: Class
  summary: "Hiermee geeft u de standaard invoer, uitvoer en fout stromen voor consoletoepassingen. Deze klasse kan niet worden overgenomen.       Om te bladeren naar de broncode van .NET Framework voor dit type, Zie de [Verwijzingsbron](http://referencesource.microsoft.com/#mscorlib/system/console.cs#f907d79481da6ba4)."
  remarks: "> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/console.cs#f907d79481da6ba4). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n The console is an operating system window where users interact with the operating system or with a text-based console application by entering text input through the computer keyboard, and by reading text output from the computer terminal. For example, in the Windows operating system, the console is called the Command Prompt window and accepts MS-DOS commands. The Console class provides basic support for applications that read characters from, and write characters to, the console.  \n  \n For information about developing with the Console class, see the following sections:  \n  \n-   [Console I/O Streams](#Streams)  \n  \n-   [Screen Buffer and Console Window](#Buffer)  \n  \n-   [Unicode Support for the Console](#Unicode)  \n  \n-   [Common Operations](#Operations)  \n  \n-   [.NET Core Notes](#Core)  \n  \n<a name=\"Streams\"></a>   \n## Console I/O Streams  \n When a console application starts, the operating system automatically associates three I/O streams with the console: standard input stream, standard output stream, and standard error output stream. Your application can read user input from the standard input stream; write normal data to the standard output stream; and write error data to the standard error output stream. These streams are presented to your application as the values of the <xref:System.Console.In%2A?displayProperty=fullName>, <xref:System.Console.Out%2A?displayProperty=fullName>, and <xref:System.Console.Error%2A?displayProperty=fullName> properties.  \n  \n By default, the value of the <xref:System.Console.In%2A> property is a <xref:System.IO.TextReader?displayProperty=fullName> object that represents the keyboard, and the values of the <xref:System.Console.Out%2A> and <xref:System.Console.Error%2A> properties are <xref:System.IO.TextWriter?displayProperty=fullName> objects that represent a console window. However, you can set these properties to streams that do not represent the console window or keyboard; for example, you can set these properties to streams that represent files. To redirect the standard input, standard output, or standard error stream, call the <xref:System.Console.SetIn%2A?displayProperty=fullName>, <xref:System.Console.SetOut%2A?displayProperty=fullName>, or <xref:System.Console.SetError%2A?displayProperty=fullName> method, respectively. I/O operations that use these streams are synchronized, which means that multiple threads can read from, or write to, the streams. This means that methods that are ordinarily asynchronous, such as <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName>, execute synchronously if the object represents a console stream.  \n  \n> [!NOTE]\n>  Do not use the Console class to display output in unattended applications, such as server applications. Calls to methods such as <xref:System.Console.Write%2A?displayProperty=fullName> and <xref:System.Console.WriteLine%2A?displayProperty=fullName> have no effect in GUI applications.  \n  \n Console class members that work normally when the underlying stream is directed to a console might throw an exception if the stream is redirected, for example, to a file. Program your application to catch <xref:System.IO.IOException?displayProperty=fullName> exceptions if you redirect a standard stream. You can also use the <xref:System.Console.IsOutputRedirected%2A>, <xref:System.Console.IsInputRedirected%2A>, and <xref:System.Console.IsErrorRedirected%2A> properties to determine whether a standard stream is redirected before performing an operation that throws an <xref:System.IO.IOException?displayProperty=fullName> exception.  \n  \n It is sometimes useful to explicitly call the members of the stream objects represented by the <xref:System.Console.In%2A>, <xref:System.Console.Out%2A>, and <xref:System.Console.Error%2A> properties. For example, by default, the <xref:System.Console.ReadLine%2A?displayProperty=fullName> method reads input from the standard input stream. Similarly, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method writes data to the standard output stream, and the data is followed by the default line termination string, which is  a carriage return and line feed (\"\\r\\n\"). However, the Console class does not provide a corresponding method to write data to the standard error output stream, or a property to change the line termination string for data written to that stream.  \n  \n You can solve this problem by setting the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property of the <xref:System.Console.Out%2A> or <xref:System.Console.Error%2A> property to another line termination string. For example, the following C# statement sets the line termination string for the standard error output stream to two carriage return and line feed sequences:  \n  \n `Console.Error.NewLine = \"\\r\\n\\r\\n\";`  \n  \n You can then explicitly call the <xref:System.IO.TextWriter.WriteLine%2A> method of the error output stream object, as in the following C# statement:  \n  \n `Console.Error.WriteLine();`  \n  \n<a name=\"Buffer\"></a>   \n## Screen Buffer and Console Window  \n Two closely related features of the console are the screen buffer and the console window. Text is actually read from or written to streams owned by the console, but appear to be read from or written to an area owned by the console called the screen buffer. The screen buffer is an attribute of the console, and is organized as a rectangular grid of rows and columns where each grid intersection, or character cell, can contain a character. Each character has its own foreground color, and each character cell has its own background color.  \n  \n The screen buffer is viewed through a rectangular region called the console window. The console window is another attribute of the console; it is not the console itself, which is an operating system window. The console window is arranged in rows and columns, is less than or equal to the size of the screen buffer, and can be moved to view different areas of the underlying screen buffer. If the screen buffer is larger than the console window, the console automatically displays scroll bars so the console window can be repositioned over the screen buffer area.  \n  \n A cursor indicates the screen buffer position where text is currently read or written. The cursor can be hidden or made visible, and its height can be changed. If the cursor is visible, the console window position is moved automatically so the cursor is always in view.  \n  \n The origin for character cell coordinates in the screen buffer is the upper left corner, and the positions of the cursor and the console window are measured relative to that origin. Use zero-based indexes to specify positions; that is, specify the topmost row as row 0, and the leftmost column as column 0. The maximum value for the row and column indexes is <xref:System.Int16.MaxValue?displayProperty=fullName>.  \n  \n<a name=\"Unicode\"></a>   \n## Unicode Support for the Console  \n In general, the console reads input and writes output by using the current console code page, which the system locale defines by default. A code page can handle only a subset of available Unicode characters, so if you try to display characters that are not mapped by a particular code page, the console won't be able to display all characters or represent them accurately. The following example illustrates this problem. It tries to display the characters of the Cyrillic alphabet from U+0410 to U+044F to the console. If you run the example on a system that uses console code page 437, each character is replaced by a question mark (?), because Cyrillic characters do not map to the characters in code page 437.  \n  \n [!code-cs[System.Console.Class#1](~/add/codesnippet/csharp/t-system.console_1.cs)]\n [!code-vb[System.Console.Class#1](~/add/codesnippet/visualbasic/t-system.console_1.vb)]  \n  \n In addition to supporting code pages, the Console class supports UTF-8 encoding with the <xref:System.Text.UTF8Encoding> class. Beginning with the .NET Framework 4.5, the Console class also supports UTF-16 encoding with the <xref:System.Text.UnicodeEncoding> class. To display Unicode characters to the console. you set the <xref:System.Console.OutputEncoding%2A> property to either <xref:System.Text.UTF8Encoding> or  <xref:System.Text.UnicodeEncoding>.  \n  \n Support for Unicode characters requires the encoder to recognize a particular Unicode character, and also requires a font that has the glyphs needed to render that character. To successfully display Unicode characters to the console, the console font must be set to a non-raster or TrueType font such as Consolas or Lucida Console. The following example shows how you can programmatically change the font from a raster font to Lucida Console.  \n  \n [!code-cs[System.Console.Class.Unsafe#3](~/add/codesnippet/csharp/setfont1/setfont1.cs#3)]\n [!code-vb[System.Console.Class.Unsafe#3](~/add/codesnippet/visualbasic/t-system.console_2.vb)]  \n  \n However, TrueType fonts can display only a subset of glyphs. For example, the Lucida Console font displays only 643 of the approximately 64,000 available characters from U+0021 to U+FB02. To see which characters a particular font supports, open the **Fonts** applet in Control Panel, choose the **Find a character** option, and choose the font whose character set you'd like to examine in the **Font** list of the **Character Map** window.  \n  \n Windows uses font linking to display glyphs that are not available in a particular font. For information about font linking to display additional character sets, see [Globalization Step-by-Step: Fonts](http://go.microsoft.com/fwlink/?LinkId=229111). Linked fonts are defined in the HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\FontLink\\SystemLink subkey of the registry. Each entry associated with this subkey corresponds to the name of a base font, and its value is a string array that defines the font files and the fonts that are linked to the base font. Each member of the array defines a linked font and takes the form *font-file-name*,*font-name*. The following example illustrates how you can programmatically define a linked font named SimSun found in a font file named simsun.ttc that displays Simplified Han characters.  \n  \n [!code-cs[System.Console.Class#2](~/add/codesnippet/csharp/t-system.console_3.cs)]\n [!code-vb[System.Console.Class#2](~/add/codesnippet/visualbasic/t-system.console_3.vb)]  \n  \n Unicode support for the console has the following limitations:  \n  \n-   UTF-32 encoding is not supported. The only supported Unicode encodings are UTF-8 and UTF-16, which are represented by the <xref:System.Text.UTF8Encoding> and <xref:System.Text.UnicodeEncoding> classes, respectively.  \n  \n-   Bidirectional output is not supported.  \n  \n-   Display of characters outside the Basic Multilingual Plane (that is, of surrogate pairs) is not supported, even if they are defined in a linked font file.  \n  \n-   Display of characters in complex scripts is not supported.  \n  \n-   Combining character sequences (that is, characters that consist of a base character and one or more combining characters) are displayed as separate characters. To work around this limitation, you can normalize the string to be displayed by calling the <xref:System.String.Normalize%2A?displayProperty=fullName> method before sending output to the console. In the following example, a string that contains the combining character sequence U+0061 U+0308 is displayed to the console as two characters before the output string is normalized, and as a single character after the <xref:System.String.Normalize%2A?displayProperty=fullName> method is called.  \n  \n     [!code-cs[System.Console.Class#5](~/add/codesnippet/csharp/t-system.console_4.cs)]\n     [!code-vb[System.Console.Class#5](~/add/codesnippet/visualbasic/t-system.console_4.vb)]  \n  \n     Note that normalization is a viable solution only if the Unicode standard for the character includes a pre-composed form that corresponds to a particular combining character sequence.  \n  \n-   If a font provides a glyph for a code point in the private use area, that glyph will be displayed. However, because characters in the private use area are application-specific, this may not be the expected glyph.  \n  \n The following example displays a range of Unicode characters to the console. The example accepts three command-line parameters: the start of the range to display, the end of the range to display, and whether to use the current console encoding (`false`) or UTF-16 encoding (`true`). It assumes that the console is using a TrueType font.  \n  \n [!code-cs[System.Console.Class#4](~/add/codesnippet/csharp/t-system.console_5.cs)]\n [!code-vb[System.Console.Class#4](~/add/codesnippet/visualbasic/t-system.console_5.vb)]  \n  \n<a name=\"Operations\"></a>   \n## Common Operations  \n The Console class contains the following methods for reading console input and writing console output:  \n  \n-   The overloads of the <xref:System.Console.ReadKey%2A> method read an individual character.  \n  \n-   The <xref:System.Console.ReadLine%2A> method reads an entire line of input.  \n  \n-   The <xref:System.Console.Write%2A> method overloads convert an instance of a value type, an array of characters, or a set of objects to a formatted or unformatted string, and then write that string to the console.  \n  \n-   A parallel set of <xref:System.Console.WriteLine%2A> method overloads output the same string as the <xref:System.Console.Write%2A> overloads but also add a line termination string.  \n  \n The Console class also contains methods and properties to perform the following operations:  \n  \n-   Get or set the size of the screen buffer. The <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties let you get or set the buffer height and width, respectively, and the <xref:System.Console.SetBufferSize%2A> method lets you set the buffer size in a single method call.  \n  \n-   Get or set the size of the console window. The <xref:System.Console.WindowHeight%2A> and <xref:System.Console.WindowWidth%2A> properties let you get or set the window height and width, respectively, and the <xref:System.Console.SetWindowSize%2A> method lets you set the window size in a single method call.  \n  \n-   Get or set the size of the cursor. The <xref:System.Console.CursorSize%2A> property specifies the height of the cursor in a character cell.  \n  \n-   Get or set the position of the console window relative to the screen buffer. The <xref:System.Console.WindowTop%2A> and <xref:System.Console.WindowLeft%2A> properties let you get or set the top row and leftmost column of the screen buffer that appears in the console window, and the <xref:System.Console.SetWindowPosition%2A> method lets you set these values in a single method call.  \n  \n-   Get or set the position of the cursor by getting or setting the <xref:System.Console.CursorTop%2A> and <xref:System.Console.CursorLeft%2A> properties, or set the position of the cursor by calling the <xref:System.Console.SetCursorPosition%2A> method.  \n  \n-   Move or clear data in the screen buffer by calling the <xref:System.Console.MoveBufferArea%2A> or <xref:System.Console.Clear%2A> method.  \n  \n-   Get or set the foreground and background colors by using the <xref:System.Console.ForegroundColor%2A> and <xref:System.Console.BackgroundColor%2A> properties, or reset the background and foreground to their default colors by calling the <xref:System.Console.ResetColor%2A> method.  \n  \n-   Play the sound of a beep through the console speaker by calling the <xref:System.Console.Beep%2A> method.  \n  \n<a name=\"Core\"></a>   \n## [!INCLUDE[net_core](~/add/includes/net-core-md.md)] Notes  \n In the .NET Framework on the desktop, the Console class uses the encoding returned by `GetConsoleCP` and `GetConsoleOutputCP`, which typically is a code page encoding. For example code, on systems whose culture is English (United States), code page 437 is the encoding that is used by default. However, [!INCLUDE[net_core](~/add/includes/net-core-md.md)] may make only a limited subset of these encodings available. Where this is the case, <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> is used as the default encoding for the console.  \n  \n If your app depends on specific code page encodings, you can still make them available by doing the following *before* you call any Console methods:  \n  \n1.  Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.  \n  \n2.  Retrieve the <xref:System.Text.EncodingProvider> object from the <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=fullName> property.  \n  \n3.  Pass the <xref:System.Text.EncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=fullName> method to make the additional encodings supported by the encoding provider available.  \n  \n The Console class will then automatically use the default system encoding rather than UTF8, provided that you have registered the encoding provider before calling any Console output methods."
  example:
  - "The following example demonstrates how to read data from, and write data to, the standard input and output streams. Note that these streams can be redirected by using the <xref:System.Console.SetIn%2A> and <xref:System.Console.SetOut%2A> methods.  \n  \n [!code-cs[Classic Console Example#1](~/add/codesnippet/csharp/t-system.console_6.cs)]\n [!code-cpp[Classic Console Example#1](~/add/codesnippet/cpp/t-system.console_6.cpp)]\n [!code-vb[Classic Console Example#1](~/add/codesnippet/visualbasic/t-system.console_6.vb)]"
  syntax:
    content: public static class Console
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Console.BackgroundColor
  id: BackgroundColor
  parent: System.Console
  langs:
  - csharp
  name: BackgroundColor
  nameWithType: Console.BackgroundColor
  fullName: System.Console.BackgroundColor
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de achtergrondkleur van de console."
  remarks: "Een wijziging in de eigenschap BackgroundColor beïnvloedt alleen de uitvoer die is geschreven naar afzonderlijke tekencellen nadat de achtergrondkleur wordt gewijzigd. Wilt de achtergrondkleur van het consolevenster in zijn geheel wijzigen, stelt u de eigenschap BackgroundColor en de aanroep van de <xref:System.Console.Clear%2A>methode.</xref:System.Console.Clear%2A> Het volgende voorbeeld bevat een afbeelding.       [!code-vb[System.Console.BackgroundColor#1](~/add/codesnippet/visualbasic/p-system.console.backgro_1.vb)][!code-cs[System.Console.BackgroundColor#1](~/add/codesnippet/csharp/p-system.console.backgro_1.cs) ] een get-bewerking voor een toepassing op basis van Windows, waarin een console niet bestaat, retourneert <xref:System.ConsoleColor?displayProperty=fullName>.</xref:System.ConsoleColor?displayProperty=fullName>  "
  example:
  - "The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the BackgroundColor and <xref:System.Console.ForegroundColor%2A> properties to variables. It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground. (If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.  \n  \n [!code-vb[System.ConsoleColor#1](~/add/codesnippet/visualbasic/p-system.console.backgro_2.vb)]\n [!code-cs[System.ConsoleColor#1](~/add/codesnippet/csharp/p-system.console.backgro_2.cs)]"
  syntax:
    content: public static ConsoleColor BackgroundColor { get; set; }
    return:
      type: System.ConsoleColor
      description: "Een waarde die de achtergrondkleur van de console weergegeven bepaalt. dat wil zeggen, de kleur die achter elke teken wordt weergegeven. De standaardwaarde is zwart."
  overload: System.Console.BackgroundColor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De kleur die is opgegeven in een set-bewerking is niet geldig lid van <xref href=&quot;System.ConsoleColor&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De gebruiker heeft geen machtiging voor deze actie."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.Beep
  id: Beep
  parent: System.Console
  langs:
  - csharp
  name: Beep()
  nameWithType: Console.Beep()
  fullName: System.Console.Beep()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Het geluid van een signaal via de console spreker speelt."
  remarks: "Standaard wordt het geluid afgespeeld met een frequentie van 800 hertz gedurende een periode van 200 milliseconden.      > [!NOTE] > De <xref:System.Console.Beep%2A>methode wordt niet ondersteund op de 64-bits versies van Windows Vista en Windows XP.</xref:System.Console.Beep%2A>       Geluid verpakt in een aanroep van de Windows [piepgeluid laat horen functie](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx). Of geluid een geluid op versies van Windows voordat Windows 7 produceert, is afhankelijk van de aanwezigheid van een chip 8254 programmeerbare interval-timer. Vanaf Windows 7 is deze afhankelijk is van het standaardgeluidsapparaat."
  example:
  - "The following example demonstrates the Beep method. The example accepts a number from 1 through 9 as a command line argument, and plays the beep that number of times.  \n  \n [!code-cs[console.beep#1](~/add/codesnippet/csharp/m-system.console.beep_1.cs)]\n [!code-cpp[console.beep#1](~/add/codesnippet/cpp/m-system.console.beep_1.cpp)]\n [!code-vb[console.beep#1](~/add/codesnippet/visualbasic/m-system.console.beep_1.vb)]"
  syntax:
    content: public static void Beep ();
    parameters: []
  overload: System.Console.Beep*
  exceptions:
  - type: System.Security.HostProtectionException
    commentId: T:System.Security.HostProtectionException
    description: "Deze methode is uitgevoerd op een server, zoals SQL Server, die geen toegang tot een gebruikersinterface staat."
  platform:
  - net462
- uid: System.Console.Beep(System.Int32,System.Int32)
  id: Beep(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: Beep(Int32,Int32)
  nameWithType: Console.Beep(Int32,Int32)
  fullName: System.Console.Beep(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Het geluid van een signaal van een opgegeven frequentie en duur via de console spreker speelt."
  remarks: "<xref:System.Console.Beep%2A>verpakt een aanroep van de Windows [piepgeluid laat horen functie](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx).</xref:System.Console.Beep%2A> Of <xref:System.Console.Beep%2A>produceert een geluid op versies van Windows voordat Windows 7, is afhankelijk van de aanwezigheid van een 8254 programmeerbare interval-timer-chip.</xref:System.Console.Beep%2A> Vanaf Windows 7 is deze afhankelijk is van het standaardgeluidsapparaat.      > [!NOTE] > De <xref:System.Console.Beep%2A>methode wordt niet ondersteund op de 64-bits versies van Windows Vista en Windows XP.</xref:System.Console.Beep%2A>"
  example:
  - "This example demonstrates the Beep method by playing the first few notes of a song through the console speaker.  \n  \n [!code-cpp[console.beep2#1](~/add/codesnippet/cpp/m-system.console.beep-sy_1.cpp)]\n [!code-vb[console.beep2#1](~/add/codesnippet/visualbasic/m-system.console.beep-sy_1.vb)]\n [!code-cs[console.beep2#1](~/add/codesnippet/csharp/m-system.console.beep-sy_1.cs)]"
  syntax:
    content: public static void Beep (int frequency, int duration);
    parameters:
    - id: frequency
      type: System.Int32
      description: "De frequentie van het geluid, variërend van 37 tot 32767 hertz."
    - id: duration
      type: System.Int32
      description: "De duur van het geluid gemeten in milliseconden."
  overload: System.Console.Beep*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>frequency</code>is kleiner dan 37 of meer dan 32767 hertz.       - of - <code>duration</code> is kleiner dan of gelijk zijn aan nul."
  - type: System.Security.HostProtectionException
    commentId: T:System.Security.HostProtectionException
    description: "Deze methode is uitgevoerd op een server, zoals SQL Server, die geen toegang tot de console staat."
  platform:
  - net462
- uid: System.Console.BufferHeight
  id: BufferHeight
  parent: System.Console
  langs:
  - csharp
  name: BufferHeight
  nameWithType: Console.BufferHeight
  fullName: System.Console.BufferHeight
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de hoogte van het buffergebied."
  remarks: "Deze eigenschap bepaalt het aantal rijen (of regels) opgeslagen in de buffer die is geopend door een modus consolevenster. Daarentegen de <xref:System.Console.WindowHeight%2A>eigenschap definieert het aantal rijen die daadwerkelijk worden weergegeven in het consolevenster op een willekeurig moment.</xref:System.Console.WindowHeight%2A> Als het aantal rijen daadwerkelijk naar de buffer wordt geschreven groter is dan het aantal rijen dat is gedefinieerd door de <xref:System.Console.WindowHeight%2A>eigenschap, het venster verticaal kan worden geschoven zodat deze wordt weergegeven een aaneengesloten aantal rijen dat gelijk zijn aan de <xref:System.Console.WindowHeight%2A>eigenschap en weet zich ergens in de buffer.</xref:System.Console.WindowHeight%2A> </xref:System.Console.WindowHeight%2A>       Als een set-bewerking vermindert het de waarde van de eigenschap BufferHeight, worden de bovenste regels verwijderd. Bijvoorbeeld, als het aantal regels is verkort van 300 250, 0 t/m 49 regels worden verwijderd en de bestaande regels 50 en 299 worden regels van 0 tot en met 249."
  example:
  - "This example demonstrates the BufferHeight and <xref:System.Console.BufferWidth%2A> properties. The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.  \n  \n [!code-cs[console.bufferHW#1](~/add/codesnippet/csharp/p-system.console.bufferh_1.cs)]\n [!code-cpp[console.bufferHW#1](~/add/codesnippet/cpp/p-system.console.bufferh_1.cpp)]\n [!code-vb[console.bufferHW#1](~/add/codesnippet/visualbasic/p-system.console.bufferh_1.vb)]"
  syntax:
    content: public static int BufferHeight { get; set; }
    return:
      type: System.Int32
      description: "De huidige hoogte in rijen van de buffergebied."
  overload: System.Console.BufferHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De waarde in een set-bewerking is kleiner dan of gelijk is aan nul.       - of - de waarde in een set-bewerking is groter dan of gelijk zijn aan &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       - of - de waarde in een set-bewerking is minder dan <> </> *> + <> </> *>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De gebruiker heeft geen machtiging voor deze actie."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.BufferWidth
  id: BufferWidth
  parent: System.Console
  langs:
  - csharp
  name: BufferWidth
  nameWithType: Console.BufferWidth
  fullName: System.Console.BufferWidth
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de breedte van de buffergebied."
  remarks: "Als een set-bewerking vermindert het de waarde van de eigenschap BufferWidth, worden de meest rechtse kolommen verwijderd. Bijvoorbeeld, als het aantal kolommen is verminderd van 80 tot 60, kolommen 60 en 79 van elke rij verwijderd."
  example:
  - "This example demonstrates the <xref:System.Console.BufferHeight%2A> and BufferWidth properties. The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.  \n  \n [!code-cs[console.bufferHW#1](~/add/codesnippet/csharp/p-system.console.bufferw_1.cs)]\n [!code-cpp[console.bufferHW#1](~/add/codesnippet/cpp/p-system.console.bufferw_1.cpp)]\n [!code-vb[console.bufferHW#1](~/add/codesnippet/visualbasic/p-system.console.bufferw_1.vb)]"
  syntax:
    content: public static int BufferWidth { get; set; }
    return:
      type: System.Int32
      description: "De huidige breedte in kolommen van het buffergebied."
  overload: System.Console.BufferWidth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De waarde in een set-bewerking is kleiner dan of gelijk is aan nul.       - of - de waarde in een set-bewerking is groter dan of gelijk zijn aan &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       - of - de waarde in een set-bewerking is minder dan <> </> *> + <> </> *>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De gebruiker heeft geen machtiging voor deze actie."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.CancelKeyPress
  id: CancelKeyPress
  parent: System.Console
  langs:
  - csharp
  name: CancelKeyPress
  nameWithType: Console.CancelKeyPress
  fullName: System.Console.CancelKeyPress
  type: Event
  assemblies:
  - mscorlib
  namespace: System
  summary: "Deze gebeurtenis treedt op wanneer de <xref href=&quot;System.ConsoleModifiers&quot;> </xref> aanpassingsfunctie sleutel (Ctrl) en ofwel de <xref href=&quot;System.ConsoleKey&quot;> </xref> console sleutel (C) of einde tegelijkertijd worden ingedrukt (Ctrl + C of Ctrl + Break)."
  remarks: "Deze gebeurtenis wordt gebruikt in combinatie met <xref:System.ConsoleCancelEventHandler?displayProperty=fullName>en <xref:System.ConsoleCancelEventArgs?displayProperty=fullName>.</xref:System.ConsoleCancelEventArgs?displayProperty=fullName> </xref:System.ConsoleCancelEventHandler?displayProperty=fullName> De gebeurtenis CancelKeyPress kan een consoletoepassing worden onderschept het signaal Ctrl + C zodat de gebeurtenis-handler beslissen of u kunt wilt blijven uitvoeren of te beëindigen. Zie voor meer informatie over het verwerken van gebeurtenissen [verwerking en gebeurtenissen verhogen](~/add/includes/ajax-current-ext-md.md).       Wanneer de gebruiker indrukt Ctrl + C of Ctrl + Break, de CancelKeyPress gebeurtenis wordt geactiveerd en de toepassing <xref:System.ConsoleCancelEventHandler>gebeurtenis-handler wordt uitgevoerd.</xref:System.ConsoleCancelEventHandler> De gebeurtenis-handler wordt doorgegeven een <xref:System.ConsoleCancelEventArgs>object waarvoor twee nuttige eigenschappen:- <xref:System.ConsoleCancelEventArgs.SpecialKey%2A>, waarmee u om te bepalen of de handler als gevolg van de gebruiker op Ctrl + C drukken is aangeroepen (de waarde van de eigenschap <xref:System.ConsoleSpecialKey?displayProperty=fullName>) of Ctrl + Break (de eigenschapswaarde is <xref:System.ConsoleSpecialKey?displayProperty=fullName>).</xref:System.ConsoleSpecialKey?displayProperty=fullName> </xref:System.ConsoleSpecialKey?displayProperty=fullName> </xref:System.ConsoleCancelEventArgs.SpecialKey%2A> </xref:System.ConsoleCancelEventArgs>      - <xref:System.ConsoleCancelEventArgs.Cancel%2A>, waarmee u om te bepalen hoe uw toepassing moet reageren op de gebruiker drukt u op Ctrl + C of Ctrl + Break.</xref:System.ConsoleCancelEventArgs.Cancel%2A> Standaard de <xref:System.ConsoleCancelEventArgs.Cancel%2A>eigenschap is `false`, welk oorzaken programma-uitvoering is beëindigd wanneer de gebeurtenis-handler wordt afgesloten.</xref:System.ConsoleCancelEventArgs.Cancel%2A> Het wijzigen van de eigenschap `true` geeft aan dat de toepassing uit te voeren moet worden voortgezet.      > [!TIP] > Als uw toepassing eenvoudige vereisten heeft, kunt u de <xref:System.Console.TreatControlCAsInput%2A>eigenschap in plaats van deze gebeurtenis.</xref:System.Console.TreatControlCAsInput%2A> Als deze eigenschap instelt op `false`, kunt u ervoor zorgen dat uw toepassing altijd is afgesloten indien de gebruiker op Ctrl + C drukt. Bij de instelling `true`, kunt u ervoor zorgen dat op Ctrl + C drukken wordt de toepassing niet beëindigd.       De gebeurtenis-handler voor deze gebeurtenis wordt uitgevoerd op een thread-pool-thread."
  example:
  - "The following example demonstrates how the CancelKeyPress event is used. When you press Ctrl+C, the read operation is interrupted and the `myHandler` event handler is invoked. Upon entry to the event handler, the <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=fullName> property is `false`, which means that the current process will terminate when the event handler terminates. However, the event handler sets the <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=fullName> property to `true`, which means that the process will not terminate and the read operation will resume.  \n  \n [!code-cs[console.cancelkeypress#1](~/add/codesnippet/csharp/e-system.console.cancelk_1.cs)]\n [!code-cpp[console.cancelkeypress#1](~/add/codesnippet/cpp/e-system.console.cancelk_1.cpp)]\n [!code-vb[console.cancelkeypress#1](~/add/codesnippet/visualbasic/e-system.console.cancelk_1.vb)]"
  syntax:
    content: public static event ConsoleCancelEventHandler CancelKeyPress;
    return:
      type: System.ConsoleCancelEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Console.CapsLock
  id: CapsLock
  parent: System.Console
  langs:
  - csharp
  name: CapsLock
  nameWithType: Console.CapsLock
  fullName: System.Console.CapsLock
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee wordt een waarde die aangeeft of de toetsenbord-wisselknop CAPS LOCK is ingeschakeld of uitgeschakeld."
  syntax:
    content: public static bool CapsLock { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als CAPS LOCK is ingeschakeld. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als CAPS LOCK is uitgeschakeld."
  overload: System.Console.CapsLock*
  exceptions: []
  platform:
  - net462
- uid: System.Console.Clear
  id: Clear
  parent: System.Console
  langs:
  - csharp
  name: Clear()
  nameWithType: Console.Clear()
  fullName: System.Console.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee wist u de buffer van de console en de bijbehorende consolevenster van weergave-informatie."
  remarks: "Het gebruik van de methode Clear is gelijk MS-DOS aanroepen `cls` opdracht in het opdrachtpromptvenster. Als de methode Clear wordt aangeroepen, wordt automatisch de cursor naar de linkerbovenhoek van het venster geschoven en de inhoud van de schermbuffer zijn ingesteld op de huidige voorgrond achtergrondkleuren met lege waarden.      > [!NOTE] > Poging tot het aanroepen van de methode Clear als een consoletoepassing uitvoer wordt omgeleid naar een bestand genereert een <xref:System.IO.IOException>.</xref:System.IO.IOException> Om dit te voorkomen, moet u altijd een aanroep van de methode Clear in inpakt een `try`...`catch` blok."
  example:
  - "The following example uses the Clear method to clear the console before it executes a loop, prompts the user to select a foreground and background color and to enter a string to display. If the user chooses not to exit the program, the console's original foreground and background colors are restored and the Clear method is called again before re-executing the loop.  \n  \n [!code-vb[System.Console.Clear#1](~/add/codesnippet/visualbasic/m-system.console.clear_1.vb)]\n [!code-cs[System.Console.Clear#1](~/add/codesnippet/csharp/m-system.console.clear_1.cs)]  \n  \n The example relies on a `GetKeyPress` method to validate the user's selection of a foreground and background color.  \n  \n This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and Clear methods. The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of \"+\", \"&#124;\", and \"-\" strings. Note that the rectangle could be drawn with fewer steps using a combination of other strings.  \n  \n [!code-cs[console.cursorLTS#1](~/add/codesnippet/csharp/m-system.console.clear_2.cs)]\n [!code-cpp[console.cursorLTS#1](~/add/codesnippet/cpp/m-system.console.clear_2.cpp)]\n [!code-vb[console.cursorLTS#1](~/add/codesnippet/visualbasic/m-system.console.clear_2.vb)]"
  syntax:
    content: public static void Clear ();
    parameters: []
  overload: System.Console.Clear*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.CursorLeft
  id: CursorLeft
  parent: System.Console
  langs:
  - csharp
  name: CursorLeft
  nameWithType: Console.CursorLeft
  fullName: System.Console.CursorLeft
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de kolompositie van de cursor in het buffergebied."
  remarks: ''
  example:
  - "This example demonstrates the CursorLeft and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods. The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of \"+\", \"&#124;\", and \"-\" strings. Note that the rectangle could be drawn with fewer steps using a combination of other strings.  \n  \n [!code-cs[console.cursorLTS#1](~/add/codesnippet/csharp/p-system.console.cursorl_1.cs)]\n [!code-cpp[console.cursorLTS#1](~/add/codesnippet/cpp/p-system.console.cursorl_1.cpp)]\n [!code-vb[console.cursorLTS#1](~/add/codesnippet/visualbasic/p-system.console.cursorl_1.vb)]"
  syntax:
    content: public static int CursorLeft { get; set; }
    return:
      type: System.Int32
      description: "De huidige positie in de kolommen van de cursor."
  overload: System.Console.CursorLeft*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De waarde in een set-bewerking is kleiner dan nul.       - of - de waarde in een set-bewerking is groter dan of gelijk zijn aan <xref:System.Console.BufferWidth*>.</xref:System.Console.BufferWidth*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De gebruiker heeft geen machtiging voor deze actie."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.CursorSize
  id: CursorSize
  parent: System.Console
  langs:
  - csharp
  name: CursorSize
  nameWithType: Console.CursorSize
  fullName: System.Console.CursorSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de hoogte van de cursor in een cel teken."
  remarks: "De vormgeving van de cursor varieert, variërend van een horizontale lijn aan de onderkant van de cel als waarde voor de eigenschap 1 naar het volledig invullen van de cel als waarde voor de eigenschap 100 is."
  example:
  - "This example demonstrates the CursorSize property. The example increases the size of the cursor each time any console key is pressed, then restores the cursor to its original size before terminating.  \n  \n [!code-cs[console.cursorsize#1](~/add/codesnippet/csharp/p-system.console.cursors_1.cs)]\n [!code-cpp[console.cursorsize#1](~/add/codesnippet/cpp/p-system.console.cursors_1.cpp)]\n [!code-vb[console.cursorsize#1](~/add/codesnippet/visualbasic/p-system.console.cursors_1.vb)]"
  syntax:
    content: public static int CursorSize { get; set; }
    return:
      type: System.Int32
      description: "De grootte van de cursor uitgedrukt als percentage van de hoogte van een cel teken. De eigenschap waarde kan variëren van 1 tot 100."
  overload: System.Console.CursorSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De waarde die is opgegeven in een set-bewerking is minder dan 1 of hoger zijn dan 100."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De gebruiker heeft geen machtiging voor deze actie."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.CursorTop
  id: CursorTop
  parent: System.Console
  langs:
  - csharp
  name: CursorTop
  nameWithType: Console.CursorTop
  fullName: System.Console.CursorTop
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de rijpositie van de cursor in het buffergebied."
  remarks: ''
  example:
  - "This example demonstrates the <xref:System.Console.CursorLeft%2A> and CursorTop properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods. The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of \"+\", \"&#124;\", and \"-\" strings. Note that the rectangle could be drawn with fewer steps using a combination of other strings.  \n  \n [!code-cs[console.cursorLTS#1](~/add/codesnippet/csharp/p-system.console.cursortop_1.cs)]\n [!code-cpp[console.cursorLTS#1](~/add/codesnippet/cpp/p-system.console.cursortop_1.cpp)]\n [!code-vb[console.cursorLTS#1](~/add/codesnippet/visualbasic/p-system.console.cursortop_1.vb)]"
  syntax:
    content: public static int CursorTop { get; set; }
    return:
      type: System.Int32
      description: "De huidige positie in de rijen van de cursor."
  overload: System.Console.CursorTop*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De waarde in een set-bewerking is kleiner dan nul.       - of - de waarde in een set-bewerking is groter dan of gelijk zijn aan <xref:System.Console.BufferHeight*>.</xref:System.Console.BufferHeight*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De gebruiker heeft geen machtiging voor deze actie."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.CursorVisible
  id: CursorVisible
  parent: System.Console
  langs:
  - csharp
  name: CursorVisible
  nameWithType: Console.CursorVisible
  fullName: System.Console.CursorVisible
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de cursor weergegeven wordt."
  remarks: ''
  example:
  - "This example demonstrates the CursorVisible property. The example makes the cursor visible if the first column of input is a '+' character or invisible if the input is a '-' character.  \n  \n [!code-cs[console.cursorvis#1](~/add/codesnippet/csharp/p-system.console.cursorv_1.cs)]\n [!code-vb[console.cursorvis#1](~/add/codesnippet/visualbasic/p-system.console.cursorv_1.vb)]\n [!code-cpp[console.cursorvis#1](~/add/codesnippet/cpp/p-system.console.cursorv_1.cpp)]"
  syntax:
    content: public static bool CursorVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de cursor zichtbaar; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.CursorVisible*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De gebruiker heeft geen machtiging voor deze actie."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.Error
  id: Error
  parent: System.Console
  langs:
  - csharp
  name: Error
  nameWithType: Console.Error
  fullName: System.Console.Error
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee wordt de uitvoerstroom standaardfout opgehaald."
  remarks: "Deze Standaardfoutstroom is standaard ingesteld op de console. Het kan worden ingesteld op een andere stroom met de <xref:System.Console.SetError%2A>methode.</xref:System.Console.SetError%2A> Nadat de Standaardfoutstroom wordt omgeleid, kunt u deze reacquired door het aanroepen van de <xref:System.Console.OpenStandardError%2A>methode.</xref:System.Console.OpenStandardError%2A>       In de consoletoepassingen waarvan de uitvoer informatief vaak wordt omgeleid naar een bestand, kan de Standaardfoutstroom beschikbaar via de eigenschap informatie naar de console weergeven, zelfs als uitvoer wordt omgeleid worden gebruikt. Het volgende voorbeeld wordt producttabellen voor 10 cijfers op een tijdstip beginnen met 1. Na elke set van 10 cijfers, wordt de eigenschap gebruikt voor de gebruiker wordt gevraagd of u wilt weergeven van de volgende set. Als de standaarduitvoer wordt omgeleid naar een bestand, wordt de gebruiker nog steeds gevraagd of de volgende reeks producten moet worden gegenereerd door de routine.       [!code-cs[System.Console.Error#1](~/add/codesnippet/csharp/p-system.console.error_1.cs)][!code-vb[System.Console.Error#1  ](~/add/codesnippet/visualbasic/p-system.console.error_1.vb)]"
  example:
  - "The following example is a command line utility named ExpandTabs that replaces tab characters in a text file with four spaces, the value defined by the `tabSize` variable. It redirects the standard input and output streams to files, but uses the Error property to write the standard error stream to the console. It can be launched from the command line by supplying the name of the file that contains tab characters and the name of the output file.  \n  \n [!code-cpp[Console-EXPANDTABSEX#1](~/add/codesnippet/cpp/p-system.console.error_2.cpp)]\n [!code-cs[Console-EXPANDTABSEX#1](~/add/codesnippet/csharp/p-system.console.error_2.cs)]\n [!code-vb[Console-EXPANDTABSEX#1](~/add/codesnippet/visualbasic/p-system.console.error_2.vb)]  \n  \n The following example is a simple text file viewer that displays the contents of one or more text files to the console. If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <xref:System.Console.SetError%2A> method to redirect error information to a file, calls the <xref:System.Console.OpenStandardError%2A> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.  \n  \n [!code-cs[System.Console.OpenStandardError#1](~/add/codesnippet/csharp/p-system.console.error_3.cs)]\n [!code-vb[System.Console.OpenStandardError#1](~/add/codesnippet/visualbasic/p-system.console.error_3.vb)]  \n  \n Note that the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=fullName> property is set to `true` before reacquiring the error stream. This ensures that output will be sent to the console immediately rather than buffered."
  syntax:
    content: public static System.IO.TextWriter Error { get; }
    return:
      type: System.IO.TextWriter
      description: "Een <xref:System.IO.TextWriter>die staat voor de uitvoerstroom standaardfout.</xref:System.IO.TextWriter>"
  overload: System.Console.Error*
  exceptions: []
  platform:
  - net462
- uid: System.Console.ForegroundColor
  id: ForegroundColor
  parent: System.Console
  langs:
  - csharp
  name: ForegroundColor
  nameWithType: Console.ForegroundColor
  fullName: System.Console.ForegroundColor
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de voorgrondkleur van de console."
  remarks: "Een get-bewerking voor een toepassing op basis van Windows, waarin een console niet bestaat, retourneert <xref:System.ConsoleColor>.</xref:System.ConsoleColor>"
  example:
  - "The following example checks whether the console's background color is black and, if it is, it changes the background color to red and the foreground color to black.  \n  \n [!code-cs[System.ConsoleColor#2](~/add/codesnippet/csharp/p-system.console.foregro_1.cs)]\n [!code-vb[System.ConsoleColor#2](~/add/codesnippet/visualbasic/p-system.console.foregro_1.vb)]  \n  \n The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and ForegroundColor properties to variables. It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground. (If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.  \n  \n [!code-vb[System.ConsoleColor#1](~/add/codesnippet/visualbasic/p-system.console.foregro_2.vb)]\n [!code-cs[System.ConsoleColor#1](~/add/codesnippet/csharp/p-system.console.foregro_2.cs)]"
  syntax:
    content: public static ConsoleColor ForegroundColor { get; set; }
    return:
      type: System.ConsoleColor
      description: "Een <xref href=&quot;System.ConsoleColor&quot;> </xref> Hiermee worden de voorgrondkleur van de console; dat wil zeggen, de kleur van elke teken dat wordt weergegeven. De standaardwaarde is grijs."
  overload: System.Console.ForegroundColor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De kleur die is opgegeven in een set-bewerking is niet geldig lid van <xref href=&quot;System.ConsoleColor&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De gebruiker heeft geen machtiging voor deze actie."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.In
  id: In
  parent: System.Console
  langs:
  - csharp
  name: In
  nameWithType: Console.In
  fullName: System.Console.In
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee haalt u de standaard invoerstroom."
  remarks: "Deze eigenschap is standaard ingesteld op de standaard invoerstroom. Deze eigenschap kan worden ingesteld op een andere stroom met de <xref:System.Console.SetIn%2A>methode.</xref:System.Console.SetIn%2A>       Leesbewerkingen op de standaard invoerstroom synchroon uitgevoerd. Dat wil zeggen, blokkeren ze totdat de opgegeven leesbewerking is voltooid. Dit geldt zelfs als een asynchrone methode, zoals <xref:System.IO.TextReader.ReadLineAsync%2A>, wordt aangeroepen voor de <xref:System.IO.TextReader>object dat wordt geretourneerd door de eigenschap In.</xref:System.IO.TextReader> </xref:System.IO.TextReader.ReadLineAsync%2A>"
  example:
  - "The following sample illustrates the use of the `In` property.  \n  \n [!code-cpp[consolein#1](~/add/codesnippet/cpp/p-system.console.in_1.cpp)]\n [!code-cs[consolein#1](~/add/codesnippet/csharp/p-system.console.in_1.cs)]\n [!code-vb[consolein#1](~/add/codesnippet/visualbasic/p-system.console.in_1.vb)]"
  syntax:
    content: public static System.IO.TextReader In { get; }
    return:
      type: System.IO.TextReader
      description: "Een <xref:System.IO.TextReader>die staat voor de Standaardinvoerstroom.</xref:System.IO.TextReader>"
  overload: System.Console.In*
  exceptions: []
  platform:
  - net462
- uid: System.Console.InputEncoding
  id: InputEncoding
  parent: System.Console
  langs:
  - csharp
  name: InputEncoding
  nameWithType: Console.InputEncoding
  fullName: System.Console.InputEncoding
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de codering die de-console gebruikt om te lezen invoer."
  remarks: "De console maakt gebruik van de invoer vertalen toetsenbordinvoer in een overeenkomstige teken codering. De invoer codering opgenomen met een codetabel waarmee 256 toetsenbord tekencodes worden toegewezen aan afzonderlijke tekens. Andere code pagina&quot;s bevatten verschillende speciale tekens, doorgaans worden aangepast voor een taal of een groep van talen.       Beginnen met de [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], een eigenschap get-bewerking kan een waarde in de cache in plaats van de console huidige invoer codering retourneren. Dit kan gebeuren als de waarde van de eigenschap InputEncoding is gewijzigd door een andere manier dan een toewijzing aan de eigenschap InputEncoding, bijvoorbeeld het aanroepen van de Windows `SetConsoleCP` functie of met behulp van de `chcp` opdracht vanuit een PowerShell-script."
  syntax:
    content: public static System.Text.Encoding InputEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "De codering gebruikt om te lezen van de console-invoer."
  overload: System.Console.InputEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De waarde van de eigenschap in een set-bewerking <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden tijdens het uitvoeren van deze bewerking."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Uw toepassing heeft geen machtiging voor deze bewerking niet uitvoeren."
  platform:
  - net462
- uid: System.Console.IsErrorRedirected
  id: IsErrorRedirected
  parent: System.Console
  langs:
  - csharp
  name: IsErrorRedirected
  nameWithType: Console.IsErrorRedirected
  fullName: System.Console.IsErrorRedirected
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Haalt een waarde die aangeeft of de uitvoerstroom fout van de Standaardfoutstroom is omgeleid."
  syntax:
    content: public static bool IsErrorRedirected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de foutuitvoer wordt omgeleid; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.IsErrorRedirected*
  exceptions: []
  platform:
  - net462
- uid: System.Console.IsInputRedirected
  id: IsInputRedirected
  parent: System.Console
  langs:
  - csharp
  name: IsInputRedirected
  nameWithType: Console.IsInputRedirected
  fullName: System.Console.IsInputRedirected
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee wordt een waarde die aangeeft of invoer is omgeleid uit de Standaardinvoerstroom opgehaald."
  syntax:
    content: public static bool IsInputRedirected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de invoer is omgeleid; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.IsInputRedirected*
  exceptions: []
  platform:
  - net462
- uid: System.Console.IsOutputRedirected
  id: IsOutputRedirected
  parent: System.Console
  langs:
  - csharp
  name: IsOutputRedirected
  nameWithType: Console.IsOutputRedirected
  fullName: System.Console.IsOutputRedirected
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Haalt een waarde die aangeeft of uitvoer van de Standaarduitvoerstroom is omgeleid."
  syntax:
    content: public static bool IsOutputRedirected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>als uitvoer wordt omgeleid; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.IsOutputRedirected*
  exceptions: []
  platform:
  - net462
- uid: System.Console.KeyAvailable
  id: KeyAvailable
  parent: System.Console
  langs:
  - csharp
  name: KeyAvailable
  nameWithType: Console.KeyAvailable
  fullName: System.Console.KeyAvailable
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Haalt een waarde die aangeeft of een toets te drukken beschikbaar in de invoerstroom is."
  remarks: "De waarde van eigenschap wordt onmiddellijk; geretourneerd dat wil zeggen, blokkeert de eigenschap KeyAvailable niet invoer totdat een toets te drukken beschikbaar is.       De eigenschap KeyAvailable gebruiken in combinatie met alleen de <xref:System.Console.ReadKey%2A>methode, niet de <xref:System.Console.Read%2A>of <xref:System.Console.ReadLine%2A>methoden.</xref:System.Console.ReadLine%2A> </xref:System.Console.Read%2A> </xref:System.Console.ReadKey%2A>"
  example:
  - "The following example demonstrates how to use the KeyAvailable property to create a loop that runs until a key is pressed.  \n  \n [!code-cs[console.keyavailable#1](~/add/codesnippet/csharp/p-system.console.keyavai_1.cs)]\n [!code-cpp[console.keyavailable#1](~/add/codesnippet/cpp/p-system.console.keyavai_1.cpp)]\n [!code-vb[console.keyavailable#1](~/add/codesnippet/visualbasic/p-system.console.keyavai_1.vb)]"
  syntax:
    content: public static bool KeyAvailable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Indien een toets te drukken beschikbaar is. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.KeyAvailable*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Standaard-invoer is omgeleid naar een bestand in plaats van het toetsenbord."
  platform:
  - net462
- uid: System.Console.LargestWindowHeight
  id: LargestWindowHeight
  parent: System.Console
  langs:
  - csharp
  name: LargestWindowHeight
  nameWithType: Console.LargestWindowHeight
  fullName: System.Console.LargestWindowHeight
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Het grootste aantal console-venster rijen, op basis van de huidige resolutie van lettertypen en opgehaald."
  syntax:
    content: public static int LargestWindowHeight { get; }
    return:
      type: System.Int32
      description: "De hoogte van het grootste mogelijke consolevenster gemeten in rijen."
  overload: System.Console.LargestWindowHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Console.LargestWindowWidth
  id: LargestWindowWidth
  parent: System.Console
  langs:
  - csharp
  name: LargestWindowWidth
  nameWithType: Console.LargestWindowWidth
  fullName: System.Console.LargestWindowWidth
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Het grootste aantal console-venster kolommen, op basis van de huidige resolutie van lettertypen en opgehaald."
  syntax:
    content: public static int LargestWindowWidth { get; }
    return:
      type: System.Int32
      description: "De breedte van de grootste mogelijke consolevenster gemeten in kolommen."
  overload: System.Console.LargestWindowWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Een gedeelte van de opgegeven bron van de schermbuffer kopieert naar een gebied van de opgegeven bestemming."
  remarks: "Als de bron- en doelserver parameters een positie buiten de grenzen van de huidige schermbuffer opgeeft, wordt alleen het gedeelte van het brongebied die past bij de doelgebied gekopieerd. Dat wil zeggen, is de brongebied afgekapt aanpassen aan de huidige schermbuffer.       De methode MoveBufferArea kopieert het brongebied naar de doellocatie. Als het doelgebied niet het gebied source intersect heeft, wordt het brongebied gevuld met lege waarden met behulp van de huidige voor- en achtergrond kleuren. Anders is het doorsnede gedeelte van het brongebied niet ingevuld."
  syntax:
    content: public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop);
    parameters:
    - id: sourceLeft
      type: System.Int32
      description: "De meest linkse kolom van het brongebied."
    - id: sourceTop
      type: System.Int32
      description: "De bovenste rij van de brongebied."
    - id: sourceWidth
      type: System.Int32
      description: "Het aantal kolommen in het brongebied."
    - id: sourceHeight
      type: System.Int32
      description: "Het aantal rijen in het brongebied."
    - id: targetLeft
      type: System.Int32
      description: "De meest linkse kolom van het gebied van de bestemming."
    - id: targetTop
      type: System.Int32
      description: "De bovenste rij van de doellocatie."
  overload: System.Console.MoveBufferArea*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Een of meer van de parameters is kleiner dan nul.       -or-       <code>sourceLeft</code> or <code>targetLeft</code> is greater than or equal to <>*>.       -or-       <code>sourceTop</code> or <code>targetTop</code> is greater than or equal to <>*>.       -or-       <code>sourceTop</code> + <code>sourceHeight</code> is greater than or equal to <>*>.       -or-       <code>sourceLeft</code> + <code>sourceWidth</code> is greater than or equal to <>*>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De gebruiker heeft geen machtiging voor deze actie."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  id: MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  parent: System.Console
  langs:
  - csharp
  name: MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  nameWithType: Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  fullName: System.Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Een gedeelte van de opgegeven bron van de schermbuffer kopieert naar een gebied van de opgegeven bestemming."
  remarks: "Als de bron- en doelserver parameters een positie die zich buiten de grenzen van de huidige schermbuffer opgeeft, wordt alleen het gedeelte van het brongebied die past bij de doelgebied gekopieerd. Dat wil zeggen, is de brongebied afgekapt aanpassen aan de huidige schermbuffer.       De <xref:System.Console.MoveBufferArea%2A>methode kopieert het brongebied naar de doellocatie.</xref:System.Console.MoveBufferArea%2A> Als het doelgebied niet het gebied source intersect heeft, het brongebied wordt gevuld met de door het opgegeven teken `sourceChar`, met behulp van de kleuren die is opgegeven door `sourceForeColor` en `sourceBackColor`. Anders is het doorsnede gedeelte van het brongebied niet ingevuld.       De <xref:System.Console.MoveBufferArea%2A>methode geen bewerking wordt uitgevoerd als `sourceWidth` of `sourceHeight` gelijk is aan nul.</xref:System.Console.MoveBufferArea%2A>"
  syntax:
    content: public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor);
    parameters:
    - id: sourceLeft
      type: System.Int32
      description: "De meest linkse kolom van het brongebied."
    - id: sourceTop
      type: System.Int32
      description: "De bovenste rij van de brongebied."
    - id: sourceWidth
      type: System.Int32
      description: "Het aantal kolommen in het brongebied."
    - id: sourceHeight
      type: System.Int32
      description: "Het aantal rijen in het brongebied."
    - id: targetLeft
      type: System.Int32
      description: "De meest linkse kolom van het gebied van de bestemming."
    - id: targetTop
      type: System.Int32
      description: "De bovenste rij van de doellocatie."
    - id: sourceChar
      type: System.Char
      description: "Het teken dat wordt gebruikt voor het vervullen van de brongebied."
    - id: sourceForeColor
      type: System.ConsoleColor
      description: "De voorgrondkleur die wordt gebruikt voor het brongebied."
    - id: sourceBackColor
      type: System.ConsoleColor
      description: "De achtergrondkleur die wordt gebruikt voor het brongebied."
  overload: System.Console.MoveBufferArea*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Een of meer van de parameters is kleiner dan nul.       -or-       <code>sourceLeft</code> or <code>targetLeft</code> is greater than or equal to <>*>.       -or-       <code>sourceTop</code> or <code>targetTop</code> is greater than or equal to <>*>.       -or-       <code>sourceTop</code> + <code>sourceHeight</code> is greater than or equal to <>*>.       -or-       <code>sourceLeft</code> + <code>sourceWidth</code> is greater than or equal to <>*>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Een of beide van de parameters kleur is geen lid van de <xref href=&quot;System.ConsoleColor&quot;> </xref> opsomming."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De gebruiker heeft geen machtiging voor deze actie."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.NumberLock
  id: NumberLock
  parent: System.Console
  langs:
  - csharp
  name: NumberLock
  nameWithType: Console.NumberLock
  fullName: System.Console.NumberLock
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee wordt een waarde die aangeeft of de NumLock toetsenbord wisselknop is ingeschakeld of uitgeschakeld."
  syntax:
    content: public static bool NumberLock { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>als NumLock is ingeschakeld. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als NUM LOCK is uitgeschakeld."
  overload: System.Console.NumberLock*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OpenStandardError
  id: OpenStandardError
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardError()
  nameWithType: Console.OpenStandardError()
  fullName: System.Console.OpenStandardError()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De Standaardfoutstroom verkrijgt."
  remarks: "Deze methode kan worden gebruikt om de Standaardfoutstroom terug nadat deze is gewijzigd door de <xref:System.Console.SetError%2A>methode.</xref:System.Console.SetError%2A>"
  example:
  - "The following example is a simple text file viewer that displays the contents of one or more text files to the console. If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <xref:System.Console.SetError%2A> method to redirect error information to a file, calls the OpenStandardError method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.  \n  \n [!code-cs[System.Console.OpenStandardError#1](~/add/codesnippet/csharp/m-system.console.opensta_4_1.cs)]\n [!code-vb[System.Console.OpenStandardError#1](~/add/codesnippet/visualbasic/m-system.console.opensta_4_1.vb)]  \n  \n Note that the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=fullName> property is set to `true` before reacquiring the error stream. This ensures that output will be sent to the console immediately rather than buffered."
  syntax:
    content: public static System.IO.Stream OpenStandardError ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "De Standaardfoutstroom."
  overload: System.Console.OpenStandardError*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OpenStandardError(System.Int32)
  id: OpenStandardError(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardError(Int32)
  nameWithType: Console.OpenStandardError(Int32)
  fullName: System.Console.OpenStandardError(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De Standaardfoutstroom is ingesteld op een opgegeven buffergrootte verkrijgt."
  remarks: "Deze methode kan worden gebruikt om de Standaardfoutstroom terug nadat deze is gewijzigd door de <xref:System.Console.SetError%2A>methode.</xref:System.Console.SetError%2A>"
  syntax:
    content: public static System.IO.Stream OpenStandardError (int bufferSize);
    parameters:
    - id: bufferSize
      type: System.Int32
      description: "De interne buffergrootte."
    return:
      type: System.IO.Stream
      description: "De Standaardfoutstroom."
  overload: System.Console.OpenStandardError*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>bufferSize</code>is kleiner dan of gelijk is aan nul."
  platform:
  - net462
- uid: System.Console.OpenStandardInput
  id: OpenStandardInput
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardInput()
  nameWithType: Console.OpenStandardInput()
  fullName: System.Console.OpenStandardInput()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De standaard invoerstroom verkrijgt."
  remarks: "Deze methode kan worden gebruikt om opnieuw de Standaardinvoerstroom ophalen nadat het is gewijzigd door de <xref:System.Console.SetIn%2A>methode.</xref:System.Console.SetIn%2A>"
  example:
  - "The following example illustrates the use of the `OpenStandardInput` property.  \n  \n [!code-cs[System.Console.OpenStandartInput#1](~/add/codesnippet/csharp/m-system.console.opensta_3_1.cs)]\n [!code-vb[System.Console.OpenStandartInput#1](~/add/codesnippet/visualbasic/m-system.console.opensta_3_1.vb)]\n [!code-cpp[System.Console.OpenStandartInput#1](~/add/codesnippet/cpp/m-system.console.opensta_3_1.cpp)]"
  syntax:
    content: public static System.IO.Stream OpenStandardInput ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Standaardinvoerstroom."
  overload: System.Console.OpenStandardInput*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OpenStandardInput(System.Int32)
  id: OpenStandardInput(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardInput(Int32)
  nameWithType: Console.OpenStandardInput(Int32)
  fullName: System.Console.OpenStandardInput(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De Standaardinvoerstroom die is ingesteld op een opgegeven buffergrootte verkrijgt."
  remarks: "Deze methode kan worden gebruikt om opnieuw de Standaarduitvoerstroom ophalen nadat het is gewijzigd door de <xref:System.Console.SetIn%2A>methode.</xref:System.Console.SetIn%2A>"
  example:
  - "The following example illustrates the use of the `OpenStandardInput` property.  \n  \n [!code-cs[System.Console.OpenStandartInput#1](~/add/codesnippet/csharp/m-system.console.opensta_2_1.cs)]\n [!code-vb[System.Console.OpenStandartInput#1](~/add/codesnippet/visualbasic/m-system.console.opensta_2_1.vb)]\n [!code-cpp[System.Console.OpenStandartInput#1](~/add/codesnippet/cpp/m-system.console.opensta_2_1.cpp)]"
  syntax:
    content: public static System.IO.Stream OpenStandardInput (int bufferSize);
    parameters:
    - id: bufferSize
      type: System.Int32
      description: "De interne buffergrootte."
    return:
      type: System.IO.Stream
      description: "Standaardinvoerstroom."
  overload: System.Console.OpenStandardInput*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>bufferSize</code>is kleiner dan of gelijk is aan nul."
  platform:
  - net462
- uid: System.Console.OpenStandardOutput
  id: OpenStandardOutput
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardOutput()
  nameWithType: Console.OpenStandardOutput()
  fullName: System.Console.OpenStandardOutput()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De standaard uitvoerstroom verkrijgt."
  remarks: "Deze methode kan worden gebruikt om opnieuw de Standaarduitvoerstroom ophalen nadat het is gewijzigd door de <xref:System.Console.SetOut%2A>methode.</xref:System.Console.SetOut%2A>"
  example:
  - "The following example illustrates the use of the OpenStandardOutput method. It replaces four consecutive space characters in a string with a tab character. To run it, you must supply two command-line arguments. The first is the name of an existing text file to redirect the standard input stream to. The second is the name of a file to redirect the standard output stream to. This file need not exist. If it does, its contents will be overwritten.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.opensta_0_1.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.opensta_0_1.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.opensta_0_1.cs)]"
  syntax:
    content: public static System.IO.Stream OpenStandardOutput ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "De standaard uitvoerstroom."
  overload: System.Console.OpenStandardOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OpenStandardOutput(System.Int32)
  id: OpenStandardOutput(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardOutput(Int32)
  nameWithType: Console.OpenStandardOutput(Int32)
  fullName: System.Console.OpenStandardOutput(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De standaard uitvoerstroom, die is ingesteld op een opgegeven buffergrootte verkrijgt."
  remarks: "Deze methode kan worden gebruikt om opnieuw de Standaarduitvoerstroom ophalen nadat het is gewijzigd door de <xref:System.Console.SetOut%2A>methode.</xref:System.Console.SetOut%2A>"
  example:
  - "The following example illustrates the use of the OpenStandardOutput method. It replaces four consecutive space characters in a string with a tab character. To run it, you must supply two command line arguments. The first is the name of an existing text file to redirect the standard input stream to. The second is the name of a file to redirect the standard output stream to. This file need not exist. If it does, its contents will be overwritten.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.opensta_1_1.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.opensta_1_1.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.opensta_1_1.cs)]"
  syntax:
    content: public static System.IO.Stream OpenStandardOutput (int bufferSize);
    parameters:
    - id: bufferSize
      type: System.Int32
      description: "De interne buffergrootte."
    return:
      type: System.IO.Stream
      description: "De standaard uitvoerstroom."
  overload: System.Console.OpenStandardOutput*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>bufferSize</code>is kleiner dan of gelijk is aan nul."
  platform:
  - net462
- uid: System.Console.Out
  id: Out
  parent: System.Console
  langs:
  - csharp
  name: Out
  nameWithType: Console.Out
  fullName: System.Console.Out
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee haalt u de standaard uitvoerstroom."
  remarks: "Deze eigenschap is standaard ingesteld op de standaard uitvoerstroom. Deze eigenschap kan worden ingesteld op een andere stroom met de <xref:System.Console.SetOut%2A>methode.</xref:System.Console.SetOut%2A>       Let op: naar aanroepen `Console.Out.WriteLine` methoden zijn gelijk aan het aanroepen van de bijbehorende <xref:System.Console.WriteLine%2A>methoden.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example uses the Out property to display an array containing the names of files in the application's current directory to the standard output device. It then sets the standard output to a file named Files.txt and lists the array elements to the file. Finally, it sets the output to the standard output stream and again displays the array elements to the standard output device.  \n  \n [!code-cs[System.Console.Out#1](~/add/codesnippet/csharp/p-system.console.out_1.cs)]\n [!code-vb[System.Console.Out#1](~/add/codesnippet/visualbasic/p-system.console.out_1.vb)]"
  syntax:
    content: public static System.IO.TextWriter Out { get; }
    return:
      type: System.IO.TextWriter
      description: "Een <xref:System.IO.TextWriter>die staat voor de Standaarduitvoerstroom.</xref:System.IO.TextWriter>"
  overload: System.Console.Out*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OutputEncoding
  id: OutputEncoding
  parent: System.Console
  langs:
  - csharp
  name: OutputEncoding
  nameWithType: Console.OutputEncoding
  fullName: System.Console.OutputEncoding
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de codering die gebruikmaakt van de console uitvoer schrijven."
  remarks: "De console maakt gebruik van de uitvoercodering vertalen tekens geschreven door een toepassing in de bijbehorende tekens van de console weergeven. De standaardcodepagina die gebruikmaakt van de console wordt bepaald door de landinstelling van het systeem.       Beginnen met de [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], een eigenschap get-bewerking kan een waarde in de cache in plaats van de console huidige uitvoercodering retourneren. Dit kan gebeuren als de waarde van de eigenschap OutputEncoding is gewijzigd door een andere manier dan een toewijzing aan de eigenschap OutputEncoding, bijvoorbeeld het aanroepen van de Windows `SetConsoleOutputCP` functie."
  syntax:
    content: public static System.Text.Encoding OutputEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "De codering gebruikt voor console-uitvoer schrijven."
  overload: System.Console.OutputEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De waarde van de eigenschap in een set-bewerking <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden tijdens het uitvoeren van deze bewerking."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Uw toepassing heeft geen machtiging voor deze bewerking niet uitvoeren."
  platform:
  - net462
- uid: System.Console.Read
  id: Read
  parent: System.Console
  langs:
  - csharp
  name: Read()
  nameWithType: Console.Read()
  fullName: System.Console.Read()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Leest het volgende teken uit de Standaardinvoerstroom."
  remarks: "De methode Read blokkeert de terugkeer terwijl u invoertekens typt; Hiermee wordt beëindigd als u op de <xref:System.ConsoleKey>sleutel.</xref:System.ConsoleKey> Druk op Enter voegt u een reeks van afhankelijk zijn van het platform regel beëindiging met uw invoer (bijvoorbeeld Windows voegt een regeleinde rendement regelinvoer sequence). Uw invoer één teken ophalen volgende aanroepen naar de methode Read op een tijdstip. Nadat het laatste teken is opgehaald, lees de terugkeer blokkeert opnieuw en de cyclus wordt herhaald.      > [!IMPORTANT] > De <xref:System.Console.ReadLine%2A>methode, of de <xref:System.Console.KeyAvailable%2A>eigenschap en <xref:System.Console.ReadKey%2A>methode zijn beter voor het gebruik van de methode Read.</xref:System.Console.ReadKey%2A> </xref:System.Console.KeyAvailable%2A> </xref:System.Console.ReadLine%2A>       Houd er rekening mee dat de methode -1 retourneert tenzij u een van de volgende acties uitvoeren: - tegelijkertijd drukt u op de <xref:System.ConsoleModifiers>Wijzigingsfunctie sleutel en <xref:System.ConsoleKey>console-sleutel (Ctrl + Z), ten teken dat de voorwaarde einde van het bestand.</xref:System.ConsoleKey> </xref:System.ConsoleModifiers>      -Toets een equivalent die signalen van de voorwaarde einde van het bestand, zoals de functietoets F6 in Windows.      -De invoerstroom omleiden naar een bron, zoals een tekstbestand met een werkelijke bestandseinde-teken."
  example:
  - "The following example demonstrates the Read method.  \n  \n [!code-cpp[console.read#1](~/add/codesnippet/cpp/m-system.console.read_1.cpp)]\n [!code-cs[console.read#1](~/add/codesnippet/csharp/m-system.console.read_1.cs)]\n [!code-vb[console.read#1](~/add/codesnippet/visualbasic/m-system.console.read_1.vb)]"
  syntax:
    content: public static int Read ();
    parameters: []
    return:
      type: System.Int32
      description: "Het volgende teken uit de invoerstroom, of een negatieve één (-1) als er momenteel geen meer tekens moeten worden gelezen."
  overload: System.Console.Read*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.ReadKey
  id: ReadKey
  parent: System.Console
  langs:
  - csharp
  name: ReadKey()
  nameWithType: Console.ReadKey()
  fullName: System.Console.ReadKey()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Haalt het volgende teken of functie ingedrukt door de gebruiker. De toets wordt weergegeven in het consolevenster."
  remarks: "De methode ReadKey wacht dat wil zeggen, blokken op de thread uitgifte van de methode ReadKey totdat een teken of functie-toets wordt gedrukt. Een teken of functie sleutel worden ingedrukt in combinatie met een of meer Alt, Ctrl of Shift te drukken. Een toets aanpassingsfunctie zelfstandig wordt echter niet tot de methode ReadKey om terug te keren.       Afhankelijk van uw toepassing wilt u mogelijk de methode ReadKey gebruiken in combinatie met de <xref:System.Console.KeyAvailable%2A>eigenschap.</xref:System.Console.KeyAvailable%2A>       De methode ReadKey wordt gelezen via het toetsenbord, zelfs als de standaard invoer is omgeleid naar een bestand met de <xref:System.Console.SetIn%2A>methode.</xref:System.Console.SetIn%2A>"
  example:
  - "One of the most common uses of the ReadKey method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information. The following example uses the  ReadKey method to wait for the user to press the Enter key before terminating the app.  \n  \n [!code-cs[System.Console.ReadKey#1](~/add/codesnippet/csharp/m-system.console.readkey_1.cs)]\n [!code-vb[System.Console.ReadKey#1](~/add/codesnippet/visualbasic/m-system.console.readkey_1.vb)]  \n  \n Note that this overload of the <xref:System.Console.ReadKey%2A> method by default echoes any displayable keys that the user presses to the console. To suppress them, call the  <xref:System.Console.ReadKey%2A> method with an `intercept` argument of `true`.  \n  \n The following example uses the ReadKey method to display information about which key the user pressed..  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/m-system.console.readkey_2.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/m-system.console.readkey_2.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/m-system.console.readkey_2.vb)]"
  syntax:
    content: public static ConsoleKeyInfo ReadKey ();
    parameters: []
    return:
      type: System.ConsoleKeyInfo
      description: "Een object dat beschrijft de <xref href=&quot;System.ConsoleKey&quot;> </xref> constante en Unicode-teken, indien van toepassing, die overeenkomen met de sleutel ingedrukte console. De <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> object ook beschreven in een bitsgewijze combinatie van <xref href=&quot;System.ConsoleModifiers&quot;> </xref> waarden, of een of meer, Alt, toetsen Shift of Ctrl aanpassingsfunctie gelijktijdig met de console-sleutel is ingedrukt."
  overload: System.Console.ReadKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <xref:System.Console.In*>eigenschap is omgeleid uit een stroom dan de-console.</xref:System.Console.In*>"
  platform:
  - net462
- uid: System.Console.ReadKey(System.Boolean)
  id: ReadKey(System.Boolean)
  parent: System.Console
  langs:
  - csharp
  name: ReadKey(Boolean)
  nameWithType: Console.ReadKey(Boolean)
  fullName: System.Console.ReadKey(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Haalt het volgende teken of functie ingedrukt door de gebruiker. De toets wordt eventueel weergegeven in het consolevenster."
  remarks: "De <xref:System.Console.ReadKey%2A>methode wacht, dat wil zeggen, blokken op de thread uitgevende de <xref:System.Console.ReadKey%2A>methode, totdat een teken of functie-toets wordt gedrukt.</xref:System.Console.ReadKey%2A> </xref:System.Console.ReadKey%2A> Een teken of functie sleutel worden ingedrukt in combinatie met een of meer Alt, Ctrl of Shift te drukken. Echter, een toets Wijzigingsfunctie zelfstandig leidt niet tot de <xref:System.Console.ReadKey%2A>methode om te retourneren.</xref:System.Console.ReadKey%2A>       Als de `intercept` parameter `true`, de toets wordt onderschept en niet in het consolevenster weergegeven; anders wordt de toets wordt weergegeven.       Afhankelijk van uw toepassing wilt u mogelijk gebruiken de <xref:System.Console.ReadKey%2A>methode in combinatie met de <xref:System.Console.KeyAvailable%2A>eigenschap.</xref:System.Console.KeyAvailable%2A> </xref:System.Console.ReadKey%2A>       De <xref:System.Console.ReadKey%2A>methode gegevens via het toetsenbord, zelfs als de standaard invoer is omgeleid naar een bestand met de <xref:System.Console.SetIn%2A>methode.</xref:System.Console.SetIn%2A> </xref:System.Console.ReadKey%2A>"
  example:
  - "One of the most common uses of the <xref:System.Console.ReadKey%2A> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information. The following example uses the  ReadKey method to wait for the user to press the Enter key before terminating the app. Note that, if the user presses any other key, it is not echoed to the console.  \n  \n [!code-vb[System.Console.ReadKey#2](~/add/codesnippet/visualbasic/m-system.console.readkey_1.vb)]\n [!code-cs[System.Console.ReadKey#2](~/add/codesnippet/csharp/m-system.console.readkey_1.cs)]  \n  \n The following example uses the ReadKey method to display information about the key pressed by a user without echoing that key to the console.  \n  \n [!code-cs[console.readkey2#1](~/add/codesnippet/csharp/m-system.console.readkey_2.cs)]\n [!code-cpp[console.readkey2#1](~/add/codesnippet/cpp/m-system.console.readkey_2.cpp)]\n [!code-vb[console.readkey2#1](~/add/codesnippet/visualbasic/m-system.console.readkey_2.vb)]"
  syntax:
    content: public static ConsoleKeyInfo ReadKey (bool intercept);
    parameters:
    - id: intercept
      type: System.Boolean
      description: "Hiermee wordt bepaald of de toets worden weergegeven in het consolevenster. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>de toets; niet wordt weergegeven anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ConsoleKeyInfo
      description: "Een object dat beschrijft de <xref href=&quot;System.ConsoleKey&quot;> </xref> constante en Unicode-teken, indien van toepassing, die overeenkomen met de sleutel ingedrukte console. De <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> object ook beschreven in een bitsgewijze combinatie van <xref href=&quot;System.ConsoleModifiers&quot;> </xref> waarden, of een of meer, Alt, toetsen Shift of Ctrl aanpassingsfunctie gelijktijdig met de console-sleutel is ingedrukt."
  overload: System.Console.ReadKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <xref:System.Console.In*>eigenschap is omgeleid uit een stroom dan de-console.</xref:System.Console.In*>"
  platform:
  - net462
- uid: System.Console.ReadLine
  id: ReadLine
  parent: System.Console
  langs:
  - csharp
  name: ReadLine()
  nameWithType: Console.ReadLine()
  fullName: System.Console.ReadLine()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lees de volgende regel tekens uit de standaard invoerstroom."
  remarks: "De methode ReadLine leest een regel van de standaard invoerstroom. (Zie de alinea na de volgende lijst voor de definitie van een regel.) Dit betekent dat: - als het standaard invoerapparaat het toetsenbord, de ReadLine methodeblokken is totdat de gebruiker op drukt de **Enter** sleutel.           Een van de meest voorkomende maakt gebruik van de ReadLine methode is onderbreken programma uitvoeren voordat u de console uit te schakelen en nieuwe gegevens om weer te geven aan of de gebruiker te druk op ENTER voordat de toepassing wordt beëindigd. Het volgende voorbeeld ziet u dit.           [!code-cpp[System.Console.ReadLine#6](~/add/codesnippet/cpp/m-system.console.readline_1.cpp)][!code-vb[System.Console.ReadLine#6](~/add/codesnippet/visualbasic/m-system.console.readline_1.vb)][!code-cs[System.Console.ReadLine#6](~/add/codesnippet/csharp/m-system.console.readline_1.cs) ] -als standaardinvoer wordt omgeleid naar een bestand, de methode ReadLine een tekstregel leest uit een bestand.             Het volgende is bijvoorbeeld een tekstbestand met de naam ReadLine1.txt: ```          This is the first line.       This is the second line.       This is the third line.       This is the fourth line.          ``` het volgende voorbeeld wordt de methode ReadLine invoer die is omgeleid uit een bestand te lezen. De leesbewerking wordt beëindigd wanneer de methode retourneert `null`, wat aangeeft dat er geen regels overblijven die nog moeten worden gelezen.           [!code-cs[System.Console.ReadLine#3](~/add/codesnippet/csharp/m-system.console.readline_2.cs)][!code-vb[System.Console.ReadLine#3](~/add/codesnippet/visualbasic/m-system.console.readline_2.vb) ] na het compileren van het voorbeeld naar een uitvoerbaar bestand met de naam ReadLine1.exe, kunt u deze uitvoeren vanaf de opdrachtregel met de syntaxis ```       ReadLine1 < ReadLine1.txt       ``` de inhoud van het bestand lezen en naar de console weergegeven.             Een regel is gedefinieerd als een reeks tekens, gevolgd door een regelterugloop (hexadecimale 0x000d), een regelinvoer (hexadecimale 0x000a) of de waarde van de <xref:System.Environment.NewLine%2A?displayProperty=fullName>eigenschap.</xref:System.Environment.NewLine%2A?displayProperty=fullName> De geretourneerde tekenreeks bevat niet de afsluitende teken (s). De methode wordt gelezen standaard invoer van een invoerbuffer 256 tekens. Omdat dit omvat de <xref:System.Environment.NewLine%2A?displayProperty=fullName>teken (s), de methode kan lezen regels die maximaal 254 tekens bevatten.</xref:System.Environment.NewLine%2A?displayProperty=fullName> Aanroepen om te lezen langer regels, de <xref:System.Console.OpenStandardInput%28System.Int32%29>methode.</xref:System.Console.OpenStandardInput%28System.Int32%29>       De methode ReadLine synchroon wordt uitgevoerd. Dat wil zeggen, worden geblokkeerd totdat het lezen van een regel of de toetscombinatie Ctrl + Z wordt ingedrukt. De <xref:System.Console.In%2A>eigenschap retourneert een <xref:System.IO.TextReader>object die staat voor de Standaardinvoerstroom en die heeft zowel een synchrone <xref:System.IO.TextReader.ReadLine%2A?displayProperty=fullName>methode en een asynchrone <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName>methode.</xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName> </xref:System.IO.TextReader.ReadLine%2A?displayProperty=fullName> </xref:System.IO.TextReader> </xref:System.Console.In%2A> Echter, wanneer gebruikt als de Standaardinvoerstroom van de console het <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName>synchroon in plaats van asynchroon uitvoeren en retourneren een `Task<String>` pas nadat de leesbewerking is voltooid.</xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName>       Als deze methode genereert een <xref:System.OutOfMemoryException>uitzondering, de lezer positie in de onderliggende <xref:System.IO.Stream>object is geavanceerde door het aantal tekens dat de methode heeft kunnen lezen, maar de al gelezen in de interne buffer van ReadLine tekens worden genegeerd.</xref:System.IO.Stream> </xref:System.OutOfMemoryException> Aangezien de positie van de lezer in de stroom kan niet worden gewijzigd, de tekens die al gelezen onherstelbare zijn en kunnen alleen worden geopend door opnieuw initialiseren van de <xref:System.IO.TextReader>.</xref:System.IO.TextReader> Als de eerste positie in de stroom onbekend is of de stroom biedt geen ondersteuning voor het zoeken, de onderliggende <xref:System.IO.Stream>moet ook opnieuw worden geïnitialiseerd.</xref:System.IO.Stream> Om te voorkomen dat een dergelijke situatie en voor het produceren van krachtige code, moet u de <xref:System.Console.KeyAvailable%2A>eigenschap en <xref:System.Console.ReadKey%2A>methode en sla het lezen tekens in een vooraf toegewezen buffer.</xref:System.Console.ReadKey%2A> </xref:System.Console.KeyAvailable%2A>       Als wordt het teken Ctrl + Z ingedrukt als de methode lezen invoer vanuit de console, de methode retourneert `null`. Dit kan de gebruiker om te voorkomen dat verdere toetsenbordinvoer wanneer de methode ReadLine wordt aangeroepen in een lus. Het volgende voorbeeld ziet u dit scenario.       [!code-cpp[System.Console.ReadLine#1](~/add/codesnippet/cpp/m-system.console.readline_3.cpp)][!code-cs[System.Console.ReadLine#1](~/add/codesnippet/csharp/m-system.console.readline_3.cs)][!code-vb[System.Console.ReadLine#1    ](~/add/codesnippet/visualbasic/m-system.console.readline_3.vb)]"
  example:
  - "The following example requires two command line arguments: the name of an existing text file, and the name of a file to write the output to. It opens the existing text file and redirects the standard input from the keyboard to that file. It also redirects the standard output from the console to the output file. It then uses the ReadLine method to read each line in the file, replaces every sequence of four spaces with a tab character, and uses the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method to write the result to the output file.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.readline_4.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.readline_4.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.readline_4.cs)]"
  syntax:
    content: public static string ReadLine ();
    parameters: []
    return:
      type: System.String
      description: "De volgende regel tekens uit de invoerstroom of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen regels meer beschikbaar zijn."
  overload: System.Console.ReadLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Er is onvoldoende geheugen toewijzen van een buffer voor de geretourneerde tekenreeks."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Het aantal tekens in de volgende regel tekens is groter dan &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Console.ResetColor
  id: ResetColor
  parent: System.Console
  langs:
  - csharp
  name: ResetColor()
  nameWithType: Console.ResetColor()
  fullName: System.Console.ResetColor()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee stelt u de voor- en achtergrond console kleuren de standaardwaarden."
  remarks: "De voor- en achtergrond kleuren worden teruggezet naar de kleuren die beschikbaar waren aanvang van het huidige proces. Zie voor meer informatie de <xref:System.Console.ForegroundColor%2A>en <xref:System.Console.BackgroundColor%2A>Eigenschappen.</xref:System.Console.BackgroundColor%2A> </xref:System.Console.ForegroundColor%2A>"
  example:
  - "The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and <xref:System.Console.ForegroundColor%2A> properties to variables. It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground. (If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the ResetColor method to restore the original console colors.  \n  \n [!code-vb[System.ConsoleColor#1](~/add/codesnippet/visualbasic/m-system.console.resetco_1.vb)]\n [!code-cs[System.ConsoleColor#1](~/add/codesnippet/csharp/m-system.console.resetco_1.cs)]"
  syntax:
    content: public static void ResetColor ();
    parameters: []
  overload: System.Console.ResetColor*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De gebruiker heeft geen machtiging voor deze actie."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.SetBufferSize(System.Int32,System.Int32)
  id: SetBufferSize(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: SetBufferSize(Int32,Int32)
  nameWithType: Console.SetBufferSize(Int32,Int32)
  fullName: System.Console.SetBufferSize(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee stelt u de hoogte en breedte van het gebied van de buffer scherm op de opgegeven waarden."
  remarks: ''
  example:
  - "The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, SetBufferSize, and <xref:System.Console.ReadKey%2A> methods. The example draws a grid pattern in the screen buffer based on the screen buffer width. Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed. The grid pattern helps you see the movement of the console window relative to the screen buffer.  \n  \n [!code-cpp[console.windowLT#1](~/add/codesnippet/cpp/m-system.console.setbuff_1.cpp)]\n [!code-vb[console.windowLT#1](~/add/codesnippet/visualbasic/m-system.console.setbuff_1.vb)]\n [!code-cs[console.windowLT#1](~/add/codesnippet/csharp/m-system.console.setbuff_1.cs)]"
  syntax:
    content: public static void SetBufferSize (int width, int height);
    parameters:
    - id: width
      type: System.Int32
      description: "De breedte van het buffergebied wordt gemeten in kolommen."
    - id: height
      type: System.Int32
      description: "De hoogte van het buffergebied wordt gemeten in rijen."
  overload: System.Console.SetBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>height</code>of <code>width</code> is kleiner dan of gelijk zijn aan nul.       - of - <code>height</code> of <code>width</code> is groter dan of gelijk zijn aan &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       -or-       <code>width</code> is less than <xref:System.Console.WindowLeft*> + <xref:System.Console.WindowWidth*>.       -or-       <code>height</code> is less than <xref:System.Console.WindowTop*> + <xref:System.Console.WindowHeight*>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De gebruiker heeft geen machtiging voor deze actie."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.SetCursorPosition(System.Int32,System.Int32)
  id: SetCursorPosition(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: SetCursorPosition(Int32,Int32)
  nameWithType: Console.SetCursorPosition(Int32,Int32)
  fullName: System.Console.SetCursorPosition(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee stelt u de positie van de cursor."
  remarks: "Gebruik de methode SetCursorPosition om op te geven waarop de volgende schrijfbewerking in het consolevenster is om te beginnen. Als de opgegeven cursorpositie buiten het gebied dat zichtbaar is in het consolevenster is, verandert de oorsprong van het venster automatisch de cursor om zichtbaar te maken.       De cursor verplaatst automatisch naar de volgende tekenpositie telkens wanneer een teken wordt geschreven naar het consolevenster. Als de cursor is op de juiste tekenpositie onderkant van het consolevenster, schrijft de volgende oorzaken van de bewerking het consolevenster schuiven zodat de cursor zichtbaar blijft. Als u een teken schrijven naar de onderkant rechts tekenpositie wilt zonder dat het consolevenster wilt bladeren, gebruikt u de <xref:System.Console.MoveBufferArea%2A>methode om te verplaatsen van een teken op die positie.</xref:System.Console.MoveBufferArea%2A>"
  example:
  - "This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the SetCursorPosition and <xref:System.Console.Clear%2A> methods. The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of \"+\", \"&#124;\", and \"-\" strings. Note that the rectangle could be drawn with fewer steps using a combination of other strings.  \n  \n [!code-cs[console.cursorLTS#1](~/add/codesnippet/csharp/m-system.console.setcurs_1.cs)]\n [!code-cpp[console.cursorLTS#1](~/add/codesnippet/cpp/m-system.console.setcurs_1.cpp)]\n [!code-vb[console.cursorLTS#1](~/add/codesnippet/visualbasic/m-system.console.setcurs_1.vb)]"
  syntax:
    content: public static void SetCursorPosition (int left, int top);
    parameters:
    - id: left
      type: System.Int32
      description: "De kolompositie van de cursor. Kolommen zijn genummerd van links naar rechts begint bij 0."
    - id: top
      type: System.Int32
      description: "De rijpositie van de cursor. Rijen worden genummerd van boven naar beneden begint bij 0."
  overload: System.Console.SetCursorPosition*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>left</code>of <code>top</code> is kleiner dan nul.       - of - <code>left</code> is groter dan of gelijk zijn aan <xref:System.Console.BufferWidth*>.       - of - <code>top</code> is groter dan of gelijk zijn aan <xref:System.Console.BufferHeight*>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De gebruiker heeft geen machtiging voor deze actie."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.SetError(System.IO.TextWriter)
  id: SetError(System.IO.TextWriter)
  parent: System.Console
  langs:
  - csharp
  name: SetError(TextWriter)
  nameWithType: Console.SetError(TextWriter)
  fullName: System.Console.SetError(TextWriter)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Stelt de <xref:System.Console.Error*>eigenschap met het opgegeven <xref:System.IO.TextWriter>object.</xref:System.IO.TextWriter> </xref:System.Console.Error*>"
  remarks: "Standaard de <xref:System.Console.Error%2A>eigenschap is ingesteld op de uitvoerstroom standaardfout.</xref:System.Console.Error%2A>       Een <xref:System.IO.StreamWriter>die ingekapseld een <xref:System.IO.FileStream>kan worden gebruikt voor het verzenden van foutberichten naar een bestand.</xref:System.IO.FileStream> </xref:System.IO.StreamWriter>"
  example:
  - "The following example shows how to redirect the standard error stream to a file.  \n  \n [!code-vb[System.Console.SetError#1](~/add/codesnippet/visualbasic/m-system.console.seterro_1.vb)]\n [!code-cs[System.Console.SetError#1](~/add/codesnippet/csharp/m-system.console.seterro_1.cs)]\n [!code-cpp[System.Console.SetError#1](~/add/codesnippet/cpp/m-system.console.seterro_1.cpp)]"
  syntax:
    content: public static void SetError (System.IO.TextWriter newError);
    parameters:
    - id: newError
      type: System.IO.TextWriter
      description: "Een stroom die de nieuwe standaardfout uitvoer."
  overload: System.Console.SetError*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>newError</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De aanroeper heeft niet de vereiste machtiging."
  platform:
  - net462
- uid: System.Console.SetIn(System.IO.TextReader)
  id: SetIn(System.IO.TextReader)
  parent: System.Console
  langs:
  - csharp
  name: SetIn(TextReader)
  nameWithType: Console.SetIn(TextReader)
  fullName: System.Console.SetIn(TextReader)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Stelt de <xref:System.Console.In*>eigenschap met het opgegeven <xref:System.IO.TextReader>object.</xref:System.IO.TextReader> </xref:System.Console.In*>"
  remarks: "Standaard de <xref:System.Console.In%2A>eigenschap is ingesteld op de standaard invoerstroom.</xref:System.Console.In%2A>       Een <xref:System.IO.StreamReader>die kapselt een <xref:System.IO.FileStream>kan worden gebruikt voor invoer ontvangen van een bestand.</xref:System.IO.FileStream> </xref:System.IO.StreamReader>"
  example:
  - "The following example illustrates the use of the SetIn method. It replaces four consecutive space characters in a string with a tab character. To run it, you must supply two command line arguments. The first is the name of an existing text file to redirect the standard input stream to. The second is the name of a file to redirect the standard output stream to. This file need not exist. If it does, its contents will be overwritten.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.setin-s_1.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.setin-s_1.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.setin-s_1.cs)]"
  syntax:
    content: public static void SetIn (System.IO.TextReader newIn);
    parameters:
    - id: newIn
      type: System.IO.TextReader
      description: "Een stroom die de nieuwe standaard invoer is."
  overload: System.Console.SetIn*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>newIn</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De aanroeper heeft niet de vereiste machtiging."
  platform:
  - net462
- uid: System.Console.SetOut(System.IO.TextWriter)
  id: SetOut(System.IO.TextWriter)
  parent: System.Console
  langs:
  - csharp
  name: SetOut(TextWriter)
  nameWithType: Console.SetOut(TextWriter)
  fullName: System.Console.SetOut(TextWriter)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Stelt de <xref:System.Console.Out*>eigenschap met het opgegeven <xref:System.IO.TextWriter>object.</xref:System.IO.TextWriter> </xref:System.Console.Out*>"
  remarks: "Standaard de <xref:System.Console.Out%2A>eigenschap is ingesteld op de standaard uitvoerstroom.</xref:System.Console.Out%2A>       Een <xref:System.IO.StreamWriter>die ingekapseld een <xref:System.IO.FileStream>kan worden gebruikt voor het verzenden van uitvoer naar een bestand.</xref:System.IO.FileStream> </xref:System.IO.StreamWriter> Bijvoorbeeld: [!code-cs [System.Console.SetOut#1](~/add/codesnippet/csharp/m-system.console.setout-_1.cs)][!code-vb[System.Console.SetOut#1](~/add/codesnippet/visualbasic/m-system.console.setout-_1.vb)][!code-cpp[System.Console.SetOut#1    ](~/add/codesnippet/cpp/m-system.console.setout-_1.cpp)]"
  example:
  - "The following example illustrates the use of the SetOut method. It replaces four consecutive space characters in a string with a tab character. To run it, you must supply two command line arguments. The first is the name of an existing text file to redirect the standard input stream to. The second is the name of a file to redirect the standard output stream to. This file need not exist. If it does, its contents will be overwritten.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.setout-_2.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.setout-_2.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.setout-_2.cs)]"
  syntax:
    content: public static void SetOut (System.IO.TextWriter newOut);
    parameters:
    - id: newOut
      type: System.IO.TextWriter
      description: "Een stroom die de standaarduitvoer van de nieuwe."
  overload: System.Console.SetOut*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>newOut</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De aanroeper heeft niet de vereiste machtiging."
  platform:
  - net462
- uid: System.Console.SetWindowPosition(System.Int32,System.Int32)
  id: SetWindowPosition(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: SetWindowPosition(Int32,Int32)
  nameWithType: Console.SetWindowPosition(Int32,Int32)
  fullName: System.Console.SetWindowPosition(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee stelt u de positie van het consolevenster ten opzichte van de schermbuffer."
  remarks: "Het consolevenster in het venster van het besturingssysteem weergegeven en het consolevenster bevat een deel van de schermbuffer. De methode SetWindowPosition is van invloed op de positie van het consolevenster ten opzichte van de schermbuffer, maar heeft geen invloed op de positie van het besturingssysteem-venster ten opzichte van het bureaublad.       De windows-console en het besturingssysteem in het algemeen hebben geen invloed op elkaar. Echter, als de schermbuffer kan niet worden weergegeven in de huidige grenzen van het consolevenster, het besturingssysteem wordt automatisch schuifbalken het venster van het besturingssysteem. In dat geval het verplaatsen van de schuifbalken van het besturingssysteem is van invloed op de positie van het consolevenster en verplaatsen van het consolevenster met de methode SetWindowPosition is van invloed op de positie van de schuifbalken van het besturingssysteem."
  example:
  - "The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the SetWindowPosition, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods. The example draws a grid pattern in the screen buffer based on the screen buffer width. Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed. The grid pattern helps you see the movement of the console window relative to the screen buffer.  \n  \n [!code-cpp[console.windowLT#1](~/add/codesnippet/cpp/m-system.console.setwind_0_1.cpp)]\n [!code-vb[console.windowLT#1](~/add/codesnippet/visualbasic/m-system.console.setwind_0_1.vb)]\n [!code-cs[console.windowLT#1](~/add/codesnippet/csharp/m-system.console.setwind_0_1.cs)]"
  syntax:
    content: public static void SetWindowPosition (int left, int top);
    parameters:
    - id: left
      type: System.Int32
      description: "De kolompositie van de linkerbovenhoek van het consolevenster."
    - id: top
      type: System.Int32
      description: "De rijpositie van de linkerbovenhoek van het consolevenster."
  overload: System.Console.SetWindowPosition*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>left</code>of <code>top</code> is kleiner dan nul.       - of - <code>left</code>  + <xref:System.Console.WindowWidth*> is groter dan <xref:System.Console.BufferWidth*>.       - of - <code>top</code>  + <xref:System.Console.WindowHeight*> is groter dan <xref:System.Console.BufferHeight*>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De gebruiker heeft geen machtiging voor deze actie."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.SetWindowSize(System.Int32,System.Int32)
  id: SetWindowSize(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: SetWindowSize(Int32,Int32)
  nameWithType: Console.SetWindowSize(Int32,Int32)
  fullName: System.Console.SetWindowSize(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee stelt u de hoogte en breedte van het consolevenster op de opgegeven waarden."
  remarks: ''
  example:
  - "This example demonstrates the SetWindowSize method, and the <xref:System.Console.WindowWidth%2A> and <xref:System.Console.WindowHeight%2A> properties. You must run the example to see the full effect of changing the console window size.  \n  \n The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key to be pressed. When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press. Finally, when any key is pressed, the console window is restored to its original dimensions and the example terminates.  \n  \n [!code-cpp[console.setwindowsize#1](~/add/codesnippet/cpp/m-system.console.setwind_1_1.cpp)]\n [!code-vb[console.setwindowsize#1](~/add/codesnippet/visualbasic/m-system.console.setwind_1_1.vb)]\n [!code-cs[console.setwindowsize#1](~/add/codesnippet/csharp/m-system.console.setwind_1_1.cs)]"
  syntax:
    content: public static void SetWindowSize (int width, int height);
    parameters:
    - id: width
      type: System.Int32
      description: "De breedte van het consolevenster, gemeten in kolommen."
    - id: height
      type: System.Int32
      description: "De hoogte van het consolevenster, gemeten in rijen."
  overload: System.Console.SetWindowSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>width</code>of <code>height</code> is kleiner dan of gelijk zijn aan nul.       - of - <code>width</code> plus <xref:System.Console.WindowLeft*> of <code>height</code> plus <xref:System.Console.WindowTop*> is groter dan of gelijk zijn aan &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       - of - <code>width</code> of <code>height</code> is groter dan de grootst mogelijke breedte of hoogte van het huidige scherm resolutie en console lettertype."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De gebruiker heeft geen machtiging voor deze actie."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.Title
  id: Title
  parent: System.Console
  langs:
  - csharp
  name: Title
  nameWithType: Console.Title
  fullName: System.Console.Title
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de titel moet worden weergegeven in de titelbalk van console."
  remarks: ''
  example:
  - "This example demonstrates the Title property. The example displays the current title of the operating system window, waits for a key press, then displays a new title.  \n  \n [!code-cs[console.title#1](~/add/codesnippet/csharp/p-system.console.title_1.cs)]\n [!code-cpp[console.title#1](~/add/codesnippet/cpp/p-system.console.title_1.cpp)]\n [!code-vb[console.title#1](~/add/codesnippet/visualbasic/p-system.console.title_1.vb)]"
  syntax:
    content: public static string Title { get; set; }
    return:
      type: System.String
      description: "De tekenreeks die moet worden weergegeven in de titelbalk van de console. De maximale lengte van de titel-tekenreeks is 24500 tekens."
  overload: System.Console.Title*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De opgehaalde titel is in een get-bewerking langer dan 24500 tekens."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De opgegeven titel is langer dan 24500 tekens in een set-bewerking."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "In een set-bewerking, de opgegeven titel is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.TreatControlCAsInput
  id: TreatControlCAsInput
  parent: System.Console
  langs:
  - csharp
  name: TreatControlCAsInput
  nameWithType: Console.TreatControlCAsInput
  fullName: System.Console.TreatControlCAsInput
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld met een waarde die aangeeft of de combinatie van de <xref href=&quot;System.ConsoleModifiers&quot;> </xref> toets en <xref href=&quot;System.ConsoleKey&quot;> </xref> console sleutel (Ctrl + C) wordt behandeld als gewone invoer of als een onderbreking die wordt verwerkt door het besturingssysteem."
  remarks: "Als de waarde van de eigenschap TreatControlCAsInput `false` en Ctrl + C drukt, de ingedrukte sleutels worden niet opgeslagen in de invoerbuffer en het besturingssysteem beëindigt het proces momenteel worden uitgevoerd. Dit is de standaardwaarde.      > [!CAUTION] > Zorgvuldig deze eigenschap niet gebruiken omdat deze wordt ingesteld op `true` een aanzienlijk effect heeft. De meeste gebruikers verwachten Ctrl + C om een consoletoepassing te beëindigen. Als u het effect van Ctrl + C uitschakelt, moet de gebruiker moet Ctrl + Break gebruiken om de toepassing, een minder bekende toetsencombinatie is te beëindigen."
  example:
  - "The following example demonstrates the TreatControlCAsInput property.  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/p-system.console.treatco_1.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/p-system.console.treatco_1.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/p-system.console.treatco_1.vb)]"
  syntax:
    content: public static bool TreatControlCAsInput { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u Ctrl + C wordt behandeld als gewone invoer; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.TreatControlCAsInput*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan niet ophalen of instellen van de invoermodus van de invoerbuffer console."
  platform:
  - net462
- uid: System.Console.WindowHeight
  id: WindowHeight
  parent: System.Console
  langs:
  - csharp
  name: WindowHeight
  nameWithType: Console.WindowHeight
  fullName: System.Console.WindowHeight
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de hoogte van het venstergebied van de console."
  remarks: "Een poging de waarde van de eigenschap WindowHeight instellen als uitvoer wordt omgeleid genereert een <xref:System.ArgumentOutOfRangeException>of een <xref:System.IO.IOException>uitzondering.</xref:System.IO.IOException> </xref:System.ArgumentOutOfRangeException> U kunt de waarde van deze eigenschap alleen als instellen om te voorkomen dat een uitzondering, de <xref:System.Console.IsOutputRedirected%2A>resultaat van de eigenschap `false`.</xref:System.Console.IsOutputRedirected%2A>"
  example:
  - "This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the <xref:System.Console.WindowWidth%2A> and WindowHeight properties. You must run the example to see the full effect of changing the console window size.  \n  \n The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press. When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press. Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.  \n  \n [!code-cpp[console.setwindowsize#1](~/add/codesnippet/cpp/p-system.console.windowh_1.cpp)]\n [!code-vb[console.setwindowsize#1](~/add/codesnippet/visualbasic/p-system.console.windowh_1.vb)]\n [!code-cs[console.setwindowsize#1](~/add/codesnippet/csharp/p-system.console.windowh_1.cs)]"
  syntax:
    content: public static int WindowHeight { get; set; }
    return:
      type: System.Int32
      description: "De hoogte van het consolevenster, gemeten in rijen."
  overload: System.Console.WindowHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De waarde van de <> </> *> eigenschap of de waarde van de eigenschap WindowHeight is kleiner dan of gelijk zijn aan 0.       - of - de waarde van de eigenschap WindowHeight plus de waarde van de <> </> *> eigenschap is groter dan of gelijk zijn aan &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       - of - de waarde van de <xref:System.Console.WindowWidth*>eigenschap of de waarde van de eigenschap WindowHeight is groter dan de grootst mogelijke breedte of hoogte van de huidige console en de oplossing schermlettertype.</xref:System.Console.WindowWidth*>"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Fout bij het lezen of schrijven van gegevens."
  platform:
  - net462
- uid: System.Console.WindowLeft
  id: WindowLeft
  parent: System.Console
  langs:
  - csharp
  name: WindowLeft
  nameWithType: Console.WindowLeft
  fullName: System.Console.WindowLeft
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de meest linkse positie van het gebied van de console-venster ten opzichte van de schermbuffer."
  remarks: "De console vertegenwoordigt een rechthoekig venster in een grotere rechthoekig buffergebied. Het venster en in de buffer worden verticaal gemeten door het aantal rijen en horizontaal door het aantal kolommen. De afmetingen van het buffergebied worden gedefinieerd door de <xref:System.Console.BufferHeight%2A>en <xref:System.Console.BufferWidth%2A>Eigenschappen.</xref:System.Console.BufferWidth%2A> </xref:System.Console.BufferHeight%2A> De afmetingen van het gebied van de console worden gedefinieerd door de <xref:System.Console.WindowHeight%2A>en <xref:System.Console.WindowWidth%2A>Eigenschappen.</xref:System.Console.WindowWidth%2A> </xref:System.Console.WindowHeight%2A> De WindowLeft, eigenschap bepaalt welke kolom van het buffergebied wordt weergegeven in de eerste kolom van het consolevenster. De waarde van de WindowLeft,-eigenschap kan variëren van 0 tot <xref:System.Console.BufferWidth%2A>- <xref:System.Console.WindowWidth%2A>.</xref:System.Console.WindowWidth%2A> </xref:System.Console.BufferWidth%2A> Een <xref:System.ArgumentOutOfRangeException>.</xref:System.ArgumentOutOfRangeException> probeert in te stellen op een waarde buiten dit bereik genereert       Wanneer een consolevenster eerst wordt geopend, is de standaardwaarde van de WindowLeft, eigenschap nul, wat aangeeft dat de eerste kolom wordt weergegeven door de console overeenkomt met de eerste kolom (de kolom op positie nul) in het buffergebied. De standaardbreedte van zowel het consolevenster het buffergebied is 80 kolommen. Dit betekent dat de WindowLeft,-eigenschap kan alleen worden gewijzigd als het consolevenster fijner wordt gemaakt of het buffergebied breder wordt gemaakt.       Houd er rekening mee dat als de breedte van de buffergebied de breedte van het consolevenster overschrijdt, wordt de waarde van de WindowLeft, eigenschap automatisch bijgewerkt wanneer de gebruiker de horizontale schuifbalk gebruikt voor het definiëren van het venster relatie in de buffer-ruimte.       Bij het instellen van de waarde van de WindowLeft, eigenschap als uitvoer omgeleide er wordt een <xref:System.IO.IOException>uitzondering.</xref:System.IO.IOException> U kunt de waarde van deze eigenschap alleen als instellen om te voorkomen dat de uitzondering, de <xref:System.Console.IsOutputRedirected%2A>resultaat van de eigenschap `false`.</xref:System.Console.IsOutputRedirected%2A>"
  example:
  - "The following example opens an 80-column console window and defines a buffer area that is 120 columns wide. It displays information on window and buffer size, and then waits for the user to press either the LEFT ARROW key or the RIGHT ARROW key. In the former case, it decrements the value of the WindowLeft property by one if the result is a legal value. In the latter case, it increases the value of the WindowLeft property by one if the result would be legal. Note that the example does not have to handle an <xref:System.ArgumentOutOfRangeException>, because it checks that the value to be assigned to the WindowLeft property is not negative and does not cause the sum of the WindowLeft and <xref:System.Console.WindowWidth%2A> properties to exceed the <xref:System.Console.BufferWidth%2A> property value.  \n  \n [!code-vb[System.Console.WindowLeft#1](~/add/codesnippet/visualbasic/p-system.console.windowl_1.vb)]\n [!code-cs[System.Console.WindowLeft#1](~/add/codesnippet/csharp/p-system.console.windowl_1.cs)]\n [!code-cpp[System.Console.WindowLeft#1](~/add/codesnippet/cpp/p-system.console.windowl_1.cpp)]"
  syntax:
    content: public static int WindowLeft { get; set; }
    return:
      type: System.Int32
      description: "De positie van het meest linkse console-venster wordt gemeten in kolommen."
  overload: System.Console.WindowLeft*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "In een set-bewerking, de waarde moet worden toegewezen kleiner is dan nul.       - of - als gevolg van de toewijzing, plus WindowLeft <> </> *> zou overschrijden <> </> *>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Fout bij het lezen of schrijven van gegevens."
  platform:
  - net462
- uid: System.Console.WindowTop
  id: WindowTop
  parent: System.Console
  langs:
  - csharp
  name: WindowTop
  nameWithType: Console.WindowTop
  fullName: System.Console.WindowTop
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de bovenste positie van het gebied van de console-venster ten opzichte van de schermbuffer."
  remarks: "De console vertegenwoordigt een rechthoekig venster in een grotere rechthoekig buffergebied. Het venster en in de buffer worden verticaal gemeten door het aantal rijen en horizontaal door het aantal kolommen. De afmetingen van het buffergebied worden gedefinieerd door de <xref:System.Console.BufferHeight%2A>en <xref:System.Console.BufferWidth%2A>Eigenschappen.</xref:System.Console.BufferWidth%2A> </xref:System.Console.BufferHeight%2A> De afmetingen van het gebied van de console worden gedefinieerd door de <xref:System.Console.WindowHeight%2A>en <xref:System.Console.WindowWidth%2A>Eigenschappen.</xref:System.Console.WindowWidth%2A> </xref:System.Console.WindowHeight%2A> De WindowTop, eigenschap bepaalt welke rij in het buffergebied wordt weergegeven in de eerste kolom van het consolevenster. De waarde van de WindowTop,-eigenschap kan variëren van 0 tot <xref:System.Console.BufferHeight%2A>- <xref:System.Console.WindowHeight%2A>.</xref:System.Console.WindowHeight%2A> </xref:System.Console.BufferHeight%2A> Een <xref:System.ArgumentOutOfRangeException>.</xref:System.ArgumentOutOfRangeException> probeert in te stellen op een waarde buiten dit bereik genereert       Bij het instellen van de waarde van de WindowTop, eigenschap als uitvoer omgeleide er wordt een <xref:System.IO.IOException>uitzondering.</xref:System.IO.IOException> U kunt de waarde van deze eigenschap alleen als instellen om te voorkomen dat de uitzondering, de <xref:System.Console.IsOutputRedirected%2A>resultaat van de eigenschap `false`.</xref:System.Console.IsOutputRedirected%2A>"
  example:
  - "The following example demonstrates the <xref:System.Console.WindowLeft%2A>, WindowTop, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods. The example draws a grid pattern in the screen buffer based on the screen buffer width. Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed. The grid pattern helps you see the movement of the console window relative to the screen buffer.  \n  \n [!code-cpp[console.windowLT#1](~/add/codesnippet/cpp/p-system.console.windowtop_1.cpp)]\n [!code-vb[console.windowLT#1](~/add/codesnippet/visualbasic/p-system.console.windowtop_1.vb)]\n [!code-cs[console.windowLT#1](~/add/codesnippet/csharp/p-system.console.windowtop_1.cs)]"
  syntax:
    content: public static int WindowTop { get; set; }
    return:
      type: System.Int32
      description: "De positie van het bovenste console-venster wordt gemeten in rijen."
  overload: System.Console.WindowTop*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "In een set-bewerking, de waarde moet worden toegewezen kleiner is dan nul.       - of - als gevolg van de toewijzing, plus WindowTop <> </> *> zou overschrijden <> </> *>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Fout bij het lezen of schrijven van gegevens."
  platform:
  - net462
- uid: System.Console.WindowWidth
  id: WindowWidth
  parent: System.Console
  langs:
  - csharp
  name: WindowWidth
  nameWithType: Console.WindowWidth
  fullName: System.Console.WindowWidth
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de breedte van het consolevenster."
  remarks: "Een poging de waarde van de eigenschap WindowWidth instellen als uitvoer wordt omgeleid genereert een <xref:System.ArgumentOutOfRangeException>of een <xref:System.IO.IOException>uitzondering.</xref:System.IO.IOException> </xref:System.ArgumentOutOfRangeException> U kunt de waarde van deze eigenschap alleen als instellen om te voorkomen dat een uitzondering, de <xref:System.Console.IsOutputRedirected%2A>resultaat van de eigenschap `false`.</xref:System.Console.IsOutputRedirected%2A>"
  example:
  - "This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the WindowWidth and <xref:System.Console.WindowHeight%2A> properties. You must run the example to see the full effect of changing the console window size.  \n  \n The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press. When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press. Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.  \n  \n [!code-cpp[console.setwindowsize#1](~/add/codesnippet/cpp/p-system.console.windoww_1.cpp)]\n [!code-vb[console.setwindowsize#1](~/add/codesnippet/visualbasic/p-system.console.windoww_1.vb)]\n [!code-cs[console.setwindowsize#1](~/add/codesnippet/csharp/p-system.console.windoww_1.cs)]"
  syntax:
    content: public static int WindowWidth { get; set; }
    return:
      type: System.Int32
      description: "De breedte van het consolevenster, gemeten in kolommen."
  overload: System.Console.WindowWidth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De waarde van de eigenschap WindowWidth of de waarde van de <> </> *> eigenschap is kleiner dan of gelijk zijn aan 0.       - of - de waarde van de <> </> *> eigenschap plus de waarde van de <> </> *> eigenschap is groter dan of gelijk zijn aan &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       - of - de waarde van de eigenschap WindowWidth of de waarde van de <> </> *> eigenschap groter is dan de grootste mogelijke vensterbreedte of hoogte voor het huidige scherm resolutie en console lettertype."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Fout bij het lezen of schrijven van gegevens."
  platform:
  - net462
- uid: System.Console.Write(System.Boolean)
  id: Write(System.Boolean)
  parent: System.Console
  langs:
  - csharp
  name: Write(Boolean)
  nameWithType: Console.Write(Boolean)
  fullName: System.Console.Write(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De tekstweergave van de opgegeven Boole-waarde naar de standaard uitvoerstroom geschreven."
  remarks: "De tekstweergave van `value` wordt geproduceerd door aan te roepen <xref:System.Boolean.ToString%2A?displayProperty=fullName>, die beide <xref:System.Boolean.TrueString?displayProperty=fullName>of <xref:System.Boolean.FalseString?displayProperty=fullName>.</xref:System.Boolean.FalseString?displayProperty=fullName> </xref:System.Boolean.TrueString?displayProperty=fullName> levert</xref:System.Boolean.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_8_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_8_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_8_1.cpp)]"
  syntax:
    content: public static void Write (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "De waarde om te schrijven."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.Write(System.Char)
  id: Write(System.Char)
  parent: System.Console
  langs:
  - csharp
  name: Write(Char)
  nameWithType: Console.Write(Char)
  fullName: System.Console.Write(Char)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De opgegeven waarde voor Unicode-teken schrijft naar de Standaarduitvoerstroom."
  remarks: ''
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_9_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_9_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_9_1.cpp)]"
  syntax:
    content: public static void Write (char value);
    parameters:
    - id: value
      type: System.Char
      description: "De waarde om te schrijven."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.Write(System.Char[])
  id: Write(System.Char[])
  parent: System.Console
  langs:
  - csharp
  name: Write(Char[])
  nameWithType: Console.Write(Char[])
  fullName: System.Console.Write(Char[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De opgegeven matrix van Unicode-tekens naar de standaard uitvoerstroom geschreven."
  syntax:
    content: public static void Write (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Een matrix van Unicode-teken."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.Write(System.Decimal)
  id: Write(System.Decimal)
  parent: System.Console
  langs:
  - csharp
  name: Write(Decimal)
  nameWithType: Console.Write(Decimal)
  fullName: System.Console.Write(Decimal)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Schrijft de tekstweergave van de opgegeven <xref:System.Decimal>waarde naar de standaard uitvoerstroom.</xref:System.Decimal>"
  remarks: "De tekstweergave van `value` wordt geproduceerd door het aanroepen van <xref:System.Decimal.ToString%2A?displayProperty=fullName>.</xref:System.Decimal.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_12_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_12_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_12_1.cpp)]"
  syntax:
    content: public static void Write (decimal value);
    parameters:
    - id: value
      type: System.Decimal
      description: "De waarde om te schrijven."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.Write(System.Double)
  id: Write(System.Double)
  parent: System.Console
  langs:
  - csharp
  name: Write(Double)
  nameWithType: Console.Write(Double)
  fullName: System.Console.Write(Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De tekstweergave van de opgegeven kommagetal met dubbele precisie schrijft naar de Standaarduitvoerstroom."
  remarks: "De tekstweergave van `value` wordt geproduceerd door het aanroepen van de <xref:System.Double.ToString%2A?displayProperty=fullName>methode.</xref:System.Double.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_6_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_6_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_6_1.cpp)]"
  syntax:
    content: public static void Write (double value);
    parameters:
    - id: value
      type: System.Double
      description: "De waarde om te schrijven."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.Write(System.Int32)
  id: Write(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: Write(Int32)
  nameWithType: Console.Write(Int32)
  fullName: System.Console.Write(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De tekstweergave van de opgegeven 32-bits ondertekende integer-waarde naar de standaard uitvoerstroom geschreven."
  remarks: "De tekstweergave van `value` wordt geproduceerd door het aanroepen van de <xref:System.Int32.ToString%2A?displayProperty=fullName>methode.</xref:System.Int32.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_10_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_10_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_10_1.cpp)]"
  syntax:
    content: public static void Write (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "De waarde om te schrijven."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.Write(System.Int64)
  id: Write(System.Int64)
  parent: System.Console
  langs:
  - csharp
  name: Write(Int64)
  nameWithType: Console.Write(Int64)
  fullName: System.Console.Write(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De tekstweergave van de opgegeven 64-bits ondertekende integer-waarde naar de standaard uitvoerstroom geschreven."
  remarks: "De tekstweergave van `value` wordt geproduceerd door het aanroepen van de <xref:System.Int64.ToString%2A?displayProperty=fullName>methode.</xref:System.Int64.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_0_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_0_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_0_1.cpp)]"
  syntax:
    content: public static void Write (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "De waarde om te schrijven."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.Write(System.Object)
  id: Write(System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(Object)
  nameWithType: Console.Write(Object)
  fullName: System.Console.Write(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De tekstweergave van het opgegeven object naar de standaard uitvoerstroom geschreven."
  remarks: "Als `value` is `null`, niets geschreven en er is geen uitzondering. Anders wordt de `ToString` methode van `value` aangeroepen om de tekenreeksvoorstelling produceren en de resulterende tekenreeks in de standaard uitvoerstroom geschreven."
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_3_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_3_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_3_1.cpp)]"
  syntax:
    content: public static void Write (object value);
    parameters:
    - id: value
      type: System.Object
      description: "De waarde te schrijven, of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.Write(System.Single)
  id: Write(System.Single)
  parent: System.Console
  langs:
  - csharp
  name: Write(Single)
  nameWithType: Console.Write(Single)
  fullName: System.Console.Write(Single)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De tekstweergave van de opgegeven kommagetal met enkele precisie naar de standaard uitvoerstroom geschreven."
  remarks: "De tekstweergave van `value` wordt geproduceerd door het aanroepen van de <xref:System.Single.ToString%2A?displayProperty=fullName>methode.</xref:System.Single.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_1_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_1_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_1_1.cpp)]"
  syntax:
    content: public static void Write (float value);
    parameters:
    - id: value
      type: System.Single
      description: "De waarde om te schrijven."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.Write(System.String)
  id: Write(System.String)
  parent: System.Console
  langs:
  - csharp
  name: Write(String)
  nameWithType: Console.Write(String)
  fullName: System.Console.Write(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De opgegeven tekenreekswaarde schrijft naar de Standaarduitvoerstroom."
  remarks: "Als de waarde is `null`, niets geschreven naar de Standaarduitvoerstroom."
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_5_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_5_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_5_1.cpp)]"
  syntax:
    content: public static void Write (string value);
    parameters:
    - id: value
      type: System.String
      description: "De waarde om te schrijven."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.Write(System.UInt32)
  id: Write(System.UInt32)
  parent: System.Console
  langs:
  - csharp
  name: Write(UInt32)
  nameWithType: Console.Write(UInt32)
  fullName: System.Console.Write(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De tekstweergave van de opgegeven 32-bits geheel getal zonder teken-waarde naar de standaard uitvoerstroom geschreven."
  remarks: "De tekstweergave van `value` wordt geproduceerd door het aanroepen van de <xref:System.UInt32.ToString%2A?displayProperty=fullName>methode.</xref:System.UInt32.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_7_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_7_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_7_1.cpp)]"
  syntax:
    content: public static void Write (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: "De waarde om te schrijven."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.Write(System.UInt64)
  id: Write(System.UInt64)
  parent: System.Console
  langs:
  - csharp
  name: Write(UInt64)
  nameWithType: Console.Write(UInt64)
  fullName: System.Console.Write(UInt64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De tekstweergave van de opgegeven 64-bits geheel getal zonder teken-waarde naar de standaard uitvoerstroom geschreven."
  remarks: "De tekstweergave van `value` wordt geproduceerd door het aanroepen van de <xref:System.UInt64.ToString%2A?displayProperty=fullName>methode.</xref:System.UInt64.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_4_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_4_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_4_1.cpp)]"
  syntax:
    content: public static void Write (ulong value);
    parameters:
    - id: value
      type: System.UInt64
      description: "De waarde om te schrijven."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object)
  id: Write(System.String,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object)
  nameWithType: Console.Write(String,Object)
  fullName: System.Console.Write(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Schrijft de tekstweergave van het opgegeven object in de standaard uitvoerstroom met behulp van de gegevens van de opgegeven indeling."
  remarks: "Deze methode maakt gebruik van de [samengestelde opmaak functie](~/add/includes/ajax-current-ext-md.md) van .NET Framework dat de waarde van een object niet converteren naar de tekstweergave en die representatie insluiten in een tekenreeks. De resulterende tekenreeks naar de uitvoerstroom geschreven.       De `format` parameter bestaat uit nul of meer wordt uitgevoerd van tekst onderling vermengd met nul of meer geïndexeerde tijdelijke aanduidingen indeling-items die met een object in de parameterlijst van deze methode overeenkomen wordt aangeroepen. De opmaak proces vervangen elk item indeling door de tekstweergave van de waarde van het bijbehorende object.       De syntaxis van een item indeling is `{` *index*[`,`*uitlijning*] [`:`*formatString*]`}`, waarmee een verplichte index, de optionele lengte en uitlijning van de opgemaakte tekst en een optionele tekenreeks indeling aanduiding tekens bevat die hoe de waarde bepalen van het bijbehorende object is geformatteerd.       .NET Framework biedt uitgebreide opmaak ondersteuning die wordt beschreven in meer detail in de volgende onderwerpen voor opmaak.      -Voor meer informatie over de samengestelde opmaak functie wordt ondersteund door methoden zoals <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, en sommige overloads van <xref:System.Console.WriteLine%2A>, Zie [samengestelde opmaak](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Zie voor meer informatie over specificaties numerieke notatie [standaard numerieke indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md) en [aangepaste numerieke notatie tekenreeksen](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over datum en tijd opmaken van de specificaties [standaarddatum en tijd-indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md) en [aangepaste datum en tijd-indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over opsomming indeling specificaties [Opsommingstekenreeksen indeling](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over het opmaken van [opmaak typen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.write-s_2_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.write-s_2_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.write-s_2_1.vb)]  \n  \n The following example illustrates the use of the Write method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_2_2.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_2_2.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_2_2.cpp)]"
  syntax:
    content: public static void Write (string format, object arg0);
    parameters:
    - id: format
      type: System.String
      description: "Een samengestelde notatietekenreeks (Zie opmerking)."
    - id: arg0
      type: System.Object
      description: "Een object om te schrijven met behulp van `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "De indelingsspecificatie in <code> format </code> is ongeldig."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object[])
  id: Write(System.String,System.Object[])
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object[])
  nameWithType: Console.Write(String,Object[])
  fullName: System.Console.Write(String,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Schrijft de tekstweergave van de opgegeven matrix met objecten in de standaard uitvoerstroom met behulp van de gegevens van de opgegeven indeling."
  remarks: "Deze methode maakt gebruik van de [samengestelde opmaak functie](~/add/includes/ajax-current-ext-md.md) van .NET Framework dat de waarde van een object niet converteren naar de tekstweergave en die representatie insluiten in een tekenreeks. De resulterende tekenreeks naar de uitvoerstroom geschreven.       De `format` parameter bestaat uit nul of meer wordt uitgevoerd van tekst onderling vermengd met nul of meer geïndexeerde tijdelijke aanduidingen indeling-items die met een object in de parameterlijst van deze methode overeenkomen wordt aangeroepen. De opmaak proces vervangen elk item indeling door de tekstweergave van de waarde van het bijbehorende object.       De syntaxis van een item indeling is `{` *index*[`,`*uitlijning*] [`:`*formatString*]`}`, waarmee een verplichte index, de optionele lengte en uitlijning van de opgemaakte tekst en een optionele tekenreeks indeling aanduiding tekens bevat die hoe de waarde bepalen van het bijbehorende object is geformatteerd.       .NET Framework biedt uitgebreide opmaak ondersteuning die wordt beschreven in meer detail in de volgende onderwerpen voor opmaak.      -Voor meer informatie over de samengestelde opmaak functie wordt ondersteund door methoden zoals <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, en sommige overloads van <xref:System.Console.WriteLine%2A>, Zie [samengestelde opmaak](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Zie voor meer informatie over specificaties numerieke notatie [standaard numerieke indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md) en [aangepaste numerieke notatie tekenreeksen](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over datum en tijd opmaken van de specificaties [standaarddatum en tijd-indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md) en [aangepaste datum en tijd-indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over opsomming indeling specificaties [Opsommingstekenreeksen indeling](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over het opmaken van [opmaak typen](~/add/includes/ajax-current-ext-md.md).       De `arg` parameter is een parametermatrix. Argumenten kunnen worden doorgegeven aan de methode als een matrix of als de lijst met vijf of meer items. De voorbeelden van beide vormen van de aanroep van methode."
  example:
  - "The following example defines a `Person` class with a number of properties that provide information about a person. Its `GetDescription` method returns an array that contains all of the property values except one. The example then uses the array returned by the  `GetDescription` method  to display the values of the Person object.  \n  \n [!code-cs[System.Console.Write#1](~/add/codesnippet/csharp/m-system.console.write-s_13_1.cs)]\n [!code-vb[System.Console.Write#1](~/add/codesnippet/visualbasic/m-system.console.write-s_13_1.vb)]  \n  \n Note that the example calls the Write method rather than the [WriteLine(String, Object\\[\\])](assetId:///M:System.Console.WriteLine(System.String,System.Object[])?qualifyHint=False&autoUpgrade=False) method because it attempts to display the value of the `Person.Remarks` property on the same line. To do this, it examines the value of the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.WindowWidth%2A> properties to determine whether there is enough space for the remark to fit.  If there is, it displays the line. If not, it writes a line, indents three spaces, and displays the remark.  \n  \n The following example is identical to the first, except that it supplies a five-item list as the `arg` argument instead of a parameter array.  \n  \n [!code-vb[System.Console.Write#2](~/add/codesnippet/visualbasic/m-system.console.write-s_13_2.vb)]\n [!code-cs[System.Console.Write#2](~/add/codesnippet/csharp/m-system.console.write-s_13_2.cs)]"
  syntax:
    content: public static void Write (string format, object[] arg);
    parameters:
    - id: format
      type: System.String
      description: "Een samengestelde notatietekenreeks (Zie opmerking)."
    - id: arg
      type: System.Object[]
      description: "Een matrix met objecten die moeten worden geschreven met behulp van `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>or <code>arg</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "De indelingsspecificatie in <code> format </code> is ongeldig."
  platform:
  - net462
- uid: System.Console.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: Write(Char[],Int32,Int32)
  nameWithType: Console.Write(Char[],Int32,Int32)
  fullName: System.Console.Write(Char[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De opgegeven subarray van Unicode-tekens naar de standaard uitvoerstroom geschreven."
  remarks: "Deze methode schrijft `count` tekens vanaf positie `index` van `buffer` naar de standaard uitvoerstroom."
  syntax:
    content: public static void Write (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Een matrix van Unicode-tekens."
    - id: index
      type: System.Int32
      description: "De startpositie in `buffer`."
    - id: count
      type: System.Int32
      description: "Het aantal tekens te schrijven."
  overload: System.Console.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>of <code>count</code> is kleiner dan nul."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>index</code>plus <code>count</code> geeft u de positie valt niet binnen <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object,Object)
  nameWithType: Console.Write(String,Object,Object)
  fullName: System.Console.Write(String,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De tekstweergave van de opgegeven objecten schrijft naar de standaard uitvoerstroom met behulp van de gegevens van de opgegeven indeling."
  remarks: "Deze methode maakt gebruik van de [samengestelde opmaak functie](~/add/includes/ajax-current-ext-md.md) van .NET Framework dat de waarde van een object niet converteren naar de tekstweergave en die representatie insluiten in een tekenreeks. De resulterende tekenreeks naar de uitvoerstroom geschreven.       De `format` parameter bestaat uit nul of meer wordt uitgevoerd van tekst onderling vermengd met nul of meer geïndexeerde tijdelijke aanduidingen indeling-items die met een object in de parameterlijst van deze methode overeenkomen wordt aangeroepen. De opmaak proces vervangen elk item indeling door de tekstweergave van de waarde van het bijbehorende object.       De syntaxis van een item indeling is `{` *index*[`,`*uitlijning*] [`:`*formatString*]`}`, waarmee een verplichte index, de optionele lengte en uitlijning van de opgemaakte tekst en een optionele tekenreeks indeling aanduiding tekens bevat die hoe de waarde bepalen van het bijbehorende object is geformatteerd.       .NET Framework biedt uitgebreide opmaak ondersteuning die wordt beschreven in meer detail in de volgende onderwerpen voor opmaak.      -Voor meer informatie over de samengestelde opmaak functie wordt ondersteund door methoden zoals <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, en sommige overloads van <xref:System.Console.WriteLine%2A>, Zie [samengestelde opmaak](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Zie voor meer informatie over specificaties numerieke notatie [standaard numerieke indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md) en [aangepaste numerieke notatie tekenreeksen](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over datum en tijd opmaken van de specificaties [standaarddatum en tijd-indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md) en [aangepaste datum en tijd-indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over opsomming indeling specificaties [Opsommingstekenreeksen indeling](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over het opmaken van [opmaak typen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.write-s_14_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.write-s_14_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.write-s_14_1.vb)]  \n  \n The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_14_2.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_14_2.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_14_2.cpp)]"
  syntax:
    content: public static void Write (string format, object arg0, object arg1);
    parameters:
    - id: format
      type: System.String
      description: "Een samengestelde notatietekenreeks (Zie opmerking)."
    - id: arg0
      type: System.Object
      description: "Het eerste object om te schrijven met behulp van `format`."
    - id: arg1
      type: System.Object
      description: "Het tweede object om te schrijven met behulp van `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "De indelingsspecificatie in <code> format </code> is ongeldig."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object,Object,Object)
  nameWithType: Console.Write(String,Object,Object,Object)
  fullName: System.Console.Write(String,Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De tekstweergave van de opgegeven objecten schrijft naar de standaard uitvoerstroom met behulp van de gegevens van de opgegeven indeling."
  remarks: "Deze methode maakt gebruik van de [samengestelde opmaak functie](~/add/includes/ajax-current-ext-md.md) van .NET Framework dat de waarde van een object niet converteren naar de tekstweergave en die representatie insluiten in een tekenreeks. De resulterende tekenreeks naar de uitvoerstroom geschreven.       De `format` parameter bestaat uit nul of meer wordt uitgevoerd van tekst onderling vermengd met nul of meer geïndexeerde tijdelijke aanduidingen indeling-items die met een object in de parameterlijst van deze methode overeenkomen wordt aangeroepen. De opmaak proces vervangen elk item indeling door de tekstweergave van de waarde van het bijbehorende object.       De syntaxis van een item indeling is `{` *index*[`,`*uitlijning*] [`:`*formatString*]`}`, waarmee een verplichte index, de optionele lengte en uitlijning van de opgemaakte tekst en een optionele tekenreeks indeling aanduiding tekens bevat die hoe de waarde bepalen van het bijbehorende object is geformatteerd.       .NET Framework biedt uitgebreide opmaak ondersteuning die wordt beschreven in meer detail in de volgende onderwerpen voor opmaak.      -Voor meer informatie over de samengestelde opmaak functie wordt ondersteund door methoden zoals <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, en sommige overloads van <xref:System.Console.WriteLine%2A>, Zie [samengestelde opmaak](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Zie voor meer informatie over specificaties numerieke notatie [standaard numerieke indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md) en [aangepaste numerieke notatie tekenreeksen](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over datum en tijd opmaken van de specificaties [standaarddatum en tijd-indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md) en [aangepaste datum en tijd-indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over opsomming indeling specificaties [Opsommingstekenreeksen indeling](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over het opmaken van [opmaak typen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.write-s_11_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.write-s_11_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.write-s_11_1.vb)]  \n  \n The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_11_2.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_11_2.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_11_2.cpp)]"
  syntax:
    content: public static void Write (string format, object arg0, object arg1, object arg2);
    parameters:
    - id: format
      type: System.String
      description: "Een samengestelde notatietekenreeks (Zie opmerking)."
    - id: arg0
      type: System.Object
      description: "Het eerste object om te schrijven met behulp van `format`."
    - id: arg1
      type: System.Object
      description: "Het tweede object om te schrijven met behulp van `format`."
    - id: arg2
      type: System.Object
      description: "Het derde object om te schrijven met behulp van `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "De indelingsspecificatie in <code> format </code> is ongeldig."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object,Object,Object,Object)
  nameWithType: Console.Write(String,Object,Object,Object,Object)
  fullName: System.Console.Write(String,Object,Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Schrijft de tekstweergave van de opgegeven objecten en een lijst met variabele lengte parameters in de standaard uitvoerstroom met behulp van de gegevens van de opgegeven indeling."
  remarks: "> [!NOTE]\n>  This API is not CLS-compliant. The CLS-compliant alternative is [Console.Write(String, Object\\[\\])](assetId:///M:System.Console.Write(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False). The C# and Visual Basic compilers automatically resolve a call to this method as a call to [Console.Write(String, Object\\[\\])](assetId:///M:System.Console.Write(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False).  \n  \n This method uses the [composite formatting feature](~/add/includes/ajax-current-ext-md.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string. The resulting string is written to the output stream.  \n  \n The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method. The formatting process replaces each format item with the text representation of the value of the corresponding object.  \n  \n The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.  \n  \n-   For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](../Topic/Composite%20Formatting.md).  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/add/includes/ajax-current-ext-md.md) and [Custom Numeric Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md) and [Custom Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about enumeration format specifiers, see [Enumeration Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example illustrates the use of variable parameters with the Write method. The method is called with a composite format string and five format items.  \n  \n [!code-cpp[System.Console.Write#3](~/add/codesnippet/cpp/04cf3884-a7cc-4915-bdb2-_1.cpp)]"
  syntax:
    content: public static void Write (string format, object arg0, object arg1, object arg2, object arg3);
    parameters:
    - id: format
      type: System.String
      description: "Een samengestelde notatietekenreeks (Zie opmerking)."
    - id: arg0
      type: System.Object
      description: "Het eerste object om te schrijven met behulp van `format`."
    - id: arg1
      type: System.Object
      description: "Het tweede object om te schrijven met behulp van `format`."
    - id: arg2
      type: System.Object
      description: "Het derde object om te schrijven met behulp van `format`."
    - id: arg3
      type: System.Object
      description: "Het vierde-object om te schrijven met behulp van `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "De indelingsspecificatie in <code> format </code> is ongeldig."
  platform:
  - net462
- uid: System.Console.WriteLine
  id: WriteLine
  parent: System.Console
  langs:
  - csharp
  name: WriteLine()
  nameWithType: Console.WriteLine()
  fullName: System.Console.WriteLine()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De huidige regel terminator schrijft naar de Standaarduitvoerstroom."
  remarks: "De regel standaard terminator is een tekenreeks waarvan de waarde een regelterugloop, gevolgd door een nieuwe regel (&quot;\\r&quot; in C# of `vbCrLf` in Visual Basic). U kunt de regel terminator wijzigen door in te stellen de <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName>eigenschap van de <xref:System.Console.Out%2A>eigenschap in op een andere tekenreeks.</xref:System.Console.Out%2A> </xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> Het voorbeeld bevat een afbeelding."
  example:
  - "The example changes the line terminator from its default value of \"\\r\\n\" or `vbCrLf` to \"\\r\\n\\r\\n\" or `vbCrLf` + `vbCrLf`. It then calls the WriteLine and <xref:System.Console.WriteLine%28System.String%29> methods to display output to the console.  \n  \n [!code-cpp[System.Console.WriteLine#2](~/add/codesnippet/cpp/m-system.console.writeline_1.cpp)]\n [!code-cs[System.Console.WriteLine#2](~/add/codesnippet/csharp/m-system.console.writeline_1.cs)]\n [!code-vb[System.Console.WriteLine#2](~/add/codesnippet/visualbasic/m-system.console.writeline_1.vb)]"
  syntax:
    content: public static void WriteLine ();
    parameters: []
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Boolean)
  id: WriteLine(System.Boolean)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Boolean)
  nameWithType: Console.WriteLine(Boolean)
  fullName: System.Console.WriteLine(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee worden de tekstweergave van de opgegeven Booleaanse waarde, gevolgd door de huidige regel terminator naar de standaard uitvoerstroom geschreven."
  remarks: "De tekstweergave van `value` wordt geproduceerd door het aanroepen van de <xref:System.Boolean.ToString%2A?displayProperty=fullName>methode.</xref:System.Boolean.ToString%2A?displayProperty=fullName>       Voor meer informatie over de regel terminator, Zie de sectie met opmerkingen van de <xref:System.Console.WriteLine%2A>methode die geen parameters zijn vereist.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example generates ten random integers and uses the WriteLine method to indicate whether they are even.  \n  \n [!code-cpp[System.Console.WriteLine#4](~/add/codesnippet/cpp/m-system.console.writeli_5_1.cpp)]\n [!code-cs[System.Console.WriteLine#4](~/add/codesnippet/csharp/m-system.console.writeli_5_1.cs)]\n [!code-vb[System.Console.WriteLine#4](~/add/codesnippet/visualbasic/m-system.console.writeli_5_1.vb)]"
  syntax:
    content: public static void WriteLine (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "De waarde om te schrijven."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Char)
  id: WriteLine(System.Char)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Char)
  nameWithType: Console.WriteLine(Char)
  fullName: System.Console.WriteLine(Char)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee worden de opgegeven Unicode-teken, gevolgd door de huidige regel terminator waarde naar de standaard uitvoerstroom geschreven."
  remarks: "Voor meer informatie over de regel terminator, Zie de sectie met opmerkingen van de <xref:System.Console.WriteLine%2A>methode die geen parameters zijn vereist.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the WriteLine method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_13_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_13_1.vb)]"
  syntax:
    content: public static void WriteLine (char value);
    parameters:
    - id: value
      type: System.Char
      description: "De waarde om te schrijven."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Char[])
  id: WriteLine(System.Char[])
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Char[])
  nameWithType: Console.WriteLine(Char[])
  fullName: System.Console.WriteLine(Char[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee worden de opgegeven matrix van Unicode-tekens, gevolgd door de huidige regel terminator naar de standaard uitvoerstroom geschreven."
  remarks: "Voor meer informatie over de regel terminator, Zie de sectie met opmerkingen van de <xref:System.Console.WriteLine%2A>methode die geen parameters zijn vereist.</xref:System.Console.WriteLine%2A>"
  syntax:
    content: public static void WriteLine (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Een matrix van Unicode-teken."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Decimal)
  id: WriteLine(System.Decimal)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Decimal)
  nameWithType: Console.WriteLine(Decimal)
  fullName: System.Console.WriteLine(Decimal)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Schrijft de tekstweergave van de opgegeven <xref:System.Decimal>waarde, gevolgd door de huidige regel terminator naar de standaard uitvoerstroom.</xref:System.Decimal>"
  remarks: "De tekstweergave van `value` wordt geproduceerd door het aanroepen van de <xref:System.Decimal.ToString%2A?displayProperty=fullName>methode.</xref:System.Decimal.ToString%2A?displayProperty=fullName>       Voor meer informatie over de regel terminator, Zie de sectie met opmerkingen van de <xref:System.Console.WriteLine%2A>methode die geen parameters zijn vereist.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_3_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_3_1.vb)]"
  syntax:
    content: public static void WriteLine (decimal value);
    parameters:
    - id: value
      type: System.Decimal
      description: "De waarde om te schrijven."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Double)
  id: WriteLine(System.Double)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Double)
  nameWithType: Console.WriteLine(Double)
  fullName: System.Console.WriteLine(Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee worden de tekstweergave van de opgegeven drijvende-waarde met dubbele precisie, gevolgd door de huidige regel terminator naar de standaard uitvoerstroom geschreven."
  remarks: "De tekstweergave van `value` wordt geproduceerd door het aanroepen van de <xref:System.Double.ToString%2A?displayProperty=fullName>methode.</xref:System.Double.ToString%2A?displayProperty=fullName>       Voor meer informatie over de regel terminator, Zie de sectie met opmerkingen van de <xref:System.Console.WriteLine%2A>methode die geen parameters zijn vereist.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_2_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_2_1.vb)]"
  syntax:
    content: public static void WriteLine (double value);
    parameters:
    - id: value
      type: System.Double
      description: "De waarde om te schrijven."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Int32)
  id: WriteLine(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Int32)
  nameWithType: Console.WriteLine(Int32)
  fullName: System.Console.WriteLine(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee worden de tekstweergave van de opgegeven 32-bits ondertekende integer-waarde, gevolgd door de huidige regel terminator naar de standaard uitvoerstroom geschreven."
  remarks: "De tekstweergave van `value` wordt geproduceerd door het aanroepen van de <xref:System.Int32.ToString%2A?displayProperty=fullName>methode.</xref:System.Int32.ToString%2A?displayProperty=fullName>       Voor meer informatie over de regel terminator, Zie de sectie met opmerkingen van de <xref:System.Console.WriteLine%2A>methode die geen parameters zijn vereist.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_1_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_1_1.vb)]"
  syntax:
    content: public static void WriteLine (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "De waarde om te schrijven."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Int64)
  id: WriteLine(System.Int64)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Int64)
  nameWithType: Console.WriteLine(Int64)
  fullName: System.Console.WriteLine(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee worden de tekstweergave van de opgegeven 64-bits ondertekende integer-waarde, gevolgd door de huidige regel terminator naar de standaard uitvoerstroom geschreven."
  remarks: "De tekstweergave van `value` wordt geproduceerd door het aanroepen van de <xref:System.Int64.ToString%2A?displayProperty=fullName>methode.</xref:System.Int64.ToString%2A?displayProperty=fullName>       Voor meer informatie over de regel terminator, Zie de sectie met opmerkingen van de <xref:System.Console.WriteLine%2A>methode die geen parameters zijn vereist.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_10_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_10_1.vb)]"
  syntax:
    content: public static void WriteLine (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "De waarde om te schrijven."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Object)
  id: WriteLine(System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Object)
  nameWithType: Console.WriteLine(Object)
  fullName: System.Console.WriteLine(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee worden de tekstweergave van het opgegeven object, gevolgd door de huidige regel terminator naar de standaard uitvoerstroom geschreven."
  remarks: "Als `value` is `null`, alleen de regel terminator wordt geschreven. Anders wordt de `ToString` methode van `value` aangeroepen om de tekenreeksvoorstelling produceren en de resulterende tekenreeks in de standaard uitvoerstroom geschreven.       Voor meer informatie over de regel terminator, Zie de sectie met opmerkingen van de <xref:System.Console.WriteLine%2A>methode die geen parameters zijn vereist.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example uses the WriteLine method to display each value in an object array to the console.  \n  \n [!code-cpp[System.Console.WriteLine#3](~/add/codesnippet/cpp/m-system.console.writeli_6_1.cpp)]\n [!code-cpp[System.Console.WriteLine#3](~/add/codesnippet/cpp/m-system.console.writeli_6_1.cpp)]\n [!code-cs[System.Console.WriteLine#3](~/add/codesnippet/csharp/m-system.console.writeli_6_1.cs)]\n [!code-vb[System.Console.WriteLine#3](~/add/codesnippet/visualbasic/m-system.console.writeli_6_1.vb)]"
  syntax:
    content: public static void WriteLine (object value);
    parameters:
    - id: value
      type: System.Object
      description: "De waarde om te schrijven."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Single)
  id: WriteLine(System.Single)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Single)
  nameWithType: Console.WriteLine(Single)
  fullName: System.Console.WriteLine(Single)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee worden de tekstweergave van de opgegeven enkele precisie drijvende-kommawaarde, gevolgd door de huidige regel terminator naar de standaard uitvoerstroom geschreven."
  remarks: "De tekstweergave van `value` wordt geproduceerd door het aanroepen van de <xref:System.Single.ToString%2A?displayProperty=fullName>methode.</xref:System.Single.ToString%2A?displayProperty=fullName>       Voor meer informatie over de regel terminator, Zie de sectie met opmerkingen van de <xref:System.Console.WriteLine%2A>methode die geen parameters zijn vereist.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_4_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_4_1.vb)]"
  syntax:
    content: public static void WriteLine (float value);
    parameters:
    - id: value
      type: System.Single
      description: "De waarde om te schrijven."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: Console.WriteLine(String)
  fullName: System.Console.WriteLine(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee worden de opgegeven tekenreekswaarde, gevolgd door de huidige regel terminator naar de standaard uitvoerstroom geschreven."
  remarks: "Als de waarde is `null`, alleen de regel terminator wordt geschreven naar de Standaarduitvoerstroom.       Voor meer informatie over de regel terminator, Zie de sectie met opmerkingen van de <xref:System.Console.WriteLine>methode.</xref:System.Console.WriteLine>"
  example:
  - "The example changes the line terminator from its default value of \"\\r\\n\" or `vbCrLf` to \"\\r\\n\\r\\n\" or `vbCrLf` + `vbCrLf`. It then calls the <xref:System.Console.WriteLine> and WriteLine methods to display output to the console.  \n  \n [!code-cpp[System.Console.WriteLine#2](~/add/codesnippet/cpp/m-system.console.writeli_0_1.cpp)]\n [!code-cs[System.Console.WriteLine#2](~/add/codesnippet/csharp/m-system.console.writeli_0_1.cs)]\n [!code-vb[System.Console.WriteLine#2](~/add/codesnippet/visualbasic/m-system.console.writeli_0_1.vb)]"
  syntax:
    content: public static void WriteLine (string value);
    parameters:
    - id: value
      type: System.String
      description: "De waarde om te schrijven."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.WriteLine(System.UInt32)
  id: WriteLine(System.UInt32)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(UInt32)
  nameWithType: Console.WriteLine(UInt32)
  fullName: System.Console.WriteLine(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee worden de tekstweergave van de opgegeven 32-bits geheel getal zonder teken bevat, gevolgd door de huidige regel terminator naar de standaard uitvoerstroom geschreven."
  remarks: "De tekstweergave van `value` wordt geproduceerd door het aanroepen van de <xref:System.UInt32.ToString%2A?displayProperty=fullName>methode.</xref:System.UInt32.ToString%2A?displayProperty=fullName>       Voor meer informatie over de regel terminator, Zie de sectie met opmerkingen van de <xref:System.Console.WriteLine%2A>methode die geen parameters zijn vereist.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_8_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_8_1.vb)]"
  syntax:
    content: public static void WriteLine (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: "De waarde om te schrijven."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.WriteLine(System.UInt64)
  id: WriteLine(System.UInt64)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(UInt64)
  nameWithType: Console.WriteLine(UInt64)
  fullName: System.Console.WriteLine(UInt64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee worden de tekstweergave van de opgegeven 64-bits geheel getal zonder teken bevat, gevolgd door de huidige regel terminator naar de standaard uitvoerstroom geschreven."
  remarks: "De tekstweergave van `value` wordt geproduceerd door het aanroepen van de <xref:System.UInt64.ToString%2A?displayProperty=fullName>methode.</xref:System.UInt64.ToString%2A?displayProperty=fullName>       Voor meer informatie over de regel terminator, Zie de sectie met opmerkingen van de <xref:System.Console.WriteLine%2A>methode die geen parameters zijn vereist.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_12_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_12_1.vb)]"
  syntax:
    content: public static void WriteLine (ulong value);
    parameters:
    - id: value
      type: System.UInt64
      description: "De waarde om te schrijven."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object)
  id: WriteLine(System.String,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object)
  nameWithType: Console.WriteLine(String,Object)
  fullName: System.Console.WriteLine(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De tekstweergave van het opgegeven object, gevolgd door de huidige regel terminator naar de standaard uitvoerstroom met behulp van de gegevens van de opgegeven indeling schrijft."
  remarks: "Deze methode maakt gebruik van de [samengestelde opmaak functie](~/add/includes/ajax-current-ext-md.md) van .NET Framework dat de waarde van een object niet converteren naar de tekstweergave en die representatie insluiten in een tekenreeks. De resulterende tekenreeks naar de uitvoerstroom geschreven.       De `format` parameter bestaat uit nul of meer wordt uitgevoerd van tekst onderling vermengd met nul of meer geïndexeerde tijdelijke aanduidingen indeling-items die met een object in de parameterlijst van deze methode overeenkomen wordt aangeroepen. De opmaak proces vervangen elk item indeling door de tekstweergave van de waarde van het bijbehorende object.       De syntaxis van een item indeling is `{` *index*[`,`*uitlijning*] [`:`*formatString*]`}`, waarmee een verplichte index, de optionele lengte en uitlijning van de opgemaakte tekst en een optionele tekenreeks indeling aanduiding tekens bevat die hoe de waarde bepalen van het bijbehorende object is geformatteerd.       .NET Framework biedt uitgebreide opmaak ondersteuning die wordt beschreven in meer detail in de volgende onderwerpen voor opmaak.      -Voor meer informatie over de samengestelde opmaak functie wordt ondersteund door methoden zoals <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, en sommige overloads van <xref:System.Console.WriteLine%2A>, Zie [samengestelde opmaak](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Zie voor meer informatie over specificaties numerieke notatie [standaard numerieke indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md) en [aangepaste numerieke notatie tekenreeksen](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over datum en tijd opmaken van de specificaties [standaarddatum en tijd-indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md) en [aangepaste datum en tijd-indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over opsomming indeling specificaties [Opsommingstekenreeksen indeling](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over het opmaken van [opmaak typen](~/add/includes/ajax-current-ext-md.md).       Voor meer informatie over de regel terminator, Zie de sectie met opmerkingen van de <xref:System.Console.WriteLine%2A>methode die geen parameters zijn vereist.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example calls the WriteLine method to display five randomly generated <xref:System.Boolean> values.  \n  \n [!code-vb[System.Console.WriteLine#6](~/add/codesnippet/visualbasic/m-system.console.writeli_9_1.vb)]\n [!code-cs[System.Console.WriteLine#6](~/add/codesnippet/csharp/m-system.console.writeli_9_1.cs)]  \n  \n The following example calls the WriteLine method to display the current date.   Note that the format item in the `format` argument uses the \"D\" [standard date and time format string](../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md) to display the date in the long date format of the current culture.  \n  \n [!code-vb[System.Console.WriteLine#7](~/add/codesnippet/visualbasic/m-system.console.writeli_9_2.vb)]\n [!code-cs[System.Console.WriteLine#7](~/add/codesnippet/csharp/m-system.console.writeli_9_2.cs)]"
  syntax:
    content: public static void WriteLine (string format, object arg0);
    parameters:
    - id: format
      type: System.String
      description: "Een samengestelde notatietekenreeks (Zie opmerking)."
    - id: arg0
      type: System.Object
      description: "Een object om te schrijven met behulp van `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "De indelingsspecificatie in <code> format </code> is ongeldig."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object[])
  id: WriteLine(System.String,System.Object[])
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object[])
  nameWithType: Console.WriteLine(String,Object[])
  fullName: System.Console.WriteLine(String,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De tekstweergave van de opgegeven matrix met objecten, gevolgd door de huidige regel terminator naar de standaard uitvoerstroom met behulp van de gegevens van de opgegeven indeling schrijft."
  remarks: "Deze methode maakt gebruik van de [samengestelde opmaak functie](~/add/includes/ajax-current-ext-md.md) van .NET Framework dat de waarde van een object niet converteren naar de tekstweergave en die representatie insluiten in een tekenreeks. De resulterende tekenreeks naar de uitvoerstroom geschreven.       De `format` parameter bestaat uit nul of meer wordt uitgevoerd van tekst onderling vermengd met nul of meer geïndexeerde tijdelijke aanduidingen indeling-items die met een object in de parameterlijst van deze methode overeenkomen wordt aangeroepen. De opmaak proces vervangen elk item indeling door de tekstweergave van de waarde van het bijbehorende object.       De syntaxis van een item indeling is `{` *index*[`,`*uitlijning*] [`:`*formatString*]`}`, waarmee een verplichte index, de optionele lengte en uitlijning van de opgemaakte tekst en een optionele tekenreeks indeling aanduiding tekens bevat die hoe de waarde bepalen van het bijbehorende object is geformatteerd.       .NET Framework biedt uitgebreide opmaak ondersteuning die wordt beschreven in meer detail in de volgende onderwerpen voor opmaak.      -Voor meer informatie over de samengestelde opmaak functie wordt ondersteund door methoden zoals <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, en sommige overloads van <xref:System.Console.WriteLine%2A>, Zie [samengestelde opmaak](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Zie voor meer informatie over specificaties numerieke notatie [standaard numerieke indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md) en [aangepaste numerieke notatie tekenreeksen](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over datum en tijd opmaken van de specificaties [standaarddatum en tijd-indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md) en [aangepaste datum en tijd-indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over opsomming indeling specificaties [Opsommingstekenreeksen indeling](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over het opmaken van [opmaak typen](~/add/includes/ajax-current-ext-md.md).       Voor meer informatie over de regel terminator, Zie de sectie met opmerkingen van de <xref:System.Console.WriteLine%2A>methode die geen parameters zijn vereist.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.writeli_11_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.writeli_11_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.writeli_11_1.vb)]  \n  \n The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_11_2.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_11_2.vb)]"
  syntax:
    content: public static void WriteLine (string format, object[] arg);
    parameters:
    - id: format
      type: System.String
      description: "Een samengestelde notatietekenreeks (Zie opmerking)."
    - id: arg
      type: System.Object[]
      description: "Een matrix met objecten die moeten worden geschreven met behulp van `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>or <code>arg</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "De indelingsspecificatie in <code> format </code> is ongeldig."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Char[],System.Int32,System.Int32)
  id: WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Char[],Int32,Int32)
  nameWithType: Console.WriteLine(Char[],Int32,Int32)
  fullName: System.Console.WriteLine(Char[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee worden de opgegeven subarray van Unicode-tekens, gevolgd door de huidige regel terminator naar de standaard uitvoerstroom geschreven."
  remarks: "Deze methode schrijft `count` tekens vanaf positie `index` van `buffer` naar de standaard uitvoerstroom.       Voor meer informatie over de regel terminator, Zie de sectie met opmerkingen van de <xref:System.Console.WriteLine%2A>methode die geen parameters zijn vereist.</xref:System.Console.WriteLine%2A>"
  syntax:
    content: public static void WriteLine (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Een matrix van Unicode-tekens."
    - id: index
      type: System.Int32
      description: "De startpositie in `buffer`."
    - id: count
      type: System.Int32
      description: "Het aantal tekens te schrijven."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>of <code>count</code> is kleiner dan nul."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>index</code>plus <code>count</code> geeft u de positie valt niet binnen <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De tekstweergave van de opgegeven objecten, gevolgd door de huidige regel terminator naar de standaard uitvoerstroom met behulp van de gegevens van de opgegeven indeling schrijft."
  remarks: "Deze methode maakt gebruik van de [samengestelde opmaak functie](~/add/includes/ajax-current-ext-md.md) van .NET Framework dat de waarde van een object niet converteren naar de tekstweergave en die representatie insluiten in een tekenreeks. De resulterende tekenreeks naar de uitvoerstroom geschreven.       De `format` parameter bestaat uit nul of meer wordt uitgevoerd van tekst onderling vermengd met nul of meer geïndexeerde tijdelijke aanduidingen indeling-items die met een object in de parameterlijst van deze methode overeenkomen wordt aangeroepen. De opmaak proces vervangen elk item indeling door de tekstweergave van de waarde van het bijbehorende object.       De syntaxis van een item indeling is `{` *index*[`,`*uitlijning*] [`:`*formatString*]`}`, waarmee een verplichte index, de optionele lengte en uitlijning van de opgemaakte tekst en een optionele tekenreeks indeling aanduiding tekens bevat die hoe de waarde bepalen van het bijbehorende object is geformatteerd.       .NET Framework biedt uitgebreide opmaak ondersteuning die wordt beschreven in meer detail in de volgende onderwerpen voor opmaak.      -Voor meer informatie over de samengestelde opmaak functie wordt ondersteund door methoden zoals <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, en sommige overloads van <xref:System.Console.WriteLine%2A>, Zie [samengestelde opmaak](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Zie voor meer informatie over specificaties numerieke notatie [standaard numerieke indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md) en [aangepaste numerieke notatie tekenreeksen](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over datum en tijd opmaken van de specificaties [standaarddatum en tijd-indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md) en [aangepaste datum en tijd-indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over opsomming indeling specificaties [Opsommingstekenreeksen indeling](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over het opmaken van [opmaak typen](~/add/includes/ajax-current-ext-md.md).       Voor meer informatie over de regel terminator, Zie de sectie met opmerkingen van de <xref:System.Console.WriteLine%2A>methode die geen parameters zijn vereist.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.writeli_7_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.writeli_7_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.writeli_7_1.vb)]  \n  \n The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_7_2.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_7_2.vb)]"
  syntax:
    content: public static void WriteLine (string format, object arg0, object arg1);
    parameters:
    - id: format
      type: System.String
      description: "Een samengestelde notatietekenreeks (Zie opmerking)."
    - id: arg0
      type: System.Object
      description: "Het eerste object om te schrijven met behulp van `format`."
    - id: arg1
      type: System.Object
      description: "Het tweede object om te schrijven met behulp van `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "De indelingsspecificatie in <code> format </code> is ongeldig."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De tekstweergave van de opgegeven objecten, gevolgd door de huidige regel terminator naar de standaard uitvoerstroom met behulp van de gegevens van de opgegeven indeling schrijft."
  remarks: "Deze methode maakt gebruik van de [samengestelde opmaak functie](~/add/includes/ajax-current-ext-md.md) van .NET Framework dat de waarde van een object niet converteren naar de tekstweergave en die representatie insluiten in een tekenreeks. De resulterende tekenreeks naar de uitvoerstroom geschreven.       De `format` parameter bestaat uit nul of meer wordt uitgevoerd van tekst onderling vermengd met nul of meer geïndexeerde tijdelijke aanduidingen indeling-items die met een object in de parameterlijst van deze methode overeenkomen wordt aangeroepen. De opmaak proces vervangen elk item indeling door de tekstweergave van de waarde van het bijbehorende object.       De syntaxis van een item indeling is `{` *index*[`,`*uitlijning*] [`:`*formatString*]`}`, waarmee een verplichte index, de optionele lengte en uitlijning van de opgemaakte tekst en een optionele tekenreeks indeling aanduiding tekens bevat die hoe de waarde bepalen van het bijbehorende object is geformatteerd.       .NET Framework biedt uitgebreide opmaak ondersteuning die wordt beschreven in meer detail in de volgende onderwerpen voor opmaak.      -Voor meer informatie over de samengestelde opmaak functie wordt ondersteund door methoden zoals <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, en sommige overloads van <xref:System.Console.WriteLine%2A>, Zie [samengestelde opmaak](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Zie voor meer informatie over specificaties numerieke notatie [standaard numerieke indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md) en [aangepaste numerieke notatie tekenreeksen](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over datum en tijd opmaken van de specificaties [standaarddatum en tijd-indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md) en [aangepaste datum en tijd-indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over opsomming indeling specificaties [Opsommingstekenreeksen indeling](~/add/includes/ajax-current-ext-md.md).      -Zie voor meer informatie over het opmaken van [opmaak typen](~/add/includes/ajax-current-ext-md.md).       Voor meer informatie over de regel terminator, Zie de sectie met opmerkingen van de <xref:System.Console.WriteLine%2A>methode die geen parameters zijn vereist.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/ecdde448-c375-4488-93b7-_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/ecdde448-c375-4488-93b7-_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/ecdde448-c375-4488-93b7-_1.vb)]  \n  \n The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/ecdde448-c375-4488-93b7-_2.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/ecdde448-c375-4488-93b7-_2.vb)]"
  syntax:
    content: public static void WriteLine (string format, object arg0, object arg1, object arg2);
    parameters:
    - id: format
      type: System.String
      description: "Een samengestelde notatietekenreeks (Zie opmerking)."
    - id: arg0
      type: System.Object
      description: "Het eerste object om te schrijven met behulp van `format`."
    - id: arg1
      type: System.Object
      description: "Het tweede object om te schrijven met behulp van `format`."
    - id: arg2
      type: System.Object
      description: "Het derde object om te schrijven met behulp van `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "De indelingsspecificatie in <code> format </code> is ongeldig."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object,Object,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De tekstweergave van de opgegeven objecten en een lijst met variabele lengte parameters, gevolgd door de huidige regel terminator naar de standaard uitvoerstroom met behulp van de gegevens van de opgegeven indeling schrijft."
  remarks: "> [!NOTE]\n>  This API is not CLS-compliant. The CLS-compliant alternative is [Console.WriteLine(String, Object\\[\\])](assetId:///M:System.Console.WriteLine(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False). The C# and Visual Basic compilers automatically resolve a call to this method as a call to [Console.WriteLine(String, Object\\[\\])](assetId:///M:System.Console.WriteLine(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False).  \n  \n This method uses the [composite formatting feature](~/add/includes/ajax-current-ext-md.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string. The resulting string is written to the output stream.  \n  \n The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method. The formatting process replaces each format item with the text representation of the value of the corresponding object.  \n  \n The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.  \n  \n-   For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](../Topic/Composite%20Formatting.md).  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/add/includes/ajax-current-ext-md.md) and [Custom Numeric Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md) and [Custom Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about enumeration format specifiers, see [Enumeration Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/add/includes/ajax-current-ext-md.md).  \n  \n For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters."
  example:
  - "The following example illustrates the use of variable arguments with the WriteLine method. The method is called with a composite format string and five format items.  \n  \n [!code-cpp[System.Console.WriteLine#5](~/add/codesnippet/cpp/b0d255a7-f5e0-4135-8d9b-_1.cpp)]"
  syntax:
    content: public static void WriteLine (string format, object arg0, object arg1, object arg2, object arg3);
    parameters:
    - id: format
      type: System.String
      description: "Een samengestelde notatietekenreeks (Zie opmerking)."
    - id: arg0
      type: System.Object
      description: "Het eerste object om te schrijven met behulp van `format`."
    - id: arg1
      type: System.Object
      description: "Het tweede object om te schrijven met behulp van `format`."
    - id: arg2
      type: System.Object
      description: "Het derde object om te schrijven met behulp van `format`."
    - id: arg3
      type: System.Object
      description: "Het vierde-object om te schrijven met behulp van `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een i/o-fout opgetreden."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "De indelingsspecificatie in <code> format </code> is ongeldig."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.Security.HostProtectionException
  parent: System.Security
  isExternal: false
  name: HostProtectionException
  nameWithType: HostProtectionException
  fullName: System.Security.HostProtectionException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Console.BackgroundColor
  parent: System.Console
  isExternal: false
  name: BackgroundColor
  nameWithType: Console.BackgroundColor
  fullName: System.Console.BackgroundColor
- uid: System.ConsoleColor
  parent: System
  isExternal: false
  name: ConsoleColor
  nameWithType: ConsoleColor
  fullName: System.ConsoleColor
- uid: System.Console.Beep
  parent: System.Console
  isExternal: false
  name: Beep()
  nameWithType: Console.Beep()
  fullName: System.Console.Beep()
- uid: System.Console.Beep(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: Beep(Int32,Int32)
  nameWithType: Console.Beep(Int32,Int32)
  fullName: System.Console.Beep(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Console.BufferHeight
  parent: System.Console
  isExternal: false
  name: BufferHeight
  nameWithType: Console.BufferHeight
  fullName: System.Console.BufferHeight
- uid: System.Console.BufferWidth
  parent: System.Console
  isExternal: false
  name: BufferWidth
  nameWithType: Console.BufferWidth
  fullName: System.Console.BufferWidth
- uid: System.Console.CancelKeyPress
  parent: System.Console
  isExternal: false
  name: CancelKeyPress
  nameWithType: Console.CancelKeyPress
  fullName: System.Console.CancelKeyPress
- uid: System.ConsoleCancelEventHandler
  parent: System
  isExternal: false
  name: ConsoleCancelEventHandler
  nameWithType: ConsoleCancelEventHandler
  fullName: System.ConsoleCancelEventHandler
- uid: System.Console.CapsLock
  parent: System.Console
  isExternal: false
  name: CapsLock
  nameWithType: Console.CapsLock
  fullName: System.Console.CapsLock
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Console.Clear
  parent: System.Console
  isExternal: false
  name: Clear()
  nameWithType: Console.Clear()
  fullName: System.Console.Clear()
- uid: System.Console.CursorLeft
  parent: System.Console
  isExternal: false
  name: CursorLeft
  nameWithType: Console.CursorLeft
  fullName: System.Console.CursorLeft
- uid: System.Console.CursorSize
  parent: System.Console
  isExternal: false
  name: CursorSize
  nameWithType: Console.CursorSize
  fullName: System.Console.CursorSize
- uid: System.Console.CursorTop
  parent: System.Console
  isExternal: false
  name: CursorTop
  nameWithType: Console.CursorTop
  fullName: System.Console.CursorTop
- uid: System.Console.CursorVisible
  parent: System.Console
  isExternal: false
  name: CursorVisible
  nameWithType: Console.CursorVisible
  fullName: System.Console.CursorVisible
- uid: System.Console.Error
  parent: System.Console
  isExternal: false
  name: Error
  nameWithType: Console.Error
  fullName: System.Console.Error
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Console.ForegroundColor
  parent: System.Console
  isExternal: false
  name: ForegroundColor
  nameWithType: Console.ForegroundColor
  fullName: System.Console.ForegroundColor
- uid: System.Console.In
  parent: System.Console
  isExternal: false
  name: In
  nameWithType: Console.In
  fullName: System.Console.In
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Console.InputEncoding
  parent: System.Console
  isExternal: false
  name: InputEncoding
  nameWithType: Console.InputEncoding
  fullName: System.Console.InputEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Console.IsErrorRedirected
  parent: System.Console
  isExternal: false
  name: IsErrorRedirected
  nameWithType: Console.IsErrorRedirected
  fullName: System.Console.IsErrorRedirected
- uid: System.Console.IsInputRedirected
  parent: System.Console
  isExternal: false
  name: IsInputRedirected
  nameWithType: Console.IsInputRedirected
  fullName: System.Console.IsInputRedirected
- uid: System.Console.IsOutputRedirected
  parent: System.Console
  isExternal: false
  name: IsOutputRedirected
  nameWithType: Console.IsOutputRedirected
  fullName: System.Console.IsOutputRedirected
- uid: System.Console.KeyAvailable
  parent: System.Console
  isExternal: false
  name: KeyAvailable
  nameWithType: Console.KeyAvailable
  fullName: System.Console.KeyAvailable
- uid: System.Console.LargestWindowHeight
  parent: System.Console
  isExternal: false
  name: LargestWindowHeight
  nameWithType: Console.LargestWindowHeight
  fullName: System.Console.LargestWindowHeight
- uid: System.Console.LargestWindowWidth
  parent: System.Console
  isExternal: false
  name: LargestWindowWidth
  nameWithType: Console.LargestWindowWidth
  fullName: System.Console.LargestWindowWidth
- uid: System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  parent: System.Console
  isExternal: false
  name: MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  nameWithType: Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  fullName: System.Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Console.NumberLock
  parent: System.Console
  isExternal: false
  name: NumberLock
  nameWithType: Console.NumberLock
  fullName: System.Console.NumberLock
- uid: System.Console.OpenStandardError
  parent: System.Console
  isExternal: false
  name: OpenStandardError()
  nameWithType: Console.OpenStandardError()
  fullName: System.Console.OpenStandardError()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Console.OpenStandardError(System.Int32)
  parent: System.Console
  isExternal: false
  name: OpenStandardError(Int32)
  nameWithType: Console.OpenStandardError(Int32)
  fullName: System.Console.OpenStandardError(Int32)
- uid: System.Console.OpenStandardInput
  parent: System.Console
  isExternal: false
  name: OpenStandardInput()
  nameWithType: Console.OpenStandardInput()
  fullName: System.Console.OpenStandardInput()
- uid: System.Console.OpenStandardInput(System.Int32)
  parent: System.Console
  isExternal: false
  name: OpenStandardInput(Int32)
  nameWithType: Console.OpenStandardInput(Int32)
  fullName: System.Console.OpenStandardInput(Int32)
- uid: System.Console.OpenStandardOutput
  parent: System.Console
  isExternal: false
  name: OpenStandardOutput()
  nameWithType: Console.OpenStandardOutput()
  fullName: System.Console.OpenStandardOutput()
- uid: System.Console.OpenStandardOutput(System.Int32)
  parent: System.Console
  isExternal: false
  name: OpenStandardOutput(Int32)
  nameWithType: Console.OpenStandardOutput(Int32)
  fullName: System.Console.OpenStandardOutput(Int32)
- uid: System.Console.Out
  parent: System.Console
  isExternal: false
  name: Out
  nameWithType: Console.Out
  fullName: System.Console.Out
- uid: System.Console.OutputEncoding
  parent: System.Console
  isExternal: false
  name: OutputEncoding
  nameWithType: Console.OutputEncoding
  fullName: System.Console.OutputEncoding
- uid: System.Console.Read
  parent: System.Console
  isExternal: false
  name: Read()
  nameWithType: Console.Read()
  fullName: System.Console.Read()
- uid: System.Console.ReadKey
  parent: System.Console
  isExternal: false
  name: ReadKey()
  nameWithType: Console.ReadKey()
  fullName: System.Console.ReadKey()
- uid: System.ConsoleKeyInfo
  parent: System
  isExternal: false
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
- uid: System.Console.ReadKey(System.Boolean)
  parent: System.Console
  isExternal: false
  name: ReadKey(Boolean)
  nameWithType: Console.ReadKey(Boolean)
  fullName: System.Console.ReadKey(Boolean)
- uid: System.Console.ReadLine
  parent: System.Console
  isExternal: false
  name: ReadLine()
  nameWithType: Console.ReadLine()
  fullName: System.Console.ReadLine()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Console.ResetColor
  parent: System.Console
  isExternal: false
  name: ResetColor()
  nameWithType: Console.ResetColor()
  fullName: System.Console.ResetColor()
- uid: System.Console.SetBufferSize(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: SetBufferSize(Int32,Int32)
  nameWithType: Console.SetBufferSize(Int32,Int32)
  fullName: System.Console.SetBufferSize(Int32,Int32)
- uid: System.Console.SetCursorPosition(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: SetCursorPosition(Int32,Int32)
  nameWithType: Console.SetCursorPosition(Int32,Int32)
  fullName: System.Console.SetCursorPosition(Int32,Int32)
- uid: System.Console.SetError(System.IO.TextWriter)
  parent: System.Console
  isExternal: false
  name: SetError(TextWriter)
  nameWithType: Console.SetError(TextWriter)
  fullName: System.Console.SetError(TextWriter)
- uid: System.Console.SetIn(System.IO.TextReader)
  parent: System.Console
  isExternal: false
  name: SetIn(TextReader)
  nameWithType: Console.SetIn(TextReader)
  fullName: System.Console.SetIn(TextReader)
- uid: System.Console.SetOut(System.IO.TextWriter)
  parent: System.Console
  isExternal: false
  name: SetOut(TextWriter)
  nameWithType: Console.SetOut(TextWriter)
  fullName: System.Console.SetOut(TextWriter)
- uid: System.Console.SetWindowPosition(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: SetWindowPosition(Int32,Int32)
  nameWithType: Console.SetWindowPosition(Int32,Int32)
  fullName: System.Console.SetWindowPosition(Int32,Int32)
- uid: System.Console.SetWindowSize(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: SetWindowSize(Int32,Int32)
  nameWithType: Console.SetWindowSize(Int32,Int32)
  fullName: System.Console.SetWindowSize(Int32,Int32)
- uid: System.Console.Title
  parent: System.Console
  isExternal: false
  name: Title
  nameWithType: Console.Title
  fullName: System.Console.Title
- uid: System.Console.TreatControlCAsInput
  parent: System.Console
  isExternal: false
  name: TreatControlCAsInput
  nameWithType: Console.TreatControlCAsInput
  fullName: System.Console.TreatControlCAsInput
- uid: System.Console.WindowHeight
  parent: System.Console
  isExternal: false
  name: WindowHeight
  nameWithType: Console.WindowHeight
  fullName: System.Console.WindowHeight
- uid: System.Console.WindowLeft
  parent: System.Console
  isExternal: false
  name: WindowLeft
  nameWithType: Console.WindowLeft
  fullName: System.Console.WindowLeft
- uid: System.Console.WindowTop
  parent: System.Console
  isExternal: false
  name: WindowTop
  nameWithType: Console.WindowTop
  fullName: System.Console.WindowTop
- uid: System.Console.WindowWidth
  parent: System.Console
  isExternal: false
  name: WindowWidth
  nameWithType: Console.WindowWidth
  fullName: System.Console.WindowWidth
- uid: System.Console.Write(System.Boolean)
  parent: System.Console
  isExternal: false
  name: Write(Boolean)
  nameWithType: Console.Write(Boolean)
  fullName: System.Console.Write(Boolean)
- uid: System.Console.Write(System.Char)
  parent: System.Console
  isExternal: false
  name: Write(Char)
  nameWithType: Console.Write(Char)
  fullName: System.Console.Write(Char)
- uid: System.Console.Write(System.Char[])
  parent: System.Console
  isExternal: false
  name: Write(Char[])
  nameWithType: Console.Write(Char[])
  fullName: System.Console.Write(Char[])
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Console.Write(System.Decimal)
  parent: System.Console
  isExternal: false
  name: Write(Decimal)
  nameWithType: Console.Write(Decimal)
  fullName: System.Console.Write(Decimal)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Console.Write(System.Double)
  parent: System.Console
  isExternal: false
  name: Write(Double)
  nameWithType: Console.Write(Double)
  fullName: System.Console.Write(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Console.Write(System.Int32)
  parent: System.Console
  isExternal: false
  name: Write(Int32)
  nameWithType: Console.Write(Int32)
  fullName: System.Console.Write(Int32)
- uid: System.Console.Write(System.Int64)
  parent: System.Console
  isExternal: false
  name: Write(Int64)
  nameWithType: Console.Write(Int64)
  fullName: System.Console.Write(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Console.Write(System.Object)
  parent: System.Console
  isExternal: false
  name: Write(Object)
  nameWithType: Console.Write(Object)
  fullName: System.Console.Write(Object)
- uid: System.Console.Write(System.Single)
  parent: System.Console
  isExternal: false
  name: Write(Single)
  nameWithType: Console.Write(Single)
  fullName: System.Console.Write(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Console.Write(System.String)
  parent: System.Console
  isExternal: false
  name: Write(String)
  nameWithType: Console.Write(String)
  fullName: System.Console.Write(String)
- uid: System.Console.Write(System.UInt32)
  parent: System.Console
  isExternal: false
  name: Write(UInt32)
  nameWithType: Console.Write(UInt32)
  fullName: System.Console.Write(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Console.Write(System.UInt64)
  parent: System.Console
  isExternal: false
  name: Write(UInt64)
  nameWithType: Console.Write(UInt64)
  fullName: System.Console.Write(UInt64)
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Console.Write(System.String,System.Object)
  parent: System.Console
  isExternal: false
  name: Write(String,Object)
  nameWithType: Console.Write(String,Object)
  fullName: System.Console.Write(String,Object)
- uid: System.Console.Write(System.String,System.Object[])
  parent: System.Console
  isExternal: false
  name: Write(String,Object[])
  nameWithType: Console.Write(String,Object[])
  fullName: System.Console.Write(String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Console.Write(System.Char[],System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: Write(Char[],Int32,Int32)
  nameWithType: Console.Write(Char[],Int32,Int32)
  fullName: System.Console.Write(Char[],Int32,Int32)
- uid: System.Console.Write(System.String,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: Write(String,Object,Object)
  nameWithType: Console.Write(String,Object,Object)
  fullName: System.Console.Write(String,Object,Object)
- uid: System.Console.Write(System.String,System.Object,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: Write(String,Object,Object,Object)
  nameWithType: Console.Write(String,Object,Object,Object)
  fullName: System.Console.Write(String,Object,Object,Object)
- uid: System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: Write(String,Object,Object,Object,Object)
  nameWithType: Console.Write(String,Object,Object,Object,Object)
  fullName: System.Console.Write(String,Object,Object,Object,Object)
- uid: System.Console.WriteLine
  parent: System.Console
  isExternal: false
  name: WriteLine()
  nameWithType: Console.WriteLine()
  fullName: System.Console.WriteLine()
- uid: System.Console.WriteLine(System.Boolean)
  parent: System.Console
  isExternal: false
  name: WriteLine(Boolean)
  nameWithType: Console.WriteLine(Boolean)
  fullName: System.Console.WriteLine(Boolean)
- uid: System.Console.WriteLine(System.Char)
  parent: System.Console
  isExternal: false
  name: WriteLine(Char)
  nameWithType: Console.WriteLine(Char)
  fullName: System.Console.WriteLine(Char)
- uid: System.Console.WriteLine(System.Char[])
  parent: System.Console
  isExternal: false
  name: WriteLine(Char[])
  nameWithType: Console.WriteLine(Char[])
  fullName: System.Console.WriteLine(Char[])
- uid: System.Console.WriteLine(System.Decimal)
  parent: System.Console
  isExternal: false
  name: WriteLine(Decimal)
  nameWithType: Console.WriteLine(Decimal)
  fullName: System.Console.WriteLine(Decimal)
- uid: System.Console.WriteLine(System.Double)
  parent: System.Console
  isExternal: false
  name: WriteLine(Double)
  nameWithType: Console.WriteLine(Double)
  fullName: System.Console.WriteLine(Double)
- uid: System.Console.WriteLine(System.Int32)
  parent: System.Console
  isExternal: false
  name: WriteLine(Int32)
  nameWithType: Console.WriteLine(Int32)
  fullName: System.Console.WriteLine(Int32)
- uid: System.Console.WriteLine(System.Int64)
  parent: System.Console
  isExternal: false
  name: WriteLine(Int64)
  nameWithType: Console.WriteLine(Int64)
  fullName: System.Console.WriteLine(Int64)
- uid: System.Console.WriteLine(System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(Object)
  nameWithType: Console.WriteLine(Object)
  fullName: System.Console.WriteLine(Object)
- uid: System.Console.WriteLine(System.Single)
  parent: System.Console
  isExternal: false
  name: WriteLine(Single)
  nameWithType: Console.WriteLine(Single)
  fullName: System.Console.WriteLine(Single)
- uid: System.Console.WriteLine(System.String)
  parent: System.Console
  isExternal: false
  name: WriteLine(String)
  nameWithType: Console.WriteLine(String)
  fullName: System.Console.WriteLine(String)
- uid: System.Console.WriteLine(System.UInt32)
  parent: System.Console
  isExternal: false
  name: WriteLine(UInt32)
  nameWithType: Console.WriteLine(UInt32)
  fullName: System.Console.WriteLine(UInt32)
- uid: System.Console.WriteLine(System.UInt64)
  parent: System.Console
  isExternal: false
  name: WriteLine(UInt64)
  nameWithType: Console.WriteLine(UInt64)
  fullName: System.Console.WriteLine(UInt64)
- uid: System.Console.WriteLine(System.String,System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object)
  nameWithType: Console.WriteLine(String,Object)
  fullName: System.Console.WriteLine(String,Object)
- uid: System.Console.WriteLine(System.String,System.Object[])
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object[])
  nameWithType: Console.WriteLine(String,Object[])
  fullName: System.Console.WriteLine(String,Object[])
- uid: System.Console.WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: WriteLine(Char[],Int32,Int32)
  nameWithType: Console.WriteLine(Char[],Int32,Int32)
  fullName: System.Console.WriteLine(Char[],Int32,Int32)
- uid: System.Console.WriteLine(System.String,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object)
- uid: System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object,Object)
- uid: System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object,Object,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object,Object,Object)
- uid: System.Console.BackgroundColor*
  parent: System.Console
  isExternal: false
  name: BackgroundColor
  nameWithType: Console.BackgroundColor
- uid: System.Console.Beep*
  parent: System.Console
  isExternal: false
  name: Beep
  nameWithType: Console.Beep
- uid: System.Console.BufferHeight*
  parent: System.Console
  isExternal: false
  name: BufferHeight
  nameWithType: Console.BufferHeight
- uid: System.Console.BufferWidth*
  parent: System.Console
  isExternal: false
  name: BufferWidth
  nameWithType: Console.BufferWidth
- uid: System.Console.CapsLock*
  parent: System.Console
  isExternal: false
  name: CapsLock
  nameWithType: Console.CapsLock
- uid: System.Console.Clear*
  parent: System.Console
  isExternal: false
  name: Clear
  nameWithType: Console.Clear
- uid: System.Console.CursorLeft*
  parent: System.Console
  isExternal: false
  name: CursorLeft
  nameWithType: Console.CursorLeft
- uid: System.Console.CursorSize*
  parent: System.Console
  isExternal: false
  name: CursorSize
  nameWithType: Console.CursorSize
- uid: System.Console.CursorTop*
  parent: System.Console
  isExternal: false
  name: CursorTop
  nameWithType: Console.CursorTop
- uid: System.Console.CursorVisible*
  parent: System.Console
  isExternal: false
  name: CursorVisible
  nameWithType: Console.CursorVisible
- uid: System.Console.Error*
  parent: System.Console
  isExternal: false
  name: Error
  nameWithType: Console.Error
- uid: System.Console.ForegroundColor*
  parent: System.Console
  isExternal: false
  name: ForegroundColor
  nameWithType: Console.ForegroundColor
- uid: System.Console.In*
  parent: System.Console
  isExternal: false
  name: In
  nameWithType: Console.In
- uid: System.Console.InputEncoding*
  parent: System.Console
  isExternal: false
  name: InputEncoding
  nameWithType: Console.InputEncoding
- uid: System.Console.IsErrorRedirected*
  parent: System.Console
  isExternal: false
  name: IsErrorRedirected
  nameWithType: Console.IsErrorRedirected
- uid: System.Console.IsInputRedirected*
  parent: System.Console
  isExternal: false
  name: IsInputRedirected
  nameWithType: Console.IsInputRedirected
- uid: System.Console.IsOutputRedirected*
  parent: System.Console
  isExternal: false
  name: IsOutputRedirected
  nameWithType: Console.IsOutputRedirected
- uid: System.Console.KeyAvailable*
  parent: System.Console
  isExternal: false
  name: KeyAvailable
  nameWithType: Console.KeyAvailable
- uid: System.Console.LargestWindowHeight*
  parent: System.Console
  isExternal: false
  name: LargestWindowHeight
  nameWithType: Console.LargestWindowHeight
- uid: System.Console.LargestWindowWidth*
  parent: System.Console
  isExternal: false
  name: LargestWindowWidth
  nameWithType: Console.LargestWindowWidth
- uid: System.Console.MoveBufferArea*
  parent: System.Console
  isExternal: false
  name: MoveBufferArea
  nameWithType: Console.MoveBufferArea
- uid: System.Console.NumberLock*
  parent: System.Console
  isExternal: false
  name: NumberLock
  nameWithType: Console.NumberLock
- uid: System.Console.OpenStandardError*
  parent: System.Console
  isExternal: false
  name: OpenStandardError
  nameWithType: Console.OpenStandardError
- uid: System.Console.OpenStandardInput*
  parent: System.Console
  isExternal: false
  name: OpenStandardInput
  nameWithType: Console.OpenStandardInput
- uid: System.Console.OpenStandardOutput*
  parent: System.Console
  isExternal: false
  name: OpenStandardOutput
  nameWithType: Console.OpenStandardOutput
- uid: System.Console.Out*
  parent: System.Console
  isExternal: false
  name: Out
  nameWithType: Console.Out
- uid: System.Console.OutputEncoding*
  parent: System.Console
  isExternal: false
  name: OutputEncoding
  nameWithType: Console.OutputEncoding
- uid: System.Console.Read*
  parent: System.Console
  isExternal: false
  name: Read
  nameWithType: Console.Read
- uid: System.Console.ReadKey*
  parent: System.Console
  isExternal: false
  name: ReadKey
  nameWithType: Console.ReadKey
- uid: System.Console.ReadLine*
  parent: System.Console
  isExternal: false
  name: ReadLine
  nameWithType: Console.ReadLine
- uid: System.Console.ResetColor*
  parent: System.Console
  isExternal: false
  name: ResetColor
  nameWithType: Console.ResetColor
- uid: System.Console.SetBufferSize*
  parent: System.Console
  isExternal: false
  name: SetBufferSize
  nameWithType: Console.SetBufferSize
- uid: System.Console.SetCursorPosition*
  parent: System.Console
  isExternal: false
  name: SetCursorPosition
  nameWithType: Console.SetCursorPosition
- uid: System.Console.SetError*
  parent: System.Console
  isExternal: false
  name: SetError
  nameWithType: Console.SetError
- uid: System.Console.SetIn*
  parent: System.Console
  isExternal: false
  name: SetIn
  nameWithType: Console.SetIn
- uid: System.Console.SetOut*
  parent: System.Console
  isExternal: false
  name: SetOut
  nameWithType: Console.SetOut
- uid: System.Console.SetWindowPosition*
  parent: System.Console
  isExternal: false
  name: SetWindowPosition
  nameWithType: Console.SetWindowPosition
- uid: System.Console.SetWindowSize*
  parent: System.Console
  isExternal: false
  name: SetWindowSize
  nameWithType: Console.SetWindowSize
- uid: System.Console.Title*
  parent: System.Console
  isExternal: false
  name: Title
  nameWithType: Console.Title
- uid: System.Console.TreatControlCAsInput*
  parent: System.Console
  isExternal: false
  name: TreatControlCAsInput
  nameWithType: Console.TreatControlCAsInput
- uid: System.Console.WindowHeight*
  parent: System.Console
  isExternal: false
  name: WindowHeight
  nameWithType: Console.WindowHeight
- uid: System.Console.WindowLeft*
  parent: System.Console
  isExternal: false
  name: WindowLeft
  nameWithType: Console.WindowLeft
- uid: System.Console.WindowTop*
  parent: System.Console
  isExternal: false
  name: WindowTop
  nameWithType: Console.WindowTop
- uid: System.Console.WindowWidth*
  parent: System.Console
  isExternal: false
  name: WindowWidth
  nameWithType: Console.WindowWidth
- uid: System.Console.Write*
  parent: System.Console
  isExternal: false
  name: Write
  nameWithType: Console.Write
- uid: System.Console.WriteLine*
  parent: System.Console
  isExternal: false
  name: WriteLine
  nameWithType: Console.WriteLine
