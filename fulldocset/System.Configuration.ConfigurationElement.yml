### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationElement
  id: ConfigurationElement
  children:
  - System.Configuration.ConfigurationElement.#ctor
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Properties
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  langs:
  - csharp
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement
  type: Class
  summary: "Hiermee geeft u een configuratie-element in een configuratiebestand."
  remarks: "De worden overgedragen, is een abstracte klasse die wordt gebruikt om weer te geven van een XML-element in een configuratiebestand (bijvoorbeeld Web.config). Een element in een configuratiebestand kan nul, een of meer onderliggende elementen bevatten.       Omdat de klasse worden overgedragen is gedefinieerd als abstract, kunt u een exemplaar van deze geen maken. Klassen kunnen alleen worden afgeleid van deze. .NET Framework bevat klassen die zijn afgeleid van de klasse worden overgedragen om standaard XML-configuratie-elementen, zoals <xref:System.Configuration.ConfigurationSection>.</xref:System.Configuration.ConfigurationSection> vertegenwoordigen U kunt ook de klasse worden overgedragen voor toegang tot aangepaste configuratie-elementen en secties uitbreiden. In het voorbeeld opgenomen verderop in dit onderwerp laat zien hoe aangepaste configuratie-elementen en -secties openen met behulp van aangepaste klassen die zijn afgeleid van worden overgedragen.       U kunt ook de standaardconfiguratie typen zoals worden overgedragen, uitbreiden <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, en <xref:System.Configuration.ConfigurationSection>.</xref:System.Configuration.ConfigurationSection> </xref:System.Configuration.ConfigurationProperty> </xref:System.Configuration.ConfigurationElementCollection> Zie voor meer informatie de documentatie voor die klassen.       Zie voor meer informatie over toegang tot gegevens in de configuratiebestanden van de <xref:System.Configuration.ConfigurationManager>klasse en de <xref:System.Web.Configuration.WebConfigurationManager>klasse.</xref:System.Web.Configuration.WebConfigurationManager> </xref:System.Configuration.ConfigurationManager>"
  example:
  - "The following code example shows how to implement a custom ConfigurationElement both as an individual element in a custom section and as a collection of elements in a custom section. The example consists of the following files:  \n  \n-   An app.config file that contains a custom section that is named `MyUrls`. This section contains a simple element (it does not contain any other elements) and a collection of elements. The simple element is named `simple` and the collection is named `urls`.  \n  \n-   A console application. The application reads the contents of the app.config file and writes the information to the console. It uses classes that derive from ConfigurationElement, <xref:System.Configuration.ConfigurationElementCollection>, and <xref:System.Configuration.ConfigurationSection>.  \n  \n-   A class named `UrlsSection` that derives from the <xref:System.Configuration.ConfigurationSection> class. This class is used to access the `MyUrls` section in the configuration file.  \n  \n-   A class named `UrlsCollection` that derives from the <xref:System.Configuration.ConfigurationElementCollection> class. This class is used to access the `urls` collection in the configuration file.  \n  \n-   A class named `UrlConfigElement` that derives from the ConfigurationElement class. This class is used to access the `simple` element and the members of the `urls` collection in the configuration file.  \n  \n To run the example, perform the following steps:  \n  \n1.  Create a solution that has a console application project and a class library project that is named `ConfigurationElement`.  \n  \n2.  Put the three class files in the class library project and put the other files in the console library project.  \n  \n3.  In both projects set a reference to `System.Configuration`.  \n  \n4.  In the console application project set a project reference to the class library project.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n [!code-cs[System.Configuration.ConfigurationElement#151](~/add/codesnippet/csharp/t-system.configuration.c_8_2.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#151](~/add/codesnippet/visualbasic/t-system.configuration.c_8_2.vb)]  \n  \n [!code-cs[System.Configuration.ConfigurationElement#71](~/add/codesnippet/csharp/t-system.configuration.c_8_3.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#71](~/add/codesnippet/visualbasic/t-system.configuration.c_8_3.vb)]  \n  \n [!code-vb[System.Configuration.ConfigurationElement#51](~/add/codesnippet/visualbasic/t-system.configuration.c_8_4.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#51](~/add/codesnippet/csharp/t-system.configuration.c_8_4.cs)]  \n  \n [!code-cs[System.Configuration.ConfigurationElement#31](~/add/codesnippet/csharp/t-system.configuration.c_8_5.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#31](~/add/codesnippet/visualbasic/t-system.configuration.c_8_5.vb)]"
  syntax:
    content: public abstract class ConfigurationElement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.#ctor
  id: '#ctor'
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: ConfigurationElement()
  nameWithType: ConfigurationElement.ConfigurationElement()
  fullName: System.Configuration.ConfigurationElement.ConfigurationElement()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> klasse."
  remarks: "U maakt een nieuw exemplaar van de <xref:System.Configuration.ConfigurationElement>klasse, bijvoorbeeld telkens wanneer uw toepassing moet een nieuw element toevoegen aan de verwante <xref:System.Configuration.ConfigurationElementCollection>verzameling.</xref:System.Configuration.ConfigurationElementCollection> </xref:System.Configuration.ConfigurationElement>"
  example:
  - "The following example shows how to use a customized constructor.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#32](~/add/codesnippet/csharp/m-system.configuration.c_36_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#32](~/add/codesnippet/visualbasic/m-system.configuration.c_36_1.vb)]"
  syntax:
    content: protected ConfigurationElement ();
    parameters: []
  overload: System.Configuration.ConfigurationElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.CurrentConfiguration
  id: CurrentConfiguration
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: CurrentConfiguration
  nameWithType: ConfigurationElement.CurrentConfiguration
  fullName: System.Configuration.ConfigurationElement.CurrentConfiguration
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Wordt een verwijzing naar het hoogste niveau <xref href=&quot;System.Configuration.Configuration&quot;> </xref> -exemplaar dat staat voor de configuratiehiërarchie die de huidige <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> instantie deel uitmaakt."
  remarks: "De eigenschap CurrentConfiguration kunt u gemakkelijk om te bepalen welke versie van de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] is gericht. De <xref:System.Configuration.Configuration.TargetFramework%2A>eigenschap van het hoogste niveau <xref:System.Configuration.Configuration>exemplaar geeft aan dat de betreffende framework-versie.</xref:System.Configuration.Configuration> </xref:System.Configuration.Configuration.TargetFramework%2A>"
  syntax:
    content: public System.Configuration.Configuration CurrentConfiguration { get; }
    return:
      type: System.Configuration.Configuration
      description: "Het hoogste niveau <xref href=&quot;System.Configuration.Configuration&quot;> </xref> exemplaar als waarvan de huidige <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> instantie deel uitmaakt."
  overload: System.Configuration.ConfigurationElement.CurrentConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  id: DeserializeElement(System.Xml.XmlReader,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: DeserializeElement(XmlReader,Boolean)
  nameWithType: ConfigurationElement.DeserializeElement(XmlReader,Boolean)
  fullName: System.Configuration.ConfigurationElement.DeserializeElement(XmlReader,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "XML kan lezen uit het configuratiebestand."
  remarks: ''
  example:
  - "The following example demonstrates how to extend the DeserializeElement method.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#33](~/add/codesnippet/csharp/6dc9ac84-77cf-449c-b380-_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#33](~/add/codesnippet/visualbasic/6dc9ac84-77cf-449c-b380-_1.vb)]"
  syntax:
    content: protected virtual void DeserializeElement (System.Xml.XmlReader reader, bool serializeCollectionKey);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "De <xref:System.Xml.XmlReader>dat wordt gelezen uit het configuratiebestand.</xref:System.Xml.XmlReader>"
    - id: serializeCollectionKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het serialiseren van alleen de verzameling sleuteleigenschappen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.DeserializeElement*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The element to read is locked.  \n  \n \\- or -  \n  \n An attribute of the current node is not recognized.  \n  \n \\- or -  \n  \n The lock status of the current node cannot be determined."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.ElementInformation
  id: ElementInformation
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: ElementInformation
  nameWithType: ConfigurationElement.ElementInformation
  fullName: System.Configuration.ConfigurationElement.ElementInformation
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Haalt een <xref href=&quot;System.Configuration.ElementInformation&quot;> </xref> object met de niet-aanpasbare gegevens en functionaliteit van de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> object."
  remarks: ''
  example:
  - "The following example shows how to use the ElementInformation property.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#80](~/add/codesnippet/csharp/p-system.configuration.c_48_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#80](~/add/codesnippet/visualbasic/p-system.configuration.c_48_1.vb)]"
  syntax:
    content: public System.Configuration.ElementInformation ElementInformation { get; }
    return:
      type: System.Configuration.ElementInformation
      description: "Een <xref href=&quot;System.Configuration.ElementInformation&quot;> </xref> die bevat de niet-aanpasbare gegevens en functionaliteit van de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.ElementInformation*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.ElementProperty
  id: ElementProperty
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: ElementProperty
  nameWithType: ConfigurationElement.ElementProperty
  fullName: System.Configuration.ConfigurationElement.ElementProperty
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Haalt de <xref href=&quot;System.Configuration.ConfigurationElementProperty&quot;> </xref> -object met de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> object zelf."
  syntax:
    content: protected virtual System.Configuration.ConfigurationElementProperty ElementProperty { get; }
    return:
      type: System.Configuration.ConfigurationElementProperty
      description: "De <xref href=&quot;System.Configuration.ConfigurationElementProperty&quot;> </xref> die staat voor de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> zelf."
  overload: System.Configuration.ConfigurationElement.ElementProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ConfigurationElement.Equals(Object)
  fullName: System.Configuration.ConfigurationElement.Equals(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "De huidige vergelijkt <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> -exemplaar voor het opgegeven object."
  syntax:
    content: public override bool Equals (object compareTo);
    parameters:
    - id: compareTo
      type: System.Object
      description: "Het object dat moet worden vergeleken met."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het object moet worden vergeleken met gelijk aan de huidige is <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> exemplaar; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.EvaluationContext
  id: EvaluationContext
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: EvaluationContext
  nameWithType: ConfigurationElement.EvaluationContext
  fullName: System.Configuration.ConfigurationElement.EvaluationContext
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Haalt de <xref href=&quot;System.Configuration.ContextInformation&quot;> </xref> object voor de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> object."
  remarks: "Een <xref:System.Configuration.ContextInformation>object biedt de context die nodig zijn voor een <xref:System.Configuration.ConfigurationElement>object om beslissingen te nemen die zijn gebaseerd op waar het wordt geëvalueerd.</xref:System.Configuration.ConfigurationElement> </xref:System.Configuration.ContextInformation>       De <xref:System.Configuration.ContextInformation>-object biedt omgeving details gerelateerd aan een element van de configuratie.</xref:System.Configuration.ContextInformation> U kunt bijvoorbeeld de <xref:System.Configuration.ContextInformation.IsMachineLevel%2A>eigenschap om te bepalen of een <xref:System.Configuration.ConfigurationElement>is ingesteld in Machine.config of u kunt bepalen welke hiërarchie een <xref:System.Configuration.ConfigurationElement>element behoort tot met behulp van de <xref:System.Configuration.ContextInformation.HostingContext%2A>eigenschap.</xref:System.Configuration.ContextInformation.HostingContext%2A> </xref:System.Configuration.ConfigurationElement> </xref:System.Configuration.ConfigurationElement> </xref:System.Configuration.ContextInformation.IsMachineLevel%2A>"
  syntax:
    content: protected System.Configuration.ContextInformation EvaluationContext { get; }
    return:
      type: System.Configuration.ContextInformation
      description: "The <xref href=&quot;System.Configuration.ContextInformation&quot;></xref> for the <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>."
  overload: System.Configuration.ConfigurationElement.EvaluationContext*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Het huidige element is niet gekoppeld aan een context."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.GetHashCode
  id: GetHashCode
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ConfigurationElement.GetHashCode()
  fullName: System.Configuration.ConfigurationElement.GetHashCode()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee wordt een unieke waarde die aangeeft van de huidige <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> exemplaar."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Een unieke waarde die aangeeft van de huidige <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> exemplaar."
  overload: System.Configuration.ConfigurationElement.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  id: GetTransformedAssemblyString(System.String)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: GetTransformedAssemblyString(String)
  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)
  fullName: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Retourneert de getransformeerde versie van de opgegeven assembly-naam."
  remarks: "De <xref:System.Configuration.ConfigurationElement.SerializeElement%2A>methode en de <xref:System.Configuration.ConfigurationElement.SerializeToXmlElement%2A>methode deze methode niet aanroepen om het transformeren van assembly-naam als een eerdere versie van de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] is gericht.</xref:System.Configuration.ConfigurationElement.SerializeToXmlElement%2A> </xref:System.Configuration.ConfigurationElement.SerializeElement%2A>"
  syntax:
    content: protected virtual string GetTransformedAssemblyString (string assemblyName);
    parameters:
    - id: assemblyName
      type: System.String
      description: "De naam van de assembly."
    return:
      type: System.String
      description: "De getransformeerde versie van de assembly-naam. Als er geen transformator beschikbaar is, de <code> assemblyName </code> parameterwaarde ongewijzigd geretourneerd. De <xref:System.Configuration.Configuration.TypeStringTransformer*>eigenschap is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen transformator beschikbaar.</xref:System.Configuration.Configuration.TypeStringTransformer*>"
  overload: System.Configuration.ConfigurationElement.GetTransformedAssemblyString*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  id: GetTransformedTypeString(System.String)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: GetTransformedTypeString(String)
  nameWithType: ConfigurationElement.GetTransformedTypeString(String)
  fullName: System.Configuration.ConfigurationElement.GetTransformedTypeString(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Retourneert de getransformeerde versie van de opgegeven typenaam."
  remarks: "De <xref:System.Configuration.ConfigurationElement.SerializeElement%2A>methode en de <xref:System.Configuration.ConfigurationElement.SerializeToXmlElement%2A>methode deze methode niet aanroepen om te transformeren een typenaam wanneer een eerdere versie van de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] is gericht.</xref:System.Configuration.ConfigurationElement.SerializeToXmlElement%2A> </xref:System.Configuration.ConfigurationElement.SerializeElement%2A>"
  syntax:
    content: protected virtual string GetTransformedTypeString (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "De naam van het type."
    return:
      type: System.String
      description: "De getransformeerde versie van de opgegeven typenaam. Als er geen transformator beschikbaar is, de <code> typeName </code> parameterwaarde ongewijzigd geretourneerd. De <xref:System.Configuration.Configuration.TypeStringTransformer*>eigenschap is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen transformator beschikbaar.</xref:System.Configuration.Configuration.TypeStringTransformer*>"
  overload: System.Configuration.ConfigurationElement.GetTransformedTypeString*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.HasContext
  id: HasContext
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: HasContext
  nameWithType: ConfigurationElement.HasContext
  fullName: System.Configuration.ConfigurationElement.HasContext
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de <xref:System.Configuration.ConfigurationElement.CurrentConfiguration*>eigenschap is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Configuration.ConfigurationElement.CurrentConfiguration*>"
  syntax:
    content: protected bool HasContext { get; }
    return:
      type: System.Boolean
      description: "False als de <xref:System.Configuration.ConfigurationElement.CurrentConfiguration*>eigenschap is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; anders <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Configuration.ConfigurationElement.CurrentConfiguration*>"
  overload: System.Configuration.ConfigurationElement.HasContext*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Init
  id: Init
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Init()
  nameWithType: ConfigurationElement.Init()
  fullName: System.Configuration.ConfigurationElement.Init()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Stelt de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> object in de oorspronkelijke toestand."
  syntax:
    content: protected virtual void Init ();
    parameters: []
  overload: System.Configuration.ConfigurationElement.Init*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.InitializeDefault
  id: InitializeDefault
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: InitializeDefault()
  nameWithType: ConfigurationElement.InitializeDefault()
  fullName: System.Configuration.ConfigurationElement.InitializeDefault()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gebruikt voor het initialiseren van een reeks waarden voor de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> object."
  remarks: "Aangeroepen om de interne status van het object ingesteld op juiste standaardwaarden."
  syntax:
    content: protected virtual void InitializeDefault ();
    parameters: []
  overload: System.Configuration.ConfigurationElement.InitializeDefault*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.IsModified
  id: IsModified
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: IsModified()
  nameWithType: ConfigurationElement.IsModified()
  fullName: System.Configuration.ConfigurationElement.IsModified()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee wordt aangegeven of dit configuratie-element is gewijzigd sinds de laatste is opgeslagen of geladen wanneer geïmplementeerd in een afgeleide klasse."
  remarks: "Bepaalt de methode voor is gewijzigd of dit <xref:System.Configuration.ConfigurationElement>object aan de configuratie worden geschreven wanneer de <xref:System.Configuration.Configuration.Save%2A>methode wordt aangeroepen.</xref:System.Configuration.Configuration.Save%2A> </xref:System.Configuration.ConfigurationElement> Als de retourwaarde `false`, wordt ervan uitgegaan dat het configuratiebestand de huidige status van het element vertegenwoordigt.       Standaard voor is gewijzigd retourneert `true` nadat een eigenschap is ingesteld via de indexeerfunctie met deze <xref:System.Configuration.ConfigurationElement>object.</xref:System.Configuration.ConfigurationElement>       Negeer de methode voor is gewijzigd voor aangepaste indicatie van de status van deze <xref:System.Configuration.ConfigurationElement>element.</xref:System.Configuration.ConfigurationElement>"
  example:
  - "The following example shows how to extend IsModified.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#35](~/add/codesnippet/csharp/m-system.configuration.c_9_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#35](~/add/codesnippet/visualbasic/m-system.configuration.c_9_1.vb)]  \n  \n The method shown in the previous example is called when a configuration element is modified, as in the following example.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#6](~/add/codesnippet/csharp/m-system.configuration.c_9_2.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#6](~/add/codesnippet/visualbasic/m-system.configuration.c_9_2.vb)]"
  syntax:
    content: protected virtual bool IsModified ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het element is gewijzigd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.IsModified*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.IsReadOnly
  id: IsReadOnly
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: IsReadOnly()
  nameWithType: ConfigurationElement.IsReadOnly()
  fullName: System.Configuration.ConfigurationElement.IsReadOnly()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Haalt een waarde die aangeeft of de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> object is alleen-lezen."
  remarks: "Het systeem definieert configuratie-elementen kunnen niet worden gewijzigd.       Om te bepalen welke elementen kunnen worden gewijzigd, moet u de IsReadOnly-methode gebruiken."
  example:
  - "The following example shows how to use the IsReadOnly method. It is used on a custom section and returns `false`.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#7](~/add/codesnippet/csharp/m-system.configuration.c_12_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#7](~/add/codesnippet/visualbasic/m-system.configuration.c_12_1.vb)]"
  syntax:
    content: public virtual bool IsReadOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> -object is alleen-lezen, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  id: Item(System.Configuration.ConfigurationProperty)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Item(ConfigurationProperty)
  nameWithType: ConfigurationElement.Item(ConfigurationProperty)
  fullName: System.Configuration.ConfigurationElement.Item(ConfigurationProperty)
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Opgehaald of ingesteld van een eigenschap of kenmerk van dit configuratie-element."
  remarks: "Gebruik de eigenschap Item ophalen of instellen van de waarden van een <xref:System.Configuration.ConfigurationProperty>object.</xref:System.Configuration.ConfigurationProperty>       In C# is deze eigenschap de indexeerfunctie voor de <xref:System.Configuration.ConfigurationSectionCollection>klasse.</xref:System.Configuration.ConfigurationSectionCollection>"
  syntax:
    content: protected object this[System.Configuration.ConfigurationProperty prop] { get; set; }
    parameters:
    - id: prop
      type: System.Configuration.ConfigurationProperty
      description: "De eigenschap voor toegang tot."
    return:
      type: System.Object
      description: "De opgegeven eigenschap of kenmerk onderliggende element."
  overload: System.Configuration.ConfigurationElement.Item*
  exceptions:
  - type: System.Configuration.ConfigurationException
    commentId: T:System.Configuration.ConfigurationException
    description: "<code>prop</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of bestaat niet in het element."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>prop</code>alleen of vergrendelde wordt gelezen."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Item(String)
  nameWithType: ConfigurationElement.Item(String)
  fullName: System.Configuration.ConfigurationElement.Item(String)
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Opgehaald of ingesteld van een eigenschap of kenmerk onderliggende element van deze configuratie-element."
  remarks: "Gebruik de eigenschap Item ophalen of instellen van de waarden van een <xref:System.Configuration.ConfigurationProperty>object.</xref:System.Configuration.ConfigurationProperty>       In C# is deze eigenschap de indexeerfunctie voor de <xref:System.Configuration.ConfigurationSectionCollection>klasse.</xref:System.Configuration.ConfigurationSectionCollection>"
  syntax:
    content: protected object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "De naam van de <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> voor toegang."
    return:
      type: System.Object
      description: "De opgegeven eigenschap of kenmerk onderliggend element"
  overload: System.Configuration.ConfigurationElement.Item*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>prop</code>is alleen-lezen of vergrendeld."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  id: ListErrors(System.Collections.IList)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: ListErrors(IList)
  nameWithType: ConfigurationElement.ListErrors(IList)
  fullName: System.Configuration.ConfigurationElement.ListErrors(IList)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Voegt de ongeldige eigenschap fouten in deze <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> object, en in alle subelementen, aan de lijst met doorgegeven."
  syntax:
    content: protected virtual void ListErrors (System.Collections.IList errorList);
    parameters:
    - id: errorList
      type: System.Collections.IList
      description: "Een object dat u implementeert de <xref:System.Collections.IList>interface.</xref:System.Collections.IList>"
  overload: System.Configuration.ConfigurationElement.ListErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept
  id: LockAllAttributesExcept
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: LockAllAttributesExcept
  nameWithType: ConfigurationElement.LockAllAttributesExcept
  fullName: System.Configuration.ConfigurationElement.LockAllAttributesExcept
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee wordt de verzameling vergrendeld kenmerken."
  remarks: "De eigenschap LockAllAttributesExcept kunt u alle kenmerken in één keer vergrendelen met uitzondering van de die u hebt opgegeven. Hiervoor gebruikt u de <xref:System.Configuration.ConfigurationLockCollection.Contains%2A>methode, zoals wordt beschreven in het voorbeeld in deze sectie.</xref:System.Configuration.ConfigurationLockCollection.Contains%2A>      > [!NOTE] > De LockAllAttributesExcept eigenschap kunt u voorkomen dat het onderliggende configuratie-elementen van het element waarop u de regel van toepassing worden gewijzigd. Gebruik de <xref:System.Configuration.ConfigurationElement.LockItem%2A>eigenschap als u wilt een algemene plaatsen op het bovenliggende element vergrendelen zelf en de onderliggende elementen.</xref:System.Configuration.ConfigurationElement.LockItem%2A>"
  example:
  - "The following example shows how to use the LockAllAttributesExcept.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#9](~/add/codesnippet/csharp/p-system.configuration.c_59_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#9](~/add/codesnippet/visualbasic/p-system.configuration.c_59_1.vb)]"
  syntax:
    content: public System.Configuration.ConfigurationLockCollection LockAllAttributesExcept { get; }
    return:
      type: System.Configuration.ConfigurationLockCollection
      description: "De <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> van vergrendelde kenmerken (eigenschappen) voor het element."
  overload: System.Configuration.ConfigurationElement.LockAllAttributesExcept*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept
  id: LockAllElementsExcept
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: LockAllElementsExcept
  nameWithType: ConfigurationElement.LockAllElementsExcept
  fullName: System.Configuration.ConfigurationElement.LockAllElementsExcept
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee haalt u de verzameling van vergrendelde elementen."
  remarks: "De eigenschap LockAllElementsExcept kunt u alle elementen in één keer vergrendelen, met uitzondering van de die u hebt opgegeven.      > [!NOTE] > De LockAllElementsExcept eigenschap kunt u voorkomen dat het onderliggende configuratie-elementen van het element waarop u de regel van toepassing worden gewijzigd. Gebruik de <xref:System.Configuration.ConfigurationElement.LockItem%2A>eigenschap als u wilt plaatsen van een algemene vergrendeld op het element zelf en de onderliggende elementen.</xref:System.Configuration.ConfigurationElement.LockItem%2A>"
  example:
  - "The following example shows how to use the LockAllElementsExcept property.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#5](~/add/codesnippet/csharp/p-system.configuration.c_3_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#5](~/add/codesnippet/visualbasic/p-system.configuration.c_3_1.vb)]"
  syntax:
    content: public System.Configuration.ConfigurationLockCollection LockAllElementsExcept { get; }
    return:
      type: System.Configuration.ConfigurationLockCollection
      description: "De <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> van vergrendelde elementen."
  overload: System.Configuration.ConfigurationElement.LockAllElementsExcept*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.LockAttributes
  id: LockAttributes
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: LockAttributes
  nameWithType: ConfigurationElement.LockAttributes
  fullName: System.Configuration.ConfigurationElement.LockAttributes
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee wordt de verzameling vergrendeld kenmerken"
  remarks: "De eigenschap LockAttributes kunt u de kenmerken die u opgeeft vergrendelen.       Wilt u ook de <xref:System.Configuration.ConfigurationLockCollection.Contains%2A>methode, zoals wordt beschreven in het voorbeeld in deze sectie.</xref:System.Configuration.ConfigurationLockCollection.Contains%2A>      > [!NOTE] > Eigenschap van de opties lockattributes en kunt u voorkomen dat het onderliggende configuratie-elementen van het element waarop u de regel van toepassing worden gewijzigd. Gebruik <xref:System.Configuration.ConfigurationElement.LockItem%2A>Als u wilt een algemene vergrendeling plaatsen op het element zelf en de onderliggende elementen.</xref:System.Configuration.ConfigurationElement.LockItem%2A>"
  example:
  - "The following example shows how to use the LockAttributes property.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#8](~/add/codesnippet/csharp/p-system.configuration.c_45_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#8](~/add/codesnippet/visualbasic/p-system.configuration.c_45_1.vb)]"
  syntax:
    content: public System.Configuration.ConfigurationLockCollection LockAttributes { get; }
    return:
      type: System.Configuration.ConfigurationLockCollection
      description: "De <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> van vergrendelde kenmerken (eigenschappen) voor het element."
  overload: System.Configuration.ConfigurationElement.LockAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.LockElements
  id: LockElements
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: LockElements
  nameWithType: ConfigurationElement.LockElements
  fullName: System.Configuration.ConfigurationElement.LockElements
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee haalt u de verzameling van vergrendelde elementen."
  remarks: "De eigenschap LockElements kunt u vergrendelen van alle elementen die u opgeeft.       Hiervoor gebruikt u de <xref:System.Configuration.ConfigurationLockCollection.Contains%2A>methode, zoals wordt beschreven in het volgende voorbeeld.</xref:System.Configuration.ConfigurationLockCollection.Contains%2A>      > [!NOTE] > De LockElements eigenschap kunt u voorkomen dat het onderliggende configuratie-elementen van het element waarop u de regel van toepassing worden gewijzigd. Gebruik <xref:System.Configuration.ConfigurationElement.LockItem%2A>Als u wilt een algemene vergrendeling plaatsen op het element zelf en de onderliggende elementen.</xref:System.Configuration.ConfigurationElement.LockItem%2A>"
  example:
  - "The following example shows how to use the LockElements property.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#4](~/add/codesnippet/csharp/p-system.configuration.c_11_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#4](~/add/codesnippet/visualbasic/p-system.configuration.c_11_1.vb)]"
  syntax:
    content: public System.Configuration.ConfigurationLockCollection LockElements { get; }
    return:
      type: System.Configuration.ConfigurationLockCollection
      description: "De <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> van vergrendelde elementen."
  overload: System.Configuration.ConfigurationElement.LockElements*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.LockItem
  id: LockItem
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: LockItem
  nameWithType: ConfigurationElement.LockItem
  fullName: System.Configuration.ConfigurationElement.LockItem
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of het element is vergrendeld."
  remarks: "Gebruik de eigenschap LockItem als u wilt een algemene vergrendeling plaatsen op het element zelf en de onderliggende elementen."
  example:
  - "The following example shows how to use the LockItem.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#3](~/add/codesnippet/csharp/p-system.configuration.c_20_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#3](~/add/codesnippet/visualbasic/p-system.configuration.c_20_1.vb)]"
  syntax:
    content: public bool LockItem { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het element is vergrendeld. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.LockItem*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Het element is al vergrendeld op een hoger configuratieniveau."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  id: OnDeserializeUnrecognizedAttribute(System.String,System.String)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: OnDeserializeUnrecognizedAttribute(String,String)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String,String)
  fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(String,String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Haalt een waarde die aangeeft of een onbekend kenmerk is aangetroffen tijdens de deserialisatie."
  remarks: "De OnDeserializeUnrecognizedAttribute wordt aangeroepen wanneer een onbekend kenmerk is opgetreden tijdens het deserialiseren van de <xref:System.Configuration.ConfigurationElement>object.</xref:System.Configuration.ConfigurationElement>"
  syntax:
    content: protected virtual bool OnDeserializeUnrecognizedAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de niet-herkend kenmerk."
    - id: value
      type: System.String
      description: "De waarde van de niet-herkend kenmerk."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Wanneer een onbekend kenmerk is opgetreden bij het deserialiseren; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  id: OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: OnDeserializeUnrecognizedElement(String,XmlReader)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String,XmlReader)
  fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(String,XmlReader)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Haalt een waarde die aangeeft of een onbekend element wordt aangetroffen tijdens de deserialisatie."
  remarks: "De OnDeserializeUnrecognizedElement wordt aangeroepen wanneer een onbekend kenmerk is opgetreden tijdens het deserialiseren van de <xref:System.Configuration.ConfigurationElement>object.</xref:System.Configuration.ConfigurationElement>"
  syntax:
    content: protected virtual bool OnDeserializeUnrecognizedElement (string elementName, System.Xml.XmlReader reader);
    parameters:
    - id: elementName
      type: System.String
      description: "De naam van de onbekende subelement."
    - id: reader
      type: System.Xml.XmlReader
      description: "De <xref:System.Xml.XmlReader>wordt gebruikt voor deserialisatie.</xref:System.Xml.XmlReader>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Wanneer een onbekend element is opgetreden bij het deserialiseren; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The element identified by <code>elementName</code> is locked.  \n  \n \\- or -  \n  \n One or more of the element's attributes is locked.  \n  \n \\- or -  \n  \n <code>elementName</code> is unrecognized, or the element has an unrecognized attribute.  \n  \n \\- or -  \n  \n The element has a Boolean attribute with an invalid value.  \n  \n \\- or -  \n  \n An attempt was made to deserialize a property more than once.  \n  \n \\- or -  \n  \n An attempt was made to deserialize a property that is not a valid member of the element.  \n  \n \\- or -  \n  \n The element cannot contain a CDATA or text element."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  id: OnRequiredPropertyNotFound(System.String)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: OnRequiredPropertyNotFound(String)
  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)
  fullName: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Er een uitzondering gegenereerd wanneer een vereiste eigenschap is niet gevonden."
  remarks: "De <xref:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement%2A>wordt aangeroepen wanneer een onbekend kenmerk is opgetreden tijdens het deserialiseren van de <xref:System.Configuration.ConfigurationElement>object.</xref:System.Configuration.ConfigurationElement> </xref:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement%2A>"
  syntax:
    content: protected virtual object OnRequiredPropertyNotFound (string name);
    parameters:
    - id: name
      type: System.String
      description: "De naam van het vereiste kenmerk dat is niet gevonden."
    return:
      type: System.Object
      description: "Geen."
  overload: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "In alle gevallen."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.PostDeserialize
  id: PostDeserialize
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: PostDeserialize()
  nameWithType: ConfigurationElement.PostDeserialize()
  fullName: System.Configuration.ConfigurationElement.PostDeserialize()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Aangeroepen na deserialisatie."
  syntax:
    content: protected virtual void PostDeserialize ();
    parameters: []
  overload: System.Configuration.ConfigurationElement.PostDeserialize*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  id: PreSerialize(System.Xml.XmlWriter)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: PreSerialize(XmlWriter)
  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)
  fullName: System.Configuration.ConfigurationElement.PreSerialize(XmlWriter)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Wordt aangeroepen voordat de serialisatie."
  syntax:
    content: protected virtual void PreSerialize (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "De <xref:System.Xml.XmlWriter>dat wordt gebruikt voor het serialiseren van de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>.</xref:System.Xml.XmlWriter>"
  overload: System.Configuration.ConfigurationElement.PreSerialize*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Properties
  id: Properties
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Properties
  nameWithType: ConfigurationElement.Properties
  fullName: System.Configuration.ConfigurationElement.Properties
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee haalt u de verzameling van eigenschappen."
  remarks: "De eigenschap Properties, ook wel de eigenschappenverzameling bevat alle eigenschappen (kenmerken) die betrekking hebben op het element."
  example:
  - For an example that shows how to use the Properties property, refer to the <xref:System.Configuration.ConfigurationProperty> class.
  syntax:
    content: protected virtual System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "De <xref href=&quot;System.Configuration.ConfigurationPropertyCollection&quot;> </xref> met eigenschappen voor het element."
  overload: System.Configuration.ConfigurationElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  id: Reset(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Reset(ConfigurationElement)
  nameWithType: ConfigurationElement.Reset(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElement.Reset(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "De interne status van de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> object, met inbegrip van de vergrendelingen en de verzamelingen eigenschappen."
  syntax:
    content: protected virtual void Reset (System.Configuration.ConfigurationElement parentElement);
    parameters:
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "Het bovenliggende knooppunt van het configuratie-element."
  overload: System.Configuration.ConfigurationElement.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.ResetModified
  id: ResetModified
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: ResetModified()
  nameWithType: ConfigurationElement.ResetModified()
  fullName: System.Configuration.ConfigurationElement.ResetModified()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee stelt u de waarde van de <xref:System.Configuration.ConfigurationElement.IsModified*>methode <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> wanneer geïmplementeerd in een afgeleide klasse.</xref:System.Configuration.ConfigurationElement.IsModified*>"
  remarks: "De methode ResetModified wordt automatisch aangeroepen nadat wijzigingen zijn aangebracht aan deze <xref:System.Configuration.ConfigurationElement>object is geschreven naar het configuratiebestand.</xref:System.Configuration.ConfigurationElement>"
  syntax:
    content: protected virtual void ResetModified ();
    parameters: []
  overload: System.Configuration.ConfigurationElement.ResetModified*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  id: SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: SerializeElement(XmlWriter,Boolean)
  nameWithType: ConfigurationElement.SerializeElement(XmlWriter,Boolean)
  fullName: System.Configuration.ConfigurationElement.SerializeElement(XmlWriter,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Schrijft de inhoud van dit configuratie-element in het configuratiebestand wanneer geïmplementeerd in een afgeleide klasse."
  remarks: ''
  example:
  - "The following example shows how to extend the SerializeElement method.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#34](~/add/codesnippet/csharp/640dc581-4dbf-4d04-aba6-_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#34](~/add/codesnippet/visualbasic/640dc581-4dbf-4d04-aba6-_1.vb)]"
  syntax:
    content: protected virtual bool SerializeElement (System.Xml.XmlWriter writer, bool serializeCollectionKey);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "De <xref:System.Xml.XmlWriter>die naar het configuratiebestand wordt geschreven.</xref:System.Xml.XmlWriter>"
    - id: serializeCollectionKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het serialiseren van alleen de verzameling sleuteleigenschappen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als er geen gegevens daadwerkelijk is geserialiseerd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.SerializeElement*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Het huidige kenmerk is vergrendeld op een hoger configuratieniveau."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  id: SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: SerializeToXmlElement(XmlWriter,String)
  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter,String)
  fullName: System.Configuration.ConfigurationElement.SerializeToXmlElement(XmlWriter,String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Schrijft de buitenste labels van dit configuratie-element in het configuratiebestand wanneer geïmplementeerd in een afgeleide klasse."
  remarks: "De methode SerializeToXmlElement wordt aangeroepen na het aanroepen van de <xref:System.Configuration.ConfigurationElement.Unmerge%2A>methode tijdens serialisatie.</xref:System.Configuration.ConfigurationElement.Unmerge%2A> De methode SerializeToXmlElement schrijft de inhoud van het configuratie-element tussen de begin- en eindtijd afsluitcodes van het element. Overschrijven SerializeToXmlElement om een aangepaste serialisatie-methode te bieden."
  syntax:
    content: protected virtual bool SerializeToXmlElement (System.Xml.XmlWriter writer, string elementName);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "De <xref:System.Xml.XmlWriter>die naar het configuratiebestand wordt geschreven.</xref:System.Xml.XmlWriter>"
    - id: elementName
      type: System.String
      description: "De naam van de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> worden geschreven."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als schrijven voltooid is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.SerializeToXmlElement*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Het element heeft meerdere onderliggende elementen."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  id: SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: SetPropertyValue(ConfigurationProperty,Object,Boolean)
  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty,Object,Boolean)
  fullName: System.Configuration.ConfigurationElement.SetPropertyValue(ConfigurationProperty,Object,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee stelt u een eigenschap met de opgegeven waarde."
  syntax:
    content: protected void SetPropertyValue (System.Configuration.ConfigurationProperty prop, object value, bool ignoreLocks);
    parameters:
    - id: prop
      type: System.Configuration.ConfigurationProperty
      description: "De eigenschap element om in te stellen."
    - id: value
      type: System.Object
      description: "De waarde toewijzen aan de eigenschap."
    - id: ignoreLocks
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de vergrendelingen in de eigenschap moeten worden genegeerd. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.SetPropertyValue*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Deze gebeurtenis treedt op als het element alleen-lezen is of <code> ignoreLocks </code> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> , maar de vergrendelingen kunnen niet worden genegeerd."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.SetReadOnly
  id: SetReadOnly
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: SetReadOnly()
  nameWithType: ConfigurationElement.SetReadOnly()
  fullName: System.Configuration.ConfigurationElement.SetReadOnly()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Stelt de <xref:System.Configuration.ConfigurationElement.IsReadOnly*>eigenschap voor de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> object en alle subelementen.</xref:System.Configuration.ConfigurationElement.IsReadOnly*>"
  remarks: "Deze methode wordt intern gebruikt om de systeemconfiguratie elementen die niet worden gewijzigd.       Om te bepalen welke elementen kunnen worden gewijzigd, gebruikt de <xref:System.Configuration.ConfigurationElement.IsReadOnly%2A>methode.</xref:System.Configuration.ConfigurationElement.IsReadOnly%2A>"
  syntax:
    content: protected virtual void SetReadOnly ();
    parameters: []
  overload: System.Configuration.ConfigurationElement.SetReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  id: Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  fullName: System.Configuration.ConfigurationElement.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee wijzigt u de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> object om te verwijderen van alle waarden die niet worden opgeslagen."
  remarks: "Deze methode wordt aangeroepen voordat de <xref:System.Configuration.ConfigurationElement>object wordt opgeslagen door de <xref:System.Configuration.Configuration>object om te kunnen Verwijder alle overbodige eigenschappen.</xref:System.Configuration.Configuration> </xref:System.Configuration.ConfigurationElement>"
  syntax:
    content: protected virtual void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode saveMode);
    parameters:
    - id: sourceElement
      type: System.Configuration.ConfigurationElement
      description: "Een <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> op het huidige niveau met een samengevoegde weergave van de eigenschappen."
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "De bovenliggende <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>, of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als dit het hoogste niveau."
    - id: saveMode
      type: System.Configuration.ConfigurationSaveMode
      description: "Een <xref href=&quot;System.Configuration.ConfigurationSaveMode&quot;> </xref> waarmee wordt bepaald welke eigenschap waarden wilt opnemen."
  overload: System.Configuration.ConfigurationElement.Unmerge*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.ConfigurationException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationException
  nameWithType: ConfigurationException
  fullName: System.Configuration.ConfigurationException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Configuration.ConfigurationElement.#ctor
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ConfigurationElement()
  nameWithType: ConfigurationElement.ConfigurationElement()
  fullName: System.Configuration.ConfigurationElement.ConfigurationElement()
- uid: System.Configuration.ConfigurationElement.CurrentConfiguration
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: CurrentConfiguration
  nameWithType: ConfigurationElement.CurrentConfiguration
  fullName: System.Configuration.ConfigurationElement.CurrentConfiguration
- uid: System.Configuration.Configuration
  parent: System.Configuration
  isExternal: false
  name: Configuration
  nameWithType: Configuration
  fullName: System.Configuration.Configuration
- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: DeserializeElement(XmlReader,Boolean)
  nameWithType: ConfigurationElement.DeserializeElement(XmlReader,Boolean)
  fullName: System.Configuration.ConfigurationElement.DeserializeElement(XmlReader,Boolean)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationElement.ElementInformation
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ElementInformation
  nameWithType: ConfigurationElement.ElementInformation
  fullName: System.Configuration.ConfigurationElement.ElementInformation
- uid: System.Configuration.ElementInformation
  parent: System.Configuration
  isExternal: false
  name: ElementInformation
  nameWithType: ElementInformation
  fullName: System.Configuration.ElementInformation
- uid: System.Configuration.ConfigurationElement.ElementProperty
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ElementProperty
  nameWithType: ConfigurationElement.ElementProperty
  fullName: System.Configuration.ConfigurationElement.ElementProperty
- uid: System.Configuration.ConfigurationElementProperty
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElementProperty
  nameWithType: ConfigurationElementProperty
  fullName: System.Configuration.ConfigurationElementProperty
- uid: System.Configuration.ConfigurationElement.Equals(System.Object)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Equals(Object)
  nameWithType: ConfigurationElement.Equals(Object)
  fullName: System.Configuration.ConfigurationElement.Equals(Object)
- uid: System.Configuration.ConfigurationElement.EvaluationContext
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: EvaluationContext
  nameWithType: ConfigurationElement.EvaluationContext
  fullName: System.Configuration.ConfigurationElement.EvaluationContext
- uid: System.Configuration.ContextInformation
  parent: System.Configuration
  isExternal: false
  name: ContextInformation
  nameWithType: ContextInformation
  fullName: System.Configuration.ContextInformation
- uid: System.Configuration.ConfigurationElement.GetHashCode
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetHashCode()
  nameWithType: ConfigurationElement.GetHashCode()
  fullName: System.Configuration.ConfigurationElement.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetTransformedAssemblyString(String)
  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)
  fullName: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetTransformedTypeString(String)
  nameWithType: ConfigurationElement.GetTransformedTypeString(String)
  fullName: System.Configuration.ConfigurationElement.GetTransformedTypeString(String)
- uid: System.Configuration.ConfigurationElement.HasContext
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: HasContext
  nameWithType: ConfigurationElement.HasContext
  fullName: System.Configuration.ConfigurationElement.HasContext
- uid: System.Configuration.ConfigurationElement.Init
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Init()
  nameWithType: ConfigurationElement.Init()
  fullName: System.Configuration.ConfigurationElement.Init()
- uid: System.Configuration.ConfigurationElement.InitializeDefault
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: InitializeDefault()
  nameWithType: ConfigurationElement.InitializeDefault()
  fullName: System.Configuration.ConfigurationElement.InitializeDefault()
- uid: System.Configuration.ConfigurationElement.IsModified
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: IsModified()
  nameWithType: ConfigurationElement.IsModified()
  fullName: System.Configuration.ConfigurationElement.IsModified()
- uid: System.Configuration.ConfigurationElement.IsReadOnly
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: IsReadOnly()
  nameWithType: ConfigurationElement.IsReadOnly()
  fullName: System.Configuration.ConfigurationElement.IsReadOnly()
- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Item(ConfigurationProperty)
  nameWithType: ConfigurationElement.Item(ConfigurationProperty)
  fullName: System.Configuration.ConfigurationElement.Item(ConfigurationProperty)
- uid: System.Configuration.ConfigurationProperty
  parent: System.Configuration
  isExternal: false
  name: ConfigurationProperty
  nameWithType: ConfigurationProperty
  fullName: System.Configuration.ConfigurationProperty
- uid: System.Configuration.ConfigurationElement.Item(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Item(String)
  nameWithType: ConfigurationElement.Item(String)
  fullName: System.Configuration.ConfigurationElement.Item(String)
- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ListErrors(IList)
  nameWithType: ConfigurationElement.ListErrors(IList)
  fullName: System.Configuration.ConfigurationElement.ListErrors(IList)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAllAttributesExcept
  nameWithType: ConfigurationElement.LockAllAttributesExcept
  fullName: System.Configuration.ConfigurationElement.LockAllAttributesExcept
- uid: System.Configuration.ConfigurationLockCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationLockCollection
  nameWithType: ConfigurationLockCollection
  fullName: System.Configuration.ConfigurationLockCollection
- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAllElementsExcept
  nameWithType: ConfigurationElement.LockAllElementsExcept
  fullName: System.Configuration.ConfigurationElement.LockAllElementsExcept
- uid: System.Configuration.ConfigurationElement.LockAttributes
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAttributes
  nameWithType: ConfigurationElement.LockAttributes
  fullName: System.Configuration.ConfigurationElement.LockAttributes
- uid: System.Configuration.ConfigurationElement.LockElements
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockElements
  nameWithType: ConfigurationElement.LockElements
  fullName: System.Configuration.ConfigurationElement.LockElements
- uid: System.Configuration.ConfigurationElement.LockItem
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockItem
  nameWithType: ConfigurationElement.LockItem
  fullName: System.Configuration.ConfigurationElement.LockItem
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnDeserializeUnrecognizedAttribute(String,String)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String,String)
  fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(String,String)
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnDeserializeUnrecognizedElement(String,XmlReader)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String,XmlReader)
  fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(String,XmlReader)
- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnRequiredPropertyNotFound(String)
  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)
  fullName: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(String)
- uid: System.Configuration.ConfigurationElement.PostDeserialize
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: PostDeserialize()
  nameWithType: ConfigurationElement.PostDeserialize()
  fullName: System.Configuration.ConfigurationElement.PostDeserialize()
- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: PreSerialize(XmlWriter)
  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)
  fullName: System.Configuration.ConfigurationElement.PreSerialize(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Configuration.ConfigurationElement.Properties
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Properties
  nameWithType: ConfigurationElement.Properties
  fullName: System.Configuration.ConfigurationElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Reset(ConfigurationElement)
  nameWithType: ConfigurationElement.Reset(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElement.Reset(ConfigurationElement)
- uid: System.Configuration.ConfigurationElement
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement
- uid: System.Configuration.ConfigurationElement.ResetModified
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ResetModified()
  nameWithType: ConfigurationElement.ResetModified()
  fullName: System.Configuration.ConfigurationElement.ResetModified()
- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SerializeElement(XmlWriter,Boolean)
  nameWithType: ConfigurationElement.SerializeElement(XmlWriter,Boolean)
  fullName: System.Configuration.ConfigurationElement.SerializeElement(XmlWriter,Boolean)
- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SerializeToXmlElement(XmlWriter,String)
  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter,String)
  fullName: System.Configuration.ConfigurationElement.SerializeToXmlElement(XmlWriter,String)
- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SetPropertyValue(ConfigurationProperty,Object,Boolean)
  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty,Object,Boolean)
  fullName: System.Configuration.ConfigurationElement.SetPropertyValue(ConfigurationProperty,Object,Boolean)
- uid: System.Configuration.ConfigurationElement.SetReadOnly
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SetReadOnly()
  nameWithType: ConfigurationElement.SetReadOnly()
  fullName: System.Configuration.ConfigurationElement.SetReadOnly()
- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  fullName: System.Configuration.ConfigurationElement.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
- uid: System.Configuration.ConfigurationSaveMode
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSaveMode
  nameWithType: ConfigurationSaveMode
  fullName: System.Configuration.ConfigurationSaveMode
- uid: System.Configuration.ConfigurationElement.#ctor*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement.ConfigurationElement
- uid: System.Configuration.ConfigurationElement.CurrentConfiguration*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: CurrentConfiguration
  nameWithType: ConfigurationElement.CurrentConfiguration
- uid: System.Configuration.ConfigurationElement.DeserializeElement*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: DeserializeElement
  nameWithType: ConfigurationElement.DeserializeElement
- uid: System.Configuration.ConfigurationElement.ElementInformation*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ElementInformation
  nameWithType: ConfigurationElement.ElementInformation
- uid: System.Configuration.ConfigurationElement.ElementProperty*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ElementProperty
  nameWithType: ConfigurationElement.ElementProperty
- uid: System.Configuration.ConfigurationElement.Equals*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Equals
  nameWithType: ConfigurationElement.Equals
- uid: System.Configuration.ConfigurationElement.EvaluationContext*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: EvaluationContext
  nameWithType: ConfigurationElement.EvaluationContext
- uid: System.Configuration.ConfigurationElement.GetHashCode*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetHashCode
  nameWithType: ConfigurationElement.GetHashCode
- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetTransformedAssemblyString
  nameWithType: ConfigurationElement.GetTransformedAssemblyString
- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetTransformedTypeString
  nameWithType: ConfigurationElement.GetTransformedTypeString
- uid: System.Configuration.ConfigurationElement.HasContext*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: HasContext
  nameWithType: ConfigurationElement.HasContext
- uid: System.Configuration.ConfigurationElement.Init*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Init
  nameWithType: ConfigurationElement.Init
- uid: System.Configuration.ConfigurationElement.InitializeDefault*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: InitializeDefault
  nameWithType: ConfigurationElement.InitializeDefault
- uid: System.Configuration.ConfigurationElement.IsModified*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: IsModified
  nameWithType: ConfigurationElement.IsModified
- uid: System.Configuration.ConfigurationElement.IsReadOnly*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: IsReadOnly
  nameWithType: ConfigurationElement.IsReadOnly
- uid: System.Configuration.ConfigurationElement.Item*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Item
  nameWithType: ConfigurationElement.Item
- uid: System.Configuration.ConfigurationElement.ListErrors*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ListErrors
  nameWithType: ConfigurationElement.ListErrors
- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAllAttributesExcept
  nameWithType: ConfigurationElement.LockAllAttributesExcept
- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAllElementsExcept
  nameWithType: ConfigurationElement.LockAllElementsExcept
- uid: System.Configuration.ConfigurationElement.LockAttributes*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAttributes
  nameWithType: ConfigurationElement.LockAttributes
- uid: System.Configuration.ConfigurationElement.LockElements*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockElements
  nameWithType: ConfigurationElement.LockElements
- uid: System.Configuration.ConfigurationElement.LockItem*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockItem
  nameWithType: ConfigurationElement.LockItem
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnDeserializeUnrecognizedAttribute
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnDeserializeUnrecognizedElement
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement
- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnRequiredPropertyNotFound
  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound
- uid: System.Configuration.ConfigurationElement.PostDeserialize*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: PostDeserialize
  nameWithType: ConfigurationElement.PostDeserialize
- uid: System.Configuration.ConfigurationElement.PreSerialize*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: PreSerialize
  nameWithType: ConfigurationElement.PreSerialize
- uid: System.Configuration.ConfigurationElement.Properties*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Properties
  nameWithType: ConfigurationElement.Properties
- uid: System.Configuration.ConfigurationElement.Reset*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Reset
  nameWithType: ConfigurationElement.Reset
- uid: System.Configuration.ConfigurationElement.ResetModified*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ResetModified
  nameWithType: ConfigurationElement.ResetModified
- uid: System.Configuration.ConfigurationElement.SerializeElement*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SerializeElement
  nameWithType: ConfigurationElement.SerializeElement
- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SerializeToXmlElement
  nameWithType: ConfigurationElement.SerializeToXmlElement
- uid: System.Configuration.ConfigurationElement.SetPropertyValue*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SetPropertyValue
  nameWithType: ConfigurationElement.SetPropertyValue
- uid: System.Configuration.ConfigurationElement.SetReadOnly*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SetReadOnly
  nameWithType: ConfigurationElement.SetReadOnly
- uid: System.Configuration.ConfigurationElement.Unmerge*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Unmerge
  nameWithType: ConfigurationElement.Unmerge
