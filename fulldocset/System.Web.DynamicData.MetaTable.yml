### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.MetaTable
  id: MetaTable
  children:
  - System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)
  - System.Web.DynamicData.MetaTable.Attributes
  - System.Web.DynamicData.MetaTable.BuildAttributeCollection
  - System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)
  - System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)
  - System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)
  - System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)
  - System.Web.DynamicData.MetaTable.Columns
  - System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  - System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  - System.Web.DynamicData.MetaTable.CreateContext
  - System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  - System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)
  - System.Web.DynamicData.MetaTable.CreateTable(System.Type)
  - System.Web.DynamicData.MetaTable.DataContextPropertyName
  - System.Web.DynamicData.MetaTable.DataContextType
  - System.Web.DynamicData.MetaTable.DisplayColumn
  - System.Web.DynamicData.MetaTable.DisplayName
  - System.Web.DynamicData.MetaTable.EntityType
  - System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames
  - System.Web.DynamicData.MetaTable.GetActionPath(System.String)
  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})
  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)
  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)
  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)
  - System.Web.DynamicData.MetaTable.GetColumn(System.String)
  - System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)
  - System.Web.DynamicData.MetaTable.GetDataKeyFromRoute
  - System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)
  - System.Web.DynamicData.MetaTable.GetFilteredColumns
  - System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)
  - System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})
  - System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)
  - System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)
  - System.Web.DynamicData.MetaTable.GetQuery
  - System.Web.DynamicData.MetaTable.GetQuery(System.Object)
  - System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)
  - System.Web.DynamicData.MetaTable.GetTable(System.Type)
  - System.Web.DynamicData.MetaTable.HasPrimaryKey
  - System.Web.DynamicData.MetaTable.Initialize
  - System.Web.DynamicData.MetaTable.IsReadOnly
  - System.Web.DynamicData.MetaTable.ListActionPath
  - System.Web.DynamicData.MetaTable.Model
  - System.Web.DynamicData.MetaTable.Name
  - System.Web.DynamicData.MetaTable.PrimaryKeyColumns
  - System.Web.DynamicData.MetaTable.Provider
  - System.Web.DynamicData.MetaTable.ResetMetadata
  - System.Web.DynamicData.MetaTable.RootEntityType
  - System.Web.DynamicData.MetaTable.Scaffold
  - System.Web.DynamicData.MetaTable.SortColumn
  - System.Web.DynamicData.MetaTable.SortDescending
  - System.Web.DynamicData.MetaTable.ToString
  - System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)
  - System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  langs:
  - csharp
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
  type: Class
  summary: "Hiermee geeft u de metagegevens die worden beschreven van een tabel voor gebruik door dynamische gegevens pagina&quot;s."
  remarks: ''
  example:
  - "The following example is part of the code-behind file for the Insert.aspx page template. The MetaTable instance is initialized in the `Page_Load` method. The title for the page is set to the table `DisplayName` property.  \n  \n```c#  \npublic partial class Insert : System.Web.UI.Page {  \n    protected MetaTable table;     \n  \n    protected void Page_Load(object sender, EventArgs e) {  \n        table = DetailsDataSource.GetTable();  \n        Title = table.DisplayName;  \n    }  \n}  \n```  \n  \n```vb#  \nPartial Class Insert  \n    Inherits System.Web.UI.Page  \n  \n    Protected table As MetaTable      \n  \n    Protected Sub Page_Load(ByVal sender As Object, _  \n            ByVal e As EventArgs)  \n        table = DetailsDataSource.GetTable  \n        Title = table.DisplayName  \n    End Sub  \nEnd Class  \n```"
  syntax:
    content: public class MetaTable
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)
  id: '#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)'
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: MetaTable(MetaModel,TableProvider)
  nameWithType: MetaTable.MetaTable(MetaModel,TableProvider)
  fullName: System.Web.DynamicData.MetaTable.MetaTable(MetaModel,TableProvider)
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.DynamicData.MetaTable&quot;> </xref> klasse."
  remarks: "De `tableProvider` parameter wordt gebruikt voor het initialiseren van de <xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A>eigenschap.</xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A>"
  syntax:
    content: public MetaTable (System.Web.DynamicData.MetaModel metaModel, System.Web.DynamicData.ModelProviders.TableProvider tableProvider);
    parameters:
    - id: metaModel
      type: System.Web.DynamicData.MetaModel
      description: "De entiteit meta-model."
    - id: tableProvider
      type: System.Web.DynamicData.ModelProviders.TableProvider
      description: "De entiteit model-provider."
  overload: System.Web.DynamicData.MetaTable.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Attributes
  id: Attributes
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Attributes
  nameWithType: MetaTable.Attributes
  fullName: System.Web.DynamicData.MetaTable.Attributes
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hiermee haalt u de kenmerken die gekoppeld aan de tabel zijn."
  syntax:
    content: public System.ComponentModel.AttributeCollection Attributes { get; }
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Een verzameling die de kenmerken van de tabel bevat."
  overload: System.Web.DynamicData.MetaTable.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.BuildAttributeCollection
  id: BuildAttributeCollection
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: BuildAttributeCollection()
  nameWithType: MetaTable.BuildAttributeCollection()
  fullName: System.Web.DynamicData.MetaTable.BuildAttributeCollection()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Maakt de Kenmerkverzameling."
  syntax:
    content: protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();
    parameters: []
    return:
      type: System.ComponentModel.AttributeCollection
      description: "De Kenmerkverzameling."
  overload: System.Web.DynamicData.MetaTable.BuildAttributeCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)
  id: CanDelete(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CanDelete(IPrincipal)
  nameWithType: MetaTable.CanDelete(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanDelete(IPrincipal)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Haalt een waarde die aangeeft of de opgegeven gebruiker is toegestaan om uit te voeren delete-bewerkingen."
  remarks: "Principal-object vertegenwoordigt de beveiligingscontext van de gebruiker namens waarvan de code wordt uitgevoerd, met inbegrip van de identiteit van de gebruiker en de rollen waartoe ze behoren."
  syntax:
    content: public virtual bool CanDelete (System.Security.Principal.IPrincipal principal);
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: "De beveiligingscontext van de gebruiker."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de gebruiker is toegestaan om uit te voeren verwijderbewerkingen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)
  id: CanInsert(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CanInsert(IPrincipal)
  nameWithType: MetaTable.CanInsert(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanInsert(IPrincipal)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Haalt een waarde die aangeeft of de opgegeven gebruiker is toegestaan insert-bewerkingen uit te voeren."
  remarks: "Principal-object vertegenwoordigt de beveiligingscontext van de gebruiker namens waarvan de code wordt uitgevoerd, met inbegrip van de identiteit van de gebruiker en de rollen waartoe ze behoren."
  syntax:
    content: public virtual bool CanInsert (System.Security.Principal.IPrincipal principal);
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: "De beveiligingscontext van de gebruiker."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de gebruiker is toegestaan om uit te voeren invoegbewerkingen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)
  id: CanRead(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CanRead(IPrincipal)
  nameWithType: MetaTable.CanRead(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanRead(IPrincipal)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Haalt een waarde die aangeeft of de opgegeven gebruiker is toegestaan om uit te voeren leesbewerkingen."
  remarks: "Principal-object vertegenwoordigt de beveiligingscontext van de gebruiker namens waarvan de code wordt uitgevoerd, met inbegrip van de identiteit van de gebruiker en de rollen waartoe ze behoren."
  syntax:
    content: public virtual bool CanRead (System.Security.Principal.IPrincipal principal);
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: "De beveiligingscontext van de gebruiker."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de gebruiker is toegestaan om uit te voeren leesbewerkingen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)
  id: CanUpdate(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CanUpdate(IPrincipal)
  nameWithType: MetaTable.CanUpdate(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanUpdate(IPrincipal)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Haalt een waarde die aangeeft of de opgegeven gebruiker is toegestaan updatebewerkingen uit te voeren."
  remarks: "Principal-object vertegenwoordigt de beveiligingscontext van de gebruiker namens waarvan de code wordt uitgevoerd, met inbegrip van de identiteit van de gebruiker en de rollen waartoe ze behoren."
  syntax:
    content: public virtual bool CanUpdate (System.Security.Principal.IPrincipal principal);
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: "De beveiligingscontext van de gebruiker."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de gebruiker is toegestaan om uit te voeren updatebewerkingen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Columns
  id: Columns
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Columns
  nameWithType: MetaTable.Columns
  fullName: System.Web.DynamicData.MetaTable.Columns
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hiermee haalt u de verzameling voor de tabel."
  remarks: ''
  example:
  - "The following example shows how to use the Columns property. In the example, the Dynamic Data page templates have been copied to the \\DynamicData\\CustomPages\\ProductDescriptions folder to provide a custom display for the ProductDescription table of the AdventureWorksLT database. The markup of the Insert.aspx file is changed to add an `OnDataBound` event handler named `DetailsView1_DataBound`. In the event handler, the <xref:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable%2A> method is used to find the meta table. The Columns property is used to display the number of columns in the table.  \n  \n [!code-cs[System.Web.DynamicData.DynamicDataExtensions#1](~/add/codesnippet/csharp/p-system.web.dynamicdata_3_1.cs)]  \n[!code-cs[System.Web.DynamicData.DynamicDataExtensions#2](~/add/codesnippet/csharp/p-system.web.dynamicdata_3_2.aspx)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaColumn> Columns { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaColumn}
      description: "Een verzameling met de kolommen voor de tabel."
  overload: System.Web.DynamicData.MetaTable.Columns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  id: CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CreateChildrenColumn(ColumnProvider)
  nameWithType: MetaTable.CreateChildrenColumn(ColumnProvider)
  fullName: System.Web.DynamicData.MetaTable.CreateChildrenColumn(ColumnProvider)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Maakt een nieuw <xref href=&quot;System.Web.DynamicData.MetaChildrenColumn&quot;> </xref> object."
  remarks: "Deze methode kan worden genegeerd voor het maken van een afgeleid type."
  syntax:
    content: protected virtual System.Web.DynamicData.MetaChildrenColumn CreateChildrenColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);
    parameters:
    - id: columnProvider
      type: System.Web.DynamicData.ModelProviders.ColumnProvider
      description: "De kolom-provider."
    return:
      type: System.Web.DynamicData.MetaChildrenColumn
      description: "Het nieuwe onderliggende metacolumn-object."
  overload: System.Web.DynamicData.MetaTable.CreateChildrenColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  id: CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CreateColumn(ColumnProvider)
  nameWithType: MetaTable.CreateColumn(ColumnProvider)
  fullName: System.Web.DynamicData.MetaTable.CreateColumn(ColumnProvider)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Maakt een <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref> object."
  remarks: "Deze methode kan worden genegeerd voor het maken van een afgeleid type."
  syntax:
    content: protected virtual System.Web.DynamicData.MetaColumn CreateColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);
    parameters:
    - id: columnProvider
      type: System.Web.DynamicData.ModelProviders.ColumnProvider
      description: "De kolom-provider."
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "Het nieuwe metacolumn-object."
  overload: System.Web.DynamicData.MetaTable.CreateColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CreateContext
  id: CreateContext
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CreateContext()
  nameWithType: MetaTable.CreateContext()
  fullName: System.Web.DynamicData.MetaTable.CreateContext()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Retourneert de gegevenscontext van de voor de tabel."
  remarks: "De gegevenscontext is opgehaald uit een nieuwe context die door het aanroepen van de methode CreateContext wordt geïnstantieerd. Zie voor meer informatie de <xref:System.Web.DynamicData.MetaTable?displayProperty=fullName>overzicht van de klasse.</xref:System.Web.DynamicData.MetaTable?displayProperty=fullName>"
  syntax:
    content: public virtual object CreateContext ();
    parameters: []
    return:
      type: System.Object
      description: "De gegevenscontext van de voor de tabel."
  overload: System.Web.DynamicData.MetaTable.CreateContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  id: CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CreateForeignKeyColumn(ColumnProvider)
  nameWithType: MetaTable.CreateForeignKeyColumn(ColumnProvider)
  fullName: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(ColumnProvider)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Maakt een object dat de metagegevens van de refererende sleutel bevat."
  remarks: "Deze methode kan worden genegeerd voor het maken van een afgeleid type."
  syntax:
    content: protected virtual System.Web.DynamicData.MetaForeignKeyColumn CreateForeignKeyColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);
    parameters:
    - id: columnProvider
      type: System.Web.DynamicData.ModelProviders.ColumnProvider
      description: "De kolom-provider."
    return:
      type: System.Web.DynamicData.MetaForeignKeyColumn
      description: "Een object dat de metagegevens van de refererende sleutel bevat."
  overload: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)
  id: CreateTable(System.ComponentModel.ICustomTypeDescriptor)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CreateTable(ICustomTypeDescriptor)
  nameWithType: MetaTable.CreateTable(ICustomTypeDescriptor)
  fullName: System.Web.DynamicData.MetaTable.CreateTable(ICustomTypeDescriptor)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hiermee maakt u de metagegevens voor de opgegeven tabel."
  syntax:
    content: public static System.Web.DynamicData.MetaTable CreateTable (System.ComponentModel.ICustomTypeDescriptor typeDescriptor);
    parameters:
    - id: typeDescriptor
      type: System.ComponentModel.ICustomTypeDescriptor
      description: "Informatie over het tabeltype."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "Een object dat de tabelmetagegevens van de bevat."
  overload: System.Web.DynamicData.MetaTable.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CreateTable(System.Type)
  id: CreateTable(System.Type)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CreateTable(Type)
  nameWithType: MetaTable.CreateTable(Type)
  fullName: System.Web.DynamicData.MetaTable.CreateTable(Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hiermee maakt u de metagegevens voor de opgegeven tabel."
  syntax:
    content: public static System.Web.DynamicData.MetaTable CreateTable (Type entityType);
    parameters:
    - id: entityType
      type: System.Type
      description: "Het tabeltype waarvoor voor het genereren van metagegevens."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "Een object dat de tabelmetagegevens van de bevat."
  overload: System.Web.DynamicData.MetaTable.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.DataContextPropertyName
  id: DataContextPropertyName
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: DataContextPropertyName
  nameWithType: MetaTable.DataContextPropertyName
  fullName: System.Web.DynamicData.MetaTable.DataContextPropertyName
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hiermee haalt u de naam van de tabel."
  remarks: "De naam is afkomstig van de <xref:System.Web.DynamicData.MetaTable.DataContextType%2A>-object dat de tabel behoort.</xref:System.Web.DynamicData.MetaTable.DataContextType%2A>"
  syntax:
    content: public string DataContextPropertyName { get; }
    return:
      type: System.String
      description: "De naam van de tabel."
  overload: System.Web.DynamicData.MetaTable.DataContextPropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.DataContextType
  id: DataContextType
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: DataContextType
  nameWithType: MetaTable.DataContextType
  fullName: System.Web.DynamicData.MetaTable.DataContextType
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hiermee wordt het type van de gegevenscontext die is gekoppeld aan de tabel."
  remarks: "Zie voor meer informatie de <xref:System.Data.Linq.DataContext?displayProperty=fullName>overzicht van de klasse.</xref:System.Data.Linq.DataContext?displayProperty=fullName>"
  syntax:
    content: public Type DataContextType { get; }
    return:
      type: System.Type
      description: "Het type van de gegevenscontext."
  overload: System.Web.DynamicData.MetaTable.DataContextType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.DisplayColumn
  id: DisplayColumn
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: DisplayColumn
  nameWithType: MetaTable.DisplayColumn
  fullName: System.Web.DynamicData.MetaTable.DisplayColumn
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hiermee haalt u de kolom die wordt gebruikt om waarden te geven als items in deze tabel worden gebruikt als bovenliggende items in de refererende sleutel relaties."
  remarks: "De kolom die wordt geretourneerd is geselecteerd in deze volgorde op: 1.  De kolom die is opgegeven met behulp van de <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute>kenmerk.</xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute>      2.  De eerste tekenreeks kolom die niet in de primaire sleutel.      3.  De eerste tekenreeks kolom in de primaire sleutel.      4.  De eerste kolom met niet-tekenreeks die in de primaire sleutel.      5.  De eerste kolom."
  syntax:
    content: public virtual System.Web.DynamicData.MetaColumn DisplayColumn { get; }
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "De kolom die wordt gebruikt om waarden te geven als items in deze tabel worden gebruikt als bovenliggende items in de refererende sleutel relaties."
  overload: System.Web.DynamicData.MetaTable.DisplayColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.DisplayName
  id: DisplayName
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: DisplayName
  nameWithType: MetaTable.DisplayName
  fullName: System.Web.DynamicData.MetaTable.DisplayName
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hiermee haalt de naam van de tabel in een gebruiksvriendelijke indeling."
  remarks: "De standaardwaarde van deze eigenschap de waarde van de <xref:System.Web.DynamicData.MetaTable.Name%2A>eigenschap.</xref:System.Web.DynamicData.MetaTable.Name%2A> U kunt de waarde van deze eigenschap aanpassen met behulp van de <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=fullName>kenmerk.</xref:System.ComponentModel.DisplayNameAttribute?displayProperty=fullName>"
  syntax:
    content: public virtual string DisplayName { get; }
    return:
      type: System.String
      description: "De tekenreeks met de beschrijvende naam van de tabel."
  overload: System.Web.DynamicData.MetaTable.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.EntityType
  id: EntityType
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: EntityType
  nameWithType: MetaTable.EntityType
  fullName: System.Web.DynamicData.MetaTable.EntityType
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hiermee haalt u het entiteitstype die de tabel vertegenwoordigt."
  syntax:
    content: public Type EntityType { get; }
    return:
      type: System.Type
      description: "Het type dat de entiteit vertegenwoordigt."
  overload: System.Web.DynamicData.MetaTable.EntityType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames
  id: ForeignKeyColumnsNames
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: ForeignKeyColumnsNames
  nameWithType: MetaTable.ForeignKeyColumnsNames
  fullName: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Een door komma&quot;s gescheiden lijst met namen van de refererende sleutel opgehaald."
  syntax:
    content: public string ForeignKeyColumnsNames { get; }
    return:
      type: System.String
      description: "Een door komma&quot;s gescheiden lijst met namen van de refererende sleutel."
  overload: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String)
  id: GetActionPath(System.String)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetActionPath(String)
  nameWithType: MetaTable.GetActionPath(String)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Retourneert het actiepad voor de huidige tabel en de opgegeven actie."
  remarks: ''
  example:
  - The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.
  syntax:
    content: public string GetActionPath (string action);
    parameters:
    - id: action
      type: System.String
      description: "De naam van de actie."
    return:
      type: System.String
      description: "Het actiepad voor de opgegeven actie."
  overload: System.Web.DynamicData.MetaTable.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})
  id: GetActionPath(System.String,System.Collections.Generic.IList{System.Object})
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetActionPath(String,IList<Object>)
  nameWithType: MetaTable.GetActionPath(String,IList<Object>)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,IList<Object>)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Retourneert het actiepad van de voor de huidige tabel, de opgegeven actie en de opgegeven primaire sleutel."
  remarks: "Het actiepad wordt een URL voor een actie voor een specifieke entiteit. Zie voor meer informatie de <xref:System.Web.DynamicData.PageAction?displayProperty=fullName>overzicht van de klasse.</xref:System.Web.DynamicData.PageAction?displayProperty=fullName>"
  syntax:
    content: public string GetActionPath (string action, System.Collections.Generic.IList<object> primaryKeyValues);
    parameters:
    - id: action
      type: System.String
      description: "De naam van de actie."
    - id: primaryKeyValues
      type: System.Collections.Generic.IList{System.Object}
      description: "De lijst met waarden in de kolom waaruit de primaire sleutel."
    return:
      type: System.String
      description: "Het actiepad voor de opgegeven actie en de primaire sleutel."
  overload: System.Web.DynamicData.MetaTable.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)
  id: GetActionPath(System.String,System.Object)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetActionPath(String,Object)
  nameWithType: MetaTable.GetActionPath(String,Object)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Retourneert het actiepad van de voor de opgegeven rij met de naam van de actie."
  remarks: "Het actiepad wordt een URL voor een actie voor een specifieke entiteit. Het actiepad bevat de namen van de primaire-sleutelkolom, die kunnen worden gebruikt voor query-tekenreeks filters.       Zie voor meer informatie de <xref:System.Web.DynamicData.PageAction?displayProperty=fullName>overzicht van de klasse.</xref:System.Web.DynamicData.PageAction?displayProperty=fullName>"
  syntax:
    content: public string GetActionPath (string action, object row);
    parameters:
    - id: action
      type: System.String
      description: "De naam van de actie."
    - id: row
      type: System.Object
      description: "De rij met het pad van de actie voor."
    return:
      type: System.String
      description: "Het actiepad voor de opgegeven rij."
  overload: System.Web.DynamicData.MetaTable.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)
  id: GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetActionPath(String,RouteValueDictionary)
  nameWithType: MetaTable.GetActionPath(String,RouteValueDictionary)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Retourneert het actiepad voor de huidige tabel en voor de opgegeven actie en de routes."
  remarks: "Het actiepad wordt een URL voor een actie voor een specifieke entiteit. Zie voor meer informatie de <xref:System.Web.DynamicData.PageAction?displayProperty=fullName>overzicht van de klasse.</xref:System.Web.DynamicData.PageAction?displayProperty=fullName>"
  syntax:
    content: public string GetActionPath (string action, System.Web.Routing.RouteValueDictionary routeValues);
    parameters:
    - id: action
      type: System.String
      description: "De naam van de actie."
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "De lijst met routes voor de actie."
    return:
      type: System.String
      description: "Het actiepad voor de opgegeven actie en de routes."
  overload: System.Web.DynamicData.MetaTable.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)
  id: GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetActionPath(String,IList<Object>,String)
  nameWithType: MetaTable.GetActionPath(String,IList<Object>,String)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,IList<Object>,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Queryreeksen toegevoegd aan het actiepad, op basis van de opgegeven primaire sleutel en het virtuele pad."
  remarks: "Het actiepad wordt een URL voor een actie voor een specifieke entiteit. Zie voor meer informatie de <xref:System.Web.DynamicData.PageAction?displayProperty=fullName>overzicht van de klasse.</xref:System.Web.DynamicData.PageAction?displayProperty=fullName>"
  syntax:
    content: public string GetActionPath (string action, System.Collections.Generic.IList<object> primaryKeyValues, string path);
    parameters:
    - id: action
      type: System.String
      description: "De naam van de actie."
    - id: primaryKeyValues
      type: System.Collections.Generic.IList{System.Object}
      description: "De lijst met waarden in de kolom waaruit de primaire sleutel."
    - id: path
      type: System.String
      description: "Het virtuele pad van de actie."
    return:
      type: System.String
      description: "Het actiepad voor de opgegeven primaire sleutel en een virtueel pad, met queryreeks waarden hieraan toegevoegd."
  overload: System.Web.DynamicData.MetaTable.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)
  id: GetActionPath(System.String,System.Object,System.String)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetActionPath(String,Object,String)
  nameWithType: MetaTable.GetActionPath(String,Object,String)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,Object,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Retourneert het actiepad van de voor de opgegeven rij met de naam van de actie en het virtuele pad van de actie."
  remarks: "Het actiepad wordt een URL voor een actie voor een specifieke entiteit. Zie voor meer informatie de <xref:System.Web.DynamicData.PageAction?displayProperty=fullName>overzicht van de klasse.</xref:System.Web.DynamicData.PageAction?displayProperty=fullName>"
  syntax:
    content: public string GetActionPath (string action, object row, string path);
    parameters:
    - id: action
      type: System.String
      description: "De naam van de actie."
    - id: row
      type: System.Object
      description: "Een object dat de rij voor het actiepad bevat."
    - id: path
      type: System.String
      description: "Het virtuele pad van de actie."
    return:
      type: System.String
      description: "Het actiepad voor de opgegeven rij."
  overload: System.Web.DynamicData.MetaTable.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetColumn(System.String)
  id: GetColumn(System.String)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetColumn(String)
  nameWithType: MetaTable.GetColumn(String)
  fullName: System.Web.DynamicData.MetaTable.GetColumn(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Retourneert de metagegevens voor de opgegeven kolom."
  syntax:
    content: public System.Web.DynamicData.MetaColumn GetColumn (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "De naam van de kolom ophalen van metagegevens voor."
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "De kolommetagegevens van de."
  overload: System.Web.DynamicData.MetaTable.GetColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)
  id: GetColumnValuesFromRoute(System.Web.HttpContext)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetColumnValuesFromRoute(HttpContext)
  nameWithType: MetaTable.GetColumnValuesFromRoute(HttpContext)
  fullName: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(HttpContext)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hiermee haalt u de verzameling van kolomwaarden."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,object> GetColumnValuesFromRoute (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "De context voor de opgegeven webaanvraag."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "De verzameling van kolomwaarden."
  overload: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute
  id: GetDataKeyFromRoute
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetDataKeyFromRoute()
  nameWithType: MetaTable.GetDataKeyFromRoute()
  fullName: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Haalt de primaire sleutel van de entiteit van de route-waarden."
  remarks: "De waarden van de route is meestal afkomstig zijn van de queryreeks van de aanvraag-URL."
  syntax:
    content: public System.Web.UI.WebControls.DataKey GetDataKeyFromRoute ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "De waarden van de primaire sleutel van de entiteiten, als ze zijn gevonden. anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)
  id: GetDisplayString(System.Object)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetDisplayString(Object)
  nameWithType: MetaTable.GetDisplayString(Object)
  fullName: System.Web.DynamicData.MetaTable.GetDisplayString(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Retourneert de waarde moet worden gebruikt als de weergavereeks voor een exemplaar van een rij wanneer de rij wordt gebruikt in relaties refererende sleutel."
  remarks: "Als de rij `null`, een lege tekenreeks geretourneerd. Als de entiteitsklasse een onderdrukking van bevat de <xref:System.Web.DynamicData.MetaTable.ToString%2A>methode, de overschreven <xref:System.Web.DynamicData.MetaTable.ToString%2A>waarde geretourneerd.</xref:System.Web.DynamicData.MetaTable.ToString%2A> </xref:System.Web.DynamicData.MetaTable.ToString%2A> Anders wordt de methode retourneert de `ToString` weergave van de waarde van de <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A>eigenschap voor de opgegeven rij.</xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A>"
  syntax:
    content: public virtual string GetDisplayString (object row);
    parameters:
    - id: row
      type: System.Object
      description: "De rij de weergavereeks voor ophalen."
    return:
      type: System.String
      description: "De weergavenaam voor een exemplaar van een rij."
  overload: System.Web.DynamicData.MetaTable.GetDisplayString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetFilteredColumns
  id: GetFilteredColumns
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetFilteredColumns()
  nameWithType: MetaTable.GetFilteredColumns()
  fullName: System.Web.DynamicData.MetaTable.GetFilteredColumns()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hiermee wordt een lijst met kolommen die Filterbaar zijn opgehaald."
  remarks: "Een kolom kan worden gefilterd als deze aantekeningen is voorzien met het <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute>kenmerk en de `Enabled` eigenschap van de <xref:System.Web.Mvc.FilterAttribute>kenmerk van de kolom is ingesteld op `true`.</xref:System.Web.Mvc.FilterAttribute> </xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute>"
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Web.DynamicData.MetaColumn> GetFilteredColumns ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.DynamicData.MetaColumn}
      description: "Een lijst met kolommen die Filterbaar."
  overload: System.Web.DynamicData.MetaTable.GetFilteredColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)
  id: GetPrimaryKeyDictionary(System.Object)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetPrimaryKeyDictionary(Object)
  nameWithType: MetaTable.GetPrimaryKeyDictionary(Object)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Haalt een dictionary van de primaire sleutel namen en waarden voor de opgegeven rij."
  remarks: ''
  example:
  - "The following example shows how to create a primary-key dictionary.  \n  \n```c#  \nprivate RouteValueDictionary GetRouteValues(MetaTable table, object row) {  \n    RouteValueDictionary routeValues = GetRouteValues();  \n    foreach (var pk in table.GetPrimaryKeyDictionary(row)) {  \n        routeValues[pk.Key] = pk.Value;  \n    }  \n    return routeValues;  \n}   \n```  \n  \n```vb#  \nPrivate Function GetRouteValues(ByVal table As MetaTable, _  \n        ByVal row As Object) As RouteValueDictionary   \n    Dim routeValues As RouteValueDictionary = GetRouteValues()   \n    For Each pk In table.GetPrimaryKeyDictionary(row)   \n        routeValues(pk.Key) = pk.Value   \n    Next   \n    Return routeValues   \nEnd Function   \n```"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,object> GetPrimaryKeyDictionary (object row);
    parameters:
    - id: row
      type: System.Object
      description: "Een rij."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "Een woordenlijst met de primaire sleutel namen en waarden."
  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})
  id: GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetPrimaryKeyString(IList<Object>)
  nameWithType: MetaTable.GetPrimaryKeyString(IList<Object>)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(IList<Object>)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Retourneert een door komma&quot;s gescheiden lijst met waarden in de kolom die de primaire sleutel voor de opgegeven rij vertegenwoordigen."
  syntax:
    content: public string GetPrimaryKeyString (System.Collections.Generic.IList<object> primaryKeyValues);
    parameters:
    - id: primaryKeyValues
      type: System.Collections.Generic.IList{System.Object}
      description: "De lijst met waarden in de kolom waaruit de primaire sleutel."
    return:
      type: System.String
      description: "Een door komma&quot;s gescheiden lijst met kolomwaarden. Als de lijst leeg is, wordt een lege tekenreeks geretourneerd."
  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)
  id: GetPrimaryKeyString(System.Object)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetPrimaryKeyString(Object)
  nameWithType: MetaTable.GetPrimaryKeyString(Object)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Retourneert een door komma&quot;s gescheiden lijst met waarden in de kolom die de primaire sleutel voor de opgegeven rij vertegenwoordigen."
  syntax:
    content: public string GetPrimaryKeyString (object row);
    parameters:
    - id: row
      type: System.Object
      description: "De rij ophalen van de primaire sleutel voor."
    return:
      type: System.String
      description: "Een door komma&quot;s gescheiden lijst met waarden in de kolom die de primaire sleutel voor de rij vertegenwoordigen."
  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)
  id: GetPrimaryKeyValues(System.Object)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetPrimaryKeyValues(Object)
  nameWithType: MetaTable.GetPrimaryKeyValues(Object)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Retourneert een verzameling van waarden in de kolom die de primaire sleutel voor de opgegeven rij vertegenwoordigen."
  syntax:
    content: public System.Collections.Generic.IList<object> GetPrimaryKeyValues (object row);
    parameters:
    - id: row
      type: System.Object
      description: "De rij ophalen van de primaire sleutel voor."
    return:
      type: System.Collections.Generic.IList{System.Object}
      description: "Een verzameling van waarden in de kolom die de primaire sleutel voor de rij vertegenwoordigen."
  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetQuery
  id: GetQuery
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetQuery()
  nameWithType: MetaTable.GetQuery()
  fullName: System.Web.DynamicData.MetaTable.GetQuery()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Retourneert de &lt;xref:System.Linq.IQueryable?displayProperty=fullName&gt; -exemplaar voor het entiteitstype die de tabel vertegenwoordigt."
  syntax:
    content: public System.Linq.IQueryable GetQuery ();
    parameters: []
    return:
      type: System.Linq.IQueryable
      description: "De &lt;xref:System.Linq.IQueryable?displayProperty=fullName&gt; -exemplaar voor het entiteitstype."
  overload: System.Web.DynamicData.MetaTable.GetQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetQuery(System.Object)
  id: GetQuery(System.Object)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetQuery(Object)
  nameWithType: MetaTable.GetQuery(Object)
  fullName: System.Web.DynamicData.MetaTable.GetQuery(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Retourneert de &lt;xref:System.Linq.IQueryable?displayProperty=fullName&gt; -exemplaar voor het entiteitstype die de tabel met behulp van de gegevenscontext vertegenwoordigt."
  remarks: "Als de `context` parameter `null`, deze methode maakt u een nieuwe context door het aanroepen van de <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=fullName>methode.</xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=fullName>"
  syntax:
    content: public virtual System.Linq.IQueryable GetQuery (object context);
    parameters:
    - id: context
      type: System.Object
      description: "De context van de <xref href=&quot;System.Web.DynamicData.MetaTable&quot;> </xref> object."
    return:
      type: System.Linq.IQueryable
      description: "De <xref:System.Linq.IQueryable>-exemplaar voor het entiteitstype die de tabel in de gegevenscontext vertegenwoordigt.</xref:System.Linq.IQueryable>"
  overload: System.Web.DynamicData.MetaTable.GetQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)
  id: GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetScaffoldColumns(DataBoundControlMode,ContainerType)
  nameWithType: MetaTable.GetScaffoldColumns(DataBoundControlMode,ContainerType)
  fullName: System.Web.DynamicData.MetaTable.GetScaffoldColumns(DataBoundControlMode,ContainerType)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Retourneert een lijst met kolommen om weer te geven met behulp van steigers."
  remarks: "Deze methode retourneert alle kolommen waarvan <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute>eigenschap is ingesteld op `true` behalve de volgende:-lange tekenreeks kolommen die kolommen zijn waarvan <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A>eigenschap is ingesteld op `true` en waarvan `containerType` parameter `true`.</xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> </xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute>      -Onderliggende kolommen waarvan <xref:System.Web.UI.WebControls.DataBoundControlMode>waarde is ingesteld op <xref:System.Web.UI.WebControls.DataBoundControlMode>.</xref:System.Web.UI.WebControls.DataBoundControlMode> </xref:System.Web.UI.WebControls.DataBoundControlMode>"
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Web.DynamicData.MetaColumn> GetScaffoldColumns (System.Web.UI.WebControls.DataBoundControlMode mode, System.Web.DynamicData.ContainerType containerType);
    parameters:
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "De modus gegevensgebonden besturingselement."
    - id: containerType
      type: System.Web.DynamicData.ContainerType
      description: "Een waarde die aangeeft of de tabel wordt weergegeven als een afzonderlijke entiteit of als onderdeel van een lijst van entiteiten."
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.DynamicData.MetaColumn}
      description: "Een lijst met kolommen om weer te geven met behulp van steigers."
  overload: System.Web.DynamicData.MetaTable.GetScaffoldColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetTable(System.Type)
  id: GetTable(System.Type)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetTable(Type)
  nameWithType: MetaTable.GetTable(Type)
  fullName: System.Web.DynamicData.MetaTable.GetTable(Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Haalt de metatable die is gekoppeld aan het opgegeven type."
  remarks: "Deze methode aanroept <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>.</xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> Als <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>retourneert `false`, een <xref:System.InvalidOperationException>uitzondering.</xref:System.InvalidOperationException> </xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>"
  syntax:
    content: public static System.Web.DynamicData.MetaTable GetTable (Type entityType);
    parameters:
    - id: entityType
      type: System.Type
      description: "Het type van de entiteit."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "De metatable die is gekoppeld aan het opgegeven type."
  overload: System.Web.DynamicData.MetaTable.GetTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De &lt;xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29&gt; geretourneerd van de methode die door deze methode is aangeroepen <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.HasPrimaryKey
  id: HasPrimaryKey
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: HasPrimaryKey
  nameWithType: MetaTable.HasPrimaryKey
  fullName: System.Web.DynamicData.MetaTable.HasPrimaryKey
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hiermee wordt een waarde die aangeeft of de tabel een primaire sleutel heeft."
  syntax:
    content: public bool HasPrimaryKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de tabel een primaire sleutel heeft. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.HasPrimaryKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Initialize
  id: Initialize
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Initialize()
  nameWithType: MetaTable.Initialize()
  fullName: System.Web.DynamicData.MetaTable.Initialize()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Initialiseert de gegevens die mogelijk niet beschikbaar wanneer de constructor wordt aangeroepen."
  remarks: "Deze methode roept de <xref:System.Web.DynamicData.MetaColumn.Initialize%2A>methode voor elke kolom in de <xref:System.Web.DynamicData.MetaTable>exemplaar.</xref:System.Web.DynamicData.MetaTable> </xref:System.Web.DynamicData.MetaColumn.Initialize%2A> Deze methode kan niet rechtstreeks worden aangeroepen. Voor het initialisatie aanpassen, kunt u afgeleid van deze klasse en overschrijven de <xref:System.Web.DynamicData.MetaColumn.Initialize%2A>methode.</xref:System.Web.DynamicData.MetaColumn.Initialize%2A> Als u deze methode overschrijft, roept de basiscontrole `Initialize` methode."
  example:
  - "The following example shows how to override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method in order to customize the initialization process.  \n  \n```c#  \nprotected  override void Initialize() {  \n    base.Initialize();  \n    MyOverridenInit();  \n}  \n```  \n  \n```vb#  \nProtected Overloads Overrides Sub Initialize()   \n    MyBase.Initialize()   \n    MyOverridenInit()   \nEnd Sub  \n```"
  syntax:
    content: protected virtual void Initialize ();
    parameters: []
  overload: System.Web.DynamicData.MetaTable.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.IsReadOnly
  id: IsReadOnly
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: MetaTable.IsReadOnly
  fullName: System.Web.DynamicData.MetaTable.IsReadOnly
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Haalt een waarde die aangeeft of de tabel alleen-lezen is."
  syntax:
    content: public virtual bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de tabel alleen-lezen is. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.ListActionPath
  id: ListActionPath
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: ListActionPath
  nameWithType: MetaTable.ListActionPath
  fullName: System.Web.DynamicData.MetaTable.ListActionPath
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hiermee haalt u het actiepad van de lijst met actie voor de tabel."
  remarks: "Het actiepad wordt een URL voor een actie voor een specifieke entiteit. Zie voor meer informatie de <xref:System.Web.DynamicData.PageAction?displayProperty=fullName>overzicht van de klasse.</xref:System.Web.DynamicData.PageAction?displayProperty=fullName>"
  syntax:
    content: public string ListActionPath { get; }
    return:
      type: System.String
      description: "Het actiepad van de lijst met actie voor de tabel."
  overload: System.Web.DynamicData.MetaTable.ListActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Model
  id: Model
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Model
  nameWithType: MetaTable.Model
  fullName: System.Web.DynamicData.MetaTable.Model
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hiermee haalt u het meta-model dat de tabel behoort."
  remarks: "Zie voor meer informatie de <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=fullName>overzicht van de klasse.</xref:System.Data.Linq.Mapping.MetaModel?displayProperty=fullName>"
  syntax:
    content: public System.Web.DynamicData.MetaModel Model { get; }
    return:
      type: System.Web.DynamicData.MetaModel
      description: "Het meta-model dat de tabel behoort."
  overload: System.Web.DynamicData.MetaTable.Model*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Name
  id: Name
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Name
  nameWithType: MetaTable.Name
  fullName: System.Web.DynamicData.MetaTable.Name
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hiermee haalt u de unieke naam van de tabel."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "De unieke naam van de tabel."
  overload: System.Web.DynamicData.MetaTable.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.PrimaryKeyColumns
  id: PrimaryKeyColumns
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: PrimaryKeyColumns
  nameWithType: MetaTable.PrimaryKeyColumns
  fullName: System.Web.DynamicData.MetaTable.PrimaryKeyColumns
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hiermee haalt u de verzameling van kolommen waarmee de primaire sleutel gedefinieerd."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaColumn> PrimaryKeyColumns { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaColumn}
      description: "Een verzameling die de primaire-sleutelkolommen bevat."
  overload: System.Web.DynamicData.MetaTable.PrimaryKeyColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Provider
  id: Provider
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Provider
  nameWithType: MetaTable.Provider
  fullName: System.Web.DynamicData.MetaTable.Provider
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hiermee wordt de provider voor de tabel."
  syntax:
    content: public System.Web.DynamicData.ModelProviders.TableProvider Provider { get; }
    return:
      type: System.Web.DynamicData.ModelProviders.TableProvider
      description: "De provider voor de tabel."
  overload: System.Web.DynamicData.MetaTable.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.ResetMetadata
  id: ResetMetadata
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: ResetMetadata()
  nameWithType: MetaTable.ResetMetadata()
  fullName: System.Web.DynamicData.MetaTable.ResetMetadata()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hiermee stelt u de metagegevens in cache voor de tabel."
  remarks: "De tabelmetagegevens van de in de cache bestaat uit de informatie die wordt verkregen uit gegevensmodel kenmerken en metagegevens over intrinsieke kolommen. De metadata-cache is opnieuw opgebouwd wanneer u de volgende keer die metagegevens is aangevraagd."
  syntax:
    content: public void ResetMetadata ();
    parameters: []
  overload: System.Web.DynamicData.MetaTable.ResetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.RootEntityType
  id: RootEntityType
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: RootEntityType
  nameWithType: MetaTable.RootEntityType
  fullName: System.Web.DynamicData.MetaTable.RootEntityType
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hiermee haalt u het type van de entiteit overnamehiërarchie."
  remarks: "Als het type aan de bovenkant van de overnamehiërarchie is of geen een bovenliggend type, wordt het entiteitstype geretourneerd."
  syntax:
    content: public Type RootEntityType { get; }
    return:
      type: System.Type
      description: "Het type van de entiteit overnamehiërarchie."
  overload: System.Web.DynamicData.MetaTable.RootEntityType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Scaffold
  id: Scaffold
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Scaffold
  nameWithType: MetaTable.Scaffold
  fullName: System.Web.DynamicData.MetaTable.Scaffold
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de tabel moet worden weergegeven."
  syntax:
    content: public virtual bool Scaffold { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de tabel moet worden weergegeven; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.Scaffold*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.SortColumn
  id: SortColumn
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: SortColumn
  nameWithType: MetaTable.SortColumn
  fullName: System.Web.DynamicData.MetaTable.SortColumn
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Haalt de <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref> waarde die de tabel is gesorteerd op."
  syntax:
    content: public virtual System.Web.DynamicData.MetaColumn SortColumn { get; }
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "De kolom die de tabel is gesorteerd op."
  overload: System.Web.DynamicData.MetaTable.SortColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.SortDescending
  id: SortDescending
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: SortDescending
  nameWithType: MetaTable.SortDescending
  fullName: System.Web.DynamicData.MetaTable.SortDescending
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Haalt een waarde die aangeeft of vermeldingen in aflopende volgorde worden gesorteerd als ze worden gebruikt als bovenliggende items in een refererende-sleutelrelatie."
  remarks: "U kunt de sorteervolgorde opgeven met behulp van de <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=fullName>kenmerk.</xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=fullName>"
  syntax:
    content: public virtual bool SortDescending { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de vermeldingen worden gesorteerd in aflopende volgorde; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.SortDescending*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.ToString
  id: ToString
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: ToString()
  nameWithType: MetaTable.ToString()
  fullName: System.Web.DynamicData.MetaTable.ToString()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Retourneert de naam van de tabel."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "De naam van de tabel."
  overload: System.Web.DynamicData.MetaTable.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)
  id: TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: TryGetColumn(String,MetaColumn)
  nameWithType: MetaTable.TryGetColumn(String,MetaColumn)
  fullName: System.Web.DynamicData.MetaTable.TryGetColumn(String,MetaColumn)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Retourneert een waarde die aangeeft of een opgegeven kolom kan worden gevonden."
  remarks: "Als de `columnName` -parameter is null, een <xref:System.InvalidOperationException>uitzondering.</xref:System.InvalidOperationException>"
  syntax:
    content: public bool TryGetColumn (string columnName, out System.Web.DynamicData.MetaColumn column);
    parameters:
    - id: columnName
      type: System.String
      description: "De naam van de kolom te vinden."
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "Wanneer deze methode retourneert, bevat de <xref uid=&quot;langword_csharp_MetaColumn&quot; name=&quot;MetaColumn&quot; href=&quot;&quot;> </xref> object voor `columnName`. Deze parameter wordt doorgegeven niet geïnitialiseerd."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opgegeven kolom kan worden gevonden; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.TryGetColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  id: TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: TryGetTable(Type,MetaTable)
  nameWithType: MetaTable.TryGetTable(Type,MetaTable)
  fullName: System.Web.DynamicData.MetaTable.TryGetTable(Type,MetaTable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Haalt de metatable die is gekoppeld aan het opgegeven type en de tabel."
  syntax:
    content: public static bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);
    parameters:
    - id: entityType
      type: System.Type
      description: "Het type van de entiteit."
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "Wanneer u deze methode retourneert, bevat de metatable die is gekoppeld aan het opgegeven type. Deze parameter wordt doorgegeven niet geïnitialiseerd."
    return:
      type: System.Boolean
      description: "De metatable dat is gekoppeld aan de opgegeven gegeven en tabel."
  overload: System.Web.DynamicData.MetaTable.TryGetTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entityType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: MetaTable(MetaModel,TableProvider)
  nameWithType: MetaTable.MetaTable(MetaModel,TableProvider)
  fullName: System.Web.DynamicData.MetaTable.MetaTable(MetaModel,TableProvider)
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.ModelProviders.TableProvider
  parent: System.Web.DynamicData.ModelProviders
  isExternal: false
  name: TableProvider
  nameWithType: TableProvider
  fullName: System.Web.DynamicData.ModelProviders.TableProvider
- uid: System.Web.DynamicData.MetaTable.Attributes
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Attributes
  nameWithType: MetaTable.Attributes
  fullName: System.Web.DynamicData.MetaTable.Attributes
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.Web.DynamicData.MetaTable.BuildAttributeCollection
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: BuildAttributeCollection()
  nameWithType: MetaTable.BuildAttributeCollection()
  fullName: System.Web.DynamicData.MetaTable.BuildAttributeCollection()
- uid: System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanDelete(IPrincipal)
  nameWithType: MetaTable.CanDelete(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanDelete(IPrincipal)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanInsert(IPrincipal)
  nameWithType: MetaTable.CanInsert(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanInsert(IPrincipal)
- uid: System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanRead(IPrincipal)
  nameWithType: MetaTable.CanRead(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanRead(IPrincipal)
- uid: System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanUpdate(IPrincipal)
  nameWithType: MetaTable.CanUpdate(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanUpdate(IPrincipal)
- uid: System.Web.DynamicData.MetaTable.Columns
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Columns
  nameWithType: MetaTable.Columns
  fullName: System.Web.DynamicData.MetaTable.Columns
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaColumn}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<MetaColumn>
  nameWithType: ReadOnlyCollection<MetaColumn>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaColumn>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Web.DynamicData.MetaColumn>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.DynamicData.MetaColumn
    name: MetaColumn
    nameWithType: MetaColumn
    fullName: MetaColumn
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateChildrenColumn(ColumnProvider)
  nameWithType: MetaTable.CreateChildrenColumn(ColumnProvider)
  fullName: System.Web.DynamicData.MetaTable.CreateChildrenColumn(ColumnProvider)
- uid: System.Web.DynamicData.MetaChildrenColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaChildrenColumn
  nameWithType: MetaChildrenColumn
  fullName: System.Web.DynamicData.MetaChildrenColumn
- uid: System.Web.DynamicData.ModelProviders.ColumnProvider
  parent: System.Web.DynamicData.ModelProviders
  isExternal: false
  name: ColumnProvider
  nameWithType: ColumnProvider
  fullName: System.Web.DynamicData.ModelProviders.ColumnProvider
- uid: System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateColumn(ColumnProvider)
  nameWithType: MetaTable.CreateColumn(ColumnProvider)
  fullName: System.Web.DynamicData.MetaTable.CreateColumn(ColumnProvider)
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.MetaTable.CreateContext
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateContext()
  nameWithType: MetaTable.CreateContext()
  fullName: System.Web.DynamicData.MetaTable.CreateContext()
- uid: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateForeignKeyColumn(ColumnProvider)
  nameWithType: MetaTable.CreateForeignKeyColumn(ColumnProvider)
  fullName: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(ColumnProvider)
- uid: System.Web.DynamicData.MetaForeignKeyColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaForeignKeyColumn
  nameWithType: MetaForeignKeyColumn
  fullName: System.Web.DynamicData.MetaForeignKeyColumn
- uid: System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateTable(ICustomTypeDescriptor)
  nameWithType: MetaTable.CreateTable(ICustomTypeDescriptor)
  fullName: System.Web.DynamicData.MetaTable.CreateTable(ICustomTypeDescriptor)
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.ComponentModel.ICustomTypeDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: ICustomTypeDescriptor
  nameWithType: ICustomTypeDescriptor
  fullName: System.ComponentModel.ICustomTypeDescriptor
- uid: System.Web.DynamicData.MetaTable.CreateTable(System.Type)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateTable(Type)
  nameWithType: MetaTable.CreateTable(Type)
  fullName: System.Web.DynamicData.MetaTable.CreateTable(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.DynamicData.MetaTable.DataContextPropertyName
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DataContextPropertyName
  nameWithType: MetaTable.DataContextPropertyName
  fullName: System.Web.DynamicData.MetaTable.DataContextPropertyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.MetaTable.DataContextType
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DataContextType
  nameWithType: MetaTable.DataContextType
  fullName: System.Web.DynamicData.MetaTable.DataContextType
- uid: System.Web.DynamicData.MetaTable.DisplayColumn
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DisplayColumn
  nameWithType: MetaTable.DisplayColumn
  fullName: System.Web.DynamicData.MetaTable.DisplayColumn
- uid: System.Web.DynamicData.MetaTable.DisplayName
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DisplayName
  nameWithType: MetaTable.DisplayName
  fullName: System.Web.DynamicData.MetaTable.DisplayName
- uid: System.Web.DynamicData.MetaTable.EntityType
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: EntityType
  nameWithType: MetaTable.EntityType
  fullName: System.Web.DynamicData.MetaTable.EntityType
- uid: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ForeignKeyColumnsNames
  nameWithType: MetaTable.ForeignKeyColumnsNames
  fullName: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath(String)
  nameWithType: MetaTable.GetActionPath(String)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String)
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath(String,IList<Object>)
  nameWithType: MetaTable.GetActionPath(String,IList<Object>)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,IList<Object>)
- uid: System.Collections.Generic.IList{System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<Object>
  nameWithType: IList<Object>
  fullName: System.Collections.Generic.IList<System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath(String,Object)
  nameWithType: MetaTable.GetActionPath(String,Object)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,Object)
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath(String,RouteValueDictionary)
  nameWithType: MetaTable.GetActionPath(String,RouteValueDictionary)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,RouteValueDictionary)
- uid: System.Web.Routing.RouteValueDictionary
  parent: System.Web.Routing
  isExternal: true
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: System.Web.Routing.RouteValueDictionary
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath(String,IList<Object>,String)
  nameWithType: MetaTable.GetActionPath(String,IList<Object>,String)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,IList<Object>,String)
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath(String,Object,String)
  nameWithType: MetaTable.GetActionPath(String,Object,String)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,Object,String)
- uid: System.Web.DynamicData.MetaTable.GetColumn(System.String)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetColumn(String)
  nameWithType: MetaTable.GetColumn(String)
  fullName: System.Web.DynamicData.MetaTable.GetColumn(String)
- uid: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetColumnValuesFromRoute(HttpContext)
  nameWithType: MetaTable.GetColumnValuesFromRoute(HttpContext)
  fullName: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(HttpContext)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetDataKeyFromRoute()
  nameWithType: MetaTable.GetDataKeyFromRoute()
  fullName: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute()
- uid: System.Web.UI.WebControls.DataKey
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataKey
  nameWithType: DataKey
  fullName: System.Web.UI.WebControls.DataKey
- uid: System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetDisplayString(Object)
  nameWithType: MetaTable.GetDisplayString(Object)
  fullName: System.Web.DynamicData.MetaTable.GetDisplayString(Object)
- uid: System.Web.DynamicData.MetaTable.GetFilteredColumns
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetFilteredColumns()
  nameWithType: MetaTable.GetFilteredColumns()
  fullName: System.Web.DynamicData.MetaTable.GetFilteredColumns()
- uid: System.Collections.Generic.IEnumerable{System.Web.DynamicData.MetaColumn}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<MetaColumn>
  nameWithType: IEnumerable<MetaColumn>
  fullName: System.Collections.Generic.IEnumerable<System.Web.DynamicData.MetaColumn>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Web.DynamicData.MetaColumn>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.DynamicData.MetaColumn
    name: MetaColumn
    nameWithType: MetaColumn
    fullName: MetaColumn
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyDictionary(Object)
  nameWithType: MetaTable.GetPrimaryKeyDictionary(Object)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(Object)
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyString(IList<Object>)
  nameWithType: MetaTable.GetPrimaryKeyString(IList<Object>)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(IList<Object>)
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyString(Object)
  nameWithType: MetaTable.GetPrimaryKeyString(Object)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(Object)
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyValues(Object)
  nameWithType: MetaTable.GetPrimaryKeyValues(Object)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(Object)
- uid: System.Web.DynamicData.MetaTable.GetQuery
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetQuery()
  nameWithType: MetaTable.GetQuery()
  fullName: System.Web.DynamicData.MetaTable.GetQuery()
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.DynamicData.MetaTable.GetQuery(System.Object)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetQuery(Object)
  nameWithType: MetaTable.GetQuery(Object)
  fullName: System.Web.DynamicData.MetaTable.GetQuery(Object)
- uid: System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetScaffoldColumns(DataBoundControlMode,ContainerType)
  nameWithType: MetaTable.GetScaffoldColumns(DataBoundControlMode,ContainerType)
  fullName: System.Web.DynamicData.MetaTable.GetScaffoldColumns(DataBoundControlMode,ContainerType)
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.Web.DynamicData.ContainerType
  parent: System.Web.DynamicData
  isExternal: false
  name: ContainerType
  nameWithType: ContainerType
  fullName: System.Web.DynamicData.ContainerType
- uid: System.Web.DynamicData.MetaTable.GetTable(System.Type)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetTable(Type)
  nameWithType: MetaTable.GetTable(Type)
  fullName: System.Web.DynamicData.MetaTable.GetTable(Type)
- uid: System.Web.DynamicData.MetaTable.HasPrimaryKey
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: HasPrimaryKey
  nameWithType: MetaTable.HasPrimaryKey
  fullName: System.Web.DynamicData.MetaTable.HasPrimaryKey
- uid: System.Web.DynamicData.MetaTable.Initialize
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Initialize()
  nameWithType: MetaTable.Initialize()
  fullName: System.Web.DynamicData.MetaTable.Initialize()
- uid: System.Web.DynamicData.MetaTable.IsReadOnly
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: IsReadOnly
  nameWithType: MetaTable.IsReadOnly
  fullName: System.Web.DynamicData.MetaTable.IsReadOnly
- uid: System.Web.DynamicData.MetaTable.ListActionPath
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ListActionPath
  nameWithType: MetaTable.ListActionPath
  fullName: System.Web.DynamicData.MetaTable.ListActionPath
- uid: System.Web.DynamicData.MetaTable.Model
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Model
  nameWithType: MetaTable.Model
  fullName: System.Web.DynamicData.MetaTable.Model
- uid: System.Web.DynamicData.MetaTable.Name
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Name
  nameWithType: MetaTable.Name
  fullName: System.Web.DynamicData.MetaTable.Name
- uid: System.Web.DynamicData.MetaTable.PrimaryKeyColumns
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: PrimaryKeyColumns
  nameWithType: MetaTable.PrimaryKeyColumns
  fullName: System.Web.DynamicData.MetaTable.PrimaryKeyColumns
- uid: System.Web.DynamicData.MetaTable.Provider
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Provider
  nameWithType: MetaTable.Provider
  fullName: System.Web.DynamicData.MetaTable.Provider
- uid: System.Web.DynamicData.MetaTable.ResetMetadata
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ResetMetadata()
  nameWithType: MetaTable.ResetMetadata()
  fullName: System.Web.DynamicData.MetaTable.ResetMetadata()
- uid: System.Web.DynamicData.MetaTable.RootEntityType
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: RootEntityType
  nameWithType: MetaTable.RootEntityType
  fullName: System.Web.DynamicData.MetaTable.RootEntityType
- uid: System.Web.DynamicData.MetaTable.Scaffold
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Scaffold
  nameWithType: MetaTable.Scaffold
  fullName: System.Web.DynamicData.MetaTable.Scaffold
- uid: System.Web.DynamicData.MetaTable.SortColumn
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: SortColumn
  nameWithType: MetaTable.SortColumn
  fullName: System.Web.DynamicData.MetaTable.SortColumn
- uid: System.Web.DynamicData.MetaTable.SortDescending
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: SortDescending
  nameWithType: MetaTable.SortDescending
  fullName: System.Web.DynamicData.MetaTable.SortDescending
- uid: System.Web.DynamicData.MetaTable.ToString
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ToString()
  nameWithType: MetaTable.ToString()
  fullName: System.Web.DynamicData.MetaTable.ToString()
- uid: System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: TryGetColumn(String,MetaColumn)
  nameWithType: MetaTable.TryGetColumn(String,MetaColumn)
  fullName: System.Web.DynamicData.MetaTable.TryGetColumn(String,MetaColumn)
- uid: System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: TryGetTable(Type,MetaTable)
  nameWithType: MetaTable.TryGetTable(Type,MetaTable)
  fullName: System.Web.DynamicData.MetaTable.TryGetTable(Type,MetaTable)
- uid: System.Web.DynamicData.MetaTable.#ctor*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable.MetaTable
- uid: System.Web.DynamicData.MetaTable.Attributes*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Attributes
  nameWithType: MetaTable.Attributes
- uid: System.Web.DynamicData.MetaTable.BuildAttributeCollection*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: BuildAttributeCollection
  nameWithType: MetaTable.BuildAttributeCollection
- uid: System.Web.DynamicData.MetaTable.CanDelete*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanDelete
  nameWithType: MetaTable.CanDelete
- uid: System.Web.DynamicData.MetaTable.CanInsert*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanInsert
  nameWithType: MetaTable.CanInsert
- uid: System.Web.DynamicData.MetaTable.CanRead*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanRead
  nameWithType: MetaTable.CanRead
- uid: System.Web.DynamicData.MetaTable.CanUpdate*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanUpdate
  nameWithType: MetaTable.CanUpdate
- uid: System.Web.DynamicData.MetaTable.Columns*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Columns
  nameWithType: MetaTable.Columns
- uid: System.Web.DynamicData.MetaTable.CreateChildrenColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateChildrenColumn
  nameWithType: MetaTable.CreateChildrenColumn
- uid: System.Web.DynamicData.MetaTable.CreateColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateColumn
  nameWithType: MetaTable.CreateColumn
- uid: System.Web.DynamicData.MetaTable.CreateContext*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateContext
  nameWithType: MetaTable.CreateContext
- uid: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateForeignKeyColumn
  nameWithType: MetaTable.CreateForeignKeyColumn
- uid: System.Web.DynamicData.MetaTable.CreateTable*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateTable
  nameWithType: MetaTable.CreateTable
- uid: System.Web.DynamicData.MetaTable.DataContextPropertyName*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DataContextPropertyName
  nameWithType: MetaTable.DataContextPropertyName
- uid: System.Web.DynamicData.MetaTable.DataContextType*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DataContextType
  nameWithType: MetaTable.DataContextType
- uid: System.Web.DynamicData.MetaTable.DisplayColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DisplayColumn
  nameWithType: MetaTable.DisplayColumn
- uid: System.Web.DynamicData.MetaTable.DisplayName*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DisplayName
  nameWithType: MetaTable.DisplayName
- uid: System.Web.DynamicData.MetaTable.EntityType*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: EntityType
  nameWithType: MetaTable.EntityType
- uid: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ForeignKeyColumnsNames
  nameWithType: MetaTable.ForeignKeyColumnsNames
- uid: System.Web.DynamicData.MetaTable.GetActionPath*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath
  nameWithType: MetaTable.GetActionPath
- uid: System.Web.DynamicData.MetaTable.GetColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetColumn
  nameWithType: MetaTable.GetColumn
- uid: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetColumnValuesFromRoute
  nameWithType: MetaTable.GetColumnValuesFromRoute
- uid: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetDataKeyFromRoute
  nameWithType: MetaTable.GetDataKeyFromRoute
- uid: System.Web.DynamicData.MetaTable.GetDisplayString*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetDisplayString
  nameWithType: MetaTable.GetDisplayString
- uid: System.Web.DynamicData.MetaTable.GetFilteredColumns*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetFilteredColumns
  nameWithType: MetaTable.GetFilteredColumns
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyDictionary
  nameWithType: MetaTable.GetPrimaryKeyDictionary
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyString
  nameWithType: MetaTable.GetPrimaryKeyString
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyValues
  nameWithType: MetaTable.GetPrimaryKeyValues
- uid: System.Web.DynamicData.MetaTable.GetQuery*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetQuery
  nameWithType: MetaTable.GetQuery
- uid: System.Web.DynamicData.MetaTable.GetScaffoldColumns*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetScaffoldColumns
  nameWithType: MetaTable.GetScaffoldColumns
- uid: System.Web.DynamicData.MetaTable.GetTable*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetTable
  nameWithType: MetaTable.GetTable
- uid: System.Web.DynamicData.MetaTable.HasPrimaryKey*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: HasPrimaryKey
  nameWithType: MetaTable.HasPrimaryKey
- uid: System.Web.DynamicData.MetaTable.Initialize*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Initialize
  nameWithType: MetaTable.Initialize
- uid: System.Web.DynamicData.MetaTable.IsReadOnly*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: IsReadOnly
  nameWithType: MetaTable.IsReadOnly
- uid: System.Web.DynamicData.MetaTable.ListActionPath*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ListActionPath
  nameWithType: MetaTable.ListActionPath
- uid: System.Web.DynamicData.MetaTable.Model*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Model
  nameWithType: MetaTable.Model
- uid: System.Web.DynamicData.MetaTable.Name*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Name
  nameWithType: MetaTable.Name
- uid: System.Web.DynamicData.MetaTable.PrimaryKeyColumns*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: PrimaryKeyColumns
  nameWithType: MetaTable.PrimaryKeyColumns
- uid: System.Web.DynamicData.MetaTable.Provider*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Provider
  nameWithType: MetaTable.Provider
- uid: System.Web.DynamicData.MetaTable.ResetMetadata*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ResetMetadata
  nameWithType: MetaTable.ResetMetadata
- uid: System.Web.DynamicData.MetaTable.RootEntityType*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: RootEntityType
  nameWithType: MetaTable.RootEntityType
- uid: System.Web.DynamicData.MetaTable.Scaffold*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Scaffold
  nameWithType: MetaTable.Scaffold
- uid: System.Web.DynamicData.MetaTable.SortColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: SortColumn
  nameWithType: MetaTable.SortColumn
- uid: System.Web.DynamicData.MetaTable.SortDescending*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: SortDescending
  nameWithType: MetaTable.SortDescending
- uid: System.Web.DynamicData.MetaTable.ToString*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ToString
  nameWithType: MetaTable.ToString
- uid: System.Web.DynamicData.MetaTable.TryGetColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: TryGetColumn
  nameWithType: MetaTable.TryGetColumn
- uid: System.Web.DynamicData.MetaTable.TryGetTable*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: TryGetTable
  nameWithType: MetaTable.TryGetTable
