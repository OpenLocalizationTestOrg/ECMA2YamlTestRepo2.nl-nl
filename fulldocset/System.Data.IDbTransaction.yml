### YamlMime:ManagedReference
items:
- uid: System.Data.IDbTransaction
  id: IDbTransaction
  children:
  - System.Data.IDbTransaction.Commit
  - System.Data.IDbTransaction.Connection
  - System.Data.IDbTransaction.IsolationLevel
  - System.Data.IDbTransaction.Rollback
  langs:
  - csharp
  name: IDbTransaction
  nameWithType: IDbTransaction
  fullName: System.Data.IDbTransaction
  type: Interface
  summary: "Hiermee geeft u een transactie worden uitgevoerd op een gegevensbron en wordt geïmplementeerd door .NET Framework dataproviders die toegang hebben tot relationele databases."
  remarks: "De interface IDbTransaction kan een Traceringstabellen klasse voor het implementeren van een transactie-klasse, waarmee de transactie worden uitgevoerd op een gegevensbron wordt aangeduid. Zie voor meer informatie over transactie klassen [transacties en gelijktijdigheid](~/add/includes/ajax-current-ext-md.md).       Een toepassing, maak een instantie van de interface IDbTransaction niet rechtstreeks, maar maakt een exemplaar van een klasse die eigenschappen overneemt van IDbTransaction.       Klassen die IDbTransaction overnemen moeten de overgenomen leden te implementeren en doorgaans extra leden om toe te voegen providerspecifieke definiëren. Bijvoorbeeld, de interface IDbTransaction definieert de <xref:System.Data.IDbTransaction.Commit%2A>methode.</xref:System.Data.IDbTransaction.Commit%2A> Op zijn beurt de <xref:System.Data.OleDb.OleDbTransaction>klasse neemt over van deze eigenschap en definieert ook de <xref:System.Data.OleDb.OleDbTransaction.Begin%2A>methode.</xref:System.Data.OleDb.OleDbTransaction.Begin%2A> </xref:System.Data.OleDb.OleDbTransaction>"
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/t-system.data.idbtransac_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/t-system.data.idbtransac_1.vb)]"
  syntax:
    content: 'public interface IDbTransaction : IDisposable'
  implements:
  - System.IDisposable
  platform:
  - net462
- uid: System.Data.IDbTransaction.Commit
  id: Commit
  parent: System.Data.IDbTransaction
  langs:
  - csharp
  name: Commit()
  nameWithType: IDbTransaction.Commit()
  fullName: System.Data.IDbTransaction.Commit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "De database-transactie worden doorgevoerd."
  remarks: ''
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/m-system.data.idbtransac_0_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/m-system.data.idbtransac_0_1.vb)]"
  syntax:
    content: public void Commit ();
    parameters: []
  overload: System.Data.IDbTransaction.Commit*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Er is een fout opgetreden tijdens het doorvoeren van de transactie."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De transactie is al doorgevoerd of teruggedraaid.       - of - de verbinding is verbroken."
  platform:
  - net462
- uid: System.Data.IDbTransaction.Connection
  id: Connection
  parent: System.Data.IDbTransaction
  langs:
  - csharp
  name: Connection
  nameWithType: IDbTransaction.Connection
  fullName: System.Data.IDbTransaction.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee geeft u het object wilt koppelen aan de transactie."
  remarks: "Één toepassing mogelijk meerdere databaseverbindingen, elk met nul of meer transacties. Deze eigenschap kunt u bepalen het verbindingsobject dat aan een bepaalde transactie gekoppeld."
  syntax:
    content: public System.Data.IDbConnection Connection { get; }
    return:
      type: System.Data.IDbConnection
      description: "Het object wilt koppelen aan de transactie."
  overload: System.Data.IDbTransaction.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbTransaction.IsolationLevel
  id: IsolationLevel
  parent: System.Data.IDbTransaction
  langs:
  - csharp
  name: IsolationLevel
  nameWithType: IDbTransaction.IsolationLevel
  fullName: System.Data.IDbTransaction.IsolationLevel
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee geeft u de <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> voor deze transactie."
  remarks: "Parallelle transacties worden niet ondersteund. Daarom de <xref:System.Data.IsolationLevel>geldt voor de hele transactie.</xref:System.Data.IsolationLevel>"
  syntax:
    content: public System.Data.IsolationLevel IsolationLevel { get; }
    return:
      type: System.Data.IsolationLevel
      description: "De <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> voor deze transactie. De standaardwaarde is <xref uid=&quot;langword_csharp_ReadCommitted&quot; name=&quot;ReadCommitted&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IDbTransaction.IsolationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbTransaction.Rollback
  id: Rollback
  parent: System.Data.IDbTransaction
  langs:
  - csharp
  name: Rollback()
  nameWithType: IDbTransaction.Rollback()
  fullName: System.Data.IDbTransaction.Rollback()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Een transactie teruggedraaid in behandeling."
  remarks: "De transactie kan alleen worden teruggezet vanuit een status in behandeling (nadat <xref:System.Data.IDbConnection.BeginTransaction%2A>is aangeroepen, maar voordat <xref:System.Data.IDbTransaction.Commit%2A>wordt genoemd).</xref:System.Data.IDbTransaction.Commit%2A> </xref:System.Data.IDbConnection.BeginTransaction%2A>"
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/m-system.data.idbtransac_1_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/m-system.data.idbtransac_1_1.vb)]"
  syntax:
    content: public void Rollback ();
    parameters: []
  overload: System.Data.IDbTransaction.Rollback*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Er is een fout opgetreden tijdens het doorvoeren van de transactie."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De transactie is al doorgevoerd of teruggedraaid.       - of - de verbinding is verbroken."
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.IDbTransaction.Commit
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Commit()
  nameWithType: IDbTransaction.Commit()
  fullName: System.Data.IDbTransaction.Commit()
- uid: System.Data.IDbTransaction.Connection
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Connection
  nameWithType: IDbTransaction.Connection
  fullName: System.Data.IDbTransaction.Connection
- uid: System.Data.IDbConnection
  parent: System.Data
  isExternal: false
  name: IDbConnection
  nameWithType: IDbConnection
  fullName: System.Data.IDbConnection
- uid: System.Data.IDbTransaction.IsolationLevel
  parent: System.Data.IDbTransaction
  isExternal: false
  name: IsolationLevel
  nameWithType: IDbTransaction.IsolationLevel
  fullName: System.Data.IDbTransaction.IsolationLevel
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.IDbTransaction.Rollback
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Rollback()
  nameWithType: IDbTransaction.Rollback()
  fullName: System.Data.IDbTransaction.Rollback()
- uid: System.Data.IDbTransaction.Commit*
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Commit
  nameWithType: IDbTransaction.Commit
- uid: System.Data.IDbTransaction.Connection*
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Connection
  nameWithType: IDbTransaction.Connection
- uid: System.Data.IDbTransaction.IsolationLevel*
  parent: System.Data.IDbTransaction
  isExternal: false
  name: IsolationLevel
  nameWithType: IDbTransaction.IsolationLevel
- uid: System.Data.IDbTransaction.Rollback*
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Rollback
  nameWithType: IDbTransaction.Rollback
