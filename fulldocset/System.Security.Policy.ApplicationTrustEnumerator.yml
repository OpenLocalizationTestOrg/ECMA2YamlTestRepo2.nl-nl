### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationTrustEnumerator
  id: ApplicationTrustEnumerator
  children:
  - System.Security.Policy.ApplicationTrustEnumerator.Current
  - System.Security.Policy.ApplicationTrustEnumerator.MoveNext
  - System.Security.Policy.ApplicationTrustEnumerator.Reset
  - System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current
  langs:
  - csharp
  name: ApplicationTrustEnumerator
  nameWithType: ApplicationTrustEnumerator
  fullName: System.Security.Policy.ApplicationTrustEnumerator
  type: Class
  summary: "Hiermee geeft u de enumerator voor <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> objecten in de <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> verzameling."
  remarks: "Enumerators kunnen alleen lezen van de gegevens in de verzameling. Enumerators kunnen niet worden gebruikt om de onderliggende verzameling niet wijzigen.       In eerste instantie bevindt de enumerator zich vóór het eerste element in de verzameling. De <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>methode brengt ook de enumerator terug naar deze positie.</xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> Op deze functie, het aanroepen van de <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>eigenschap er een uitzondering gegenereerd.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> Daarom moet u aanroepen de <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>methode om door te gaan van de enumerator voor het eerste element van de verzameling voordat het lezen van de <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>eigenschap.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>retourneert de hetzelfde object totdat de <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>of <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>heet.</xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A></xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>Hiermee stelt u <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>aan het volgende element.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A></xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       Na het einde van de verzameling wordt doorgegeven, de enumerator is geplaatst na het laatste element in de verzameling en roepen <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>retourneert `false`.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> Als de laatste aanroep aan <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>geretourneerd `false`, aanroepende <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>er een uitzondering gegenereerd.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> Om in te stellen <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>voor het eerste element van de verzameling aanroepen <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>gevolgd door een aanroep naar <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>       Een enumerator blijft geldig zolang de verzameling ongewijzigd blijft. Als er wijzigingen zijn aangebracht aan de verzameling, zoals het toevoegen, wijzigen of verwijderen van elementen, de enumerator is permanent ongeldig gemaakt en de volgende aanroep van <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>of <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>genereert een <xref:System.InvalidOperationException>uitzondering.</xref:System.InvalidOperationException> </xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> Als de verzameling is gewijzigd tussen aanroepen <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>en <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>, <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>retourneert vervolgens het onderdeel waarvoor deze momenteel is ingesteld, zelfs als de enumerator is al ongeldig gemaakt.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       De enumerator heeft geen exclusieve toegang tot de verzameling; inventariseren door middel van een verzameling is daarom intrinsiek geen procedure thread-safe. Zelfs wanneer een verzameling wordt gesynchroniseerd, andere threads kunnen nog steeds de verzameling niet wijzigen, waardoor de enumerator is een uitzondering. Om te garanderen thread veiligheid tijdens de opsomming, moet u de verzameling tijdens de gehele opsomming vergrendelen of het gevolg van wijzigingen die door andere threads uitzonderingen wordt onderschept."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ApplicationTrustEnumerator : System.Collections.IEnumerator
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerator
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.Current
  id: Current
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: ApplicationTrustEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "De huidige opgehaald <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> object in de <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> verzameling."
  remarks: "Wanneer de enumerator is gemaakt, wijst het niet naar een object, zodat de huidige eigenschap niet geldig is en een uitzondering genereert als deze is geopend. U moet eerst aanroepen de <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>methode plaats de cursor op het eerste object in de verzameling.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       Meerdere aanroepen naar huidige met geen Tussenkomende aanroepen <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>retourneert dezelfde <xref:System.Security.Policy.ApplicationTrust>object.</xref:System.Security.Policy.ApplicationTrust> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>"
  syntax:
    content: public System.Security.Policy.ApplicationTrust Current { get; }
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "The current <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref> in the <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;></xref>."
  overload: System.Security.Policy.ApplicationTrustEnumerator.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext
  id: MoveNext
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: ApplicationTrustEnumerator.MoveNext()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.MoveNext()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Verplaatst naar het volgende element in de <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> verzameling."
  remarks: "De methode MoveNext retourneert onmiddellijk `false` als er geen objecten in de verzameling.       MoveNext retourneert `true` totdat het het einde van de verzameling is bereikt. Vervolgens wordt geretourneerd `false` voor elke volgende aanroep. Maar nadat de MoveNext heeft geretourneerd `false`, toegang tot de <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>eigenschap genereert een uitzondering.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>       Nadat deze is gemaakt, een enumerator bevindt zich voor de eerste <xref:System.Security.Policy.ApplicationTrust>-object in de verzameling en de eerste aanroep MoveNext plaatst u de enumerator bij het eerste object in de verzameling.</xref:System.Security.Policy.ApplicationTrust>"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de enumerator is is voortgezet naar het volgende element; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als de enumerator is voorbij het einde van de verzameling."
  overload: System.Security.Policy.ApplicationTrustEnumerator.MoveNext*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset
  id: Reset
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: ApplicationTrustEnumerator.Reset()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee stelt u de enumerator op het begin van de <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> verzameling."
  remarks: "Een enumerator wordt verplaatst in een alleen-voorwaarts richting. Gebruik deze methode om de enumerator terugkeren naar het begin van de verzameling van <xref:System.Security.Policy.ApplicationTrust>objecten.</xref:System.Security.Policy.ApplicationTrust>       De methode Reset plaatst u de cursor op de eerste object in de verzameling. Na het opnieuw instellen wordt aangeroepen, u hoeft niet aan te roepen de <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>methode om te verplaatsen van de cursor naar het eerste object.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Security.Policy.ApplicationTrustEnumerator.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: System.Collections.IEnumerator.Current
  nameWithType: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "De huidige opgehaald <xref:System.Object>in de <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> verzameling.</xref:System.Object>"
  remarks: "Deze methode; niet aanroepen Gebruik de <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>eigenschap in plaats daarvan.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>"
  syntax:
    content: object System.Collections.IEnumerator.Current { get; }
    return:
      type: System.Object
      description: "De huidige <xref:System.Object>in de <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref>.</xref:System.Object>"
  overload: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Policy.ApplicationTrustEnumerator.Current
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Current
  nameWithType: ApplicationTrustEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Current
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: ApplicationTrustEnumerator.MoveNext()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Reset()
  nameWithType: ApplicationTrustEnumerator.Reset()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Reset()
- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
- uid: System.Security.Policy.ApplicationTrustEnumerator.Current*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Current
  nameWithType: ApplicationTrustEnumerator.Current
- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: ApplicationTrustEnumerator.MoveNext
- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Reset
  nameWithType: ApplicationTrustEnumerator.Reset
- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
