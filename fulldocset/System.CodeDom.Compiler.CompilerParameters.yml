### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.CompilerParameters
  id: CompilerParameters
  children:
  - System.CodeDom.Compiler.CompilerParameters.#ctor
  - System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])
  - System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)
  - System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)
  - System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  - System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  - System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  - System.CodeDom.Compiler.CompilerParameters.Evidence
  - System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  - System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  - System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  - System.CodeDom.Compiler.CompilerParameters.LinkedResources
  - System.CodeDom.Compiler.CompilerParameters.MainClass
  - System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  - System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  - System.CodeDom.Compiler.CompilerParameters.TempFiles
  - System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  - System.CodeDom.Compiler.CompilerParameters.UserToken
  - System.CodeDom.Compiler.CompilerParameters.WarningLevel
  - System.CodeDom.Compiler.CompilerParameters.Win32Resource
  langs:
  - csharp
  name: CompilerParameters
  nameWithType: CompilerParameters
  fullName: System.CodeDom.Compiler.CompilerParameters
  type: Class
  summary: "Hiermee geeft u de parameters gebruikt om aan te roepen een compiler."
  remarks: "Een object CompilerParameters staat voor de instellingen en opties voor een <xref:System.CodeDom.Compiler.ICodeCompiler>interface.</xref:System.CodeDom.Compiler.ICodeCompiler>       Als u een uitvoerbaar programma compileert, stelt u de <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>eigenschap `true`.</xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> Wanneer de <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>is ingesteld op `false`, genereert de compiler een class-bibliotheek.</xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> Standaard wordt een nieuwe CompilerParameters ge√Ønitialiseerd met de <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>eigenschap ingesteld op `false`.</xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> Als u bij het compileren van een uitvoerbaar bestand van een grafiek CodeDOM een <xref:System.CodeDom.CodeEntryPointMethod>moet worden gedefinieerd in de grafiek.</xref:System.CodeDom.CodeEntryPointMethod> Als er meerdere code-toegangspunten, geeft u aan de klasse die het ingangspunt moet worden gebruikt door het instellen van de naam van de klasse definieert de <xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A>eigenschap.</xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A>       U kunt opgeven dat een bestandsnaam op voor de uitvoer-assembly in de <xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A>eigenschap.</xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A> Anders wordt wordt een standaardnaam van de uitvoer-bestand gebruikt. Instellen als u wilt opnemen foutopsporingsgegevens in een gegenereerde assembly, het <xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A>eigenschap `true`.</xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A> Als uw project verwijst naar assembly&quot;s, moet u de assemblynamen opgeven als items in een <xref:System.Collections.Specialized.StringCollection>ingesteld op de <xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A>eigenschap van de CompilerParameters gebruikt bij het aanroepen van compilatie.</xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A> </xref:System.Collections.Specialized.StringCollection>       U kunt samenstellen op een assembly die is geschreven naar geheugen in plaats van schijf door in te stellen de <xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A>eigenschap `true`.</xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A> Wanneer een assembly wordt gegenereerd in het geheugen, kunt de code een verwijzing naar het gegenereerde assembly van de <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A>eigenschap van een <xref:System.CodeDom.Compiler.CompilerResults>.</xref:System.CodeDom.Compiler.CompilerResults> </xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> verkrijgen Als een assembly is geschreven naar schijf, kunt u het pad naar het gegenereerde assembly van de <xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A>eigenschap van een <xref:System.CodeDom.Compiler.CompilerResults>.</xref:System.CodeDom.Compiler.CompilerResults> </xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A>       Als een waarschuwingsniveau waarvoor compileren is gestopt opgeven, stelt u de <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A>eigenschap in op een geheel getal dat staat voor het waarschuwingsniveau waarvoor compileren is gestopt.</xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A> U kunt ook configureren met de compiler voor de compilatie is gestopt als waarschuwingen zijn gegenereerd door in te stellen de <xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A>eigenschap `true`.</xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A>       Als opgeven te gebruiken bij het aanroepen van de compilatie van aangepaste opdrachtregelargumenten tekenreeks, stelt u de tekenreeks de <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A>eigenschap.</xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A> Als een Win32-beveiligingstoken om aan te roepen de compiler-proces is vereist, geeft u het token in de <xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A>eigenschap.</xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A> Zodanig dat .NET Framework-bronbestanden in de gecompileerde assembly, voeg de namen van de bronbestanden voor de <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>eigenschap.</xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A> Om te verwijzen naar .NET Framework-resources in een andere assembly, voeg de namen van de bronbestanden voor de <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>eigenschap.</xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> Als u wilt opnemen een Win32-bronbestand in de gecompileerde assembly, geef de naam van het Win32-bronbestand in de <xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A>eigenschap.</xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A>      > [!NOTE] > Deze klasse bevat een koppeling-vraag en een vraag overname op het klasseniveau van de die van toepassing op alle leden is. Een <xref:System.Security.SecurityException>wordt gegenereerd wanneer de onmiddellijke aanroeper of de afgeleide klasse is niet gemachtigd volledig vertrouwen.</xref:System.Security.SecurityException> Zie voor meer informatie over beveiliging eisen [koppeling eisen](~/add/includes/ajax-current-ext-md.md) en [overname eisen](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)."
  example:
  - "The following example builds a CodeDOM source graph for a simple Hello World program.  The source is then saved to a file, compiled into an executable, and run. The `CompileCode` method illustrates how to use the CompilerParameters class to specify various compiler settings and options.  \n  \n [!code-cpp[CompilerParametersExample#1](~/add/codesnippet/cpp/t-system.codedom.compile_3_1.cpp)]\n [!code-cs[CompilerParametersExample#1](~/add/codesnippet/csharp/t-system.codedom.compile_3_1.cs)]\n [!code-vb[CompilerParametersExample#1](~/add/codesnippet/visualbasic/t-system.codedom.compile_3_1.vb)]"
  syntax:
    content: public class CompilerParameters
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor
  id: '#ctor'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters()
  nameWithType: CompilerParameters.CompilerParameters()
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref> klasse."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/m-system.codedom.compile_2_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/m-system.codedom.compile_2_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/m-system.codedom.compile_2_1.vb)]"
  syntax:
    content: public CompilerParameters ();
    parameters: []
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters(String[])
  nameWithType: CompilerParameters.CompilerParameters(String[])
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[])
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref> klasse met de opgegeven assembly-namen."
  syntax:
    content: public CompilerParameters (string[] assemblyNames);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "De namen van de assembly&quot;s om te verwijzen."
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)
  id: '#ctor(System.String[],System.String)'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters(String[],String)
  nameWithType: CompilerParameters.CompilerParameters(String[],String)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref> klasse met de opgegeven assembly-namen en de naam van het uitvoerbestand."
  syntax:
    content: public CompilerParameters (string[] assemblyNames, string outputName);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "De namen van de assembly&quot;s om te verwijzen."
    - id: outputName
      type: System.String
      description: "De naam van het uitvoerbestand."
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)
  id: '#ctor(System.String[],System.String,System.Boolean)'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters(String[],String,Boolean)
  nameWithType: CompilerParameters.CompilerParameters(String[],String,Boolean)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref> klasse met de opgegeven assembly-namen, uitvoernaam en een waarde die aangeeft of foutopsporingsgegevens opnemen."
  syntax:
    content: public CompilerParameters (string[] assemblyNames, string outputName, bool includeDebugInformation);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "De namen van de assembly&quot;s om te verwijzen."
    - id: outputName
      type: System.String
      description: "De naam van het uitvoerbestand."
    - id: includeDebugInformation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>met foutopsporingsinformatie; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> foutopsporingsinformatie uitsluiten."
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  id: CompilerOptions
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerOptions
  nameWithType: CompilerParameters.CompilerOptions
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Opgehaald of ingesteld van optionele opdrachtregelargumenten moet worden gebruikt bij het aanroepen van de compiler."
  remarks: "Een <xref:System.CodeDom.Compiler.ICodeCompiler>bestaan doorgaans uit deze tekenreeks op de opdrachtregel bij het aanroepen van een opdrachtregelcompileerprogramma.</xref:System.CodeDom.Compiler.ICodeCompiler> Deze eigenschap bevat standaard een lege tekenreeks."
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_14_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_14_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_14_1.vb)]"
  syntax:
    content: public string CompilerOptions { get; set; }
    return:
      type: System.String
      description: "Geen aanvullende opdrachtregelargumenten voor de compiler."
  overload: System.CodeDom.Compiler.CompilerParameters.CompilerOptions*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  id: CoreAssemblyFileName
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CoreAssemblyFileName
  nameWithType: CompilerParameters.CoreAssemblyFileName
  fullName: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "De naam van de core of de standaard assembly met eenvoudige typen zoals opgehaald of ingesteld <xref:System.Object>, <xref:System.String>, of <xref:System.Int32>.</xref:System.Int32> </xref:System.String> </xref:System.Object>"
  remarks: "Als de waarde van deze eigenschap een lege tekenreeks is of `null`, gebruikt de standaard core assembly voor de compiler. Afhankelijk van de compiler versie, de standaard core assembly mogelijk mscorlib.dll of System.Runtime.dll in een Framework-map of een verwijzing naar assembly-map. Als de waarde van deze eigenschap niet leeg is, wordt de Code Document Object Model (CodeDOM) expliciet verwijst naar de opgegeven assembly en verzendt compileropties die ertoe leiden dat de compiler om te verwijzen alle assembly&quot;s niet impliciet tijdens de compilatie... Voor compileerprogramma&quot;s die verwijzen naar het core of de standaard assembly alleen impliciet door standaard, kan deze eigenschap kan worden gebruikt op zichzelf. Voor compileerprogramma&quot;s die impliciet verwijzen naar assembly&quot;s verder naar de core of de standaard assembly, met deze optie mogelijk extra opgeven in de <xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=fullName>eigenschap.</xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=fullName>      > [!NOTE] > Een <xref:System.CodeDom.Compiler.ICodeCompiler>of <xref:System.CodeDom.Compiler.CodeDomProvider>implementatie mogelijk wilt u deze eigenschap wordt genegeerd.</xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.CodeDom.Compiler.ICodeCompiler>"
  syntax:
    content: public string CoreAssemblyFileName { get; set; }
    return:
      type: System.String
      description: "De naam van de core-assembly met eenvoudige typen."
  overload: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  id: EmbeddedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: EmbeddedResources
  nameWithType: CompilerParameters.EmbeddedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Hiermee haalt u de .NET Framework-bronbestanden om op te nemen bij het compileren van de assemblageuitvoer van de."
  remarks: "Ingesloten bronnen zijn ingebouwd in de gegenereerde assembly-uitvoerbestand. Inclusief bestanden met deze eigenschap is vergelijkbaar met de `/resource` opdrachtregelargument wordt ondersteund door veel van de .NET Framework-compileerprogramma&quot;s.       Niet alle compilers ondersteuning voor .NET Framework-bronbestanden, zodat u voor deze ondersteuning testen moet door het aanroepen van de <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>methode met de vlag <xref:System.CodeDom.Compiler.GeneratorSupport>.</xref:System.CodeDom.Compiler.GeneratorSupport> </xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>       Een of meer bestandspaden van .NET Framework resource toevoegen aan de geretourneerde <xref:System.Collections.Specialized.StringCollection>voor het insluiten van het file-resources in de gecompileerde assembly.</xref:System.Collections.Specialized.StringCollection> Dubbel of ongeldig pad van het resultaatbestand toe te voegen in compilatiefouten; Zorg ervoor dat elke tekenreeks een unieke pad naar een geldig bestand voor .NET Framework-bron geeft.       EmbeddedResources gebruiken om op te nemen standaard of een neutrale cultuur .NET Framework-resources voor een assembly; Gebruik de <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>eigenschap om te verwijzen naar .NET Framework-resources in satelliet-assembly&quot;s.</xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>"
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_7_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_7_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_7_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection EmbeddedResources { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "Een verzameling waartoe de bestandspaden van .NET Framework-resources in de gegenereerde assembly op te nemen."
  overload: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.Evidence
  id: Evidence
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: Evidence
  nameWithType: CompilerParameters.Evidence
  fullName: System.CodeDom.Compiler.CompilerParameters.Evidence
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Hiermee geeft u een bewijs-object dat de beveiligingsmachtigingen voor beleid toe te kennen van de gecompileerde assembly vertegenwoordigt."
  syntax:
    content: public System.Security.Policy.Evidence Evidence { get; set; }
    return:
      type: System.Security.Policy.Evidence
      description: "Een object dat de beveiligingsmachtigingen voor beleid toe te kennen van de gecompileerde assembly vertegenwoordigt."
  overload: System.CodeDom.Compiler.CompilerParameters.Evidence*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  id: GenerateExecutable
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: GenerateExecutable
  nameWithType: CompilerParameters.GenerateExecutable
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Opgehaald of ingesteld waarmee wordt aangegeven of een uitvoerbaar bestand te genereren."
  remarks: "Als de waarde van deze eigenschap is `false`, een DLL-bestand wordt gegenereerd. De waarde van deze eigenschap is standaard `false`."
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_8_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_8_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_8_1.vb)]"
  syntax:
    content: public bool GenerateExecutable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een uitvoerbaar bestand moet worden gegenereerd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  id: GenerateInMemory
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: GenerateInMemory
  nameWithType: CompilerParameters.GenerateInMemory
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Opgehaald of ingesteld waarmee wordt aangegeven of de uitvoer wordt gegenereerd in het geheugen."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_1_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_1_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_1_1.vb)]"
  syntax:
    content: public bool GenerateInMemory { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de compiler moet de uitvoer gegenereerd in het geheugen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  id: IncludeDebugInformation
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: IncludeDebugInformation
  nameWithType: CompilerParameters.IncludeDebugInformation
  fullName: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of foutopsporingsgegevens opgenomen in de gecompileerde uitvoerbaar bestand."
  syntax:
    content: public bool IncludeDebugInformation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u gegevens voor foutopsporing moet worden gegenereerd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.LinkedResources
  id: LinkedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: LinkedResources
  nameWithType: CompilerParameters.LinkedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.LinkedResources
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Hiermee haalt de .NET Framework-bronbestanden waarnaar wordt verwezen in de huidige bron."
  remarks: "Bestanden met gekoppelde resources kunt uw assembly om te verwijzen naar .NET Framework-resources zonder in te sluiten van de werkelijke resources in de assembly. Verwijst naar de bestanden via deze eigenschap is vergelijkbaar met de `/linkresource` opdrachtregelargument wordt ondersteund door veel van de .NET Framework-compileerprogramma&quot;s.       Niet alle compilers ondersteuning voor .NET Framework-bronbestanden, zodat u voor deze ondersteuning testen moet door het aanroepen van de <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>methode met de vlag <xref:System.CodeDom.Compiler.GeneratorSupport>.</xref:System.CodeDom.Compiler.GeneratorSupport> </xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>       Een of meer bestandspaden van .NET Framework resource toevoegen aan de geretourneerde <xref:System.Collections.Specialized.StringCollection>om koppelingen te maken voor de bronnen in de gecompileerde assembly.</xref:System.Collections.Specialized.StringCollection> Dubbel of ongeldig pad van het resultaatbestand toe te voegen in compilatiefouten; Zorg ervoor dat elke tekenreeks een unieke pad naar een geldig bestand voor .NET Framework-bron geeft.       LinkedResources gebruiken om te verwijzen naar .NET Framework-resources in satelliet-assembly&quot;s, gelokaliseerd voor een specifieke cultuur; Gebruik de <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>eigenschap voor het insluiten van de resources in de gecompileerde assembly.</xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>"
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_2_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_2_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_2_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection LinkedResources { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "Een verzameling waartoe de bestandspaden van .NET Framework-resources waarnaar wordt verwezen door de bron."
  overload: System.CodeDom.Compiler.CompilerParameters.LinkedResources*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.MainClass
  id: MainClass
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: MainClass
  nameWithType: CompilerParameters.MainClass
  fullName: System.CodeDom.Compiler.CompilerParameters.MainClass
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Opgehaald of ingesteld van de naam van de belangrijkste-klasse."
  remarks: "De belangrijkste klasse bevat het toegangspunt voor het programma."
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_13_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_13_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_13_1.vb)]"
  syntax:
    content: public string MainClass { get; set; }
    return:
      type: System.String
      description: "De naam van de belangrijkste-klasse."
  overload: System.CodeDom.Compiler.CompilerParameters.MainClass*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  id: OutputAssembly
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: OutputAssembly
  nameWithType: CompilerParameters.OutputAssembly
  fullName: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Opgehaald of ingesteld van de naam van de uitvoer-assembly."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_6_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_6_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_6_1.vb)]"
  syntax:
    content: public string OutputAssembly { get; set; }
    return:
      type: System.String
      description: "De naam van de uitvoer-assembly."
  overload: System.CodeDom.Compiler.CompilerParameters.OutputAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  id: ReferencedAssemblies
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: ReferencedAssemblies
  nameWithType: CompilerParameters.ReferencedAssemblies
  fullName: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Hiermee haalt u de assembly&quot;s waarnaar wordt verwezen door het huidige project."
  remarks: "De verzameling tekenreeks moet bestaan uit of bevatten, de assembly&quot;s waarnaar wordt verwezen door het huidige project. Bestandsnamen van de assembly toevoegen aan de geretourneerde <xref:System.Collections.Specialized.StringCollection>voor het importeren van het assembly-manifest en verwijzen naar de assembly-informatie in het huidige project.</xref:System.Collections.Specialized.StringCollection>"
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_9_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_9_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_9_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection ReferencedAssemblies { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "Een verzameling die de assemblynamen waarnaar wordt verwezen door de bron voor het compileren van bevat."
  overload: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.TempFiles
  id: TempFiles
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: TempFiles
  nameWithType: CompilerParameters.TempFiles
  fullName: System.CodeDom.Compiler.CompilerParameters.TempFiles
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Opgehaald of ingesteld van de verzameling die de tijdelijke bestanden bevat."
  remarks: "De tijdelijke bestanden in de verzameling worden bewaard of verwijderd van de voltooiing van de compiler-activiteit op basis van de waarde van de <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>eigenschap in de verzameling.</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> De <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>eigenschap is ingesteld als de verzameling is gemaakt met de <xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29>constructor met de `keepFiles` parameter ingesteld op `true`.</xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29> </xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>      > [!NOTE] > Deze klasse bevat een koppeling-vraag en een vraag overname op het klasseniveau van de die van toepassing op alle leden is. Een <xref:System.Security.SecurityException>wordt gegenereerd wanneer de onmiddellijke aanroeper of de afgeleide klasse is niet gemachtigd volledig vertrouwen.</xref:System.Security.SecurityException> Zie voor meer informatie over beveiliging eisen [koppeling eisen](~/add/includes/ajax-current-ext-md.md) en [overname eisen](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)."
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_4_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_4_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_4_1.vb)]"
  syntax:
    content: public System.CodeDom.Compiler.TempFileCollection TempFiles { get; set; }
    return:
      type: System.CodeDom.Compiler.TempFileCollection
      description: "Een verzameling waartoe de tijdelijke bestanden."
  overload: System.CodeDom.Compiler.CompilerParameters.TempFiles*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  id: TreatWarningsAsErrors
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: TreatWarningsAsErrors
  nameWithType: CompilerParameters.TreatWarningsAsErrors
  fullName: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of er waarschuwingen als fouten behandelen."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_5_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_5_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_5_1.vb)]"
  syntax:
    content: public bool TreatWarningsAsErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u waarschuwingen als fouten; moeten worden behandeld anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.UserToken
  id: UserToken
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: UserToken
  nameWithType: CompilerParameters.UserToken
  fullName: System.CodeDom.Compiler.CompilerParameters.UserToken
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Opgehaald of ingesteld van het gebruikerstoken te gebruiken bij het maken van het compileerprogramma-proces."
  syntax:
    content: public IntPtr UserToken { get; set; }
    return:
      type: System.IntPtr
      description: "Het gebruikerstoken te gebruiken."
  overload: System.CodeDom.Compiler.CompilerParameters.UserToken*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.WarningLevel
  id: WarningLevel
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: WarningLevel
  nameWithType: CompilerParameters.WarningLevel
  fullName: System.CodeDom.Compiler.CompilerParameters.WarningLevel
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Opgehaald of ingesteld van het waarschuwingsniveau waarmee de compiler compilatie annuleert."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_11_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_11_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_11_1.vb)]"
  syntax:
    content: public int WarningLevel { get; set; }
    return:
      type: System.Int32
      description: "Het waarschuwingsniveau waarmee de compiler compilatie annuleert."
  overload: System.CodeDom.Compiler.CompilerParameters.WarningLevel*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.Win32Resource
  id: Win32Resource
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: Win32Resource
  nameWithType: CompilerParameters.Win32Resource
  fullName: System.CodeDom.Compiler.CompilerParameters.Win32Resource
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Opgehaald of ingesteld van de bestandsnaam van een Win32-bronbestand koppelen aan de gecompileerde assembly."
  remarks: "Koppelen van bestanden via deze eigenschap is vergelijkbaar met de `/winres` en `/winresource` opdrachtregelargumenten ondersteund door veel van de .NET Framework-compileerprogramma&quot;s.       Win32Resource gebruiken voor het compileren van een Win32-bronbestand aan de assembly. Gebruik <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>of <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>te compileren met .NET Framework-bronbestanden.</xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> </xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>       Niet alle compilers ondersteuning voor Win32-bronbestanden, zodat u moet een codegenerator voor deze ondersteuning voordat een bronbestand koppelen door het aanroepen van de <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>methode met de vlag <xref:System.CodeDom.Compiler.GeneratorSupport>.</xref:System.CodeDom.Compiler.GeneratorSupport> </xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> testen"
  syntax:
    content: public string Win32Resource { get; set; }
    return:
      type: System.String
      description: "Een Win32-bronbestand die moet worden gekoppeld aan de gecompileerde assembly."
  overload: System.CodeDom.Compiler.CompilerParameters.Win32Resource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters()
  nameWithType: CompilerParameters.CompilerParameters()
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters()
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters(String[])
  nameWithType: CompilerParameters.CompilerParameters(String[])
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters(String[],String)
  nameWithType: CompilerParameters.CompilerParameters(String[],String)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters(String[],String,Boolean)
  nameWithType: CompilerParameters.CompilerParameters(String[],String,Boolean)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerOptions
  nameWithType: CompilerParameters.CompilerOptions
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
- uid: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CoreAssemblyFileName
  nameWithType: CompilerParameters.CoreAssemblyFileName
  fullName: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
- uid: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: EmbeddedResources
  nameWithType: CompilerParameters.EmbeddedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: System.CodeDom.Compiler.CompilerParameters.Evidence
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Evidence
  nameWithType: CompilerParameters.Evidence
  fullName: System.CodeDom.Compiler.CompilerParameters.Evidence
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateExecutable
  nameWithType: CompilerParameters.GenerateExecutable
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateInMemory
  nameWithType: CompilerParameters.GenerateInMemory
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
- uid: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: IncludeDebugInformation
  nameWithType: CompilerParameters.IncludeDebugInformation
  fullName: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
- uid: System.CodeDom.Compiler.CompilerParameters.LinkedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: LinkedResources
  nameWithType: CompilerParameters.LinkedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.LinkedResources
- uid: System.CodeDom.Compiler.CompilerParameters.MainClass
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: MainClass
  nameWithType: CompilerParameters.MainClass
  fullName: System.CodeDom.Compiler.CompilerParameters.MainClass
- uid: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: OutputAssembly
  nameWithType: CompilerParameters.OutputAssembly
  fullName: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
- uid: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: CompilerParameters.ReferencedAssemblies
  fullName: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
- uid: System.CodeDom.Compiler.CompilerParameters.TempFiles
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TempFiles
  nameWithType: CompilerParameters.TempFiles
  fullName: System.CodeDom.Compiler.CompilerParameters.TempFiles
- uid: System.CodeDom.Compiler.TempFileCollection
  parent: System.CodeDom.Compiler
  isExternal: false
  name: TempFileCollection
  nameWithType: TempFileCollection
  fullName: System.CodeDom.Compiler.TempFileCollection
- uid: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TreatWarningsAsErrors
  nameWithType: CompilerParameters.TreatWarningsAsErrors
  fullName: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
- uid: System.CodeDom.Compiler.CompilerParameters.UserToken
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: UserToken
  nameWithType: CompilerParameters.UserToken
  fullName: System.CodeDom.Compiler.CompilerParameters.UserToken
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.CodeDom.Compiler.CompilerParameters.WarningLevel
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: WarningLevel
  nameWithType: CompilerParameters.WarningLevel
  fullName: System.CodeDom.Compiler.CompilerParameters.WarningLevel
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.CodeDom.Compiler.CompilerParameters.Win32Resource
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Win32Resource
  nameWithType: CompilerParameters.Win32Resource
  fullName: System.CodeDom.Compiler.CompilerParameters.Win32Resource
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters
  nameWithType: CompilerParameters.CompilerParameters
- uid: System.CodeDom.Compiler.CompilerParameters.CompilerOptions*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerOptions
  nameWithType: CompilerParameters.CompilerOptions
- uid: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CoreAssemblyFileName
  nameWithType: CompilerParameters.CoreAssemblyFileName
- uid: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: EmbeddedResources
  nameWithType: CompilerParameters.EmbeddedResources
- uid: System.CodeDom.Compiler.CompilerParameters.Evidence*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Evidence
  nameWithType: CompilerParameters.Evidence
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateExecutable
  nameWithType: CompilerParameters.GenerateExecutable
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateInMemory
  nameWithType: CompilerParameters.GenerateInMemory
- uid: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: IncludeDebugInformation
  nameWithType: CompilerParameters.IncludeDebugInformation
- uid: System.CodeDom.Compiler.CompilerParameters.LinkedResources*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: LinkedResources
  nameWithType: CompilerParameters.LinkedResources
- uid: System.CodeDom.Compiler.CompilerParameters.MainClass*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: MainClass
  nameWithType: CompilerParameters.MainClass
- uid: System.CodeDom.Compiler.CompilerParameters.OutputAssembly*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: OutputAssembly
  nameWithType: CompilerParameters.OutputAssembly
- uid: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: CompilerParameters.ReferencedAssemblies
- uid: System.CodeDom.Compiler.CompilerParameters.TempFiles*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TempFiles
  nameWithType: CompilerParameters.TempFiles
- uid: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TreatWarningsAsErrors
  nameWithType: CompilerParameters.TreatWarningsAsErrors
- uid: System.CodeDom.Compiler.CompilerParameters.UserToken*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: UserToken
  nameWithType: CompilerParameters.UserToken
- uid: System.CodeDom.Compiler.CompilerParameters.WarningLevel*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: WarningLevel
  nameWithType: CompilerParameters.WarningLevel
- uid: System.CodeDom.Compiler.CompilerParameters.Win32Resource*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Win32Resource
  nameWithType: CompilerParameters.Win32Resource
