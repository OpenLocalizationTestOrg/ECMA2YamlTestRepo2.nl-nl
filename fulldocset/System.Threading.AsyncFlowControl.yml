### YamlMime:ManagedReference
items:
- uid: System.Threading.AsyncFlowControl
  id: AsyncFlowControl
  children:
  - System.Threading.AsyncFlowControl.Dispose
  - System.Threading.AsyncFlowControl.Equals(System.Object)
  - System.Threading.AsyncFlowControl.Equals(System.Threading.AsyncFlowControl)
  - System.Threading.AsyncFlowControl.GetHashCode
  - System.Threading.AsyncFlowControl.op_Equality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)
  - System.Threading.AsyncFlowControl.op_Inequality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)
  - System.Threading.AsyncFlowControl.Undo
  langs:
  - csharp
  name: AsyncFlowControl
  nameWithType: AsyncFlowControl
  fullName: System.Threading.AsyncFlowControl
  type: Struct
  summary: "Biedt de functionaliteit voor het herstellen van de migratie, of de stroom van de uitvoeringscontext tussen threads."
  remarks: "Een uitvoeringscontext bevat alle uitvoering-gerelateerde informatie voor een logische thread. De stroom van de uitvoeringscontext naar andere threads kan worden voorkomen met behulp van de <xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=fullName>methode die resulteert in een structuur AsyncFlowControl.</xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=fullName> De <xref:System.Threading.AsyncFlowControl.Undo%2A>methode van de geretourneerde AsyncFlowControl-structuur kan worden gebruikt om de stroom onderdrukking ongedaan te maken.</xref:System.Threading.AsyncFlowControl.Undo%2A> De structuur AsyncFlowControl moet worden gebruikt in dezelfde thread als waarop deze is gemaakt."
  syntax:
    content: 'public struct AsyncFlowControl : IDisposable'
  inheritance:
  - System.ValueType
  implements:
  - System.IDisposable
  platform:
  - net462
- uid: System.Threading.AsyncFlowControl.Dispose
  id: Dispose
  parent: System.Threading.AsyncFlowControl
  langs:
  - csharp
  name: Dispose()
  nameWithType: AsyncFlowControl.Dispose()
  fullName: System.Threading.AsyncFlowControl.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Versies van alle resources die worden gebruikt door het huidige exemplaar van de <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> klasse."
  remarks: "Roep `Dispose` wanneer u klaar bent met de <xref:System.Threading.AsyncFlowControl>.</xref:System.Threading.AsyncFlowControl> De `Dispose` methode blijft de <xref:System.Threading.AsyncFlowControl>in een onbruikbare status.</xref:System.Threading.AsyncFlowControl> Na het aanroepen `Dispose`, moet u alle verwijzingen naar vrijgeven de <xref:System.Threading.AsyncFlowControl>zodat het geheugen door de garbage collector vrijmaken kunt die de <xref:System.Threading.AsyncFlowControl>is bepaald dat zich bevindt.</xref:System.Threading.AsyncFlowControl> </xref:System.Threading.AsyncFlowControl>       Zie voor meer informatie [onbeheerde hulpbronnen reinigen](~/add/includes/ajax-current-ext-md.md) en [uitvoering van een methode Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Altijd aanroep `Dispose` voordat u uw laatste verwijzing naar de <xref:System.Threading.AsyncFlowControl>.</xref:System.Threading.AsyncFlowControl> vrijgeven Anders wordt de resources die worden gebruikt niet vrij tot het aanroepen van de garbagecollector van de <xref:System.Threading.AsyncFlowControl>van het object `Finalize` methode.</xref:System.Threading.AsyncFlowControl>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Threading.AsyncFlowControl.Dispose*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> structuur wordt niet gebruikt in de thread waarop het is gemaakt.       - of - de <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> structuur wordt al gebruikt om aan te roepen Dispose of <xref:System.Threading.AsyncFlowControl.Undo*>.</xref:System.Threading.AsyncFlowControl.Undo*>"
  platform:
  - net462
- uid: System.Threading.AsyncFlowControl.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Threading.AsyncFlowControl
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: AsyncFlowControl.Equals(Object)
  fullName: System.Threading.AsyncFlowControl.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Hiermee wordt bepaald of het opgegeven object gelijk zijn aan de huidige <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> structuur."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Een object te vergelijken met de huidige structuur."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <code> obj </code> is een <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> structuur, en is gelijk aan de huidige <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> structuur; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Threading.AsyncFlowControl.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.AsyncFlowControl.Equals(System.Threading.AsyncFlowControl)
  id: Equals(System.Threading.AsyncFlowControl)
  parent: System.Threading.AsyncFlowControl
  langs:
  - csharp
  name: Equals(AsyncFlowControl)
  nameWithType: AsyncFlowControl.Equals(AsyncFlowControl)
  fullName: System.Threading.AsyncFlowControl.Equals(AsyncFlowControl)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Hiermee wordt bepaald of de opgegeven <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> structuur is gelijk aan de huidige <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> structuur."
  syntax:
    content: public bool Equals (System.Threading.AsyncFlowControl obj);
    parameters:
    - id: obj
      type: System.Threading.AsyncFlowControl
      description: "Een <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> structuur moet worden vergeleken met de huidige structuur."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <code> obj </code> gelijk is aan de huidige <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> structuur; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Threading.AsyncFlowControl.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.AsyncFlowControl.GetHashCode
  id: GetHashCode
  parent: System.Threading.AsyncFlowControl
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: AsyncFlowControl.GetHashCode()
  fullName: System.Threading.AsyncFlowControl.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Hiermee wordt een hash-code voor de huidige <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> structuur."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Een hash-code voor de huidige <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> structuur."
  overload: System.Threading.AsyncFlowControl.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.AsyncFlowControl.op_Equality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)
  id: op_Equality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)
  parent: System.Threading.AsyncFlowControl
  langs:
  - csharp
  name: op_Equality(AsyncFlowControl,AsyncFlowControl)
  nameWithType: AsyncFlowControl.op_Equality(AsyncFlowControl,AsyncFlowControl)
  fullName: System.Threading.AsyncFlowControl.op_Equality(AsyncFlowControl,AsyncFlowControl)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Vergelijkt twee <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> structuren om te bepalen of ze gelijk zijn."
  syntax:
    content: public static bool op_Equality (System.Threading.AsyncFlowControl a, System.Threading.AsyncFlowControl b);
    parameters:
    - id: a
      type: System.Threading.AsyncFlowControl
      description: "Een <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> structuur."
    - id: b
      type: System.Threading.AsyncFlowControl
      description: "Een <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> structuur."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de twee structuren gelijk zijn. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Threading.AsyncFlowControl.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.AsyncFlowControl.op_Inequality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)
  id: op_Inequality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)
  parent: System.Threading.AsyncFlowControl
  langs:
  - csharp
  name: op_Inequality(AsyncFlowControl,AsyncFlowControl)
  nameWithType: AsyncFlowControl.op_Inequality(AsyncFlowControl,AsyncFlowControl)
  fullName: System.Threading.AsyncFlowControl.op_Inequality(AsyncFlowControl,AsyncFlowControl)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Vergelijkt twee <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> structuren om te bepalen of ze niet gelijk zijn."
  syntax:
    content: public static bool op_Inequality (System.Threading.AsyncFlowControl a, System.Threading.AsyncFlowControl b);
    parameters:
    - id: a
      type: System.Threading.AsyncFlowControl
      description: "Een <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> structuur."
    - id: b
      type: System.Threading.AsyncFlowControl
      description: "Een <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> structuur."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u de structuren zijn niet identiek zijn; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Threading.AsyncFlowControl.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.AsyncFlowControl.Undo
  id: Undo
  parent: System.Threading.AsyncFlowControl
  langs:
  - csharp
  name: Undo()
  nameWithType: AsyncFlowControl.Undo()
  fullName: System.Threading.AsyncFlowControl.Undo()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Hiermee herstelt u de stroom van de uitvoeringscontext tussen threads."
  remarks: "De <xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=fullName>methode retourneert een <xref:System.Threading.AsyncFlowControl>structuur die wordt gebruikt voor het herstellen van de stroom.</xref:System.Threading.AsyncFlowControl> </xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=fullName>       De methode ongedaan maken moet alleen worden aangeroepen in de <xref:System.Threading.AsyncFlowControl>structuur die wordt geretourneerd door de bijbehorende <xref:System.Threading.ExecutionContext.SuppressFlow%2A>methode.</xref:System.Threading.ExecutionContext.SuppressFlow%2A> </xref:System.Threading.AsyncFlowControl>"
  syntax:
    content: public void Undo ();
    parameters: []
  overload: System.Threading.AsyncFlowControl.Undo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> structuur wordt niet gebruikt in de thread waarop het is gemaakt.       - of - de <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> structuur wordt al gebruikt om aan te roepen <xref:System.Threading.AsyncFlowControl.Dispose*>of ongedaan maken.</xref:System.Threading.AsyncFlowControl.Dispose*>"
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Threading.AsyncFlowControl.Dispose
  parent: System.Threading.AsyncFlowControl
  isExternal: false
  name: Dispose()
  nameWithType: AsyncFlowControl.Dispose()
  fullName: System.Threading.AsyncFlowControl.Dispose()
- uid: System.Threading.AsyncFlowControl.Equals(System.Object)
  parent: System.Threading.AsyncFlowControl
  isExternal: false
  name: Equals(Object)
  nameWithType: AsyncFlowControl.Equals(Object)
  fullName: System.Threading.AsyncFlowControl.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.AsyncFlowControl.Equals(System.Threading.AsyncFlowControl)
  parent: System.Threading.AsyncFlowControl
  isExternal: false
  name: Equals(AsyncFlowControl)
  nameWithType: AsyncFlowControl.Equals(AsyncFlowControl)
  fullName: System.Threading.AsyncFlowControl.Equals(AsyncFlowControl)
- uid: System.Threading.AsyncFlowControl
  parent: System.Threading
  isExternal: false
  name: AsyncFlowControl
  nameWithType: AsyncFlowControl
  fullName: System.Threading.AsyncFlowControl
- uid: System.Threading.AsyncFlowControl.GetHashCode
  parent: System.Threading.AsyncFlowControl
  isExternal: false
  name: GetHashCode()
  nameWithType: AsyncFlowControl.GetHashCode()
  fullName: System.Threading.AsyncFlowControl.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.AsyncFlowControl.op_Equality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)
  parent: System.Threading.AsyncFlowControl
  isExternal: false
  name: op_Equality(AsyncFlowControl,AsyncFlowControl)
  nameWithType: AsyncFlowControl.op_Equality(AsyncFlowControl,AsyncFlowControl)
  fullName: System.Threading.AsyncFlowControl.op_Equality(AsyncFlowControl,AsyncFlowControl)
- uid: System.Threading.AsyncFlowControl.op_Inequality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)
  parent: System.Threading.AsyncFlowControl
  isExternal: false
  name: op_Inequality(AsyncFlowControl,AsyncFlowControl)
  nameWithType: AsyncFlowControl.op_Inequality(AsyncFlowControl,AsyncFlowControl)
  fullName: System.Threading.AsyncFlowControl.op_Inequality(AsyncFlowControl,AsyncFlowControl)
- uid: System.Threading.AsyncFlowControl.Undo
  parent: System.Threading.AsyncFlowControl
  isExternal: false
  name: Undo()
  nameWithType: AsyncFlowControl.Undo()
  fullName: System.Threading.AsyncFlowControl.Undo()
- uid: System.Threading.AsyncFlowControl.Dispose*
  parent: System.Threading.AsyncFlowControl
  isExternal: false
  name: Dispose
  nameWithType: AsyncFlowControl.Dispose
- uid: System.Threading.AsyncFlowControl.Equals*
  parent: System.Threading.AsyncFlowControl
  isExternal: false
  name: Equals
  nameWithType: AsyncFlowControl.Equals
- uid: System.Threading.AsyncFlowControl.GetHashCode*
  parent: System.Threading.AsyncFlowControl
  isExternal: false
  name: GetHashCode
  nameWithType: AsyncFlowControl.GetHashCode
- uid: System.Threading.AsyncFlowControl.op_Equality*
  parent: System.Threading.AsyncFlowControl
  isExternal: false
  name: op_Equality
  nameWithType: AsyncFlowControl.op_Equality
- uid: System.Threading.AsyncFlowControl.op_Inequality*
  parent: System.Threading.AsyncFlowControl
  isExternal: false
  name: op_Inequality
  nameWithType: AsyncFlowControl.op_Inequality
- uid: System.Threading.AsyncFlowControl.Undo*
  parent: System.Threading.AsyncFlowControl
  isExternal: false
  name: Undo
  nameWithType: AsyncFlowControl.Undo
